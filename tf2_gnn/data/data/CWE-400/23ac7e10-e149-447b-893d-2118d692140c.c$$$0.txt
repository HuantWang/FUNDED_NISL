-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink(int countArray[])
{
    /* copy count out of countArray */
    int count = countArray[2];
    {
        size_t i = 0;
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */
        for (i = 0; i < (size_t)count; i++)
        {
            printLine("Hello");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
23,24
23,25
24,25
26,27
26,28
28,29
30,31
30,32
30,33
30,34
31,32
32,33
32,34
33,34
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
44,45
46,47
47,48
49,50
50,51
51,52
51,53
52,53
-----nextToken-----
2,4,6,8,9,13,15,19,20,25,27,29,34,35,38,42,43,45,48,53,54
-----computeFrom-----
32,33
32,34
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink(int countArray[]){    /* copy count out of countArray */    int count = countArray[2];    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
void
CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink(int countArray[])
CWE400_Resource_Exhaustion__fscanf_for_loop_66b_badSink
int countArray[]
int
countArray[]
countArray
[]
{    /* copy count out of countArray */    int count = countArray[2];    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
int count = countArray[2];
int count = countArray[2];
int
count = countArray[2]
count
= countArray[2]
countArray[2]
countArray
countArray
2
{        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            printLine("Hello");        }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(17,11,0)
(24,19,0)
(27,8,0)
(26,4,0)
(18,25,0)
(13,20,0)
(7,8,0)
(23,24,0)
(9,8,0)
(24,25,0)
(10,4,0)
(15,13,0)
(19,24,0)
(0,11,0)
(25,13,0)
(3,13,0)
(12,8,0)
(11,4,0)
(24,9,0)
(13,25,0)
(14,16,0)
(21,22,0)
(1,9,0)
(25,22,0)
(4,22,0)
(9,24,0)
(6,14,0)
(5,7,0)
(13,20,1)
(14,6,1)
(12,11,1)
(24,19,1)
(7,8,1)
(1,7,1)
(25,13,1)
(5,14,1)
(9,8,1)
(0,25,1)
(13,3,1)
(6,9,1)
(15,18,1)
(9,24,1)
(24,25,1)
(17,0,1)
(24,23,1)
(1,8,1)
(11,17,1)
(8,27,1)
(27,12,1)
(23,1,1)
(2,9,1)
(7,5,1)
(3,15,1)
(23,9,2)
(7,9,2)
(14,9,2)
(24,9,2)
(25,13,2)
(1,9,2)
(6,9,2)
(9,24,2)
(24,25,2)
(24,19,2)
(9,8,2)
(5,9,2)
(13,20,2)
(7,8,2)
(9,9,2)
-----------------------------------
(0,i)
(1,i)
(2,RET)
(3,2)
(4,)
(5,i)
(6,"Hello")
(7,i++)
(8,i = 0)
(9,i < (size_t)
(10,i)
(11,i = 0)
(12,i)
(13,countArray[2])
(14,printLine("Hello")
(15,countArray)
(16,)
(17,0)
(18,count)
(19,size_t)
(20,int countArray[])
(21,count)
(22,)
(23,count)
(24,(size_t)
(25,count = countArray[2])
(26,for (i = 0; i < (size_t)
(27,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^