-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_malloc_21_bad()
{
    char * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
56,57
57,58
57,59
58,59
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,59,61,65,66,70,72
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__char_malloc_21_bad(){    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__char_malloc_21_bad()
CWE401_Memory_Leak__char_malloc_21_bad
{    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    badStatic = 1; /* true */    badSink(data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(5,24,0)
(24,8,0)
(20,10,0)
(15,24,0)
(32,6,0)
(23,10,0)
(28,17,0)
(11,10,0)
(19,22,0)
(13,1,0)
(27,23,0)
(12,11,0)
(3,18,0)
(16,15,0)
(17,10,0)
(14,6,0)
(14,10,0)
(18,19,0)
(31,10,0)
(1,6,0)
(2,10,0)
(6,10,0)
(6,30,0)
(20,6,0)
(0,30,0)
(30,0,0)
(30,8,0)
(19,18,0)
(8,24,0)
(7,14,0)
(25,23,0)
(29,20,0)
(26,20,0)
(24,15,0)
(17,6,0)
(4,11,0)
(30,6,0)
(8,30,0)
(21,1,0)
(4,12,1)
(11,4,1)
(13,6,1)
(3,1,1)
(9,17,1)
(28,23,1)
(29,26,1)
(14,7,1)
(6,30,1)
(25,14,1)
(30,8,1)
(21,13,1)
(20,6,1)
(30,0,1)
(8,24,1)
(17,28,1)
(26,19,1)
(16,5,1)
(5,32,1)
(17,6,1)
(15,16,1)
(24,15,1)
(14,6,1)
(26,1,1)
(19,18,1)
(7,20,1)
(20,29,1)
(18,3,1)
(32,11,1)
(1,21,1)
(1,6,1)
(27,25,1)
(23,27,1)
(3,1,2)
(14,6,2)
(18,1,2)
(30,8,2)
(19,1,2)
(8,24,2)
(20,6,2)
(19,18,2)
(17,6,2)
(6,30,2)
(30,0,2)
(1,6,2)
(24,15,2)
-----------------------------------
(0,char *)
(1,data == NULL)
(2,if (data == NULL)
(3,1)
(4,NULL)
(5,100)
(6,data = (char *)
(7,data)
(8,malloc(100*sizeof(char)
(9,RET)
(10,)
(11,data = NULL)
(12,data)
(13,data)
(14,printLine(data)
(15,sizeof(char)
(16,char)
(17,badSink(data)
(18,-1)
(19,exit(-1)
(20,strcpy(data, "A String")
(21,NULL)
(22,)
(23,badStatic = 1)
(24,100*sizeof(char)
(25,badStatic)
(26,data)
(27,1)
(28,data)
(29,"A String")
(30,(char *)
(31,data)
(32,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^