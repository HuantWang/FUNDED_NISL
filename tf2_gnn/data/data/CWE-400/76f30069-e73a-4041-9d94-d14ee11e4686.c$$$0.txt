-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_malloc_52_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)malloc(100*sizeof(int));
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    CWE401_Memory_Leak__int_malloc_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
38,39
38,40
39,40
43,44
44,45
44,46
45,46
47,48
47,49
48,49
51,52
52,53
52,54
53,54
55,56
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,40,41,42,46,49,50,54,56
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_malloc_52_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_52b_badSink(data);}
void
CWE401_Memory_Leak__int_malloc_52_bad()
CWE401_Memory_Leak__int_malloc_52_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_52b_badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
CWE401_Memory_Leak__int_malloc_52b_badSink(data);
CWE401_Memory_Leak__int_malloc_52b_badSink(data)
CWE401_Memory_Leak__int_malloc_52b_badSink
CWE401_Memory_Leak__int_malloc_52b_badSink
data
data
-----joern-----
(17,13,0)
(0,20,0)
(16,15,0)
(25,9,0)
(17,24,0)
(25,4,0)
(22,20,0)
(12,3,0)
(15,20,0)
(6,4,0)
(13,17,0)
(14,25,0)
(8,9,0)
(23,25,0)
(18,17,0)
(3,9,0)
(4,6,0)
(24,17,0)
(9,20,0)
(0,25,0)
(19,3,0)
(3,4,0)
(21,11,0)
(24,6,0)
(11,20,0)
(6,24,0)
(7,6,0)
(5,15,0)
(2,4,0)
(25,0,0)
(4,20,0)
(10,13,0)
(11,4,0)
(6,7,0)
(1,11,1)
(25,4,1)
(2,15,1)
(3,12,1)
(23,9,1)
(15,16,1)
(19,4,1)
(16,5,1)
(17,13,1)
(11,21,1)
(25,14,1)
(4,6,1)
(0,25,1)
(10,18,1)
(13,10,1)
(3,4,1)
(6,24,1)
(14,23,1)
(12,19,1)
(18,2,1)
(9,8,1)
(21,0,1)
(11,4,1)
(24,17,1)
(6,7,1)
(8,3,1)
(25,9,1)
(4,6,2)
(25,9,2)
(25,4,2)
(6,24,2)
(0,25,2)
(3,4,2)
(24,17,2)
(11,4,2)
(6,7,2)
(17,13,2)
-----------------------------------
(0,printIntLine(data[0])
(1,RET)
(2,data)
(3,data[0])
(4,data = (int *)
(5,data)
(6,(int *)
(7,int *)
(8,5)
(9,data[0] = 5)
(10,int)
(11,CWE401_Memory_Leak__int_malloc_52b_badSink(data)
(12,0)
(13,sizeof(int)
(14,0)
(15,data = NULL)
(16,NULL)
(17,100*sizeof(int)
(18,100)
(19,data)
(20,)
(21,data)
(22,data)
(23,data)
(24,malloc(100*sizeof(int)
(25,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^