-----label-----
1
-----code-----
static char *get_page(size_t sz, void **ptr) {
  void *d;
  long pagesz = get_pagesz(), p;

  d = malloc(sz + (pagesz-1));
  if (d == NULL) {
    pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");
    exit(1);
  }

  *ptr = d;

  p = ((long) d + (pagesz-1)) &~ (pagesz-1);

  return ((char *) p);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
6,7
6,8
7,8
9,10
11,12
11,13
13,14
13,15
13,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
18,19
19,20
19,21
21,22
21,23
24,25
25,26
25,27
25,28
27,28
27,29
29,30
30,31
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
42,43
42,44
43,44
45,46
46,47
46,48
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
66,67
68,69
70,71
71,72
71,73
72,73
74,75
74,76
75,76
76,77
76,78
77,78
77,79
78,79
78,80
81,82
83,84
84,85
84,86
85,86
88,89
89,90
90,91
90,92
91,92
94,95
95,96
96,97
96,98
97,98
97,99
99,100
101,102
-----nextToken-----
2,4,5,8,10,12,14,15,16,20,22,23,26,28,32,34,38,41,44,48,49,53,55,61,62,67,69,73,79,80,82,86,87,92,93,98,100,102
-----computeFrom-----
36,37
36,38
42,43
42,44
46,47
46,48
51,52
51,53
64,65
64,66
71,72
71,73
74,75
74,76
76,77
76,78
84,85
84,86
90,91
90,92
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
static char *get_page(size_t sz, void **ptr) {  void *d;  long pagesz = get_pagesz(), p;  d = malloc(sz + (pagesz-1));  if (d == NULL) {    pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }  *ptr = d;  p = ((long) d + (pagesz-1)) &~ (pagesz-1);  return ((char *) p);}
static char
*get_page(size_t sz, void **ptr)
*
get_page
size_t sz
size_t
size_t
sz
sz
void **ptr
void
**ptr
*
*
ptr
{  void *d;  long pagesz = get_pagesz(), p;  d = malloc(sz + (pagesz-1));  if (d == NULL) {    pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }  *ptr = d;  p = ((long) d + (pagesz-1)) &~ (pagesz-1);  return ((char *) p);}
void *d;
void *d;
void
*d
*
d
long pagesz = get_pagesz(), p;
long pagesz = get_pagesz(), p;
long
pagesz = get_pagesz()
pagesz
= get_pagesz()
get_pagesz()
get_pagesz
get_pagesz
p
p
d = malloc(sz + (pagesz-1));
d = malloc(sz + (pagesz-1))
d
d
malloc(sz + (pagesz-1))
malloc
malloc
sz + (pagesz-1)
sz
sz
(pagesz-1)
pagesz-1
pagesz
pagesz
1
if (d == NULL) {    pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }
d == NULL
d
d
NULL
NULL
{    pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }
pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");
exit(1);
exit(1)
exit
exit
1
*ptr = d;
*ptr = d
*ptr
ptr
ptr
d
d
p = ((long) d + (pagesz-1)) &~ (pagesz-1);
p = ((long) d + (pagesz-1)) &~ (pagesz-1)
p
p
((long) d + (pagesz-1)) &~ (pagesz-1)
((long) d + (pagesz-1))
(long) d + (pagesz-1)
(long) d
long
long

d
d
(pagesz-1)
pagesz-1
pagesz
pagesz
1
~ (pagesz-1)
(pagesz-1)
pagesz-1
pagesz
pagesz
1
return ((char *) p);
((char *) p)
(char *) p
char *
char
*
*
p
p
-----joern-----
(35,20,0)
(15,2,0)
(43,21,0)
(14,13,0)
(34,42,0)
(20,43,0)
(43,41,0)
(14,23,0)
(18,6,0)
(32,10,0)
(21,16,0)
(40,34,0)
(2,32,0)
(19,3,0)
(0,46,0)
(41,43,0)
(34,46,0)
(44,13,0)
(6,41,0)
(38,4,0)
(7,32,0)
(19,16,0)
(16,26,0)
(16,46,0)
(12,21,0)
(9,14,0)
(22,13,0)
(18,2,0)
(21,43,0)
(8,16,0)
(13,14,0)
(27,34,0)
(5,19,0)
(2,46,0)
(13,16,0)
(37,4,0)
(14,42,0)
(1,21,0)
(20,34,0)
(28,20,0)
(33,6,0)
(18,29,0)
(30,45,0)
(24,46,0)
(42,34,0)
(6,46,0)
(42,14,0)
(4,34,0)
(26,16,0)
(31,40,0)
(36,18,0)
(41,6,0)
(3,41,0)
(40,46,0)
(11,30,0)
(39,46,0)
(32,40,0)
(29,18,0)
(3,19,0)
(43,20,0)
(17,46,0)
(25,19,0)
(20,28,0)
(41,3,0)
(19,5,1)
(20,28,1)
(18,6,1)
(9,27,1)
(25,43,1)
(13,16,1)
(26,8,1)
(4,34,1)
(38,37,1)
(16,26,1)
(14,23,1)
(15,2,1)
(42,14,1)
(33,40,1)
(40,34,1)
(31,32,1)
(41,3,1)
(30,11,1)
(20,35,1)
(2,18,1)
(4,38,1)
(21,16,1)
(40,31,1)
(3,19,1)
(41,43,1)
(13,22,1)
(35,33,1)
(44,9,1)
(36,6,1)
(20,34,1)
(18,29,1)
(11,4,1)
(32,7,1)
(43,20,1)
(18,36,1)
(5,25,1)
(37,34,1)
(34,42,1)
(21,1,1)
(32,10,1)
(6,41,1)
(27,16,1)
(43,21,1)
(12,20,1)
(1,12,1)
(7,30,1)
(2,32,1)
(14,13,1)
(7,4,1)
(19,16,1)
(22,44,1)
(19,16,2)
(20,28,2)
(18,29,2)
(30,4,2)
(13,16,2)
(4,34,2)
(41,3,2)
(2,32,2)
(14,13,2)
(20,34,2)
(41,43,2)
(3,19,2)
(43,20,2)
(40,34,2)
(21,16,2)
(6,41,2)
(32,10,2)
(43,21,2)
(18,6,2)
(42,14,2)
(14,23,2)
(16,26,2)
(11,4,2)
(15,2,2)
(34,42,2)
-----------------------------------
(0,p)
(1,1)
(2,return ((char *)
(3,~ (pagesz-1)
(4,d == NULL)
(5,1)
(6,p = ((long)
(7,ptr)
(8,pagesz)
(9,sz)
(10,void **ptr)
(11,1)
(12,pagesz)
(13,pagesz-1)
(14,sz + (pagesz-1)
(15,RET)
(16,pagesz = get_pagesz()
(17,d)
(18,(char *)
(19,pagesz-1)
(20,(long)
(21,pagesz-1)
(22,1)
(23,size_t sz)
(24,if (d == NULL)
(25,pagesz)
(26,get_pagesz()
(27,d)
(28,long)
(29,char *)
(30,exit(1)
(31,d)
(32,*ptr)
(33,p)
(34,d = malloc(sz + (pagesz-1)
(35,d)
(36,p)
(37,d)
(38,NULL)
(39,pagesz)
(40,*ptr = d)
(41,((long)
(42,malloc(sz + (pagesz-1)
(43,(long)
(44,pagesz)
(45,)
(46,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^