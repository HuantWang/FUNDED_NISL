-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(int count)
{
    if(CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)
    {
        {
            size_t i = 0;
            FILE *pFile = NULL;
            const char *filename = "output_bad.txt";
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
             * This can cause a file to become very large */
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
                {
                    exit(1);
                }
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,6,8,12,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(int count){    if(CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink(int count)
CWE400_Resource_Exhaustion__fgets_fwrite_22_badSink
int count
int
count
count
{    if(CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }}
if(CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }
CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal
CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal
{        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }
{            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                    exit(1);                }
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(58,60,0)
(44,36,0)
(27,4,0)
(48,53,0)
(49,53,0)
(43,53,0)
(37,30,0)
(27,59,0)
(6,26,0)
(14,26,0)
(16,18,0)
(60,19,0)
(3,59,0)
(7,4,0)
(36,49,0)
(0,49,0)
(8,18,0)
(59,27,0)
(20,61,0)
(53,18,0)
(49,36,0)
(41,46,0)
(36,18,0)
(52,60,0)
(59,17,0)
(1,59,0)
(61,22,0)
(11,10,0)
(44,45,0)
(59,46,0)
(39,47,0)
(56,18,0)
(50,18,0)
(21,32,0)
(24,32,0)
(31,17,0)
(25,42,0)
(13,18,0)
(32,18,0)
(57,49,0)
(40,35,0)
(33,44,0)
(28,54,0)
(38,60,0)
(5,42,0)
(23,18,0)
(47,55,0)
(26,36,0)
(17,59,0)
(42,18,0)
(2,58,0)
(46,59,0)
(4,27,0)
(12,36,0)
(18,29,0)
(60,38,0)
(60,58,0)
(30,54,0)
(51,54,0)
(58,54,0)
(59,36,0)
(1,17,1)
(15,34,1)
(59,17,1)
(58,54,1)
(2,30,1)
(31,46,1)
(42,5,1)
(12,53,1)
(21,24,1)
(26,14,1)
(59,1,1)
(37,61,1)
(57,12,1)
(25,9,1)
(60,38,1)
(54,51,1)
(2,54,1)
(5,25,1)
(37,27,1)
(24,42,1)
(26,36,1)
(49,0,1)
(59,46,1)
(53,48,1)
(32,21,1)
(0,57,1)
(33,34,1)
(7,58,1)
(49,53,1)
(34,58,1)
(30,54,1)
(41,3,1)
(15,9,1)
(51,28,1)
(43,32,1)
(36,49,1)
(15,44,1)
(58,60,1)
(6,36,1)
(14,6,1)
(48,43,1)
(30,37,1)
(59,36,1)
(3,4,1)
(39,26,1)
(20,27,1)
(17,31,1)
(4,7,1)
(44,36,1)
(27,59,1)
(47,39,1)
(52,2,1)
(28,47,1)
(60,52,1)
(46,41,1)
(27,4,1)
(44,33,1)
(61,20,1)
(60,19,1)
(28,26,1)
(39,26,2)
(30,58,2)
(27,58,2)
(27,4,2)
(52,9,2)
(24,9,2)
(59,17,2)
(57,9,2)
(58,9,2)
(30,54,2)
(2,58,2)
(26,9,2)
(20,27,2)
(17,58,2)
(32,9,2)
(4,58,2)
(59,58,2)
(14,9,2)
(25,9,2)
(0,9,2)
(2,9,2)
(49,9,2)
(59,36,2)
(36,49,2)
(12,9,2)
(31,58,2)
(3,58,2)
(58,60,2)
(27,59,2)
(42,9,2)
(53,9,2)
(49,53,2)
(58,54,2)
(58,58,2)
(7,58,2)
(60,38,2)
(44,34,2)
(60,9,2)
(26,36,2)
(1,58,2)
(47,26,2)
(46,58,2)
(60,19,2)
(59,46,2)
(33,34,2)
(60,58,2)
(6,9,2)
(61,27,2)
(5,9,2)
(28,9,2)
(44,36,2)
(52,58,2)
(48,9,2)
(36,9,2)
(37,58,2)
(34,9,2)
(51,9,2)
(21,9,2)
(43,9,2)
(54,9,2)
(41,58,2)
-----------------------------------
(0,"w+")
(1,pFile)
(2,i)
(3,SENTENCE)
(4,strlen(SENTENCE)
(5,0)
(6,pFile)
(7,SENTENCE)
(8,for (i = 0; i < (size_t)
(9,CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)
(10,)
(11,if(CWE400_Resource_Exhaustion__fgets_fwrite_22_badGlobal)
(12,pFile)
(13,i)
(14,NULL)
(15,RET)
(16,if (pFile == NULL)
(17,strlen(SENTENCE)
(18,)
(19,int count)
(20,1)
(21,NULL)
(22,)
(23,pFile)
(24,pFile)
(25,i)
(26,pFile == NULL)
(27,strlen(SENTENCE)
(28,i)
(29,)
(30,i++)
(31,SENTENCE)
(32,*pFile = NULL)
(33,pFile)
(34,pFile)
(35,)
(36,pFile = fopen(filename, "w+")
(37,i)
(38,size_t)
(39,1)
(40,if (strlen(SENTENCE)
(41,char)
(42,i = 0)
(43,filename)
(44,fclose(pFile)
(45,)
(46,sizeof(char)
(47,exit(1)
(48,"output_bad.txt")
(49,fopen(filename, "w+")
(50,if (pFile)
(51,0)
(52,count)
(53,*filename = "output_bad.txt")
(54,i = 0)
(55,)
(56,filename)
(57,filename)
(58,i < (size_t)
(59,fwrite(SENTENCE, sizeof(char)
(60,(size_t)
(61,exit(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^