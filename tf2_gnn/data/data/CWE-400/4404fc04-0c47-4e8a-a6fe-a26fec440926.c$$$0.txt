-----label-----
0
-----code-----
static void goodB2G()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    while(1)
    {
        /* FIX: Close the file from the source before reassigning data to a new file descriptor */
        if (data != -1)
        {
            CLOSE(data);
        }
        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        /* avoid incidental for not closing the file */
        if (data != -1)
        {
            CLOSE(data);
        }
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
37,38
37,39
37,40
37,41
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
55,56
55,57
55,58
55,59
56,57
59,60
59,61
60,61
62,63
64,65
64,66
65,66
67,68
69,70
69,71
70,71
70,72
71,72
73,74
75,76
76,77
77,78
77,79
78,79
80,81
-----nextToken-----
2,4,8,10,14,16,20,23,24,27,29,32,34,36,41,43,48,50,54,57,58,61,63,66,68,72,74,79,81,82
-----computeFrom-----
12,13
12,14
18,19
18,20
25,26
25,27
30,31
30,32
39,40
39,41
52,53
52,54
59,60
59,61
64,65
64,66
70,71
70,72
-----guardedBy-----
41,50
72,81
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
static void goodB2G(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    while(1)    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    }}
static void
goodB2G()
goodB2G
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    while(1)    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
while(1)    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    }
1
{        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    }
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"GoodSink_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
break;
-----joern-----
(45,29,0)
(35,40,0)
(1,17,0)
(36,5,0)
(43,20,0)
(46,17,0)
(11,7,0)
(18,20,0)
(36,17,0)
(4,45,0)
(3,5,0)
(42,20,0)
(42,7,0)
(23,10,0)
(31,5,0)
(27,2,0)
(8,6,0)
(0,7,0)
(11,2,0)
(39,23,0)
(5,36,0)
(34,36,0)
(45,7,0)
(12,9,0)
(2,11,0)
(17,36,0)
(9,6,0)
(38,40,0)
(24,44,0)
(41,42,0)
(7,42,0)
(10,5,0)
(10,23,0)
(20,42,0)
(30,42,0)
(6,9,0)
(16,3,0)
(36,34,0)
(42,30,0)
(3,26,0)
(37,30,0)
(32,10,0)
(25,34,0)
(15,36,0)
(21,44,0)
(22,34,0)
(13,44,0)
(5,40,0)
(7,44,0)
(6,40,0)
(19,30,0)
(14,11,0)
(12,8,1)
(9,12,1)
(10,23,1)
(45,7,1)
(32,28,1)
(28,5,1)
(16,10,1)
(21,11,1)
(4,11,1)
(18,43,1)
(23,39,1)
(1,46,1)
(39,32,1)
(45,4,1)
(19,41,1)
(34,25,1)
(42,20,1)
(10,5,1)
(21,45,1)
(33,28,1)
(15,31,1)
(6,9,1)
(0,10,1)
(36,34,1)
(27,14,1)
(43,30,1)
(0,3,1)
(42,30,1)
(37,19,1)
(11,7,1)
(17,1,1)
(25,22,1)
(3,16,1)
(11,2,1)
(14,7,1)
(31,6,1)
(2,27,1)
(41,0,1)
(46,34,1)
(5,36,1)
(3,5,1)
(36,17,1)
(20,18,1)
(30,37,1)
(33,21,1)
(7,42,1)
(22,15,1)
(32,28,2)
(42,28,2)
(42,20,2)
(39,28,2)
(16,10,2)
(3,10,2)
(23,28,2)
(7,42,2)
(36,34,2)
(42,30,2)
(11,28,2)
(10,5,2)
(30,28,2)
(2,28,2)
(19,28,2)
(36,17,2)
(27,28,2)
(3,5,2)
(5,36,2)
(20,28,2)
(43,28,2)
(4,11,2)
(11,2,2)
(21,28,2)
(10,28,2)
(45,11,2)
(6,9,2)
(14,28,2)
(7,28,2)
(37,28,2)
(41,28,2)
(11,7,2)
(0,28,2)
(10,23,2)
(45,7,2)
(18,28,2)
-----------------------------------
(0,data)
(1,S_IWRITE)
(2,-1)
(3,CLOSE(data)
(4,data)
(5,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(6,data = -1)
(7,data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(8,data)
(9,-1)
(10,data != -1)
(11,data != -1)
(12,1)
(13,if (data != -1)
(14,data)
(15,"BadSource_open.txt")
(16,data)
(17,S_IREAD|S_IWRITE)
(18,S_IWRITE)
(19,O_RDWR)
(20,S_IREAD|S_IWRITE)
(21,break;)
(22,O_RDWR)
(23,-1)
(24,if (data != -1)
(25,O_CREAT)
(26,)
(27,1)
(28,1)
(29,)
(30,O_RDWR|O_CREAT)
(31,data)
(32,data)
(33,RET)
(34,O_RDWR|O_CREAT)
(35,data)
(36,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(37,O_CREAT)
(38,while(1)
(39,1)
(40,)
(41,"GoodSink_open.txt")
(42,OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(43,S_IREAD)
(44,)
(45,CLOSE(data)
(46,S_IREAD)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^