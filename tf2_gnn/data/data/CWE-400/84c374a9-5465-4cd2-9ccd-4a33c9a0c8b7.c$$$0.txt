-----label-----
1
-----code-----
static void badSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
39,40
41,42
41,43
41,44
42,43
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
59,62
59,63
60,61
61,62
61,63
62,63
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
86,90
86,91
87,88
89,90
91,92
92,93
92,94
95,96
95,97
96,97
98,99
100,101
102,103
103,104
104,105
104,106
105,106
108,109
108,110
109,110
111,112
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,40,43,45,46,50,52,57,58,63,64,67,71,72,74,77,83,85,88,90,93,94,97,99,101,106,107,110,115,117
-----computeFrom-----
38,39
38,40
48,49
48,50
61,62
61,63
65,66
65,67
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
static void
badSink(int count)
badSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(56,37,0)
(13,11,0)
(10,45,0)
(8,20,0)
(11,13,0)
(30,0,0)
(53,30,0)
(37,45,0)
(45,37,0)
(48,24,0)
(21,54,0)
(32,37,0)
(34,58,0)
(51,48,0)
(42,50,0)
(29,32,0)
(35,37,0)
(37,54,0)
(38,54,0)
(31,35,0)
(14,32,0)
(2,54,0)
(9,6,0)
(13,32,0)
(43,49,0)
(32,28,0)
(27,54,0)
(7,52,0)
(45,38,0)
(41,38,0)
(55,27,0)
(20,6,0)
(0,30,0)
(28,32,0)
(30,9,0)
(49,37,0)
(39,27,0)
(36,6,0)
(1,6,0)
(33,49,0)
(23,9,0)
(50,57,0)
(5,38,0)
(30,46,0)
(18,54,0)
(12,45,0)
(32,13,0)
(25,22,0)
(52,54,0)
(4,54,0)
(35,47,0)
(19,28,0)
(54,40,0)
(15,52,0)
(32,58,0)
(16,11,0)
(44,54,0)
(17,54,0)
(9,30,0)
(58,32,0)
(26,9,1)
(45,12,1)
(3,35,1)
(14,11,1)
(8,50,1)
(39,55,1)
(30,46,1)
(20,8,1)
(32,29,1)
(35,31,1)
(11,16,1)
(38,5,1)
(28,19,1)
(58,34,1)
(32,37,1)
(31,26,1)
(48,51,1)
(1,49,1)
(27,39,1)
(49,37,1)
(33,43,1)
(42,13,1)
(53,23,1)
(12,10,1)
(7,15,1)
(1,48,1)
(10,56,1)
(30,0,1)
(51,49,1)
(16,9,1)
(23,6,1)
(34,28,1)
(19,14,1)
(8,13,1)
(49,33,1)
(13,32,1)
(30,53,1)
(13,11,1)
(45,38,1)
(43,37,1)
(32,28,1)
(20,6,1)
(9,6,1)
(37,45,1)
(35,37,1)
(23,20,1)
(29,58,1)
(41,52,1)
(52,7,1)
(15,27,1)
(5,41,1)
(36,1,1)
(3,26,1)
(32,58,1)
(50,42,1)
(56,38,1)
(6,36,1)
(9,30,1)
(9,30,2)
(30,0,2)
(11,9,2)
(50,13,2)
(49,37,2)
(45,38,2)
(16,9,2)
(20,9,2)
(58,9,2)
(30,9,2)
(32,58,2)
(23,9,2)
(35,37,2)
(19,9,2)
(9,9,2)
(13,9,2)
(34,9,2)
(37,45,2)
(53,9,2)
(29,9,2)
(14,9,2)
(42,13,2)
(8,9,2)
(31,26,2)
(20,6,2)
(48,49,2)
(32,37,2)
(32,28,2)
(32,9,2)
(9,6,2)
(30,46,2)
(28,9,2)
(13,11,2)
(35,26,2)
(51,49,2)
(13,32,2)
-----------------------------------
(0,size_t)
(1,i)
(2,if (pFile == NULL)
(3,RET)
(4,i)
(5,"output_bad.txt")
(6,i = 0)
(7,NULL)
(8,i)
(9,i < (size_t)
(10,filename)
(11,strlen(SENTENCE)
(12,"w+")
(13,strlen(SENTENCE)
(14,SENTENCE)
(15,pFile)
(16,SENTENCE)
(17,if (pFile)
(18,for (i = 0; i < (size_t)
(19,char)
(20,i++)
(21,filename)
(22,)
(23,i)
(24,)
(25,if (strlen(SENTENCE)
(26,pFile)
(27,i = 0)
(28,sizeof(char)
(29,pFile)
(30,(size_t)
(31,pFile)
(32,fwrite(SENTENCE, sizeof(char)
(33,NULL)
(34,SENTENCE)
(35,fclose(pFile)
(36,0)
(37,pFile = fopen(filename, "w+")
(38,*filename = "output_bad.txt")
(39,0)
(40,)
(41,filename)
(42,1)
(43,pFile)
(44,pFile)
(45,fopen(filename, "w+")
(46,int count)
(47,)
(48,exit(1)
(49,pFile == NULL)
(50,exit(1)
(51,1)
(52,*pFile = NULL)
(53,count)
(54,)
(55,i)
(56,pFile)
(57,)
(58,strlen(SENTENCE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^