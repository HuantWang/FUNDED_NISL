-----label-----
1
-----code-----
void
tcp_reass_init(void)
{

	V_tcp_reass_maxseg = nmbclusters / 16;
	TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",
	    &V_tcp_reass_maxseg);
	V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent),
	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE);
	/* Set the zone limit and read back the effective value. */
	V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,
	    V_tcp_reass_maxseg);
	EVENTHANDLER_REGISTER(nmbclusters_change,
	    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
10,11
11,12
11,13
12,13
14,15
14,16
15,16
18,19
19,20
19,21
19,22
20,21
23,24
24,25
26,27
27,28
27,29
28,29
30,31
30,32
30,33
30,34
30,35
30,36
30,37
30,38
30,39
31,32
34,35
35,36
35,37
36,37
39,40
41,42
43,44
45,46
47,48
49,50
51,52
52,53
52,54
53,54
55,56
55,57
55,58
56,57
58,59
60,61
62,63
63,64
63,65
63,66
63,67
63,68
64,65
66,67
68,69
70,71
72,73
-----nextToken-----
2,4,6,8,13,16,17,21,22,25,29,32,33,37,38,40,42,44,46,48,50,54,57,59,61,65,67,69,71,73
-----computeFrom-----
11,12
11,13
14,15
14,16
27,28
27,29
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
voidtcp_reass_init(void){	V_tcp_reass_maxseg = nmbclusters / 16;	TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",	    &V_tcp_reass_maxseg);	V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent),	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE);	/* Set the zone limit and read back the effective value. */	V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,	    V_tcp_reass_maxseg);	EVENTHANDLER_REGISTER(nmbclusters_change,	    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY);}
void
tcp_reass_init(void)
tcp_reass_init
void
void


{	V_tcp_reass_maxseg = nmbclusters / 16;	TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",	    &V_tcp_reass_maxseg);	V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent),	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE);	/* Set the zone limit and read back the effective value. */	V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,	    V_tcp_reass_maxseg);	EVENTHANDLER_REGISTER(nmbclusters_change,	    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY);}
V_tcp_reass_maxseg = nmbclusters / 16;
V_tcp_reass_maxseg = nmbclusters / 16
V_tcp_reass_maxseg
V_tcp_reass_maxseg
nmbclusters / 16
nmbclusters
nmbclusters
16
TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",	    &V_tcp_reass_maxseg);
TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",	    &V_tcp_reass_maxseg)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"net.inet.tcp.reass.maxsegments"
&V_tcp_reass_maxseg
V_tcp_reass_maxseg
V_tcp_reass_maxseg
V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent),	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE);
V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent),	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE)
V_tcp_reass_zone
V_tcp_reass_zone
uma_zcreate("tcpreass", sizeof (struct tseg_qent),	    NULL, NULL, NULL, NULL, UMA_ALIGN_PTR, UMA_ZONE_NOFREE)
uma_zcreate
uma_zcreate
"tcpreass"
sizeof (struct tseg_qent)
struct tseg_qent
struct tseg_qent
tseg_qent

NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
UMA_ALIGN_PTR
UMA_ALIGN_PTR
UMA_ZONE_NOFREE
UMA_ZONE_NOFREE
V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,	    V_tcp_reass_maxseg);
V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,	    V_tcp_reass_maxseg)
V_tcp_reass_maxseg
V_tcp_reass_maxseg
uma_zone_set_max(V_tcp_reass_zone,	    V_tcp_reass_maxseg)
uma_zone_set_max
uma_zone_set_max
V_tcp_reass_zone
V_tcp_reass_zone
V_tcp_reass_maxseg
V_tcp_reass_maxseg
EVENTHANDLER_REGISTER(nmbclusters_change,	    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY);
EVENTHANDLER_REGISTER(nmbclusters_change,	    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY)
EVENTHANDLER_REGISTER
EVENTHANDLER_REGISTER
nmbclusters_change
nmbclusters_change
tcp_reass_zone_change
tcp_reass_zone_change
NULL
NULL
EVENTHANDLER_PRI_ANY
EVENTHANDLER_PRI_ANY
-----joern-----
(11,20,0)
(6,2,0)
(4,26,0)
(5,26,0)
(13,19,0)
(7,26,0)
(11,10,0)
(30,7,0)
(24,10,0)
(21,2,0)
(29,26,0)
(5,15,0)
(23,26,0)
(9,25,0)
(15,5,0)
(2,20,0)
(31,26,0)
(10,11,0)
(8,13,0)
(18,12,0)
(16,2,0)
(1,19,0)
(25,12,0)
(27,11,0)
(7,20,0)
(12,25,0)
(3,12,0)
(19,13,0)
(17,26,0)
(22,2,0)
(14,19,0)
(25,20,0)
(26,7,0)
(26,5,0)
(13,20,0)
(28,26,0)
(32,26,0)
(8,7,1)
(5,28,1)
(11,10,1)
(19,14,1)
(10,24,1)
(28,30,1)
(24,27,1)
(32,23,1)
(14,1,1)
(26,5,1)
(13,19,1)
(25,12,1)
(29,32,1)
(12,3,1)
(30,11,1)
(3,18,1)
(22,16,1)
(27,25,1)
(23,17,1)
(2,22,1)
(21,13,1)
(17,5,1)
(1,8,1)
(5,15,1)
(16,6,1)
(0,2,1)
(31,4,1)
(18,9,1)
(6,21,1)
(7,26,1)
(4,29,1)
(26,31,1)
(11,10,2)
(7,26,2)
(26,5,2)
(13,19,2)
(5,15,2)
(25,12,2)
-----------------------------------
(0,RET)
(1,V_tcp_reass_zone)
(2,EVENTHANDLER_REGISTER(nmbclusters_change,\n\\n\\t    tcp_reass_zone_change, NULL, EVENTHANDLER_PRI_ANY)
(3,16)
(4,UMA_ALIGN_PTR)
(5,sizeof (struct tseg_qent)
(6,tcp_reass_zone_change)
(7,V_tcp_reass_zone = uma_zcreate("tcpreass", sizeof (struct tseg_qent)
(8,V_tcp_reass_maxseg)
(9,V_tcp_reass_maxseg)
(10,&V_tcp_reass_maxseg)
(11,TUNABLE_INT_FETCH("net.inet.tcp.reass.maxsegments",\n\\n\\t    &V_tcp_reass_maxseg)
(12,nmbclusters / 16)
(13,V_tcp_reass_maxseg = uma_zone_set_max(V_tcp_reass_zone,\n\\n\\t    V_tcp_reass_maxseg)
(14,V_tcp_reass_maxseg)
(15,struct tseg_qent)
(16,NULL)
(17,NULL)
(18,nmbclusters)
(19,uma_zone_set_max(V_tcp_reass_zone,\n\\n\\t    V_tcp_reass_maxseg)
(20,)
(21,nmbclusters_change)
(22,EVENTHANDLER_PRI_ANY)
(23,NULL)
(24,V_tcp_reass_maxseg)
(25,V_tcp_reass_maxseg = nmbclusters / 16)
(26,uma_zcreate("tcpreass", sizeof (struct tseg_qent)
(27,"net.inet.tcp.reass.maxsegments")
(28,"tcpreass")
(29,NULL)
(30,V_tcp_reass_zone)
(31,UMA_ZONE_NOFREE)
(32,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^