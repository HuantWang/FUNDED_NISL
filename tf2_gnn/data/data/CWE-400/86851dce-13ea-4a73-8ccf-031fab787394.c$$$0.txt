-----label-----
1
-----code-----
static bool __tpacket_v3_has_room(struct packet_sock *po, int pow_off)
{
	int idx, len;

	len = po->rx_ring.prb_bdqc.knum_blocks;
	idx = po->rx_ring.prb_bdqc.kactive_blk_num;
	if (pow_off)
		idx += len >> pow_off;
	if (idx >= len)
		idx -= len;
	return prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
16,17
17,18
17,19
17,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
29,31
30,31
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
41,43
42,43
47,48
47,49
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
66,68
67,68
69,70
71,72
72,73
72,74
72,75
72,76
72,77
73,74
75,76
77,78
78,79
78,80
79,80
82,83
84,85
-----nextToken-----
2,4,7,9,10,12,14,18,20,22,26,31,32,33,34,38,43,44,45,46,49,53,56,58,62,64,68,70,74,76,80,81,83,85
-----computeFrom-----
24,25
24,26
36,37
36,38
51,52
51,53
54,55
54,56
60,61
60,62
66,67
66,68
-----guardedBy-----
64,70
62,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;IfStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static bool __tpacket_v3_has_room(struct packet_sock *po, int pow_off){	int idx, len;	len = po->rx_ring.prb_bdqc.knum_blocks;	idx = po->rx_ring.prb_bdqc.kactive_blk_num;	if (pow_off)		idx += len >> pow_off;	if (idx >= len)		idx -= len;	return prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL);}
static bool
__tpacket_v3_has_room(struct packet_sock *po, int pow_off)
__tpacket_v3_has_room
struct packet_sock *po
struct packet_sock
packet_sock
*po
*
po
int pow_off
int
pow_off
pow_off
{	int idx, len;	len = po->rx_ring.prb_bdqc.knum_blocks;	idx = po->rx_ring.prb_bdqc.kactive_blk_num;	if (pow_off)		idx += len >> pow_off;	if (idx >= len)		idx -= len;	return prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL);}
int idx, len;
int idx, len;
int
idx
idx
len
len
len = po->rx_ring.prb_bdqc.knum_blocks;
len = po->rx_ring.prb_bdqc.knum_blocks
len
len
po->rx_ring.prb_bdqc.knum_blocks
po->rx_ring.prb_bdqc
po->rx_ring
po
po
rx_ring
prb_bdqc
knum_blocks
idx = po->rx_ring.prb_bdqc.kactive_blk_num;
idx = po->rx_ring.prb_bdqc.kactive_blk_num
idx
idx
po->rx_ring.prb_bdqc.kactive_blk_num
po->rx_ring.prb_bdqc
po->rx_ring
po
po
rx_ring
prb_bdqc
kactive_blk_num
if (pow_off)		idx += len >> pow_off;
pow_off
pow_off
idx += len >> pow_off;
idx += len >> pow_off
idx
idx
len >> pow_off
len
len
pow_off
pow_off
if (idx >= len)		idx -= len;
idx >= len
idx
idx
len
len
idx -= len;
idx -= len
idx
idx
len
len
return prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL);
prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL)
prb_lookup_block
prb_lookup_block
po
po
&po->rx_ring
po->rx_ring
po
po
rx_ring
idx
idx
TP_STATUS_KERNEL
TP_STATUS_KERNEL
-----joern-----
(18,29,0)
(25,30,0)
(2,30,0)
(12,8,0)
(21,37,0)
(8,2,0)
(24,28,0)
(37,38,0)
(27,36,0)
(40,9,0)
(19,39,0)
(38,22,0)
(39,11,0)
(45,24,0)
(29,18,0)
(23,8,0)
(32,27,0)
(5,18,0)
(8,39,0)
(41,8,0)
(14,30,0)
(24,36,0)
(26,22,0)
(13,38,0)
(11,30,0)
(0,27,0)
(8,29,0)
(1,37,0)
(34,41,0)
(17,29,0)
(34,36,0)
(39,38,0)
(28,9,0)
(16,34,0)
(20,24,0)
(8,38,0)
(6,22,0)
(27,6,0)
(22,6,0)
(44,11,0)
(11,9,0)
(33,39,0)
(8,41,0)
(9,11,0)
(42,34,0)
(10,2,0)
(35,30,0)
(38,30,0)
(28,24,0)
(9,28,0)
(37,11,0)
(39,29,0)
(31,30,0)
(8,36,0)
(6,27,0)
(41,34,0)
(15,8,0)
(29,38,0)
(18,3,0)
(4,6,0)
(18,11,0)
(37,29,0)
(43,28,0)
(46,18,0)
(22,38,0)
(42,23,1)
(39,29,1)
(29,18,1)
(0,13,1)
(15,41,1)
(8,36,1)
(28,24,1)
(16,42,1)
(20,45,1)
(24,36,1)
(37,38,1)
(39,19,1)
(34,16,1)
(8,12,1)
(37,29,1)
(6,4,1)
(33,37,1)
(11,9,1)
(46,17,1)
(43,24,1)
(1,7,1)
(10,2,1)
(8,38,1)
(13,11,1)
(39,38,1)
(2,8,1)
(40,28,1)
(28,43,1)
(27,32,1)
(8,39,1)
(6,27,1)
(18,3,1)
(5,46,1)
(1,29,1)
(8,41,1)
(27,36,1)
(34,36,1)
(24,20,1)
(29,38,1)
(7,38,1)
(39,11,1)
(22,6,1)
(17,7,1)
(37,21,1)
(18,11,1)
(32,0,1)
(21,1,1)
(41,34,1)
(4,27,1)
(9,28,1)
(8,29,1)
(37,11,1)
(38,22,1)
(23,39,1)
(45,44,1)
(9,40,1)
(19,33,1)
(18,5,1)
(23,37,1)
(26,6,1)
(12,15,1)
(22,26,1)
(10,2,2)
(18,7,2)
(46,7,2)
(18,11,2)
(8,39,2)
(11,9,2)
(27,36,2)
(37,38,2)
(8,29,2)
(8,38,2)
(18,3,2)
(38,22,2)
(39,38,2)
(29,38,2)
(29,7,2)
(37,29,2)
(34,36,2)
(24,36,2)
(6,27,2)
(29,18,2)
(39,37,2)
(9,28,2)
(41,34,2)
(8,41,2)
(28,24,2)
(39,29,2)
(8,36,2)
(17,7,2)
(39,11,2)
(37,11,2)
(22,6,2)
(5,7,2)
(33,37,2)
(19,37,2)
-----------------------------------
(0,po)
(1,idx)
(2,return prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL)
(3,int pow_off)
(4,prb_bdqc)
(5,pow_off)
(6,po->rx_ring.prb_bdqc)
(7,pow_off)
(8,prb_lookup_block(po, &po->rx_ring, idx, TP_STATUS_KERNEL)
(9,po->rx_ring.prb_bdqc.knum_blocks)
(10,RET)
(11,len = po->rx_ring.prb_bdqc.knum_blocks)
(12,TP_STATUS_KERNEL)
(13,idx)
(14,idx)
(15,idx)
(16,rx_ring)
(17,idx)
(18,len >> pow_off)
(19,len)
(20,rx_ring)
(21,len)
(22,po->rx_ring.prb_bdqc.kactive_blk_num)
(23,po)
(24,po->rx_ring)
(25,len)
(26,kactive_blk_num)
(27,po->rx_ring)
(28,po->rx_ring.prb_bdqc)
(29,idx += len >> pow_off)
(30,)
(31,if (idx >= len)
(32,rx_ring)
(33,idx)
(34,po->rx_ring)
(35,if (pow_off)
(36,struct packet_sock *po)
(37,idx >= len)
(38,idx = po->rx_ring.prb_bdqc.kactive_blk_num)
(39,idx -= len)
(40,knum_blocks)
(41,&po->rx_ring)
(42,po)
(43,prb_bdqc)
(44,len)
(45,po)
(46,len)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^