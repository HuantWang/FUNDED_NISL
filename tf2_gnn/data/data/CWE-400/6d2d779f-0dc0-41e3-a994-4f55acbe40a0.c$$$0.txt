-----label-----
1
-----code-----
int connection_open(Connection *connection) {
        uint32_t events = EPOLLHUP | EPOLLIN;
        const char *request;
        size_t n_request;
        int r;

        assert(socket_is_running(&connection->socket));

        if (!connection->server) {
                r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);
                if (r)
                        return error_fold(r);

                if (request) {
                        r = socket_queue_line(&connection->socket, request, n_request);
                        if (r)
                                return error_fold(r);

                        events |= EPOLLOUT;
                }
        }

        dispatch_file_select(&connection->socket_file, events);
        return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
14,15
16,17
16,18
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
27,28
27,29
30,31
31,32
31,33
32,33
34,35
36,37
37,38
37,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
49,50
49,51
50,51
53,54
53,55
54,55
55,56
55,57
56,57
59,60
59,61
59,62
60,61
61,62
61,63
62,63
64,65
64,66
64,67
64,68
64,69
64,70
65,66
67,68
68,69
68,70
69,70
69,71
70,71
74,75
77,78
78,79
80,81
81,82
83,84
83,85
84,85
86,87
87,88
87,89
88,89
90,91
92,93
92,94
93,94
95,96
95,97
95,98
96,97
97,98
97,99
98,99
100,101
100,102
100,103
100,104
101,102
103,104
104,105
104,106
105,106
108,109
110,111
112,113
112,114
113,114
115,116
116,117
116,118
117,118
119,120
121,122
122,123
122,124
123,124
125,126
127,128
128,129
128,130
128,131
129,130
131,132
132,133
132,134
133,134
136,137
138,139
-----nextToken-----
2,4,7,9,10,15,17,21,23,26,28,29,33,35,38,40,44,47,51,52,57,58,63,66,71,72,73,75,76,79,82,85,89,91,94,99,102,106,107,109,111,114,118,120,124,126,130,134,135,137,139
-----computeFrom-----
19,20
19,21
61,62
61,63
97,98
97,99
122,123
122,124
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;UnaryExpression;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int connection_open(Connection *connection) {        uint32_t events = EPOLLHUP | EPOLLIN;        const char *request;        size_t n_request;        int r;        assert(socket_is_running(&connection->socket));        if (!connection->server) {                r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);                if (r)                        return error_fold(r);                if (request) {                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }        }        dispatch_file_select(&connection->socket_file, events);        return 0;}
int
connection_open(Connection *connection)
connection_open
Connection *connection
Connection
Connection
*connection
*
connection
{        uint32_t events = EPOLLHUP | EPOLLIN;        const char *request;        size_t n_request;        int r;        assert(socket_is_running(&connection->socket));        if (!connection->server) {                r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);                if (r)                        return error_fold(r);                if (request) {                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }        }        dispatch_file_select(&connection->socket_file, events);        return 0;}
uint32_t events = EPOLLHUP | EPOLLIN;
uint32_t events = EPOLLHUP | EPOLLIN;
uint32_t
uint32_t
events = EPOLLHUP | EPOLLIN
events
= EPOLLHUP | EPOLLIN
EPOLLHUP | EPOLLIN
EPOLLHUP
EPOLLHUP
EPOLLIN
EPOLLIN
const char *request;
const char *request;
const char
*request
*
request
size_t n_request;
size_t n_request;
size_t
size_t
n_request
n_request
int r;
int r;
int
r
r
assert(socket_is_running(&connection->socket));
assert(socket_is_running(&connection->socket))
assert
assert
socket_is_running(&connection->socket)
socket_is_running
socket_is_running
&connection->socket
connection->socket
connection
connection
socket
if (!connection->server) {                r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);                if (r)                        return error_fold(r);                if (request) {                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }        }
!connection->server
connection->server
connection
connection
server
{                r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);                if (r)                        return error_fold(r);                if (request) {                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }        }
r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request);
r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request)
r
r
sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request)
sasl_client_dispatch
sasl_client_dispatch
&connection->sasl.client
connection->sasl.client
connection->sasl
connection
connection
sasl
client
NULL
NULL
0
&request
request
request
&n_request
n_request
n_request
if (r)                        return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
if (request) {                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }
request
request
{                        r = socket_queue_line(&connection->socket, request, n_request);                        if (r)                                return error_fold(r);                        events |= EPOLLOUT;                }
r = socket_queue_line(&connection->socket, request, n_request);
r = socket_queue_line(&connection->socket, request, n_request)
r
r
socket_queue_line(&connection->socket, request, n_request)
socket_queue_line
socket_queue_line
&connection->socket
connection->socket
connection
connection
socket
request
request
n_request
n_request
if (r)                                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
events |= EPOLLOUT;
events |= EPOLLOUT
events
events
EPOLLOUT
EPOLLOUT
dispatch_file_select(&connection->socket_file, events);
dispatch_file_select(&connection->socket_file, events)
dispatch_file_select
dispatch_file_select
&connection->socket_file
connection->socket_file
connection
connection
socket_file
events
events
return 0;
0
-----joern-----
(45,68,0)
(56,60,0)
(43,69,0)
(24,55,0)
(26,46,0)
(16,28,0)
(8,59,0)
(22,38,0)
(65,8,0)
(48,53,0)
(60,56,0)
(62,6,0)
(49,60,0)
(14,31,0)
(69,29,0)
(0,17,0)
(15,47,0)
(11,31,0)
(13,12,0)
(9,29,0)
(3,44,0)
(4,54,0)
(37,53,0)
(48,17,0)
(41,56,0)
(38,33,0)
(37,31,0)
(39,68,0)
(27,54,0)
(40,33,0)
(38,59,0)
(54,17,0)
(3,55,0)
(55,68,0)
(12,47,0)
(71,68,0)
(47,46,0)
(6,70,0)
(53,37,0)
(32,0,0)
(10,48,0)
(33,38,0)
(47,28,0)
(39,9,0)
(12,44,0)
(6,8,0)
(63,46,0)
(29,69,0)
(31,28,0)
(1,33,0)
(34,48,0)
(0,26,0)
(61,70,0)
(19,56,0)
(33,17,0)
(60,68,0)
(8,5,0)
(30,64,0)
(67,58,0)
(23,68,0)
(2,5,0)
(67,6,0)
(8,6,0)
(59,38,0)
(69,17,0)
(21,70,0)
(18,67,0)
(37,60,0)
(64,8,0)
(59,8,0)
(36,69,0)
(8,64,0)
(51,46,0)
(50,0,0)
(46,26,0)
(31,60,0)
(5,8,0)
(25,68,0)
(29,9,0)
(37,68,0)
(20,54,0)
(53,48,0)
(46,47,0)
(26,0,0)
(3,58,0)
(35,68,0)
(54,20,0)
(9,39,0)
(7,37,0)
(52,8,0)
(48,10,1)
(12,47,1)
(33,40,1)
(63,26,1)
(0,50,1)
(29,69,1)
(67,18,1)
(48,17,1)
(46,26,1)
(54,27,1)
(15,66,1)
(37,7,1)
(56,19,1)
(0,17,1)
(13,57,1)
(1,62,1)
(27,4,1)
(54,17,1)
(7,53,1)
(11,14,1)
(5,2,1)
(53,48,1)
(34,66,1)
(33,17,1)
(59,38,1)
(66,42,1)
(12,13,1)
(31,60,1)
(14,57,1)
(47,46,1)
(46,51,1)
(37,31,1)
(57,47,1)
(36,60,1)
(8,64,1)
(42,6,1)
(69,43,1)
(2,52,1)
(20,54,1)
(62,20,1)
(6,8,1)
(38,22,1)
(8,59,1)
(37,60,1)
(32,15,1)
(55,24,1)
(65,59,1)
(51,63,1)
(26,0,1)
(34,20,1)
(41,49,1)
(37,53,1)
(24,37,1)
(34,31,1)
(19,41,1)
(31,11,1)
(18,42,1)
(10,34,1)
(8,5,1)
(44,12,1)
(50,32,1)
(69,17,1)
(64,30,1)
(30,5,1)
(3,58,1)
(3,55,1)
(9,29,1)
(58,67,1)
(39,9,1)
(60,56,1)
(3,44,1)
(43,36,1)
(22,33,1)
(4,39,1)
(40,1,1)
(52,65,1)
(67,6,1)
(38,33,1)
(8,20,2)
(46,26,2)
(31,60,2)
(59,20,2)
(38,20,2)
(30,20,2)
(55,66,2)
(2,20,2)
(3,55,2)
(26,0,2)
(34,66,2)
(38,33,2)
(15,66,2)
(12,47,2)
(11,57,2)
(53,57,2)
(63,66,2)
(18,42,2)
(24,20,2)
(37,20,2)
(39,9,2)
(0,66,2)
(42,20,2)
(67,42,2)
(6,8,2)
(10,57,2)
(59,38,2)
(66,42,2)
(51,66,2)
(62,20,2)
(44,57,2)
(34,20,2)
(48,57,2)
(33,20,2)
(53,48,2)
(54,17,2)
(58,42,2)
(37,66,2)
(9,29,2)
(31,57,2)
(0,17,2)
(34,57,2)
(24,66,2)
(69,17,2)
(52,20,2)
(8,5,2)
(13,57,2)
(8,64,2)
(20,54,2)
(37,53,2)
(53,66,2)
(7,57,2)
(67,6,2)
(55,20,2)
(64,20,2)
(5,20,2)
(37,31,2)
(48,17,2)
(10,66,2)
(37,57,2)
(40,20,2)
(37,60,2)
(3,58,2)
(65,20,2)
(55,57,2)
(8,59,2)
(7,66,2)
(50,66,2)
(7,20,2)
(22,20,2)
(53,20,2)
(26,66,2)
(6,20,2)
(12,57,2)
(29,69,2)
(60,56,2)
(46,66,2)
(48,20,2)
(14,57,2)
(10,20,2)
(32,66,2)
(47,46,2)
(3,44,2)
(47,66,2)
(57,66,2)
(33,17,2)
(1,20,2)
(48,66,2)
(24,57,2)
-----------------------------------
(0,connection->socket)
(1,connection)
(2,request)
(3,RET)
(4,connection)
(5,&request)
(6,r = sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request)
(7,events)
(8,sasl_client_dispatch(&connection->sasl.client, NULL, 0, &request, &n_request)
(9,socket_is_running(&connection->socket)
(10,socket_file)
(11,EPOLLOUT)
(12,error_fold(r)
(13,r)
(14,events)
(15,r)
(16,if (r)
(17,Connection *connection)
(18,r)
(19,EPOLLIN)
(20,!connection->server)
(21,if (r)
(22,client)
(23,request)
(24,0)
(25,n_request)
(26,&connection->socket)
(27,server)
(28,)
(29,&connection->socket)
(30,n_request)
(31,events |= EPOLLOUT)
(32,connection)
(33,connection->sasl)
(34,connection)
(35,r)
(36,connection)
(37,dispatch_file_select(&connection->socket_file, events)
(38,connection->sasl.client)
(39,assert(socket_is_running(&connection->socket)
(40,sasl)
(41,EPOLLHUP)
(42,r)
(43,socket)
(44,return error_fold(r)
(45,if (!connection->server)
(46,socket_queue_line(&connection->socket, request, n_request)
(47,r = socket_queue_line(&connection->socket, request, n_request)
(48,connection->socket_file)
(49,events)
(50,socket)
(51,n_request)
(52,0)
(53,&connection->socket_file)
(54,connection->server)
(55,return 0;)
(56,EPOLLHUP | EPOLLIN)
(57,r)
(58,return error_fold(r)
(59,&connection->sasl.client)
(60,events = EPOLLHUP | EPOLLIN)
(61,if (request)
(62,r)
(63,request)
(64,&n_request)
(65,NULL)
(66,request)
(67,error_fold(r)
(68,)
(69,connection->socket)
(70,)
(71,events)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^