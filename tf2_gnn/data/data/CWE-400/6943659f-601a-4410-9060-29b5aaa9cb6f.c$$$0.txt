-----label-----
0
-----code-----
int
ompi_free_list_resize(ompi_free_list_t* flist, size_t size)
{
    int ret = OMPI_SUCCESS;

    if (flist->fl_num_allocated > size) {
        return OMPI_SUCCESS;
    } else {
        size_t inc_num;        
        OPAL_THREAD_LOCK(&((fl)->fl_lock));
        inc_num = size - flist->fl_num_allocated + 
            flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);
        if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {
            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));
            return OMPI_ERR_OUT_OF_RESOURCE;
        }
        ret = ompi_free_list_grow(flist, inc_num);
        OPAL_THREAD_UNLOCK(&((fl)->fl_lock));
    }

    return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
16,17
16,18
16,19
17,18
18,19
18,20
20,21
20,22
22,23
23,24
25,26
25,27
25,28
26,27
26,28
27,28
27,29
28,29
31,32
33,34
34,35
35,36
37,38
37,39
37,40
37,41
37,42
37,43
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
49,50
50,51
50,52
51,52
52,53
55,56
56,57
56,58
57,58
59,60
59,61
60,61
60,62
61,62
61,63
62,63
64,65
64,66
65,66
68,69
68,70
69,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
80,81
80,82
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
89,90
89,91
90,91
93,94
93,95
94,95
95,96
95,97
96,97
98,99
99,100
100,101
100,102
101,102
102,103
105,106
106,107
108,109
109,110
109,111
110,111
112,113
112,114
112,115
113,114
115,116
117,118
119,120
120,121
120,122
121,122
123,124
124,125
125,126
125,127
126,127
127,128
130,131
131,132
-----nextToken-----
2,4,7,9,10,13,15,19,21,24,29,30,32,36,41,43,47,53,54,58,63,66,67,70,71,75,78,79,85,86,88,91,92,97,103,104,107,111,114,116,118,122,128,129,132
-----computeFrom-----
26,27
26,28
56,57
56,58
59,60
59,61
60,61
60,62
61,62
61,63
73,74
73,75
81,82
81,83
82,83
82,84
109,110
109,111
-----guardedBy-----
-----guardedByNegation-----
30,86
29,116
32,63
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ReturnStatement;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;UnaryExpression;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;UnaryExpression;IdExpression;Name;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;UnaryExpression;IdExpression;Name;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
intompi_free_list_resize(ompi_free_list_t* flist, size_t size){    int ret = OMPI_SUCCESS;    if (flist->fl_num_allocated > size) {        return OMPI_SUCCESS;    } else {        size_t inc_num;                OPAL_THREAD_LOCK(&((fl)->fl_lock));        inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);        if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }        ret = ompi_free_list_grow(flist, inc_num);        OPAL_THREAD_UNLOCK(&((fl)->fl_lock));    }    return ret;}
int
ompi_free_list_resize(ompi_free_list_t* flist, size_t size)
ompi_free_list_resize
ompi_free_list_t* flist
ompi_free_list_t
ompi_free_list_t
* flist
*
flist
size_t size
size_t
size_t
size
size
{    int ret = OMPI_SUCCESS;    if (flist->fl_num_allocated > size) {        return OMPI_SUCCESS;    } else {        size_t inc_num;                OPAL_THREAD_LOCK(&((fl)->fl_lock));        inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);        if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }        ret = ompi_free_list_grow(flist, inc_num);        OPAL_THREAD_UNLOCK(&((fl)->fl_lock));    }    return ret;}
int ret = OMPI_SUCCESS;
int ret = OMPI_SUCCESS;
int
ret = OMPI_SUCCESS
ret
= OMPI_SUCCESS
OMPI_SUCCESS
OMPI_SUCCESS
if (flist->fl_num_allocated > size) {        return OMPI_SUCCESS;    } else {        size_t inc_num;                OPAL_THREAD_LOCK(&((fl)->fl_lock));        inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);        if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }        ret = ompi_free_list_grow(flist, inc_num);        OPAL_THREAD_UNLOCK(&((fl)->fl_lock));    }
flist->fl_num_allocated > size
flist->fl_num_allocated
flist
flist
fl_num_allocated
size
size
{        return OMPI_SUCCESS;    }
return OMPI_SUCCESS;
OMPI_SUCCESS
OMPI_SUCCESS
{        size_t inc_num;                OPAL_THREAD_LOCK(&((fl)->fl_lock));        inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);        if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }        ret = ompi_free_list_grow(flist, inc_num);        OPAL_THREAD_UNLOCK(&((fl)->fl_lock));    }
size_t inc_num;
size_t inc_num;
size_t
size_t
inc_num
inc_num
OPAL_THREAD_LOCK(&((fl)->fl_lock));
OPAL_THREAD_LOCK(&((fl)->fl_lock))
OPAL_THREAD_LOCK
OPAL_THREAD_LOCK
&((fl)->fl_lock)
((fl)->fl_lock)
(fl)->fl_lock
(fl)
fl
fl
fl_lock
inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc);
inc_num = size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
inc_num
inc_num
size - flist->fl_num_allocated +             flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
size - flist->fl_num_allocated +             flist->fl_num_per_alloc
size - flist->fl_num_allocated
size
size
flist->fl_num_allocated
flist
flist
fl_num_allocated
flist->fl_num_per_alloc
flist
flist
fl_num_per_alloc
(inc_num % flist->fl_num_per_alloc)
inc_num % flist->fl_num_per_alloc
inc_num
inc_num
flist->fl_num_per_alloc
flist
flist
fl_num_per_alloc
if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc) {            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }
flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc
flist->fl_num_allocated + inc_num
flist->fl_num_allocated
flist
flist
fl_num_allocated
inc_num
inc_num
flist->fl_max_to_alloc
flist
flist
fl_max_to_alloc
{            OPAL_THREAD_UNLOCK(&((fl)->fl_lock));            return OMPI_ERR_OUT_OF_RESOURCE;        }
OPAL_THREAD_UNLOCK(&((fl)->fl_lock));
OPAL_THREAD_UNLOCK(&((fl)->fl_lock))
OPAL_THREAD_UNLOCK
OPAL_THREAD_UNLOCK
&((fl)->fl_lock)
((fl)->fl_lock)
(fl)->fl_lock
(fl)
fl
fl
fl_lock
return OMPI_ERR_OUT_OF_RESOURCE;
OMPI_ERR_OUT_OF_RESOURCE
OMPI_ERR_OUT_OF_RESOURCE
ret = ompi_free_list_grow(flist, inc_num);
ret = ompi_free_list_grow(flist, inc_num)
ret
ret
ompi_free_list_grow(flist, inc_num)
ompi_free_list_grow
ompi_free_list_grow
flist
flist
inc_num
inc_num
OPAL_THREAD_UNLOCK(&((fl)->fl_lock));
OPAL_THREAD_UNLOCK(&((fl)->fl_lock))
OPAL_THREAD_UNLOCK
OPAL_THREAD_UNLOCK
&((fl)->fl_lock)
((fl)->fl_lock)
(fl)->fl_lock
(fl)
fl
fl
fl_lock
return ret;
ret
ret
-----joern-----
(33,58,0)
(31,57,0)
(68,17,0)
(28,48,0)
(67,65,0)
(64,54,0)
(35,11,0)
(43,33,0)
(64,9,0)
(70,33,0)
(42,27,0)
(69,65,0)
(42,68,0)
(27,57,0)
(11,29,0)
(14,51,0)
(8,4,0)
(37,59,0)
(6,42,0)
(23,0,0)
(42,48,0)
(27,42,0)
(58,17,0)
(60,58,0)
(13,17,0)
(55,26,0)
(22,56,0)
(41,47,0)
(20,16,0)
(51,28,0)
(1,67,0)
(28,17,0)
(15,29,0)
(36,26,0)
(54,25,0)
(57,17,0)
(70,13,0)
(52,47,0)
(50,56,0)
(56,2,0)
(45,28,0)
(3,54,0)
(48,65,0)
(67,1,0)
(5,68,0)
(1,47,0)
(16,17,0)
(0,43,0)
(57,27,0)
(51,65,0)
(62,28,0)
(69,2,0)
(0,17,0)
(58,33,0)
(66,48,0)
(68,42,0)
(7,0,0)
(24,9,0)
(43,0,0)
(13,70,0)
(30,4,0)
(28,51,0)
(46,57,0)
(15,43,0)
(2,56,0)
(15,48,0)
(10,8,0)
(33,43,0)
(9,51,0)
(63,8,0)
(40,55,0)
(48,15,0)
(38,16,0)
(40,25,0)
(26,55,0)
(18,13,0)
(47,1,0)
(12,65,0)
(53,58,0)
(39,13,0)
(16,11,0)
(2,69,0)
(55,40,0)
(64,59,0)
(59,32,0)
(11,16,0)
(19,26,0)
(21,70,0)
(61,4,0)
(34,68,0)
(9,4,0)
(49,15,0)
(44,65,0)
(43,15,0)
(33,70,0)
(21,58,1)
(10,63,1)
(28,45,1)
(38,8,1)
(58,17,1)
(3,40,1)
(66,67,1)
(15,29,1)
(27,42,1)
(60,53,1)
(69,2,1)
(42,6,1)
(54,3,1)
(64,54,1)
(11,35,1)
(18,21,1)
(23,49,1)
(1,47,1)
(50,51,1)
(42,48,1)
(13,39,1)
(59,37,1)
(16,20,1)
(43,0,1)
(64,9,1)
(62,14,1)
(64,59,1)
(58,60,1)
(42,68,1)
(20,38,1)
(36,19,1)
(57,46,1)
(41,11,1)
(28,17,1)
(47,52,1)
(28,48,1)
(33,58,1)
(9,24,1)
(5,34,1)
(68,5,1)
(0,7,1)
(33,70,1)
(51,28,1)
(11,16,1)
(7,23,1)
(14,27,1)
(39,18,1)
(40,55,1)
(35,16,1)
(68,17,1)
(67,1,1)
(24,69,1)
(46,31,1)
(8,10,1)
(2,56,1)
(13,17,1)
(43,33,1)
(0,17,1)
(26,36,1)
(37,11,1)
(16,17,1)
(9,51,1)
(22,50,1)
(56,22,1)
(52,41,1)
(19,27,1)
(70,13,1)
(57,17,1)
(27,57,1)
(49,66,1)
(31,42,1)
(34,48,1)
(6,68,1)
(45,62,1)
(55,26,1)
(15,43,1)
(48,15,1)
(11,29,1)
(53,0,1)
(45,27,2)
(31,11,2)
(24,27,2)
(40,55,2)
(41,11,2)
(53,11,2)
(33,11,2)
(27,57,2)
(64,54,2)
(26,27,2)
(39,11,2)
(1,47,2)
(67,11,2)
(16,17,2)
(15,11,2)
(19,27,2)
(62,27,2)
(58,11,2)
(48,11,2)
(9,51,2)
(70,13,2)
(56,27,2)
(51,27,2)
(55,27,2)
(11,29,2)
(28,27,2)
(13,17,2)
(0,17,2)
(14,27,2)
(42,11,2)
(55,26,2)
(68,11,2)
(50,27,2)
(23,11,2)
(7,11,2)
(43,0,2)
(47,11,2)
(28,17,2)
(18,11,2)
(43,11,2)
(34,11,2)
(46,11,2)
(27,42,2)
(69,2,2)
(70,11,2)
(0,11,2)
(5,11,2)
(15,43,2)
(57,17,2)
(2,56,2)
(33,70,2)
(9,27,2)
(2,27,2)
(43,33,2)
(68,17,2)
(58,17,2)
(52,11,2)
(67,1,2)
(22,27,2)
(60,11,2)
(59,11,2)
(64,9,2)
(42,48,2)
(28,48,2)
(6,11,2)
(57,11,2)
(40,27,2)
(66,11,2)
(48,15,2)
(64,59,2)
(13,11,2)
(49,11,2)
(37,11,2)
(1,11,2)
(42,68,2)
(3,27,2)
(51,28,2)
(11,16,2)
(36,27,2)
(21,11,2)
(69,27,2)
(15,29,2)
(27,11,2)
(54,27,2)
(33,58,2)
-----------------------------------
(0,flist->fl_num_allocated)
(1,&((fl)
(2,&((fl)
(3,OMPI_ERR_OUT_OF_RESOURCE)
(4,)
(5,fl_num_allocated)
(6,inc_num)
(7,fl_num_allocated)
(8,ret = OMPI_SUCCESS)
(9,return ret;)
(10,OMPI_SUCCESS)
(11,flist->fl_num_allocated > size)
(12,inc_num)
(13,flist->fl_num_per_alloc)
(14,ret)
(15,size - flist->fl_num_allocated + \n\\n            flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
(16,flist->fl_num_allocated)
(17,ompi_free_list_t* flist)
(18,flist)
(19,fl)
(20,fl_num_allocated)
(21,inc_num)
(22,fl_lock)
(23,flist)
(24,ret)
(25,)
(26,(fl)
(27,flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc)
(28,ompi_free_list_grow(flist, inc_num)
(29,size_t size)
(30,if (flist->fl_num_allocated > size)
(31,flist)
(32,)
(33,flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
(34,flist)
(35,size)
(36,fl_lock)
(37,OMPI_SUCCESS)
(38,flist)
(39,fl_num_per_alloc)
(40,OPAL_THREAD_UNLOCK(&((fl)
(41,fl)
(42,flist->fl_num_allocated + inc_num)
(43,flist->fl_num_allocated + \n\\n            flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
(44,if (flist->fl_num_allocated + inc_num > flist->fl_max_to_alloc)
(45,inc_num)
(46,fl_max_to_alloc)
(47,(fl)
(48,inc_num = size - flist->fl_num_allocated + \n\\n            flist->fl_num_per_alloc - (inc_num % flist->fl_num_per_alloc)
(49,size)
(50,fl)
(51,ret = ompi_free_list_grow(flist, inc_num)
(52,fl_lock)
(53,flist)
(54,return OMPI_ERR_OUT_OF_RESOURCE;)
(55,&((fl)
(56,(fl)
(57,flist->fl_max_to_alloc)
(58,flist->fl_num_per_alloc)
(59,return OMPI_SUCCESS;)
(60,fl_num_per_alloc)
(61,ret)
(62,flist)
(63,ret)
(64,RET)
(65,)
(66,inc_num)
(67,OPAL_THREAD_LOCK(&((fl)
(68,flist->fl_num_allocated)
(69,OPAL_THREAD_UNLOCK(&((fl)
(70,inc_num % flist->fl_num_per_alloc)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^