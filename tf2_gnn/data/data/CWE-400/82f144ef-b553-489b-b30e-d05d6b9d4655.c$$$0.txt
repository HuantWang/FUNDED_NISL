-----label-----
0
-----code-----
vaddr_t
sokvaalloc(vsize_t len, struct socket *so)
{
	vaddr_t lva;

	/*
	 * reserve kva.
	 */

	sokvareserve(so, len);

	/*
	 * allocate kva.
	 */

	lva = uvm_km_valloc_wait(kernel_map, len);
	if (lva == 0) {
		sokvaunreserve(len);
		return (0);
	}

	return lva;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
6,7
6,8
7,8
9,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
25,28
26,27
28,29
30,31
32,33
33,34
33,35
34,35
36,37
36,38
36,39
37,38
39,40
41,42
43,44
43,45
44,45
44,46
45,46
48,49
48,50
49,50
50,51
50,52
51,52
53,54
55,56
56,57
58,59
59,60
-----nextToken-----
3,5,8,10,13,15,16,21,23,27,29,31,35,38,40,42,46,47,52,54,57,60
-----computeFrom-----
33,34
33,35
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
vaddr_tsokvaalloc(vsize_t len, struct socket *so){	vaddr_t lva;	/*	 * reserve kva.	 */	sokvareserve(so, len);	/*	 * allocate kva.	 */	lva = uvm_km_valloc_wait(kernel_map, len);	if (lva == 0) {		sokvaunreserve(len);		return (0);	}	return lva;}
vaddr_t
vaddr_t
sokvaalloc(vsize_t len, struct socket *so)
sokvaalloc
vsize_t len
vsize_t
vsize_t
len
len
struct socket *so
struct socket
socket
*so
*
so
{	vaddr_t lva;	/*	 * reserve kva.	 */	sokvareserve(so, len);	/*	 * allocate kva.	 */	lva = uvm_km_valloc_wait(kernel_map, len);	if (lva == 0) {		sokvaunreserve(len);		return (0);	}	return lva;}
vaddr_t lva;
vaddr_t lva;
vaddr_t
vaddr_t
lva
lva
sokvareserve(so, len);
sokvareserve(so, len)
sokvareserve
sokvareserve
so
so
len
len
lva = uvm_km_valloc_wait(kernel_map, len);
lva = uvm_km_valloc_wait(kernel_map, len)
lva
lva
uvm_km_valloc_wait(kernel_map, len)
uvm_km_valloc_wait
uvm_km_valloc_wait
kernel_map
kernel_map
len
len
if (lva == 0) {		sokvaunreserve(len);		return (0);	}
lva == 0
lva
lva
0
{		sokvaunreserve(len);		return (0);	}
sokvaunreserve(len);
sokvaunreserve(len)
sokvaunreserve
sokvaunreserve
len
len
return (0);
(0)
0
return lva;
lva
lva
-----joern-----
(6,14,0)
(11,17,0)
(6,9,0)
(4,21,0)
(10,18,0)
(12,0,0)
(13,6,0)
(20,11,0)
(16,1,0)
(21,17,0)
(18,6,0)
(3,9,0)
(11,9,0)
(14,17,0)
(19,9,0)
(15,14,0)
(16,18,0)
(11,7,0)
(8,11,0)
(0,6,0)
(18,9,0)
(22,14,0)
(21,23,0)
(2,0,0)
(1,23,0)
(14,6,0)
(5,1,0)
(11,17,1)
(18,10,1)
(16,1,1)
(21,17,1)
(16,18,1)
(2,6,1)
(15,13,1)
(21,4,1)
(13,11,1)
(12,2,1)
(1,5,1)
(10,0,1)
(0,6,1)
(4,0,1)
(11,20,1)
(6,14,1)
(14,17,1)
(22,15,1)
(5,21,1)
(14,22,1)
(18,6,1)
(0,12,1)
(11,7,1)
(20,8,1)
(5,0,2)
(16,18,2)
(6,14,2)
(18,6,2)
(0,6,2)
(11,17,2)
(21,17,2)
(1,0,2)
(10,0,2)
(4,0,2)
(11,7,2)
(14,17,2)
(21,0,2)
(18,0,2)
(16,1,2)
-----------------------------------
(0,lva == 0)
(1,return (0)
(2,lva)
(3,lva)
(4,len)
(5,0)
(6,lva = uvm_km_valloc_wait(kernel_map, len)
(7,struct socket *so)
(8,so)
(9,)
(10,lva)
(11,sokvareserve(so, len)
(12,0)
(13,lva)
(14,uvm_km_valloc_wait(kernel_map, len)
(15,kernel_map)
(16,RET)
(17,vsize_t len)
(18,return lva;)
(19,if (lva == 0)
(20,len)
(21,sokvaunreserve(len)
(22,len)
(23,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^