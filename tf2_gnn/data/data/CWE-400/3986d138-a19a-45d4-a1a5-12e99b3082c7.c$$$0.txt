-----label-----
1
-----code-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_bad()
{
    size_t data;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to unsigned int */
            data = strtoul(inputBuffer, NULL, 0);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
14,15
17,18
17,19
18,19
19,20
19,21
21,22
21,23
21,24
23,24
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
30,32
30,33
30,34
31,32
33,34
35,36
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
46,48
46,49
46,50
47,48
49,50
51,52
54,55
55,56
56,57
56,58
57,58
60,61
61,62
61,63
62,63
64,65
66,67
67,68
68,69
-----nextToken-----
2,4,9,11,15,16,20,22,25,27,32,34,36,38,40,45,48,50,52,53,58,59,63,65,69
-----computeFrom-----
13,14
13,15
29,30
29,31
43,44
43,45
61,62
61,63
-----guardedBy-----
34,50
40,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_bad(){    size_t data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data;    badSink();}
void
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_bad()
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_bad
{    size_t data;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data;    badSink();}
size_t data;
size_t data;
size_t
size_t
data
data
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }
data = strtoul(inputBuffer, NULL, 0);
data = strtoul(inputBuffer, NULL, 0)
data
data
strtoul(inputBuffer, NULL, 0)
strtoul
strtoul
inputBuffer
inputBuffer
NULL
NULL
0
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data;
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(26,24,0)
(1,28,0)
(24,26,0)
(19,24,0)
(20,24,0)
(0,28,0)
(31,17,0)
(29,28,0)
(12,4,0)
(3,24,0)
(11,15,0)
(7,11,0)
(10,0,0)
(8,13,0)
(22,0,0)
(13,0,0)
(27,13,0)
(30,12,0)
(6,23,0)
(24,0,0)
(5,4,0)
(4,14,0)
(13,4,0)
(28,23,0)
(25,23,0)
(12,17,0)
(12,23,0)
(4,13,0)
(21,13,0)
(16,26,0)
(2,17,0)
(18,12,0)
(17,23,0)
(21,5,1)
(12,30,1)
(26,24,1)
(10,17,1)
(16,24,1)
(12,4,1)
(19,0,1)
(9,25,1)
(7,26,1)
(13,0,1)
(31,2,1)
(27,8,1)
(26,16,1)
(17,31,1)
(24,3,1)
(18,4,1)
(11,7,1)
(30,18,1)
(8,21,1)
(24,0,1)
(12,17,1)
(22,10,1)
(4,13,1)
(13,27,1)
(5,26,1)
(25,12,1)
(3,20,1)
(18,11,1)
(0,22,1)
(20,19,1)
(7,26,2)
(4,13,2)
(8,26,2)
(4,26,2)
(27,26,2)
(21,26,2)
(13,26,2)
(12,17,2)
(26,24,2)
(13,0,2)
(11,26,2)
(5,26,2)
(24,0,2)
(12,4,2)
-----------------------------------
(0,inputBuffer[CHAR_ARRAY_SIZE] = "")
(1,inputBuffer)
(2,data)
(3,stdin)
(4,data = strtoul(inputBuffer, NULL, 0)
(5,data)
(6,data)
(7,"fgets()
(8,NULL)
(9,RET)
(10,inputBuffer)
(11,printLine("fgets()
(12,CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData = data)
(13,strtoul(inputBuffer, NULL, 0)
(14,)
(15,)
(16,NULL)
(17,data = 0)
(18,CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_45_badData)
(19,inputBuffer)
(20,CHAR_ARRAY_SIZE)
(21,inputBuffer)
(22,"")
(23,)
(24,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(25,badSink()
(26,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(27,0)
(28,)
(29,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(30,data)
(31,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^