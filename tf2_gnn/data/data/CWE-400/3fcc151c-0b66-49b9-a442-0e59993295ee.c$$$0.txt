-----label-----
0
-----code-----
static void goodG2B()
{
    int64_t * data;
    data = NULL;
    goto source;
source:
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (int64_t *)ALLOCA(100*sizeof(int64_t));
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
45,47
46,47
50,51
51,52
51,53
52,53
54,55
54,56
55,56
58,59
60,61
60,62
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,47,48,49,53,56,57,59,61,62
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
static void goodG2B(){    int64_t * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (int64_t *)ALLOCA(100*sizeof(int64_t));    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    int64_t * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (int64_t *)ALLOCA(100*sizeof(int64_t));    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (int64_t *)ALLOCA(100*sizeof(int64_t));
source
data = (int64_t *)ALLOCA(100*sizeof(int64_t));
data = (int64_t *)ALLOCA(100*sizeof(int64_t))
data
data
(int64_t *)ALLOCA(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
ALLOCA(100*sizeof(int64_t))
ALLOCA
ALLOCA
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(19,14,0)
(4,22,0)
(6,1,0)
(2,6,0)
(0,16,0)
(19,20,0)
(11,19,0)
(15,9,0)
(6,2,0)
(14,22,0)
(18,15,0)
(16,22,0)
(13,20,0)
(9,2,0)
(7,22,0)
(14,19,0)
(20,6,0)
(17,19,0)
(8,22,0)
(6,20,0)
(3,22,0)
(23,22,0)
(10,22,0)
(21,16,0)
(1,6,0)
(9,15,0)
(2,9,0)
(20,22,0)
(5,9,0)
(5,13,1)
(19,11,1)
(2,9,1)
(15,18,1)
(21,0,1)
(12,8,1)
(13,4,1)
(9,15,1)
(6,1,1)
(20,6,1)
(6,2,1)
(17,7,1)
(8,14,1)
(18,5,1)
(11,17,1)
(4,16,1)
(16,21,1)
(14,19,1)
(7,20,1)
(19,20,1)
(2,9,2)
(9,15,2)
(6,1,2)
(6,2,2)
(19,20,2)
(14,19,2)
(20,6,2)
-----------------------------------
(0,data)
(1,int64_t *)
(2,ALLOCA(100*sizeof(int64_t)
(3,data)
(4,goto source;)
(5,100)
(6,(int64_t *)
(7,L)
(8,goto sink;)
(9,100*sizeof(int64_t)
(10,sink:)
(11,0)
(12,RET)
(13,data)
(14,printLongLongLine(data[0])
(15,sizeof(int64_t)
(16,data = NULL)
(17,data)
(18,int64_t)
(19,data[0])
(20,data = (int64_t *)
(21,NULL)
(22,)
(23,source:)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^