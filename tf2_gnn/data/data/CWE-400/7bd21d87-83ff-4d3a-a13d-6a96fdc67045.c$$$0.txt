-----label-----
1
-----code-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67b_badSink(CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType myStruct)
{
    FILE * data = myStruct.structFirst;
    /* FLAW: Point data to another file handle without closing the handle from the source */
    data = fopen("BadSink_fopen.txt", "w+");
    /* avoid incidental for not closing the file handle */
    if (data != NULL)
    {
        fclose(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
10,13
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
27,29
27,30
28,29
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,7,9,14,16,17,21,22,26,29,30,31,35,37,42,44
-----computeFrom-----
24,25
24,26
33,34
33,35
-----guardedBy-----
35,44
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67b_badSink(CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType myStruct){    FILE * data = myStruct.structFirst;    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
void
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67b_badSink(CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType myStruct)
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67b_badSink
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType myStruct
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType
myStruct
myStruct
{    FILE * data = myStruct.structFirst;    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
FILE * data = myStruct.structFirst;
FILE * data = myStruct.structFirst;
FILE
FILE
* data = myStruct.structFirst
*
data
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
data = fopen("BadSink_fopen.txt", "w+");
data = fopen("BadSink_fopen.txt", "w+")
data
data
fopen("BadSink_fopen.txt", "w+")
fopen
fopen
"BadSink_fopen.txt"
"w+"
if (data != NULL)    {        fclose(data);    }
data != NULL
data
data
NULL
NULL
{        fclose(data);    }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(15,19,0)
(3,15,0)
(18,9,0)
(10,0,0)
(2,1,0)
(4,18,0)
(7,19,0)
(11,15,0)
(14,19,0)
(5,2,0)
(0,15,0)
(15,0,0)
(16,0,0)
(12,18,0)
(6,12,0)
(2,15,0)
(18,12,0)
(12,19,0)
(17,11,0)
(20,18,0)
(8,11,0)
(13,2,1)
(11,15,1)
(17,15,1)
(12,18,1)
(15,0,1)
(10,3,1)
(8,17,1)
(18,9,1)
(20,6,1)
(13,11,1)
(2,15,1)
(16,10,1)
(3,12,1)
(0,16,1)
(4,20,1)
(18,4,1)
(5,11,1)
(2,5,1)
(11,8,1)
(5,11,2)
(11,15,2)
(18,9,2)
(12,18,2)
(15,0,2)
(2,11,2)
(2,15,2)
-----------------------------------
(0,fopen("BadSink_fopen.txt", "w+")
(1,)
(2,fclose(data)
(3,data)
(4,structFirst)
(5,data)
(6,data)
(7,data)
(8,NULL)
(9,CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_67_structType myStruct)
(10,"BadSink_fopen.txt")
(11,data != NULL)
(12,* data = myStruct.structFirst)
(13,RET)
(14,if (data != NULL)
(15,data = fopen("BadSink_fopen.txt", "w+")
(16,"w+")
(17,data)
(18,myStruct.structFirst)
(19,)
(20,myStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^