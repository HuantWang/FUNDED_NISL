-----label-----
0
-----code-----
static void goodG2B()
{
    int count;
    /* Initialize count */
    count = -1;
    goto source;
source:
    /* FIX: Use a relatively small number */
    count = 20;
    goto sink;
sink:
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
19,20
19,21
21,22
22,23
22,24
23,24
26,27
28,29
28,30
30,31
31,32
31,33
32,33
34,35
36,37
37,38
37,39
38,39
-----nextToken-----
2,4,8,10,14,16,18,20,24,25,27,29,33,35,39,40
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    int count;    /* Initialize count */    count = -1;    goto source;source:    /* FIX: Use a relatively small number */    count = 20;    goto sink;sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
static void
goodG2B()
goodG2B
{    int count;    /* Initialize count */    count = -1;    goto source;source:    /* FIX: Use a relatively small number */    count = 20;    goto sink;sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
goto source;
source
source:    /* FIX: Use a relatively small number */    count = 20;
source
count = 20;
count = 20
count
count
20
goto sink;
sink
sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);
sink
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(5,2,0)
(12,17,0)
(10,7,0)
(10,2,0)
(6,14,0)
(15,2,0)
(5,14,0)
(8,7,0)
(9,5,0)
(4,2,0)
(17,2,0)
(11,10,0)
(16,14,0)
(13,2,0)
(7,10,0)
(3,2,0)
(0,2,0)
(14,2,0)
(0,14,1)
(8,11,1)
(1,17,1)
(16,6,1)
(17,12,1)
(5,14,1)
(6,13,1)
(14,16,1)
(10,7,1)
(12,5,1)
(9,0,1)
(13,10,1)
(7,8,1)
(5,9,1)
(10,7,2)
(5,14,2)
-----------------------------------
(0,goto sink;)
(1,RET)
(2,)
(3,count)
(4,sink:)
(5,SLEEP(count)
(6,count)
(7,-1)
(8,1)
(9,count)
(10,count = -1)
(11,count)
(12,"Sleep time possibly too long")
(13,goto source;)
(14,count = 20)
(15,source:)
(16,20)
(17,printLine("Sleep time possibly too long")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^