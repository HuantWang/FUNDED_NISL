-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_wchar_t_66_bad()
{
    wchar_t * data;
    wchar_t * dataArray[5];
    data = NULL;
    {
        wchar_t myString[] = L"myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = wcsdup(myString);
        /* Use data */
        printWLine(data);
    }
    /* put data in array */
    dataArray[2] = data;
    CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
18,19
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
27,28
28,29
28,30
30,31
30,32
30,33
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
52,54
53,54
56,57
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,8,10,11,14,16,17,19,23,25,29,31,32,34,38,41,43,47,49,54,55,57,61,63
-----computeFrom-----
21,22
21,23
36,37
36,38
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_wchar_t_66_bad(){    wchar_t * data;    wchar_t * dataArray[5];    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    /* put data in array */    dataArray[2] = data;    CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray);}
void
CWE401_Memory_Leak__strdup_wchar_t_66_bad()
CWE401_Memory_Leak__strdup_wchar_t_66_bad
{    wchar_t * data;    wchar_t * dataArray[5];    data = NULL;    {        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }    /* put data in array */    dataArray[2] = data;    CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t * dataArray[5];
wchar_t * dataArray[5];
wchar_t
* dataArray[5]
*
dataArray
[5]
5
data = NULL;
data = NULL
data
data
NULL
NULL
{        wchar_t myString[] = L"myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = wcsdup(myString);        /* Use data */        printWLine(data);    }
wchar_t myString[] = L"myString";
wchar_t myString[] = L"myString";
wchar_t
myString[] = L"myString"
myString
[]
= L"myString"
L"myString"
data = wcsdup(myString);
data = wcsdup(myString)
data
data
wcsdup(myString)
wcsdup
wcsdup
myString
myString
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
dataArray[2] = data;
dataArray[2] = data
dataArray[2]
dataArray
dataArray
2
data
data
CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray);
CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray)
CWE401_Memory_Leak__strdup_wchar_t_66b_badSink
CWE401_Memory_Leak__strdup_wchar_t_66b_badSink
dataArray
dataArray
-----joern-----
(0,9,0)
(2,1,0)
(6,10,0)
(3,10,0)
(4,16,0)
(9,14,0)
(10,0,0)
(19,14,0)
(0,1,0)
(11,9,0)
(7,0,0)
(17,9,0)
(20,18,0)
(12,9,0)
(16,1,0)
(8,1,0)
(12,14,0)
(21,17,0)
(5,18,0)
(9,17,0)
(13,12,0)
(14,1,0)
(18,1,0)
(20,5,1)
(7,10,1)
(12,13,1)
(16,4,1)
(11,19,1)
(4,0,1)
(0,9,1)
(21,11,1)
(13,9,1)
(17,21,1)
(10,6,1)
(6,3,1)
(0,7,1)
(9,17,1)
(18,20,1)
(12,9,1)
(15,16,1)
(3,12,1)
(19,18,1)
(0,9,2)
(12,9,2)
(9,17,2)
-----------------------------------
(0,dataArray[2] = data)
(1,)
(2,data)
(3,dataArray)
(4,dataArray)
(5,data)
(6,2)
(7,data)
(8,dataArray)
(9,data = wcsdup(myString)
(10,dataArray[2])
(11,data)
(12,printWLine(data)
(13,data)
(14,)
(15,RET)
(16,CWE401_Memory_Leak__strdup_wchar_t_66b_badSink(dataArray)
(17,wcsdup(myString)
(18,data = NULL)
(19,"myString")
(20,NULL)
(21,myString)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^