-----label-----
1
-----code-----
static bool
tempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size)
{
  fseek((FILE *)tempfile->fp, pos, SEEK_SET);
  size_t nbytes = fwrite(p, 1, size, tempfile->fp);
  if (nbytes != size)
    return false;

  return true;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
17,18
19,20
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
27,28
28,29
28,30
28,31
28,32
29,30
31,32
31,33
32,33
32,34
33,34
35,36
37,38
37,39
38,39
41,42
43,44
45,46
46,47
46,48
47,48
49,50
49,51
51,52
52,53
52,54
52,55
52,56
52,57
53,54
55,56
58,59
60,61
60,62
61,62
64,65
64,66
65,66
65,67
66,67
68,69
70,71
72,73
-----nextToken-----
2,4,7,9,10,12,14,15,18,20,23,25,30,34,36,39,40,42,44,48,50,54,56,57,59,62,63,67,69,71,73
-----computeFrom-----
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static booltempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size){  fseek((FILE *)tempfile->fp, pos, SEEK_SET);  size_t nbytes = fwrite(p, 1, size, tempfile->fp);  if (nbytes != size)    return false;  return true;}
static bool
tempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size)
tempfile_write
tempfile_t *tempfile
tempfile_t
tempfile_t
*tempfile
*
tempfile
unsigned char *p
unsigned char
*p
*
p
size_t pos
size_t
size_t
pos
pos
size_t size
size_t
size_t
size
size
{  fseek((FILE *)tempfile->fp, pos, SEEK_SET);  size_t nbytes = fwrite(p, 1, size, tempfile->fp);  if (nbytes != size)    return false;  return true;}
fseek((FILE *)tempfile->fp, pos, SEEK_SET);
fseek((FILE *)tempfile->fp, pos, SEEK_SET)
fseek
fseek
(FILE *)tempfile->fp
FILE *
FILE
FILE
*
*
tempfile->fp
tempfile
tempfile
fp
pos
pos
SEEK_SET
SEEK_SET
size_t nbytes = fwrite(p, 1, size, tempfile->fp);
size_t nbytes = fwrite(p, 1, size, tempfile->fp);
size_t
size_t
nbytes = fwrite(p, 1, size, tempfile->fp)
nbytes
= fwrite(p, 1, size, tempfile->fp)
fwrite(p, 1, size, tempfile->fp)
fwrite
fwrite
p
p
1
size
size
tempfile->fp
tempfile
tempfile
fp
if (nbytes != size)    return false;
nbytes != size
nbytes
nbytes
size
size
return false;
false
return true;
true
-----joern-----
(1,8,0)
(0,16,0)
(7,8,0)
(12,14,0)
(24,15,0)
(24,8,0)
(30,26,0)
(27,26,0)
(18,14,0)
(14,5,0)
(0,26,0)
(4,5,0)
(24,14,0)
(26,20,0)
(3,27,0)
(26,27,0)
(8,24,0)
(29,19,0)
(14,24,0)
(6,25,0)
(26,2,0)
(21,0,0)
(22,0,0)
(19,2,0)
(13,5,0)
(26,0,0)
(19,27,0)
(9,25,0)
(28,19,0)
(27,5,0)
(8,16,0)
(6,13,0)
(11,5,0)
(15,24,0)
(14,23,0)
(31,26,0)
(10,13,0)
(17,26,0)
(19,27,1)
(14,23,1)
(27,26,1)
(9,19,1)
(29,27,1)
(14,12,1)
(19,2,1)
(8,1,1)
(17,31,1)
(0,21,1)
(31,3,1)
(14,24,1)
(19,28,1)
(26,20,1)
(25,9,1)
(24,15,1)
(13,10,1)
(0,16,1)
(30,17,1)
(1,7,1)
(10,19,1)
(26,0,1)
(3,14,1)
(12,18,1)
(24,8,1)
(6,13,1)
(28,29,1)
(26,2,1)
(18,24,1)
(21,22,1)
(6,25,1)
(8,16,1)
(22,30,1)
(8,16,2)
(26,0,2)
(14,24,2)
(6,13,2)
(14,23,2)
(19,27,2)
(24,15,2)
(13,19,2)
(26,2,2)
(0,16,2)
(6,25,2)
(25,19,2)
(10,19,2)
(24,8,2)
(27,26,2)
(26,20,2)
(9,19,2)
(19,2,2)
-----------------------------------
(0,tempfile->fp)
(1,fp)
(2,size_t size)
(3,nbytes)
(4,if (nbytes != size)
(5,)
(6,RET)
(7,tempfile)
(8,tempfile->fp)
(9,false)
(10,true)
(11,nbytes)
(12,SEEK_SET)
(13,return true;)
(14,fseek((FILE *)
(15,FILE *)
(16,tempfile_t *tempfile)
(17,1)
(18,pos)
(19,nbytes != size)
(20,unsigned char *p)
(21,fp)
(22,tempfile)
(23,size_t pos)
(24,(FILE *)
(25,return false;)
(26,fwrite(p, 1, size, tempfile->fp)
(27,nbytes = fwrite(p, 1, size, tempfile->fp)
(28,size)
(29,nbytes)
(30,size)
(31,p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^