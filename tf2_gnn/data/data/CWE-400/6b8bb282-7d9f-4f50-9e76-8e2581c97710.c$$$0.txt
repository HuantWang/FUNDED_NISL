-----label-----
1
-----code-----
void rmsummary_print(FILE *stream, struct rmsummary *s, struct rmsummary *limits, char *preamble, char *epilogue)
{
	if(preamble)
		fprintf(stream, "%s", preamble);

	if(s->command)
		fprintf(stream, "%s %s\n",  "command:", s->command);

	if(s->category)
		fprintf(stream, "%-15s%s\n",  "category:", s->category);

	if(s->exit_type)
		fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type);

	fprintf(stream, "%-20s%20" PRId64 "\n",  "exit_status:", s->exit_status);

	if(s->last_error)
		fprintf(stream, "%-20s%20" PRId64 " %s\n",  "last_error:", s->last_error, strerror(s->last_error));

	if(s->exit_type)
	{
		if( strcmp(s->exit_type, "signal") == 0 )
			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);
		else if( strcmp(s->exit_type, "limits") == 0 )
			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);
	}

	rmsummary_print_only_resources(stream, s, "");

	if(limits) {
		rmsummary_print_only_resources(stream, limits, "limits_");
	}

	if(epilogue)
		fprintf(stream, "%s", epilogue);

	fprintf(stream, "--\n\n");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
25,26
25,27
28,29
28,30
30,31
30,32
33,34
33,35
33,36
33,37
33,38
33,39
33,40
33,41
33,42
33,43
33,44
34,35
34,36
35,36
37,38
38,39
38,40
38,41
38,42
39,40
41,42
44,45
46,47
46,48
47,48
47,49
48,49
51,52
52,53
52,54
52,55
52,56
52,57
53,54
55,56
59,60
59,61
60,61
63,64
63,65
64,65
64,66
65,66
68,69
69,70
69,71
69,72
69,73
69,74
70,71
72,73
76,77
76,78
77,78
80,81
80,82
81,82
81,83
82,83
85,86
86,87
86,88
86,89
86,90
86,91
87,88
89,90
93,94
93,95
94,95
97,98
98,99
99,100
99,101
100,101
100,102
101,102
104,105
104,106
105,106
106,107
107,108
108,109
108,110
108,111
108,112
109,110
111,112
113,114
116,117
116,118
117,118
119,120
120,121
121,122
121,123
121,124
121,125
122,123
124,125
126,127
129,130
129,131
130,131
132,133
133,134
133,135
133,136
133,137
134,135
136,137
139,140
141,142
142,143
142,144
142,145
143,144
145,146
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,24,26,27,29,31,32,36,40,42,43,45,49,50,54,56,57,58,61,62,66,67,71,73,74,75,78,79,83,84,88,90,91,92,95,96,102,103,110,112,114,115,118,123,125,127,128,131,135,137,138,140,144,146,147
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;FieldReference;IdExpression;Name;Name;ProblemStatement;ProblemStatement;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ProblemStatement;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
void rmsummary_print(FILE *stream, struct rmsummary *s, struct rmsummary *limits, char *preamble, char *epilogue){	if(preamble)		fprintf(stream, "%s", preamble);	if(s->command)		fprintf(stream, "%s %s\n",  "command:", s->command);	if(s->category)		fprintf(stream, "%-15s%s\n",  "category:", s->category);	if(s->exit_type)		fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type);	fprintf(stream, "%-20s%20" PRId64 "\n",  "exit_status:", s->exit_status);	if(s->last_error)		fprintf(stream, "%-20s%20" PRId64 " %s\n",  "last_error:", s->last_error, strerror(s->last_error));	if(s->exit_type)	{		if( strcmp(s->exit_type, "signal") == 0 )			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);		else if( strcmp(s->exit_type, "limits") == 0 )			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);	}	rmsummary_print_only_resources(stream, s, "");	if(limits) {		rmsummary_print_only_resources(stream, limits, "limits_");	}	if(epilogue)		fprintf(stream, "%s", epilogue);	fprintf(stream, "--\n\n");}
void
rmsummary_print(FILE *stream, struct rmsummary *s, struct rmsummary *limits, char *preamble, char *epilogue)
rmsummary_print
FILE *stream
FILE
FILE
*stream
*
stream
struct rmsummary *s
struct rmsummary
rmsummary
*s
*
s
struct rmsummary *limits
struct rmsummary
rmsummary
*limits
*
limits
char *preamble
char
*preamble
*
preamble
char *epilogue
char
*epilogue
*
epilogue
{	if(preamble)		fprintf(stream, "%s", preamble);	if(s->command)		fprintf(stream, "%s %s\n",  "command:", s->command);	if(s->category)		fprintf(stream, "%-15s%s\n",  "category:", s->category);	if(s->exit_type)		fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type);	fprintf(stream, "%-20s%20" PRId64 "\n",  "exit_status:", s->exit_status);	if(s->last_error)		fprintf(stream, "%-20s%20" PRId64 " %s\n",  "last_error:", s->last_error, strerror(s->last_error));	if(s->exit_type)	{		if( strcmp(s->exit_type, "signal") == 0 )			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);		else if( strcmp(s->exit_type, "limits") == 0 )			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);	}	rmsummary_print_only_resources(stream, s, "");	if(limits) {		rmsummary_print_only_resources(stream, limits, "limits_");	}	if(epilogue)		fprintf(stream, "%s", epilogue);	fprintf(stream, "--\n\n");}
if(preamble)		fprintf(stream, "%s", preamble);
preamble
preamble
fprintf(stream, "%s", preamble);
fprintf(stream, "%s", preamble)
fprintf
fprintf
stream
stream
"%s"
preamble
preamble
if(s->command)		fprintf(stream, "%s %s\n",  "command:", s->command);
s->command
s
s
command
fprintf(stream, "%s %s\n",  "command:", s->command);
fprintf(stream, "%s %s\n",  "command:", s->command)
fprintf
fprintf
stream
stream
"%s %s\n"
"command:"
s->command
s
s
command
if(s->category)		fprintf(stream, "%-15s%s\n",  "category:", s->category);
s->category
s
s
category
fprintf(stream, "%-15s%s\n",  "category:", s->category);
fprintf(stream, "%-15s%s\n",  "category:", s->category)
fprintf
fprintf
stream
stream
"%-15s%s\n"
"category:"
s->category
s
s
category
if(s->exit_type)		fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type);
s->exit_type
s
s
exit_type
fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type);
fprintf(stream, "%-20s%20s\n",  "exit_type:", s->exit_type)
fprintf
fprintf
stream
stream
"%-20s%20s\n"
"exit_type:"
s->exit_type
s
s
exit_type
fprintf(stream, "%-20s%20" PRId64 "\n",  "exit_status:", s->exit_status);
if(s->last_error)		fprintf(stream, "%-20s%20" PRId64 " %s\n",  "last_error:", s->last_error, strerror(s->last_error));
if(s->exit_type)	{		if( strcmp(s->exit_type, "signal") == 0 )			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);		else if( strcmp(s->exit_type, "limits") == 0 )			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);	}
s->exit_type
s
s
exit_type
{		if( strcmp(s->exit_type, "signal") == 0 )			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);		else if( strcmp(s->exit_type, "limits") == 0 )			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);	}
if( strcmp(s->exit_type, "signal") == 0 )			fprintf(stream, "%-20s%20" PRId64 "\n",  "signal:", s->signal);
else if( strcmp(s->exit_type, "limits") == 0 )			fprintf(stream, "%-20s%s\n",  "limits_exceeded:", s->limits_exceeded);
rmsummary_print_only_resources(stream, s, "");
rmsummary_print_only_resources(stream, s, "")
rmsummary_print_only_resources
rmsummary_print_only_resources
stream
stream
s
s
""
if(limits) {		rmsummary_print_only_resources(stream, limits, "limits_");	}
limits
limits
{		rmsummary_print_only_resources(stream, limits, "limits_");	}
rmsummary_print_only_resources(stream, limits, "limits_");
rmsummary_print_only_resources(stream, limits, "limits_")
rmsummary_print_only_resources
rmsummary_print_only_resources
stream
stream
limits
limits
"limits_"
if(epilogue)		fprintf(stream, "%s", epilogue);
epilogue
epilogue
fprintf(stream, "%s", epilogue);
fprintf(stream, "%s", epilogue)
fprintf
fprintf
stream
stream
"%s"
epilogue
epilogue
fprintf(stream, "--\n\n");
fprintf(stream, "--\n\n")
fprintf
fprintf
stream
stream
"--\n\n"
-----joern-----
(86,25,0)
(18,100,0)
(116,44,0)
(14,24,0)
(24,25,0)
(11,121,0)
(106,103,0)
(78,106,0)
(108,59,0)
(42,25,0)
(58,98,0)
(40,59,0)
(29,93,0)
(101,48,0)
(20,110,0)
(34,100,0)
(103,106,0)
(113,103,0)
(13,25,0)
(84,34,0)
(74,100,0)
(47,93,0)
(32,26,0)
(75,19,0)
(119,30,0)
(97,19,0)
(102,116,0)
(5,59,0)
(37,100,0)
(85,93,0)
(48,29,0)
(95,85,0)
(53,47,0)
(41,111,0)
(110,100,0)
(116,93,0)
(18,47,0)
(47,18,0)
(109,30,0)
(120,74,0)
(26,32,0)
(118,25,0)
(88,116,0)
(85,35,0)
(81,32,0)
(32,100,0)
(9,106,0)
(67,100,0)
(110,39,0)
(111,100,0)
(10,116,0)
(36,103,0)
(39,110,0)
(26,29,0)
(69,29,0)
(76,73,0)
(57,35,0)
(71,0,0)
(80,48,0)
(24,93,0)
(83,0,0)
(73,74,0)
(112,121,0)
(34,0,0)
(22,37,0)
(23,49,0)
(39,93,0)
(62,39,0)
(0,34,0)
(7,24,0)
(89,34,0)
(33,67,0)
(97,98,0)
(29,48,0)
(90,25,0)
(15,47,0)
(116,96,0)
(30,100,0)
(35,85,0)
(105,110,0)
(104,25,0)
(50,111,0)
(0,25,0)
(68,25,0)
(92,37,0)
(74,73,0)
(55,104,0)
(29,26,0)
(49,100,0)
(6,18,0)
(8,0,0)
(56,67,0)
(43,66,0)
(17,97,0)
(35,100,0)
(59,45,0)
(3,2,0)
(98,100,0)
(0,93,0)
(21,121,0)
(12,35,0)
(2,56,0)
(117,18,0)
(70,82,0)
(104,93,0)
(121,87,0)
(1,25,0)
(52,104,0)
(115,106,0)
(114,49,0)
(94,29,0)
(27,104,0)
(67,56,0)
(72,39,0)
(59,93,0)
(4,39,0)
(77,47,0)
(73,93,0)
(104,100,0)
(54,82,0)
(28,85,0)
(31,56,0)
(99,67,0)
(63,74,0)
(103,100,0)
(79,73,0)
(60,98,0)
(64,25,0)
(61,32,0)
(48,100,0)
(82,100,0)
(46,73,0)
(107,29,0)
(121,93,0)
(19,97,0)
(106,93,0)
(98,97,0)
(65,85,0)
(56,2,0)
(95,28,1)
(82,70,1)
(14,51,1)
(0,34,1)
(31,67,1)
(27,73,1)
(109,119,1)
(37,100,1)
(73,93,1)
(49,23,1)
(12,65,1)
(32,81,1)
(38,104,1)
(65,95,1)
(83,37,1)
(36,78,1)
(56,67,1)
(40,5,1)
(24,7,1)
(63,76,1)
(121,87,1)
(50,0,1)
(104,93,1)
(19,75,1)
(16,24,1)
(51,38,1)
(72,49,1)
(2,56,1)
(29,93,1)
(22,39,1)
(76,79,1)
(117,6,1)
(77,15,1)
(67,100,1)
(99,33,1)
(27,106,1)
(114,82,1)
(18,117,1)
(80,69,1)
(47,93,1)
(27,30,1)
(110,20,1)
(7,14,1)
(37,92,1)
(21,112,1)
(115,19,1)
(17,98,1)
(56,31,1)
(54,121,1)
(78,9,1)
(81,61,1)
(92,22,1)
(116,102,1)
(49,100,1)
(61,48,1)
(82,100,1)
(34,100,1)
(75,97,1)
(111,100,1)
(116,44,1)
(8,71,1)
(15,37,1)
(34,89,1)
(59,93,1)
(46,2,1)
(106,103,1)
(11,91,1)
(121,93,1)
(104,55,1)
(74,120,1)
(73,74,1)
(88,10,1)
(59,45,1)
(54,91,1)
(28,82,1)
(85,35,1)
(112,11,1)
(58,30,1)
(30,109,1)
(5,108,1)
(0,93,1)
(116,93,1)
(35,100,1)
(48,101,1)
(119,111,1)
(104,100,1)
(85,93,1)
(79,46,1)
(47,18,1)
(106,93,1)
(102,88,1)
(60,58,1)
(97,17,1)
(48,100,1)
(30,100,1)
(32,100,1)
(53,77,1)
(19,97,1)
(70,54,1)
(67,99,1)
(105,62,1)
(94,111,1)
(74,100,1)
(114,85,1)
(89,84,1)
(41,50,1)
(51,116,1)
(18,100,1)
(107,94,1)
(20,105,1)
(57,12,1)
(103,100,1)
(83,47,1)
(110,100,1)
(22,49,1)
(62,4,1)
(3,56,1)
(97,98,1)
(2,3,1)
(29,26,1)
(121,21,1)
(33,19,1)
(23,114,1)
(101,80,1)
(39,93,1)
(98,60,1)
(71,83,1)
(119,29,1)
(55,52,1)
(24,93,1)
(98,100,1)
(103,113,1)
(39,110,1)
(120,63,1)
(52,27,1)
(111,41,1)
(108,51,1)
(84,8,1)
(26,32,1)
(14,59,1)
(9,115,1)
(69,107,1)
(4,72,1)
(113,36,1)
(35,57,1)
(27,2,1)
(59,40,1)
(6,53,1)
(10,38,1)
(29,48,1)
(80,111,2)
(39,110,2)
(19,30,2)
(79,2,2)
(48,100,2)
(57,82,2)
(48,111,2)
(46,2,2)
(59,93,2)
(85,35,2)
(104,93,2)
(98,30,2)
(60,30,2)
(81,111,2)
(26,111,2)
(47,37,2)
(112,91,2)
(116,93,2)
(9,19,2)
(32,100,2)
(67,19,2)
(111,100,2)
(73,74,2)
(65,82,2)
(26,32,2)
(4,49,2)
(74,100,2)
(73,2,2)
(29,48,2)
(21,91,2)
(73,93,2)
(59,51,2)
(56,19,2)
(30,100,2)
(20,49,2)
(19,97,2)
(10,38,2)
(116,38,2)
(18,37,2)
(82,100,2)
(28,82,2)
(31,19,2)
(99,19,2)
(110,100,2)
(115,19,2)
(63,2,2)
(97,98,2)
(69,111,2)
(101,111,2)
(104,100,2)
(24,93,2)
(18,100,2)
(39,93,2)
(6,37,2)
(15,37,2)
(120,2,2)
(29,26,2)
(94,111,2)
(107,111,2)
(47,93,2)
(110,49,2)
(76,2,2)
(95,82,2)
(106,93,2)
(2,19,2)
(33,19,2)
(3,19,2)
(67,100,2)
(106,19,2)
(108,51,2)
(35,100,2)
(74,2,2)
(2,56,2)
(117,37,2)
(62,49,2)
(56,67,2)
(29,111,2)
(53,37,2)
(0,34,2)
(58,30,2)
(29,93,2)
(11,91,2)
(77,37,2)
(32,111,2)
(85,93,2)
(106,103,2)
(5,51,2)
(102,38,2)
(75,30,2)
(12,82,2)
(113,19,2)
(49,100,2)
(40,51,2)
(39,49,2)
(121,87,2)
(88,38,2)
(103,100,2)
(116,44,2)
(37,100,2)
(72,49,2)
(78,19,2)
(35,82,2)
(121,91,2)
(47,18,2)
(61,111,2)
(34,100,2)
(105,49,2)
(85,82,2)
(59,45,2)
(17,30,2)
(121,93,2)
(36,19,2)
(0,93,2)
(103,19,2)
(98,100,2)
(97,30,2)
-----------------------------------
(0,fprintf(stream, "%-20s%20" PRId64 "\\n",  "exit_status:", s->exit_status)
(1,if(s->exit_type)
(2,strcmp(s->exit_type, "limits")
(3,0)
(4,"%-15s%s\\n")
(5,"%s")
(6,s)
(7,"--\\n\\n")
(8,"exit_status:")
(9,"%-20s%20" PRId64 "\\n")
(10,stream)
(11,stream)
(12,s)
(13,if(s->category)
(14,stream)
(15,stream)
(16,RET)
(17,"signal")
(18,s->exit_type)
(19,strcmp(s->exit_type, "signal")
(20,category)
(21,preamble)
(22,s)
(23,category)
(24,fprintf(stream, "--\\n\\n")
(25,)
(26,strerror(s->last_error)
(27,stream)
(28,stream)
(29,fprintf(stream, "%-20s%20" PRId64 " %s\\n",  "last_error:", s->last_error, strerror(s->last_error)
(30,s->exit_type)
(31,"limits")
(32,s->last_error)
(33,s)
(34,s->exit_status)
(35,s->command)
(36,s)
(37,s->exit_type)
(38,limits)
(39,fprintf(stream, "%-15s%s\\n",  "category:", s->category)
(40,epilogue)
(41,last_error)
(42,if(s->command)
(43,if( strcmp(s->exit_type, "signal")
(44,struct rmsummary *limits)
(45,char *epilogue)
(46,stream)
(47,fprintf(stream, "%-20s%20s\\n",  "exit_type:", s->exit_type)
(48,s->last_error)
(49,s->category)
(50,s)
(51,epilogue)
(52,s)
(53,"exit_type:")
(54,s)
(55,"")
(56,strcmp(s->exit_type, "limits")
(57,command)
(58,s)
(59,fprintf(stream, "%s", epilogue)
(60,exit_type)
(61,s)
(62,"category:")
(63,s)
(64,if(s->last_error)
(65,"command:")
(66,)
(67,s->exit_type)
(68,if(s->exit_type)
(69,"last_error:")
(70,command)
(71,"%-20s%20" PRId64 "\\n")
(72,stream)
(73,fprintf(stream, "%-20s%s\\n",  "limits_exceeded:", s->limits_exceeded)
(74,s->limits_exceeded)
(75,0)
(76,"limits_exceeded:")
(77,"%-20s%20s\\n")
(78,"signal:")
(79,"%-20s%s\\n")
(80,s)
(81,last_error)
(82,s->command)
(83,stream)
(84,s)
(85,fprintf(stream, "%s %s\\n",  "command:", s->command)
(86,if(epilogue)
(87,char *preamble)
(88,limits)
(89,exit_status)
(90,if(limits)
(91,preamble)
(92,exit_type)
(93,FILE *stream)
(94,stream)
(95,"%s %s\\n")
(96,)
(97,strcmp(s->exit_type, "signal")
(98,s->exit_type)
(99,exit_type)
(100,struct rmsummary *s)
(101,last_error)
(102,"limits_")
(103,s->signal)
(104,rmsummary_print_only_resources(stream, s, "")
(105,s)
(106,fprintf(stream, "%-20s%20" PRId64 "\\n",  "signal:", s->signal)
(107,"%-20s%20" PRId64 " %s\\n")
(108,stream)
(109,exit_type)
(110,s->category)
(111,s->last_error)
(112,"%s")
(113,signal)
(114,s)
(115,stream)
(116,rmsummary_print_only_resources(stream, limits, "limits_")
(117,exit_type)
(118,if(preamble)
(119,s)
(120,limits_exceeded)
(121,fprintf(stream, "%s", preamble)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^