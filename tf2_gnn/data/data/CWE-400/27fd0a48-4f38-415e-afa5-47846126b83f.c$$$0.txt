-----label-----
1
-----code-----
static void badSink(FILE * data)
{
    if(badStatic)
    {
        /* FLAW: Point data to another file handle without closing the handle from the source */
        data = fopen("BadSink_fopen.txt", "w+");
        /* avoid incidental for not closing the file handle */
        if (data != NULL)
        {
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
15,16
15,17
16,17
17,18
17,19
18,19
20,21
20,22
20,23
21,22
25,26
25,27
26,27
26,28
27,28
29,30
31,32
32,33
33,34
33,35
34,35
36,37
-----nextToken-----
2,4,7,9,10,14,19,22,23,24,28,30,35,37
-----computeFrom-----
17,18
17,19
26,27
26,28
-----guardedBy-----
28,37
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(FILE * data){    if(badStatic)    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
static void
badSink(FILE * data)
badSink
FILE * data
FILE
FILE
* data
*
data
{    if(badStatic)    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
if(badStatic)    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
badStatic
badStatic
{        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
data = fopen("BadSink_fopen.txt", "w+");
data = fopen("BadSink_fopen.txt", "w+")
data
data
fopen("BadSink_fopen.txt", "w+")
fopen
fopen
"BadSink_fopen.txt"
"w+"
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(1,9,0)
(2,5,0)
(17,12,0)
(15,11,0)
(0,5,0)
(3,1,0)
(5,9,0)
(9,16,0)
(12,9,0)
(9,5,0)
(6,10,0)
(12,8,0)
(1,16,0)
(4,9,0)
(9,11,0)
(7,1,0)
(12,16,0)
(1,3,1)
(9,5,1)
(14,13,1)
(1,9,1)
(3,7,1)
(12,16,1)
(7,9,1)
(12,17,1)
(4,13,1)
(1,16,1)
(14,1,1)
(2,0,1)
(12,9,1)
(5,2,1)
(14,12,1)
(0,4,1)
(9,16,1)
(17,1,1)
(12,9,2)
(1,16,2)
(3,13,2)
(1,9,2)
(7,13,2)
(0,13,2)
(9,16,2)
(4,13,2)
(9,13,2)
(17,1,2)
(1,13,2)
(12,1,2)
(9,5,2)
(5,13,2)
(2,13,2)
(12,16,2)
-----------------------------------
(0,"BadSink_fopen.txt")
(1,data != NULL)
(2,"w+")
(3,NULL)
(4,data)
(5,fopen("BadSink_fopen.txt", "w+")
(6,if(badStatic)
(7,data)
(8,)
(9,data = fopen("BadSink_fopen.txt", "w+")
(10,)
(11,)
(12,fclose(data)
(13,badStatic)
(14,RET)
(15,if (data != NULL)
(16,FILE * data)
(17,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^