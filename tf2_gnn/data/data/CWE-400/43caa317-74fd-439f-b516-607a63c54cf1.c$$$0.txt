-----label-----
0
-----code-----
static void goodB2G1()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    if(STATIC_CONST_FALSE)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: If the file is still opened, close it */
        if (data != -1)
        {
            CLOSE(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
-----nextToken-----
2,4,8,10,14,16,20,23,24,27,29,32,34,37,42,43,48,50,55,57
-----computeFrom-----
12,13
12,14
18,19
18,20
25,26
25,27
30,31
30,32
46,47
46,48
-----guardedBy-----
48,57
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    if(STATIC_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }}
static void
goodB2G1()
goodB2G1
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    if(STATIC_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if(STATIC_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }
STATIC_CONST_FALSE
STATIC_CONST_FALSE
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(15,25,0)
(1,16,0)
(16,20,0)
(9,16,0)
(28,21,0)
(14,7,0)
(6,8,0)
(19,9,0)
(10,25,0)
(7,10,0)
(24,15,0)
(11,28,0)
(7,14,0)
(23,15,0)
(29,2,0)
(26,9,0)
(0,25,0)
(6,10,0)
(27,10,0)
(15,23,0)
(5,6,0)
(20,16,0)
(16,10,0)
(4,25,0)
(10,16,0)
(30,14,0)
(17,20,0)
(12,23,0)
(16,9,0)
(18,20,0)
(3,7,0)
(16,9,1)
(22,7,1)
(6,5,1)
(14,30,1)
(7,14,1)
(12,24,1)
(16,20,1)
(22,6,1)
(13,10,1)
(18,17,1)
(20,18,1)
(5,7,1)
(11,13,1)
(22,28,1)
(27,15,1)
(3,13,1)
(19,20,1)
(23,12,1)
(15,23,1)
(26,19,1)
(6,10,1)
(17,1,1)
(28,11,1)
(10,16,1)
(1,27,1)
(30,3,1)
(7,10,1)
(9,26,1)
(5,7,2)
(28,13,2)
(3,13,2)
(11,13,2)
(6,7,2)
(15,23,2)
(10,16,2)
(16,9,2)
(14,13,2)
(16,20,2)
(6,10,2)
(30,13,2)
(7,14,2)
(7,13,2)
(7,10,2)
-----------------------------------
(0,if(STATIC_CONST_FALSE)
(1,"BadSource_open.txt")
(2,)
(3,data)
(4,data)
(5,data)
(6,CLOSE(data)
(7,data != -1)
(8,)
(9,S_IREAD|S_IWRITE)
(10,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(11,"Benign, fixed string")
(12,1)
(13,STATIC_CONST_FALSE)
(14,-1)
(15,data = -1)
(16,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(17,O_RDWR)
(18,O_CREAT)
(19,S_IREAD)
(20,O_RDWR|O_CREAT)
(21,)
(22,RET)
(23,-1)
(24,data)
(25,)
(26,S_IWRITE)
(27,data)
(28,printLine("Benign, fixed string")
(29,if (data != -1)
(30,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^