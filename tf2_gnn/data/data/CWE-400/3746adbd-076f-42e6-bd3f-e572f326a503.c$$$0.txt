-----label-----
0
-----code-----
vaddr_t
sokvaalloc(vsize_t len, struct socket *so)
{
	vaddr_t lva;

	/*
	 * reserve kva.
	 */

	if (sokvareserve(so, len) == 0)
		return 0;

	/*
	 * allocate kva.
	 */

	lva = uvm_km_valloc_wait(kernel_map, len);
	if (lva == 0) {
		sokvaunreserve(len);
		return (0);
	}

	return lva;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
6,7
6,8
7,8
9,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
18,19
19,20
19,21
20,21
22,23
24,25
24,26
25,26
25,27
26,27
26,28
26,29
27,28
29,30
31,32
34,35
36,37
37,38
37,39
38,39
40,41
40,42
40,43
41,42
43,44
45,46
47,48
47,49
48,49
48,50
49,50
52,53
52,54
53,54
54,55
54,56
55,56
57,58
59,60
60,61
62,63
63,64
-----nextToken-----
3,5,8,10,13,15,16,21,23,28,30,32,33,35,39,42,44,46,50,51,56,58,61,64
-----computeFrom-----
25,26
25,27
37,38
37,39
48,49
48,50
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
vaddr_tsokvaalloc(vsize_t len, struct socket *so){	vaddr_t lva;	/*	 * reserve kva.	 */	if (sokvareserve(so, len) == 0)		return 0;	/*	 * allocate kva.	 */	lva = uvm_km_valloc_wait(kernel_map, len);	if (lva == 0) {		sokvaunreserve(len);		return (0);	}	return lva;}
vaddr_t
vaddr_t
sokvaalloc(vsize_t len, struct socket *so)
sokvaalloc
vsize_t len
vsize_t
vsize_t
len
len
struct socket *so
struct socket
socket
*so
*
so
{	vaddr_t lva;	/*	 * reserve kva.	 */	if (sokvareserve(so, len) == 0)		return 0;	/*	 * allocate kva.	 */	lva = uvm_km_valloc_wait(kernel_map, len);	if (lva == 0) {		sokvaunreserve(len);		return (0);	}	return lva;}
vaddr_t lva;
vaddr_t lva;
vaddr_t
vaddr_t
lva
lva
if (sokvareserve(so, len) == 0)		return 0;
sokvareserve(so, len) == 0
sokvareserve(so, len)
sokvareserve
sokvareserve
so
so
len
len
0
return 0;
0
lva = uvm_km_valloc_wait(kernel_map, len);
lva = uvm_km_valloc_wait(kernel_map, len)
lva
lva
uvm_km_valloc_wait(kernel_map, len)
uvm_km_valloc_wait
uvm_km_valloc_wait
kernel_map
kernel_map
len
len
if (lva == 0) {		sokvaunreserve(len);		return (0);	}
lva == 0
lva
lva
0
{		sokvaunreserve(len);		return (0);	}
sokvaunreserve(len);
sokvaunreserve(len)
sokvaunreserve
sokvaunreserve
len
len
return (0);
(0)
0
return lva;
lva
lva
-----joern-----
(17,16,0)
(4,5,0)
(14,27,0)
(27,26,0)
(19,10,0)
(15,26,0)
(16,8,0)
(25,27,0)
(13,26,0)
(2,24,0)
(21,20,0)
(12,24,0)
(0,16,0)
(5,6,0)
(19,6,0)
(25,22,0)
(8,16,0)
(16,7,0)
(23,12,0)
(11,12,0)
(24,5,0)
(3,5,0)
(9,8,0)
(24,26,0)
(22,10,0)
(1,26,0)
(27,24,0)
(5,24,0)
(18,19,0)
(25,20,0)
(16,6,0)
(28,22,0)
(21,8,1)
(11,24,1)
(5,4,1)
(24,5,1)
(27,14,1)
(18,12,1)
(28,19,1)
(23,11,1)
(17,0,1)
(16,17,1)
(20,21,1)
(22,28,1)
(2,8,1)
(14,12,1)
(19,18,1)
(16,7,1)
(8,9,1)
(9,16,1)
(12,24,1)
(12,23,1)
(27,24,1)
(25,27,1)
(4,3,1)
(16,6,1)
(3,2,1)
(8,16,1)
(19,6,1)
(25,20,1)
(25,22,1)
(5,6,1)
(19,12,2)
(2,8,2)
(28,12,2)
(5,6,2)
(11,8,2)
(16,6,2)
(18,12,2)
(5,8,2)
(25,20,2)
(27,12,2)
(24,8,2)
(4,8,2)
(12,24,2)
(8,16,2)
(23,8,2)
(16,7,2)
(14,12,2)
(12,8,2)
(19,6,2)
(21,8,2)
(20,8,2)
(22,12,2)
(24,5,2)
(25,22,2)
(3,8,2)
(25,27,2)
(27,24,2)
-----------------------------------
(0,so)
(1,lva)
(2,lva)
(3,kernel_map)
(4,len)
(5,uvm_km_valloc_wait(kernel_map, len)
(6,vsize_t len)
(7,struct socket *so)
(8,sokvareserve(so, len)
(9,0)
(10,)
(11,lva)
(12,lva == 0)
(13,if (sokvareserve(so, len)
(14,lva)
(15,if (lva == 0)
(16,sokvareserve(so, len)
(17,len)
(18,len)
(19,sokvaunreserve(len)
(20,return 0;)
(21,0)
(22,return (0)
(23,0)
(24,lva = uvm_km_valloc_wait(kernel_map, len)
(25,RET)
(26,)
(27,return lva;)
(28,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^