-----label-----
1
-----code-----
static void badSink()
{
    int count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
static void
badSink()
badSink
{    int count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;
int count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData;
int
count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData
count
= CWE400_Resource_Exhaustion__fgets_fwrite_45_badData
CWE400_Resource_Exhaustion__fgets_fwrite_45_badData
CWE400_Resource_Exhaustion__fgets_fwrite_45_badData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(2,34,0)
(0,18,0)
(30,38,0)
(8,11,0)
(14,19,0)
(52,9,0)
(45,48,0)
(18,0,0)
(7,51,0)
(20,11,0)
(46,38,0)
(60,51,0)
(35,50,0)
(17,10,0)
(37,46,0)
(42,49,0)
(39,50,0)
(49,34,0)
(24,6,0)
(23,18,0)
(18,51,0)
(59,21,0)
(58,34,0)
(34,47,0)
(44,34,0)
(19,14,0)
(54,11,0)
(11,12,0)
(29,5,0)
(56,57,0)
(48,49,0)
(49,48,0)
(22,8,0)
(51,47,0)
(36,49,0)
(13,34,0)
(5,34,0)
(40,17,0)
(25,36,0)
(26,38,0)
(12,11,0)
(14,11,0)
(11,8,0)
(43,12,0)
(16,48,0)
(48,5,0)
(0,38,0)
(33,9,0)
(59,49,0)
(3,24,0)
(1,19,0)
(61,5,0)
(9,34,0)
(32,0,0)
(41,36,0)
(11,14,0)
(27,18,0)
(4,34,0)
(18,27,0)
(15,59,0)
(50,34,0)
(11,49,0)
(31,47,0)
(28,34,0)
(16,45,1)
(1,0,1)
(11,8,1)
(42,5,1)
(24,3,1)
(14,11,1)
(22,12,1)
(11,49,1)
(38,26,1)
(23,32,1)
(50,39,1)
(43,20,1)
(29,61,1)
(9,33,1)
(53,0,1)
(3,36,1)
(20,19,1)
(5,29,1)
(49,48,1)
(15,53,1)
(55,59,1)
(25,41,1)
(11,12,1)
(32,46,1)
(18,27,1)
(32,38,1)
(36,25,1)
(14,19,1)
(41,49,1)
(18,51,1)
(18,23,1)
(39,35,1)
(48,5,1)
(26,30,1)
(17,40,1)
(11,54,1)
(46,37,1)
(0,38,1)
(37,14,1)
(61,50,1)
(55,53,1)
(52,51,1)
(0,18,1)
(40,14,1)
(30,24,1)
(59,49,1)
(30,36,1)
(33,52,1)
(54,8,1)
(48,16,1)
(36,49,1)
(51,7,1)
(7,60,1)
(19,1,1)
(46,38,1)
(12,43,1)
(59,15,1)
(8,22,1)
(37,17,1)
(45,42,1)
(35,9,1)
(32,0,2)
(15,53,2)
(59,49,2)
(59,53,2)
(19,0,2)
(0,0,2)
(8,0,2)
(48,5,2)
(23,0,2)
(14,0,2)
(43,0,2)
(18,51,2)
(1,0,2)
(11,12,2)
(3,36,2)
(14,11,2)
(49,48,2)
(24,36,2)
(54,0,2)
(37,0,2)
(17,14,2)
(18,27,2)
(46,38,2)
(40,14,2)
(46,0,2)
(11,8,2)
(22,0,2)
(36,49,2)
(11,0,2)
(11,49,2)
(0,38,2)
(12,0,2)
(20,0,2)
(0,18,2)
(14,19,2)
(18,0,2)
-----------------------------------
(0,i < (size_t)
(1,SENTENCE)
(2,if (pFile == NULL)
(3,1)
(4,for (i = 0; i < (size_t)
(5,*filename = "output_bad.txt")
(6,)
(7,CWE400_Resource_Exhaustion__fgets_fwrite_45_badData)
(8,strlen(SENTENCE)
(9,i = 0)
(10,)
(11,fwrite(SENTENCE, sizeof(char)
(12,sizeof(char)
(13,if (pFile)
(14,strlen(SENTENCE)
(15,pFile)
(16,"w+")
(17,exit(1)
(18,(size_t)
(19,strlen(SENTENCE)
(20,SENTENCE)
(21,)
(22,SENTENCE)
(23,count)
(24,exit(1)
(25,NULL)
(26,0)
(27,size_t)
(28,filename)
(29,"output_bad.txt")
(30,i)
(31,count)
(32,i)
(33,0)
(34,)
(35,pFile)
(36,pFile == NULL)
(37,i)
(38,i = 0)
(39,NULL)
(40,1)
(41,pFile)
(42,pFile)
(43,char)
(44,pFile)
(45,filename)
(46,i++)
(47,)
(48,fopen(filename, "w+")
(49,pFile = fopen(filename, "w+")
(50,*pFile = NULL)
(51,count = CWE400_Resource_Exhaustion__fgets_fwrite_45_badData)
(52,i)
(53,pFile)
(54,pFile)
(55,RET)
(56,if (strlen(SENTENCE)
(57,)
(58,i)
(59,fclose(pFile)
(60,count)
(61,filename)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^