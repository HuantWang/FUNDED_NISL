-----label-----
1
-----code-----
static void badSink(HANDLE data)
{
    /* FLAW: Point data to another file handle without closing the handle from the source */
    data = CreateFile("BadSink_w32CreateFile.txt",
                      (GENERIC_WRITE|GENERIC_READ),
                      0,
                      NULL,
                      OPEN_ALWAYS,
                      FILE_ATTRIBUTE_NORMAL,
                      NULL);
    /* avoid incidental for not closing the file handle */
    if (data != INVALID_HANDLE_VALUE)
    {
        CloseHandle(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
15,23
16,17
19,20
20,21
20,22
21,22
23,24
26,27
28,29
30,31
32,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,7,9,14,17,18,22,24,25,27,29,31,33,37,39,44,46
-----computeFrom-----
12,13
12,14
20,21
20,22
35,36
35,37
-----guardedBy-----
37,46
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(HANDLE data){    /* FLAW: Point data to another file handle without closing the handle from the source */    data = CreateFile("BadSink_w32CreateFile.txt",                      (GENERIC_WRITE|GENERIC_READ),                      0,                      NULL,                      OPEN_ALWAYS,                      FILE_ATTRIBUTE_NORMAL,                      NULL);    /* avoid incidental for not closing the file handle */    if (data != INVALID_HANDLE_VALUE)    {        CloseHandle(data);    }}
static void
badSink(HANDLE data)
badSink
HANDLE data
HANDLE
HANDLE
data
data
{    /* FLAW: Point data to another file handle without closing the handle from the source */    data = CreateFile("BadSink_w32CreateFile.txt",                      (GENERIC_WRITE|GENERIC_READ),                      0,                      NULL,                      OPEN_ALWAYS,                      FILE_ATTRIBUTE_NORMAL,                      NULL);    /* avoid incidental for not closing the file handle */    if (data != INVALID_HANDLE_VALUE)    {        CloseHandle(data);    }}
data = CreateFile("BadSink_w32CreateFile.txt",                      (GENERIC_WRITE|GENERIC_READ),                      0,                      NULL,                      OPEN_ALWAYS,                      FILE_ATTRIBUTE_NORMAL,                      NULL);
data = CreateFile("BadSink_w32CreateFile.txt",                      (GENERIC_WRITE|GENERIC_READ),                      0,                      NULL,                      OPEN_ALWAYS,                      FILE_ATTRIBUTE_NORMAL,                      NULL)
data
data
CreateFile("BadSink_w32CreateFile.txt",                      (GENERIC_WRITE|GENERIC_READ),                      0,                      NULL,                      OPEN_ALWAYS,                      FILE_ATTRIBUTE_NORMAL,                      NULL)
CreateFile
CreateFile
"BadSink_w32CreateFile.txt"
(GENERIC_WRITE|GENERIC_READ)
GENERIC_WRITE|GENERIC_READ
GENERIC_WRITE
GENERIC_WRITE
GENERIC_READ
GENERIC_READ
0
NULL
NULL
OPEN_ALWAYS
OPEN_ALWAYS
FILE_ATTRIBUTE_NORMAL
FILE_ATTRIBUTE_NORMAL
NULL
NULL
if (data != INVALID_HANDLE_VALUE)    {        CloseHandle(data);    }
data != INVALID_HANDLE_VALUE
data
data
INVALID_HANDLE_VALUE
INVALID_HANDLE_VALUE
{        CloseHandle(data);    }
CloseHandle(data);
CloseHandle(data)
CloseHandle
CloseHandle
data
data
-----joern-----
(20,4,0)
(8,15,0)
(4,16,0)
(15,14,0)
(15,16,0)
(0,14,0)
(18,15,0)
(4,3,0)
(14,15,0)
(16,12,0)
(13,15,0)
(7,15,0)
(19,2,0)
(2,1,0)
(16,15,0)
(10,15,0)
(21,2,0)
(5,16,0)
(17,15,0)
(4,1,0)
(2,16,0)
(6,14,0)
(16,1,0)
(9,12,0)
(20,2,1)
(6,0,1)
(2,16,1)
(11,2,1)
(4,1,1)
(13,5,1)
(10,7,1)
(14,6,1)
(7,18,1)
(18,17,1)
(16,15,1)
(2,21,1)
(2,1,1)
(4,16,1)
(8,10,1)
(11,4,1)
(15,8,1)
(21,19,1)
(19,16,1)
(4,20,1)
(16,1,1)
(15,14,1)
(0,13,1)
(17,14,1)
(4,16,2)
(15,14,2)
(20,2,2)
(4,1,2)
(4,2,2)
(16,15,2)
(2,16,2)
(2,1,2)
(16,1,2)
-----------------------------------
(0,GENERIC_WRITE)
(1,HANDLE data)
(2,data != INVALID_HANDLE_VALUE)
(3,)
(4,CloseHandle(data)
(5,data)
(6,GENERIC_READ)
(7,OPEN_ALWAYS)
(8,NULL)
(9,if (data != INVALID_HANDLE_VALUE)
(10,FILE_ATTRIBUTE_NORMAL)
(11,RET)
(12,)
(13,"BadSink_w32CreateFile.txt")
(14,GENERIC_WRITE|GENERIC_READ)
(15,CreateFile("BadSink_w32CreateFile.txt",\\n                      (GENERIC_WRITE|GENERIC_READ)
(16,data = CreateFile("BadSink_w32CreateFile.txt",\\n                      (GENERIC_WRITE|GENERIC_READ)
(17,0)
(18,NULL)
(19,data)
(20,data)
(21,INVALID_HANDLE_VALUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^