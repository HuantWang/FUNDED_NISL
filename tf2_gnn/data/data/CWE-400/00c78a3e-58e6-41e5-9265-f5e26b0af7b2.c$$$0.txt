-----label-----
1
-----code-----
char *strspl(register char *cp, register char *dp)
{
    int bufsize = strlen(cp) + strlen(dp) + 1;
    char *ep = malloc(bufsize);

    if (ep == NULL)
	fatal("Out of memory");
    (void) strlcpy(ep, cp, bufsize);
    (void) strlcat(ep, dp, bufsize);
    return (ep);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
6,7
6,8
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
16,19
16,20
16,21
16,22
17,18
18,19
18,20
20,21
20,22
22,23
23,24
23,25
24,25
24,26
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
36,37
37,38
37,39
39,40
39,41
39,42
42,43
43,44
43,45
44,45
46,47
48,49
48,50
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
59,60
60,61
60,62
61,62
61,63
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
73,74
74,75
74,76
75,76
75,77
78,79
78,80
78,81
78,82
79,80
81,82
83,84
85,86
87,88
88,89
89,90
-----nextToken-----
2,4,5,7,9,10,12,14,15,19,21,27,29,32,34,35,38,40,41,45,47,51,53,57,58,62,63,66,68,70,72,76,77,80,82,84,86,90
-----computeFrom-----
23,24
23,25
24,25
24,26
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
char *strspl(register char *cp, register char *dp){    int bufsize = strlen(cp) + strlen(dp) + 1;    char *ep = malloc(bufsize);    if (ep == NULL)	fatal("Out of memory");    (void) strlcpy(ep, cp, bufsize);    (void) strlcat(ep, dp, bufsize);    return (ep);}
char
*strspl(register char *cp, register char *dp)
*
strspl
register char *cp
register char
*cp
*
cp
register char *dp
register char
*dp
*
dp
{    int bufsize = strlen(cp) + strlen(dp) + 1;    char *ep = malloc(bufsize);    if (ep == NULL)	fatal("Out of memory");    (void) strlcpy(ep, cp, bufsize);    (void) strlcat(ep, dp, bufsize);    return (ep);}
int bufsize = strlen(cp) + strlen(dp) + 1;
int bufsize = strlen(cp) + strlen(dp) + 1;
int
bufsize = strlen(cp) + strlen(dp) + 1
bufsize
= strlen(cp) + strlen(dp) + 1
strlen(cp) + strlen(dp) + 1
strlen(cp) + strlen(dp)
strlen(cp)
strlen
strlen
cp
cp
strlen(dp)
strlen
strlen
dp
dp
1
char *ep = malloc(bufsize);
char *ep = malloc(bufsize);
char
*ep = malloc(bufsize)
*
ep
= malloc(bufsize)
malloc(bufsize)
malloc
malloc
bufsize
bufsize
if (ep == NULL)	fatal("Out of memory");
ep == NULL
ep
ep
NULL
NULL
fatal("Out of memory");
fatal("Out of memory")
fatal
fatal
"Out of memory"
(void) strlcpy(ep, cp, bufsize);
(void) strlcpy(ep, cp, bufsize)
void
void

strlcpy(ep, cp, bufsize)
strlcpy
strlcpy
ep
ep
cp
cp
bufsize
bufsize
(void) strlcat(ep, dp, bufsize);
(void) strlcat(ep, dp, bufsize)
void
void

strlcat(ep, dp, bufsize)
strlcat
strlcat
ep
ep
dp
dp
bufsize
bufsize
return (ep);
(ep)
ep
ep
-----joern-----
(11,0,0)
(8,32,0)
(31,14,0)
(33,11,0)
(4,21,0)
(2,29,0)
(10,12,0)
(27,12,0)
(9,20,0)
(3,32,0)
(5,32,0)
(17,15,0)
(4,38,0)
(38,4,0)
(12,3,0)
(7,5,0)
(22,27,0)
(14,0,0)
(8,19,0)
(32,8,0)
(1,11,0)
(6,33,0)
(26,21,0)
(18,34,0)
(21,4,0)
(12,27,0)
(34,27,0)
(37,15,0)
(21,3,0)
(33,6,0)
(16,21,0)
(3,15,0)
(29,27,0)
(14,5,0)
(30,11,0)
(27,15,0)
(32,5,0)
(23,8,0)
(4,15,0)
(11,3,0)
(21,19,0)
(24,15,0)
(21,27,0)
(36,21,0)
(34,15,0)
(33,15,0)
(35,11,0)
(32,3,0)
(11,33,0)
(11,27,0)
(13,29,0)
(5,14,0)
(25,3,0)
(28,34,0)
(2,13,1)
(11,3,1)
(10,22,1)
(16,36,1)
(34,27,1)
(27,12,1)
(29,27,1)
(32,5,1)
(34,28,1)
(36,29,1)
(5,14,1)
(12,3,1)
(9,29,1)
(12,10,1)
(4,38,1)
(22,3,1)
(7,14,1)
(35,30,1)
(36,20,1)
(20,9,1)
(21,3,1)
(8,19,1)
(14,0,1)
(11,0,1)
(29,2,1)
(18,34,1)
(1,4,1)
(11,27,1)
(21,26,1)
(33,11,1)
(8,23,1)
(14,31,1)
(21,19,1)
(26,16,1)
(3,32,1)
(32,8,1)
(23,25,1)
(5,7,1)
(28,33,1)
(33,6,1)
(11,35,1)
(4,21,1)
(31,8,1)
(30,1,1)
(21,27,1)
(13,27,1)
(20,29,2)
(12,3,2)
(32,5,2)
(29,27,2)
(11,0,2)
(3,32,2)
(32,8,2)
(4,38,2)
(9,29,2)
(21,3,2)
(14,0,2)
(27,12,2)
(4,21,2)
(11,3,2)
(11,27,2)
(33,6,2)
(8,19,2)
(18,34,2)
(21,27,2)
(21,19,2)
(5,14,2)
(34,27,2)
(33,11,2)
-----------------------------------
(0,register char *dp)
(1,ep)
(2,NULL)
(3,bufsize = strlen(cp)
(4,(void)
(5,strlen(dp)
(6,void)
(7,1)
(8,strlen(cp)
(9,"Out of memory")
(10,bufsize)
(11,strlcat(ep, dp, bufsize)
(12,malloc(bufsize)
(13,ep)
(14,strlen(dp)
(15,)
(16,cp)
(17,ep)
(18,RET)
(19,register char *cp)
(20,fatal("Out of memory")
(21,strlcpy(ep, cp, bufsize)
(22,ep)
(23,cp)
(24,if (ep == NULL)
(25,bufsize)
(26,bufsize)
(27,*ep = malloc(bufsize)
(28,ep)
(29,ep == NULL)
(30,dp)
(31,dp)
(32,strlen(cp)
(33,(void)
(34,return (ep)
(35,bufsize)
(36,ep)
(37,bufsize)
(38,void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^