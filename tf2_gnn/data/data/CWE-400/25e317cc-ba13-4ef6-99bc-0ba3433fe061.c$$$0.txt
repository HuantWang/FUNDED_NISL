-----label-----
0
-----code-----
static void goodB2G()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
77,78
77,79
78,79
81,82
82,83
82,84
83,84
85,86
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,80,84,86
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    /* FIX: Deallocate memory */    free(data);}
static void
goodB2G()
goodB2G
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    /* FIX: Deallocate memory */    free(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(29,10,0)
(29,22,0)
(15,29,0)
(32,8,0)
(43,22,0)
(12,4,0)
(2,14,0)
(32,4,0)
(23,43,0)
(10,28,0)
(40,26,0)
(37,22,0)
(43,7,0)
(28,25,0)
(25,28,0)
(31,43,0)
(36,14,0)
(42,25,0)
(44,24,0)
(0,10,0)
(18,22,0)
(7,2,0)
(19,8,0)
(29,15,0)
(1,18,0)
(41,28,0)
(21,13,0)
(17,44,0)
(26,40,0)
(28,10,0)
(24,44,0)
(24,13,0)
(39,9,0)
(8,22,0)
(7,43,0)
(33,40,0)
(18,14,0)
(27,22,0)
(4,14,0)
(8,32,0)
(22,14,0)
(3,9,0)
(5,24,0)
(30,44,0)
(2,7,0)
(44,22,0)
(13,14,0)
(10,9,0)
(10,29,0)
(16,14,0)
(38,37,0)
(11,32,0)
(6,37,0)
(22,29,0)
(9,14,0)
(34,8,0)
(26,20,0)
(38,22,1)
(22,29,1)
(4,12,1)
(26,40,1)
(7,43,1)
(27,9,1)
(37,22,1)
(29,15,1)
(37,6,1)
(2,7,1)
(42,41,1)
(24,44,1)
(28,25,1)
(40,33,1)
(32,11,1)
(35,18,1)
(21,24,1)
(43,23,1)
(5,44,1)
(19,26,1)
(0,27,1)
(18,22,1)
(1,2,1)
(39,3,1)
(30,17,1)
(13,21,1)
(32,8,1)
(8,34,1)
(8,22,1)
(25,42,1)
(6,38,1)
(31,13,1)
(44,30,1)
(29,10,1)
(10,9,1)
(17,4,1)
(43,22,1)
(24,5,1)
(44,22,1)
(34,19,1)
(19,37,1)
(9,39,1)
(33,37,1)
(12,32,1)
(23,31,1)
(10,28,1)
(11,8,1)
(18,1,1)
(41,0,1)
(2,7,2)
(10,28,2)
(40,37,2)
(7,43,2)
(44,22,2)
(43,22,2)
(26,37,2)
(10,9,2)
(37,22,2)
(18,22,2)
(29,10,2)
(32,8,2)
(22,29,2)
(24,44,2)
(8,22,2)
(26,40,2)
(29,15,2)
(33,37,2)
(28,25,2)
-----------------------------------
(0,data)
(1,data)
(2,printStructLine(&data[0])
(3,data)
(4,data[0].intOne = 0)
(5,intTwo)
(6,NULL)
(7,&data[0])
(8,data[0])
(9,data = NULL)
(10,realloc(data, 100*sizeof(twoIntsStruct)
(11,intOne)
(12,0)
(13,data[0].intTwo = 0)
(14,)
(15,twoIntsStruct *)
(16,if (data == NULL)
(17,data)
(18,free(data)
(19,data)
(20,)
(21,0)
(22,data = (twoIntsStruct *)
(23,0)
(24,data[0].intTwo)
(25,sizeof(twoIntsStruct)
(26,exit(-1)
(27,data)
(28,100*sizeof(twoIntsStruct)
(29,(twoIntsStruct *)
(30,0)
(31,data)
(32,data[0].intOne)
(33,1)
(34,0)
(35,RET)
(36,data)
(37,data == NULL)
(38,data)
(39,NULL)
(40,-1)
(41,100)
(42,twoIntsStruct)
(43,data[0])
(44,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^