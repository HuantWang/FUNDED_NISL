-----label-----
0
-----code-----
static void goodG2B2()
{
    int * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        /* FIX: Use memory allocated on the stack with ALLOCA */
        data = (int *)ALLOCA(100*sizeof(int));
        /* Initialize and make use of data */
        data[0] = 5;
        printIntLine(data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
43,44
43,45
44,45
44,46
45,46
49,50
50,51
50,52
51,52
53,54
53,55
54,55
57,58
57,59
58,59
58,60
59,60
62,63
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,37,40,41,46,47,48,52,55,56,60,61,63
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
static void goodG2B2(){    int * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int *)ALLOCA(100*sizeof(int));        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
static void
goodG2B2()
goodG2B2
{    int * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int *)ALLOCA(100*sizeof(int));        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int *)ALLOCA(100*sizeof(int));        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int *)ALLOCA(100*sizeof(int));        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
data = (int *)ALLOCA(100*sizeof(int));
data = (int *)ALLOCA(100*sizeof(int))
data
data
(int *)ALLOCA(100*sizeof(int))
int *
int
*
*
ALLOCA(100*sizeof(int))
ALLOCA
ALLOCA
100*sizeof(int)
100
sizeof(int)
int
int

data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(13,18,0)
(13,26,0)
(28,31,0)
(9,32,0)
(15,25,0)
(4,17,0)
(13,25,0)
(22,31,0)
(25,10,0)
(15,18,0)
(11,9,0)
(19,31,0)
(26,10,0)
(29,3,0)
(12,19,0)
(32,9,0)
(8,11,0)
(30,31,0)
(9,11,0)
(20,15,0)
(5,18,0)
(23,32,0)
(18,10,0)
(0,3,0)
(6,15,0)
(16,17,0)
(21,13,0)
(24,11,0)
(7,25,0)
(25,32,0)
(32,23,0)
(14,8,0)
(26,13,0)
(32,25,0)
(11,8,0)
(27,13,0)
(2,19,0)
(26,13,1)
(5,15,1)
(15,25,1)
(7,17,1)
(16,4,1)
(1,3,1)
(14,24,1)
(25,32,1)
(15,6,1)
(13,21,1)
(32,23,1)
(18,5,1)
(13,25,1)
(9,11,1)
(8,14,1)
(24,7,1)
(11,8,1)
(21,27,1)
(6,20,1)
(17,16,1)
(29,0,1)
(13,18,1)
(12,2,1)
(20,25,1)
(0,26,1)
(4,19,1)
(3,29,1)
(27,18,1)
(0,17,1)
(32,9,1)
(19,12,1)
(32,9,2)
(13,17,2)
(13,18,2)
(26,13,2)
(32,23,2)
(15,17,2)
(8,17,2)
(14,17,2)
(5,17,2)
(20,17,2)
(7,17,2)
(11,17,2)
(13,25,2)
(26,17,2)
(9,17,2)
(32,17,2)
(27,17,2)
(24,17,2)
(6,17,2)
(15,25,2)
(18,17,2)
(21,17,2)
(25,17,2)
(25,32,2)
(9,11,2)
(11,8,2)
-----------------------------------
(0,STATIC_CONST_FIVE)
(1,RET)
(2,data)
(3,STATIC_CONST_FIVE==5)
(4,STATIC_CONST_FIVE)
(5,5)
(6,0)
(7,data)
(8,sizeof(int)
(9,ALLOCA(100*sizeof(int)
(10,)
(11,100*sizeof(int)
(12,NULL)
(13,data[0])
(14,int)
(15,data[0])
(16,5)
(17,STATIC_CONST_FIVE==5)
(18,data[0] = 5)
(19,data = NULL)
(20,data)
(21,0)
(22,data)
(23,int *)
(24,100)
(25,data = (int *)
(26,printIntLine(data[0])
(27,data)
(28,if(STATIC_CONST_FIVE==5)
(29,5)
(30,if(STATIC_CONST_FIVE==5)
(31,)
(32,(int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^