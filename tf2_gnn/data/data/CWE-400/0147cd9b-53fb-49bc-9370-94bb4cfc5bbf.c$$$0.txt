-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink()
{
    int count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_good.txt";
        /* FIX: Validate count before using it as the for loop variant to write to a file */
        if (count > 0 && count <= 20)
        {
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
41,43
42,43
42,44
43,44
43,45
44,45
47,48
47,49
48,49
51,52
51,53
51,54
51,55
52,53
53,54
53,55
54,55
56,57
56,58
56,59
57,58
59,60
62,63
62,64
63,64
63,65
64,65
66,67
68,69
69,70
70,71
70,72
71,72
74,75
74,76
74,77
74,78
75,76
76,77
76,78
77,78
80,81
80,82
81,82
83,84
83,85
84,85
84,86
85,86
88,89
90,91
91,92
93,94
94,95
94,96
95,96
95,97
96,97
96,98
97,98
99,100
101,102
101,103
101,104
101,105
101,106
102,103
104,105
106,107
107,108
107,109
110,111
110,112
111,112
113,114
115,116
117,118
118,119
118,120
119,120
122,123
122,124
123,124
125,126
126,127
127,128
127,129
128,129
130,131
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,45,46,49,50,55,58,60,61,65,67,72,73,78,79,82,86,87,89,92,98,100,103,105,108,109,112,114,116,120,121,124,129,131
-----computeFrom-----
42,43
42,44
43,44
43,45
47,48
47,49
53,54
53,55
63,64
63,65
76,77
76,78
80,81
80,82
95,96
95,97
-----guardedBy-----
49,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink(){    int count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink()
CWE400_Resource_Exhaustion__listen_socket_fwrite_68b_goodB2GSink
{    int count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
int count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
int count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData;
int
count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData
count
= CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData
CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData
CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(12,33,0)
(69,37,0)
(67,40,0)
(42,37,0)
(1,62,0)
(21,40,0)
(16,24,0)
(23,24,0)
(54,40,0)
(22,57,0)
(25,55,0)
(33,58,0)
(63,69,0)
(66,21,0)
(7,62,0)
(57,21,0)
(31,37,0)
(52,48,0)
(2,12,0)
(57,55,0)
(26,32,0)
(57,41,0)
(13,45,0)
(49,60,0)
(20,24,0)
(46,58,0)
(30,55,0)
(15,33,0)
(60,37,0)
(21,57,0)
(58,46,0)
(11,48,0)
(51,14,0)
(48,23,0)
(17,37,0)
(32,33,0)
(18,27,0)
(55,68,0)
(58,33,0)
(39,25,0)
(0,46,0)
(9,69,0)
(35,10,0)
(62,34,0)
(10,44,0)
(23,61,0)
(24,60,0)
(36,64,0)
(24,23,0)
(65,27,0)
(37,68,0)
(59,55,0)
(27,37,0)
(43,13,0)
(62,55,0)
(33,32,0)
(33,12,0)
(6,61,0)
(19,33,0)
(34,62,0)
(5,61,0)
(4,68,0)
(41,57,0)
(53,67,0)
(25,34,0)
(34,25,0)
(50,61,0)
(38,40,0)
(56,23,0)
(3,60,0)
(33,23,0)
(13,23,0)
(29,37,0)
(28,25,0)
(26,12,1)
(3,49,1)
(9,63,1)
(58,33,1)
(2,19,1)
(66,40,1)
(62,1,1)
(53,58,1)
(35,48,1)
(13,43,1)
(14,51,1)
(33,32,1)
(60,3,1)
(16,56,1)
(0,21,1)
(54,38,1)
(1,7,1)
(46,0,1)
(52,23,1)
(53,14,1)
(27,18,1)
(55,59,1)
(21,57,1)
(23,24,1)
(8,34,1)
(11,52,1)
(8,13,1)
(67,53,1)
(10,35,1)
(21,40,1)
(28,39,1)
(38,48,1)
(22,66,1)
(39,62,1)
(57,22,1)
(66,67,1)
(48,11,1)
(8,47,1)
(49,69,1)
(67,40,1)
(40,54,1)
(33,15,1)
(25,55,1)
(57,41,1)
(33,23,1)
(69,9,1)
(51,58,1)
(59,30,1)
(38,10,1)
(47,21,1)
(56,34,1)
(19,46,1)
(58,46,1)
(43,47,1)
(18,65,1)
(25,28,1)
(15,32,1)
(20,16,1)
(24,60,1)
(24,20,1)
(13,23,1)
(33,12,1)
(48,23,1)
(12,2,1)
(62,55,1)
(34,62,1)
(65,55,1)
(57,55,1)
(7,60,1)
(32,26,1)
(34,25,1)
(63,27,1)
(57,34,2)
(16,34,2)
(22,34,2)
(66,34,2)
(24,60,2)
(23,24,2)
(58,46,2)
(15,21,2)
(38,34,2)
(25,55,2)
(13,47,2)
(28,62,2)
(21,57,2)
(12,21,2)
(21,40,2)
(39,62,2)
(46,21,2)
(62,55,2)
(56,34,2)
(67,21,2)
(13,23,2)
(32,21,2)
(20,34,2)
(26,21,2)
(34,62,2)
(48,34,2)
(35,48,2)
(33,32,2)
(52,34,2)
(33,21,2)
(11,34,2)
(33,12,2)
(67,40,2)
(57,55,2)
(66,21,2)
(40,34,2)
(22,21,2)
(24,34,2)
(10,48,2)
(23,34,2)
(2,21,2)
(57,21,2)
(43,47,2)
(21,34,2)
(14,58,2)
(21,21,2)
(58,33,2)
(34,25,2)
(57,41,2)
(51,58,2)
(0,21,2)
(58,21,2)
(48,23,2)
(25,62,2)
(47,34,2)
(33,23,2)
(53,21,2)
(54,34,2)
(19,21,2)
-----------------------------------
(0,SENTENCE)
(1,0)
(2,char)
(3,"output_good.txt")
(4,count)
(5,if (pFile == NULL)
(6,for (i = 0; i < (size_t)
(7,count)
(8,RET)
(9,NULL)
(10,exit(1)
(11,NULL)
(12,sizeof(char)
(13,fclose(pFile)
(14,exit(1)
(15,pFile)
(16,filename)
(17,if (count > 0 && count <= 20)
(18,0)
(19,SENTENCE)
(20,"w+")
(21,i < (size_t)
(22,count)
(23,pFile = fopen(filename, "w+")
(24,fopen(filename, "w+")
(25,count <= 20)
(26,SENTENCE)
(27,i = 0)
(28,20)
(29,i)
(30,count)
(31,pFile)
(32,strlen(SENTENCE)
(33,fwrite(SENTENCE, sizeof(char)
(34,count > 0 && count <= 20)
(35,1)
(36,if (strlen(SENTENCE)
(37,)
(38,i)
(39,count)
(40,i = 0)
(41,size_t)
(42,filename)
(43,pFile)
(44,)
(45,)
(46,strlen(SENTENCE)
(47,pFile)
(48,pFile == NULL)
(49,filename)
(50,if (pFile)
(51,1)
(52,pFile)
(53,i)
(54,0)
(55,count = CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData)
(56,pFile)
(57,(size_t)
(58,strlen(SENTENCE)
(59,CWE400_Resource_Exhaustion__listen_socket_fwrite_68_goodB2GData)
(60,*filename = "output_good.txt")
(61,)
(62,count > 0)
(63,pFile)
(64,)
(65,i)
(66,i)
(67,i++)
(68,)
(69,*pFile = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^