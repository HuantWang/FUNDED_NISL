-----label-----
1
-----code-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_18_bad()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */
    data = fopen("BadSource_fopen.txt", "w+");
    goto sink;
sink:
    /* FLAW: Point data to another file handle without closing the handle from the source */
    data = fopen("BadSink_fopen.txt", "w+");
    /* avoid incidental for not closing the file handle */
    if (data != NULL)
    {
        fclose(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
30,31
30,32
32,33
33,34
33,35
34,35
36,37
36,38
36,39
37,38
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,29,31,35,38,39,40,44,46,51,53
-----computeFrom-----
14,15
14,16
20,21
20,22
33,34
33,35
42,43
42,44
-----guardedBy-----
44,53
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_18_bad(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    goto sink;sink:    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
void
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_18_bad()
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_18_bad
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    goto sink;sink:    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
goto sink;
sink
sink:    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");
sink
data = fopen("BadSink_fopen.txt", "w+");
data = fopen("BadSink_fopen.txt", "w+")
data
data
fopen("BadSink_fopen.txt", "w+")
fopen
fopen
"BadSink_fopen.txt"
"w+"
if (data != NULL)    {        fclose(data);    }
data != NULL
data
data
NULL
NULL
{        fclose(data);    }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(19,0,0)
(10,0,0)
(21,13,0)
(0,20,0)
(18,7,0)
(7,18,0)
(22,20,0)
(18,13,0)
(5,13,0)
(1,3,0)
(2,7,0)
(15,7,0)
(14,9,0)
(17,3,0)
(4,18,0)
(8,9,0)
(20,0,0)
(23,10,0)
(10,11,0)
(3,13,0)
(24,20,0)
(6,13,0)
(16,13,0)
(9,0,0)
(0,13,0)
(5,18,1)
(12,9,1)
(2,15,1)
(19,5,1)
(14,8,1)
(22,24,1)
(17,1,1)
(9,0,1)
(8,0,1)
(7,2,1)
(10,0,1)
(24,19,1)
(4,3,1)
(23,9,1)
(3,17,1)
(18,7,1)
(10,23,1)
(0,20,1)
(15,4,1)
(20,22,1)
(12,10,1)
(9,14,1)
(9,0,2)
(10,0,2)
(10,9,2)
(0,20,2)
(23,9,2)
(18,7,2)
-----------------------------------
(0,data = fopen("BadSink_fopen.txt", "w+")
(1,data)
(2,"w+")
(3,data = NULL)
(4,data)
(5,goto sink;)
(6,if (data != NULL)
(7,fopen("BadSource_fopen.txt", "w+")
(8,data)
(9,data != NULL)
(10,fclose(data)
(11,)
(12,RET)
(13,)
(14,NULL)
(15,"BadSource_fopen.txt")
(16,sink:)
(17,NULL)
(18,data = fopen("BadSource_fopen.txt", "w+")
(19,data)
(20,fopen("BadSink_fopen.txt", "w+")
(21,data)
(22,"w+")
(23,data)
(24,"BadSink_fopen.txt")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^