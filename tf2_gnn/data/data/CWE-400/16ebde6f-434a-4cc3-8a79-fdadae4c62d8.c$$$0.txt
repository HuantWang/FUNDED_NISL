-----label-----
0
-----code-----
static void goodB2G()
{
    int count;
    CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct;
    /* Initialize count */
    count = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read count from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            count = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    myStruct.structFirst = count;
    CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
23,25
24,25
25,26
25,27
27,28
27,29
27,30
29,30
30,31
32,33
34,35
34,36
34,37
35,36
35,37
36,37
36,38
36,39
36,40
37,38
39,40
41,42
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
65,67
66,67
69,70
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,14,16,20,22,26,28,31,33,38,40,42,44,46,51,54,56,61,62,67,68,70,74,76
-----computeFrom-----
18,19
18,20
35,36
35,37
49,50
49,51
64,65
64,66
-----guardedBy-----
40,56
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int count;    CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct;    /* Initialize count */    count = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myStruct.structFirst = count;    CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct);}
static void
goodB2G()
goodB2G
{    int count;    CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct;    /* Initialize count */    count = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    myStruct.structFirst = count;    CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct);}
int count;
int count;
int
count
count
CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct;
CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct;
CWE400_Resource_Exhaustion__fgets_sleep_67_structType
CWE400_Resource_Exhaustion__fgets_sleep_67_structType
myStruct
myStruct
count = -1;
count = -1
count
count
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            count = atoi(inputBuffer);        }
count = atoi(inputBuffer);
count = atoi(inputBuffer)
count
count
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
myStruct.structFirst = count;
myStruct.structFirst = count
myStruct.structFirst
myStruct
myStruct
structFirst
count
count
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct);
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct)
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink
myStruct
myStruct
-----joern-----
(30,33,0)
(27,14,0)
(7,6,0)
(24,33,0)
(2,26,0)
(19,16,0)
(4,2,0)
(6,26,0)
(2,6,0)
(2,28,0)
(15,26,0)
(12,14,0)
(23,3,0)
(28,17,0)
(31,13,0)
(11,0,0)
(14,26,0)
(1,28,0)
(8,22,0)
(0,20,0)
(22,6,0)
(33,14,0)
(17,28,0)
(17,33,0)
(5,17,0)
(16,21,0)
(32,26,0)
(29,20,0)
(34,3,0)
(6,22,0)
(3,2,0)
(13,26,0)
(9,0,0)
(18,0,0)
(20,0,0)
(28,25,0)
(0,33,0)
(34,23,1)
(33,24,1)
(1,20,1)
(16,19,1)
(18,33,1)
(0,33,1)
(10,13,1)
(31,2,1)
(6,22,1)
(2,6,1)
(17,5,1)
(9,11,1)
(20,29,1)
(19,20,1)
(13,31,1)
(3,34,1)
(23,28,1)
(29,0,1)
(30,6,1)
(28,17,1)
(23,16,1)
(24,30,1)
(0,9,1)
(11,18,1)
(20,0,1)
(5,1,1)
(17,33,1)
(8,7,1)
(2,4,1)
(4,3,1)
(2,28,1)
(22,8,1)
(0,33,2)
(1,20,2)
(17,33,2)
(16,20,2)
(2,28,2)
(28,20,2)
(5,20,2)
(28,17,2)
(17,20,2)
(20,0,2)
(2,6,2)
(6,22,2)
(19,20,2)
-----------------------------------
(0,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(1,count)
(2,myStruct.structFirst = count)
(3,myStruct.structFirst)
(4,count)
(5,inputBuffer)
(6,count = -1)
(7,count)
(8,1)
(9,stdin)
(10,RET)
(11,CHAR_ARRAY_SIZE)
(12,inputBuffer)
(13,CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(myStruct)
(14,)
(15,count)
(16,printLine("fgets()
(17,atoi(inputBuffer)
(18,inputBuffer)
(19,"fgets()
(20,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(21,)
(22,-1)
(23,myStruct)
(24,"")
(25,)
(26,)
(27,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(28,count = atoi(inputBuffer)
(29,NULL)
(30,inputBuffer)
(31,myStruct)
(32,myStruct)
(33,inputBuffer[CHAR_ARRAY_SIZE] = "")
(34,structFirst)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^