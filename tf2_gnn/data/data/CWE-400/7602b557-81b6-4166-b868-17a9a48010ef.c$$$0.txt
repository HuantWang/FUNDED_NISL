-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17_bad()
{
    int i,j;
    struct _twoIntsStruct * data;
    data = NULL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine((twoIntsStruct *)&data[0]);
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
15,16
17,18
17,19
20,21
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
27,28
28,29
28,30
29,30
32,33
32,34
33,34
36,37
37,38
39,40
39,41
39,42
39,43
39,44
40,41
41,42
41,43
42,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
50,52
50,53
51,52
53,54
55,56
55,57
57,58
58,59
58,60
59,60
62,63
62,64
63,64
63,65
64,65
66,67
68,69
69,70
70,71
70,72
71,72
73,74
75,76
76,77
76,78
77,78
77,79
78,79
78,80
79,80
84,85
85,86
85,87
86,87
86,88
87,88
87,89
88,89
93,94
94,95
94,96
95,96
97,98
97,99
98,99
98,100
99,100
101,102
103,104
104,105
104,106
105,106
108,109
108,110
108,111
108,112
109,110
110,111
110,112
111,112
114,115
114,116
115,116
118,119
119,120
121,122
-----nextToken-----
2,4,8,10,12,16,18,19,23,25,30,31,34,35,38,43,47,49,52,54,56,60,61,65,67,72,74,80,81,82,83,89,90,91,92,96,100,102,106,107,112,113,116,117,120,122
-----computeFrom-----
21,22
21,23
28,29
28,30
32,33
32,34
41,42
41,43
55,56
55,57
63,64
63,65
76,77
76,78
85,86
85,87
110,111
110,112
114,115
114,116
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17_bad(){    int i,j;    struct _twoIntsStruct * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17_bad
{    int i,j;    struct _twoIntsStruct * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int i,j;
int i,j;
int
i
i
j
j
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, 100*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(46,8,0)
(23,44,0)
(12,22,0)
(17,7,0)
(21,14,0)
(44,26,0)
(58,26,0)
(27,0,0)
(20,21,0)
(56,2,0)
(41,27,0)
(14,9,0)
(0,52,0)
(5,22,0)
(38,61,0)
(63,2,0)
(2,63,0)
(35,24,0)
(36,51,0)
(57,1,0)
(30,65,0)
(63,36,0)
(19,22,0)
(10,24,0)
(55,8,0)
(25,58,0)
(40,7,0)
(65,30,0)
(13,16,0)
(52,16,0)
(65,40,0)
(62,1,0)
(46,7,0)
(42,61,0)
(54,22,0)
(3,12,0)
(48,45,0)
(29,27,0)
(14,21,0)
(13,36,0)
(7,65,0)
(36,63,0)
(33,26,0)
(27,7,0)
(43,61,0)
(47,46,0)
(2,7,0)
(34,46,0)
(28,19,0)
(4,61,0)
(31,58,0)
(24,35,0)
(65,7,0)
(49,52,0)
(39,43,0)
(64,61,0)
(35,40,0)
(18,0,0)
(50,26,0)
(40,35,0)
(8,45,0)
(40,65,0)
(60,61,0)
(40,43,0)
(1,7,0)
(11,16,0)
(36,13,0)
(24,10,0)
(37,40,0)
(15,43,0)
(51,36,0)
(0,27,0)
(59,2,0)
(8,46,0)
(6,35,0)
(7,16,0)
(53,12,0)
(45,16,0)
(20,1,1)
(40,43,1)
(21,20,1)
(53,22,1)
(23,13,1)
(41,14,1)
(13,36,1)
(49,0,1)
(19,22,1)
(3,53,1)
(1,57,1)
(58,25,1)
(12,3,1)
(36,51,1)
(22,54,1)
(37,17,1)
(26,50,1)
(65,30,1)
(53,19,1)
(12,22,1)
(25,31,1)
(50,33,1)
(29,41,1)
(2,56,1)
(65,40,1)
(18,27,1)
(35,24,1)
(36,63,1)
(52,49,1)
(46,34,1)
(59,45,1)
(57,62,1)
(27,29,1)
(44,23,1)
(27,7,1)
(62,7,1)
(24,10,1)
(5,58,1)
(28,12,1)
(32,12,1)
(55,46,1)
(45,48,1)
(31,26,1)
(56,59,1)
(39,15,1)
(8,46,1)
(33,43,1)
(8,55,1)
(34,47,1)
(0,27,1)
(43,39,1)
(58,26,1)
(31,44,1)
(2,7,1)
(40,35,1)
(40,7,1)
(54,5,1)
(14,21,1)
(7,65,1)
(0,18,1)
(41,1,1)
(44,26,1)
(46,7,1)
(1,7,1)
(17,58,1)
(47,52,1)
(19,28,1)
(6,37,1)
(48,8,1)
(63,2,1)
(24,6,1)
(46,58,2)
(37,58,2)
(31,58,2)
(25,58,2)
(40,7,2)
(34,58,2)
(8,46,2)
(65,30,2)
(24,10,2)
(44,58,2)
(57,58,2)
(13,58,2)
(14,1,2)
(35,58,2)
(14,21,2)
(58,58,2)
(7,65,2)
(27,58,2)
(62,58,2)
(28,12,2)
(65,40,2)
(2,58,2)
(19,12,2)
(17,58,2)
(0,27,2)
(24,58,2)
(8,58,2)
(40,58,2)
(65,58,2)
(1,58,2)
(40,43,2)
(23,58,2)
(58,26,2)
(36,51,2)
(1,7,2)
(13,36,2)
(18,58,2)
(48,58,2)
(44,26,2)
(63,58,2)
(0,58,2)
(56,58,2)
(2,7,2)
(46,7,2)
(52,58,2)
(29,58,2)
(49,58,2)
(53,12,2)
(6,58,2)
(7,58,2)
(41,58,2)
(3,12,2)
(19,22,2)
(55,58,2)
(21,1,2)
(12,22,2)
(45,58,2)
(47,58,2)
(36,58,2)
(20,1,2)
(12,12,2)
(40,35,2)
(27,7,2)
(63,2,2)
(36,63,2)
(35,24,2)
(59,58,2)
-----------------------------------
(0,data[0].intOne)
(1,data == NULL)
(2,data[0])
(3,1)
(4,j)
(5,j)
(6,100)
(7,data = (struct _twoIntsStruct *)
(8,data[0].intTwo)
(9,)
(10,struct _twoIntsStruct)
(11,if (data == NULL)
(12,j < 1)
(13,printStructLine((twoIntsStruct *)
(14,exit(-1)
(15,data)
(16,)
(17,data)
(18,intOne)
(19,j++)
(20,1)
(21,-1)
(22,j = 0)
(23,i)
(24,sizeof(struct _twoIntsStruct)
(25,1)
(26,i = 0)
(27,data[0])
(28,j)
(29,0)
(30,struct _twoIntsStruct *)
(31,i)
(32,RET)
(33,i)
(34,0)
(35,100*sizeof(struct _twoIntsStruct)
(36,(twoIntsStruct *)
(37,data)
(38,for(i = 0; i < 1; i++)
(39,NULL)
(40,realloc(data, 100*sizeof(struct _twoIntsStruct)
(41,data)
(42,data)
(43,data = NULL)
(44,i++)
(45,data[0].intTwo = 0)
(46,data[0])
(47,data)
(48,0)
(49,0)
(50,0)
(51,twoIntsStruct *)
(52,data[0].intOne = 0)
(53,j)
(54,0)
(55,intTwo)
(56,0)
(57,NULL)
(58,i < 1)
(59,data)
(60,i)
(61,)
(62,data)
(63,&data[0])
(64,for(j = 0; j < 1; j++)
(65,(struct _twoIntsStruct *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^