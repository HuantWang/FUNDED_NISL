-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad()
{
    if(staticReturnsTrue())
    {
        {
            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5LL;
            printLongLongLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10LL;
                printLongLongLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
60,62
61,62
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
74,77
75,76
77,78
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
91,92
93,94
93,95
93,96
94,95
95,96
95,97
96,97
96,98
97,98
101,102
102,103
102,104
103,104
105,106
105,107
106,107
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,9,15,17,18,23,25,28,30,34,35,39,41,46,48,53,54,55,59,62,63,67,71,73,76,78,81,85,86,90,92,98,99,100,104,107,108,112,114
-----computeFrom-----
29,30
29,31
37,38
37,39
50,51
50,52
65,66
65,67
79,80
79,81
88,89
88,90
95,96
95,97
-----guardedBy-----
90,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad(){    if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad
{    if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
if(staticReturnsTrue())    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
{            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(2,4,0)
(8,18,0)
(50,0,0)
(39,1,0)
(33,21,0)
(1,24,0)
(38,0,0)
(20,42,0)
(45,12,0)
(42,20,0)
(43,44,0)
(11,20,0)
(24,50,0)
(13,1,0)
(46,42,0)
(46,50,0)
(4,2,0)
(50,46,0)
(33,28,0)
(5,49,0)
(5,25,0)
(20,19,0)
(1,13,0)
(36,21,0)
(24,36,0)
(14,49,0)
(22,46,0)
(27,36,0)
(21,36,0)
(46,22,0)
(16,12,0)
(37,0,0)
(44,34,0)
(48,6,0)
(2,50,0)
(4,0,0)
(23,13,0)
(28,34,0)
(36,24,0)
(0,40,0)
(35,6,0)
(47,33,0)
(44,21,0)
(28,33,0)
(36,27,0)
(29,24,0)
(49,5,0)
(6,21,0)
(21,0,0)
(30,2,0)
(19,20,0)
(7,21,0)
(10,0,0)
(12,50,0)
(3,34,0)
(42,46,0)
(17,0,0)
(32,50,0)
(26,33,0)
(41,19,0)
(24,1,0)
(9,2,0)
(31,6,1)
(49,14,1)
(42,20,1)
(3,6,1)
(38,5,1)
(7,4,1)
(31,15,1)
(44,21,1)
(13,23,1)
(6,35,1)
(6,21,1)
(28,33,1)
(36,24,1)
(2,9,1)
(16,50,1)
(41,11,1)
(39,29,1)
(12,50,1)
(24,50,1)
(36,27,1)
(29,7,1)
(14,12,1)
(4,2,1)
(19,41,1)
(33,26,1)
(46,22,1)
(5,49,1)
(31,44,1)
(20,19,1)
(30,38,1)
(24,1,1)
(26,47,1)
(1,13,1)
(21,36,1)
(44,43,1)
(32,15,1)
(50,46,1)
(9,30,1)
(23,39,1)
(43,28,1)
(38,12,1)
(47,3,1)
(12,45,1)
(35,48,1)
(45,16,1)
(33,21,1)
(46,42,1)
(2,50,1)
(11,32,1)
(48,21,1)
(29,15,2)
(24,15,2)
(13,15,2)
(6,21,2)
(42,20,2)
(1,13,2)
(50,46,2)
(21,36,2)
(2,50,2)
(30,15,2)
(36,24,2)
(28,6,2)
(6,15,2)
(28,33,2)
(32,15,2)
(35,15,2)
(24,1,2)
(44,21,2)
(12,15,2)
(5,12,2)
(50,15,2)
(20,19,2)
(38,15,2)
(46,15,2)
(36,15,2)
(43,6,2)
(42,15,2)
(46,42,2)
(4,15,2)
(20,15,2)
(21,15,2)
(33,21,2)
(11,15,2)
(45,15,2)
(7,15,2)
(44,6,2)
(12,50,2)
(1,15,2)
(36,27,2)
(16,15,2)
(24,50,2)
(2,15,2)
(14,12,2)
(5,49,2)
(39,15,2)
(46,22,2)
(4,2,2)
(47,6,2)
(19,15,2)
(49,12,2)
(48,15,2)
(23,15,2)
(3,6,2)
(41,15,2)
(33,6,2)
(9,15,2)
(26,6,2)
-----------------------------------
(0,)
(1,(130000)
(2,data[0])
(3,L)
(4,printLongLongLine(data[0])
(5,exit(-1)
(6,data != NULL)
(7,data)
(8,if(staticReturnsTrue()
(9,0)
(10,if (data == NULL)
(11,100)
(12,data == NULL)
(13,sizeof(int64_t)
(14,1)
(15,staticReturnsTrue()
(16,data)
(17,data)
(18,)
(19,sizeof(int64_t)
(20,100*sizeof(int64_t)
(21,data = (int64_t *)
(22,int64_t *)
(23,int64_t)
(24,realloc(data, (130000)
(25,)
(26,0)
(27,int64_t *)
(28,printLongLongLine(data[0])
(29,data)
(30,data)
(31,RET)
(32,data)
(33,data[0])
(34,)
(35,NULL)
(36,(int64_t *)
(37,if (data != NULL)
(38,L)
(39,130000)
(40,)
(41,int64_t)
(42,malloc(100*sizeof(int64_t)
(43,data)
(44,free(data)
(45,NULL)
(46,(int64_t *)
(47,data)
(48,data)
(49,-1)
(50,* data = (int64_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^