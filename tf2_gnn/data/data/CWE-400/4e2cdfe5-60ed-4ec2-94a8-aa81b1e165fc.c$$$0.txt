-----label-----
0
-----code-----
static void goodB2G1Sink(int64_t * data)
{
    if(goodB2G1Static)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
12,15
13,14
15,16
16,17
17,18
17,19
18,19
21,22
22,23
23,24
23,25
24,25
26,27
-----nextToken-----
2,4,7,9,10,14,19,20,25,27
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1Sink(int64_t * data){    if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G1Sink(int64_t * data)
goodB2G1Sink
int64_t * data
int64_t
int64_t
* data
*
data
{    if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }
goodB2G1Static
goodB2G1Static
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Deallocate memory */        free(data);    }
free(data);
free(data)
free
free
data
data
-----joern-----
(2,4,0)
(9,5,0)
(2,6,0)
(5,7,0)
(8,1,0)
(10,2,0)
(5,9,1)
(0,2,1)
(2,6,1)
(9,3,1)
(0,5,1)
(2,10,1)
(10,3,1)
(9,3,2)
(2,3,2)
(2,6,2)
(10,3,2)
(5,3,2)
-----------------------------------
(0,RET)
(1,)
(2,free(data)
(3,goodB2G1Static)
(4,)
(5,printLine("Benign, fixed string")
(6,int64_t * data)
(7,)
(8,if(goodB2G1Static)
(9,"Benign, fixed string")
(10,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^