-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17_bad()
{
    int j;
    for(j = 0; j < 1; j++)
    {
        {
            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0].intOne = 0;
            data[0].intTwo = 0;
            printStructLine((twoIntsStruct *)&data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0].intOne = 1;
                data[0].intTwo = 1;
                printStructLine((twoIntsStruct *)&data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
17,18
17,19
18,19
21,22
22,23
24,25
25,26
25,27
25,28
25,29
25,30
25,31
25,32
26,27
27,28
27,29
28,29
30,31
30,32
30,33
33,34
34,35
34,36
35,36
35,37
36,37
38,39
40,41
40,42
41,42
43,44
43,45
45,46
46,47
46,48
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
61,62
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
74,76
75,76
75,77
76,77
81,82
82,83
82,84
83,84
85,86
85,87
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
100,101
100,102
101,102
101,103
102,103
104,105
106,107
106,108
106,109
107,108
109,110
111,112
111,113
112,113
114,115
115,116
115,117
116,117
119,120
119,121
120,121
120,122
121,122
123,124
125,126
125,127
125,128
125,129
126,127
127,128
127,129
128,129
128,130
129,130
129,131
130,131
135,136
136,137
136,138
137,138
137,139
138,139
138,140
139,140
144,145
145,146
145,147
146,147
148,149
148,150
149,150
149,151
150,151
152,153
154,155
155,156
155,157
156,157
159,160
160,161
160,162
161,162
163,164
-----nextToken-----
2,4,8,10,15,16,19,20,23,29,31,32,37,39,42,44,48,49,53,55,60,62,68,69,70,71,77,78,79,80,84,88,90,94,95,99,103,105,108,110,113,117,118,122,124,131,132,133,134,140,141,142,143,147,151,153,157,158,162,164
-----computeFrom-----
13,14
13,15
17,18
17,19
43,44
43,45
51,52
51,53
64,65
64,66
73,74
73,75
97,98
97,99
111,112
111,113
120,121
120,122
127,128
127,129
136,137
136,138
-----guardedBy-----
122,164
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17_bad(){    int j;    for(j = 0; j < 1; j++)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17_bad()
CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17_bad
{    int j;    for(j = 0; j < 1; j++)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }}
int j;
int j;
int
j
j
for(j = 0; j < 1; j++)    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }    }
{            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }        }
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct
_twoIntsStruct
* data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
*
data
= (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, (130000)*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
(130000)*sizeof(struct _twoIntsStruct)
(130000)
130000
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);                free(data);            }
data[0].intOne = 1;
data[0].intOne = 1
data[0].intOne
data[0]
data
data
0
intOne
1
data[0].intTwo = 1;
data[0].intTwo = 1
data[0].intTwo
data[0]
data
data
0
intTwo
1
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(38,83,0)
(44,35,0)
(9,68,0)
(59,23,0)
(12,54,0)
(43,31,0)
(50,87,0)
(68,8,0)
(60,35,0)
(30,70,0)
(67,76,0)
(11,8,0)
(67,85,0)
(22,84,0)
(40,86,0)
(13,8,0)
(90,89,0)
(24,54,0)
(87,51,0)
(88,30,0)
(49,68,0)
(74,45,0)
(47,8,0)
(3,87,0)
(18,8,0)
(17,84,0)
(84,59,0)
(9,43,0)
(54,12,0)
(33,6,0)
(14,28,0)
(74,58,0)
(67,59,0)
(37,89,0)
(43,9,0)
(31,43,0)
(82,64,0)
(72,51,0)
(57,14,0)
(7,61,0)
(34,59,0)
(46,56,0)
(71,28,0)
(70,23,0)
(14,68,0)
(23,59,0)
(87,68,0)
(51,83,0)
(16,77,0)
(23,70,0)
(56,76,0)
(8,39,0)
(62,73,0)
(63,73,0)
(42,9,0)
(76,56,0)
(83,28,0)
(15,6,0)
(35,18,0)
(19,13,0)
(86,40,0)
(40,5,0)
(76,67,0)
(31,71,0)
(51,87,0)
(35,60,0)
(64,68,0)
(75,31,0)
(66,58,0)
(26,6,0)
(12,68,0)
(52,60,0)
(65,76,0)
(58,74,0)
(68,85,0)
(4,34,0)
(80,84,0)
(48,55,0)
(70,30,0)
(85,2,0)
(21,61,0)
(30,48,0)
(55,48,0)
(79,60,0)
(29,9,0)
(10,64,0)
(2,85,0)
(17,40,0)
(41,34,0)
(77,28,0)
(48,30,0)
(23,1,0)
(34,41,0)
(78,12,0)
(60,59,0)
(61,59,0)
(59,8,0)
(69,12,0)
(27,34,0)
(71,31,0)
(31,75,0)
(5,8,0)
(53,67,0)
(25,8,0)
(85,68,0)
(54,77,0)
(36,26,0)
(84,17,0)
(85,67,0)
(73,6,0)
(1,23,0)
(56,46,0)
(41,13,0)
(20,41,0)
(5,40,0)
(40,17,0)
(0,18,0)
(81,59,0)
(44,60,1)
(34,27,1)
(49,5,1)
(51,87,1)
(78,83,1)
(20,34,1)
(57,71,1)
(73,6,1)
(62,26,1)
(36,14,1)
(54,12,1)
(43,9,1)
(32,73,1)
(85,67,1)
(48,88,1)
(65,53,1)
(84,80,1)
(70,30,1)
(76,56,1)
(15,33,1)
(82,10,1)
(6,15,1)
(35,60,1)
(4,61,1)
(21,7,1)
(74,58,1)
(66,61,1)
(42,77,1)
(31,75,1)
(84,59,1)
(58,66,1)
(19,41,1)
(54,24,1)
(10,68,1)
(5,40,1)
(61,21,1)
(24,12,1)
(68,85,1)
(29,42,1)
(79,13,1)
(87,3,1)
(12,68,1)
(73,63,1)
(88,81,1)
(62,6,1)
(22,18,1)
(30,48,1)
(56,65,1)
(85,2,1)
(87,68,1)
(26,6,1)
(40,17,1)
(26,36,1)
(69,78,1)
(41,34,1)
(81,73,1)
(34,59,1)
(60,52,1)
(51,72,1)
(7,59,1)
(61,59,1)
(14,57,1)
(17,84,1)
(4,74,1)
(3,50,1)
(56,46,1)
(23,1,1)
(60,59,1)
(40,86,1)
(48,55,1)
(83,38,1)
(0,35,1)
(18,0,1)
(35,44,1)
(9,29,1)
(59,23,1)
(27,4,1)
(14,68,1)
(72,87,1)
(41,20,1)
(9,68,1)
(13,19,1)
(64,82,1)
(71,31,1)
(31,43,1)
(80,22,1)
(38,51,1)
(63,62,1)
(50,64,1)
(77,16,1)
(64,68,1)
(67,76,1)
(36,64,1)
(52,79,1)
(67,59,1)
(16,54,1)
(23,70,1)
(12,69,1)
(53,49,1)
(54,12,2)
(41,34,2)
(58,61,2)
(34,73,2)
(74,58,2)
(24,64,2)
(40,17,2)
(65,73,2)
(51,87,2)
(60,59,2)
(87,64,2)
(27,73,2)
(85,73,2)
(43,64,2)
(64,68,2)
(60,73,2)
(41,73,2)
(85,2,2)
(5,73,2)
(31,43,2)
(35,73,2)
(59,23,2)
(67,59,2)
(16,64,2)
(21,73,2)
(70,30,2)
(51,64,2)
(23,1,2)
(62,73,2)
(35,60,2)
(30,48,2)
(4,73,2)
(48,55,2)
(17,84,2)
(52,73,2)
(84,59,2)
(9,68,2)
(40,86,2)
(81,73,2)
(74,61,2)
(43,9,2)
(10,73,2)
(77,64,2)
(48,73,2)
(34,59,2)
(71,31,2)
(53,73,2)
(61,73,2)
(88,73,2)
(85,67,2)
(49,73,2)
(12,64,2)
(31,75,2)
(84,73,2)
(76,56,2)
(79,73,2)
(70,73,2)
(82,73,2)
(80,73,2)
(83,64,2)
(14,64,2)
(29,64,2)
(50,64,2)
(73,73,2)
(76,73,2)
(0,73,2)
(38,64,2)
(57,64,2)
(5,40,2)
(23,70,2)
(73,6,2)
(17,73,2)
(20,73,2)
(19,73,2)
(78,64,2)
(63,73,2)
(54,64,2)
(44,73,2)
(26,73,2)
(59,73,2)
(67,76,2)
(31,64,2)
(42,64,2)
(13,73,2)
(56,46,2)
(7,73,2)
(56,73,2)
(68,85,2)
(18,73,2)
(68,73,2)
(67,73,2)
(71,64,2)
(61,59,2)
(87,68,2)
(69,64,2)
(9,64,2)
(64,73,2)
(22,73,2)
(30,73,2)
(14,68,2)
(72,64,2)
(40,73,2)
(36,73,2)
(66,61,2)
(12,68,2)
(23,73,2)
(3,64,2)
(26,6,2)
-----------------------------------
(0,0)
(1,struct _twoIntsStruct *)
(2,struct _twoIntsStruct *)
(3,0)
(4,data)
(5,printStructLine((twoIntsStruct *)
(6,j = 0)
(7,data)
(8,)
(9,data[0])
(10,data)
(11,data)
(12,data[0])
(13,data[0].intOne = 0)
(14,free(data)
(15,0)
(16,1)
(17,&data[0])
(18,data[0].intTwo = 0)
(19,0)
(20,intOne)
(21,NULL)
(22,data)
(23,(struct _twoIntsStruct *)
(24,intTwo)
(25,if (data == NULL)
(26,j++)
(27,0)
(28,)
(29,0)
(30,100*sizeof(struct _twoIntsStruct)
(31,(twoIntsStruct *)
(32,RET)
(33,j)
(34,data[0])
(35,data[0].intTwo)
(36,j)
(37,j)
(38,1)
(39,)
(40,(twoIntsStruct *)
(41,data[0].intOne)
(42,data)
(43,&data[0])
(44,intTwo)
(45,)
(46,struct _twoIntsStruct)
(47,if (data != NULL)
(48,sizeof(struct _twoIntsStruct)
(49,data)
(50,data)
(51,data[0].intOne)
(52,0)
(53,data)
(54,data[0].intTwo)
(55,struct _twoIntsStruct)
(56,sizeof(struct _twoIntsStruct)
(57,data)
(58,-1)
(59,* data = (struct _twoIntsStruct *)
(60,data[0])
(61,data == NULL)
(62,j)
(63,1)
(64,data != NULL)
(65,130000)
(66,1)
(67,realloc(data, (130000)
(68,data = (struct _twoIntsStruct *)
(69,0)
(70,malloc(100*sizeof(struct _twoIntsStruct)
(71,printStructLine((twoIntsStruct *)
(72,intOne)
(73,j < 1)
(74,exit(-1)
(75,twoIntsStruct *)
(76,(130000)
(77,data[0].intTwo = 1)
(78,data)
(79,data)
(80,0)
(81,data)
(82,NULL)
(83,data[0].intOne = 1)
(84,data[0])
(85,(struct _twoIntsStruct *)
(86,twoIntsStruct *)
(87,data[0])
(88,100)
(89,)
(90,for(j = 0; j < 1; j++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^