-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */
    data = fopen("BadSource_fopen.txt", "w+");
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FIX: Close the file from the source before pointing data to a new file handle */
        if (data != NULL)
        {
            fclose(data);
        }
        data = fopen("GoodSink_fopen.txt", "w+");
        /* avoid incidental for not closing the file handle */
        if (data != NULL)
        {
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
29,31
30,31
33,34
33,35
33,36
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
51,54
52,53
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
65,66
67,68
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,31,32,37,39,44,46,50,53,54,55,59,61,66,68
-----computeFrom-----
14,15
14,16
20,21
20,22
29,30
29,31
35,36
35,37
48,49
48,50
57,58
57,59
-----guardedBy-----
37,46
59,68
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
data = fopen("GoodSink_fopen.txt", "w+");
data = fopen("GoodSink_fopen.txt", "w+")
data
data
fopen("GoodSink_fopen.txt", "w+")
fopen
fopen
"GoodSink_fopen.txt"
"w+"
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(18,6,0)
(10,11,0)
(3,9,0)
(5,22,0)
(8,32,0)
(21,28,0)
(2,8,0)
(26,20,0)
(0,9,0)
(15,32,0)
(22,13,0)
(24,25,0)
(7,15,0)
(9,8,0)
(34,30,0)
(11,8,0)
(29,20,0)
(20,8,0)
(31,13,0)
(27,22,0)
(12,25,0)
(18,13,0)
(28,13,0)
(4,15,0)
(13,28,0)
(11,1,0)
(17,32,0)
(23,32,0)
(13,30,0)
(8,9,0)
(33,28,0)
(16,18,0)
(19,30,0)
(22,13,1)
(22,27,1)
(16,22,1)
(0,3,1)
(18,13,1)
(8,9,1)
(15,7,1)
(27,5,1)
(29,26,1)
(2,15,1)
(14,25,1)
(11,8,1)
(26,25,1)
(9,0,1)
(14,22,1)
(3,2,1)
(10,20,1)
(33,21,1)
(20,29,1)
(25,12,1)
(12,24,1)
(24,8,1)
(31,20,1)
(5,13,1)
(28,33,1)
(14,18,1)
(20,8,1)
(7,4,1)
(31,11,1)
(11,10,1)
(21,31,1)
(18,16,1)
(13,28,1)
(33,25,2)
(11,8,2)
(16,22,2)
(13,25,2)
(18,13,2)
(28,25,2)
(27,25,2)
(21,25,2)
(8,9,2)
(20,8,2)
(20,25,2)
(18,22,2)
(22,13,2)
(5,25,2)
(31,25,2)
(22,25,2)
(11,20,2)
(26,25,2)
(29,25,2)
(13,28,2)
(10,20,2)
-----------------------------------
(0,"w+")
(1,)
(2,data)
(3,"BadSource_fopen.txt")
(4,data)
(5,data)
(6,)
(7,NULL)
(8,data = fopen("BadSource_fopen.txt", "w+")
(9,fopen("BadSource_fopen.txt", "w+")
(10,data)
(11,fclose(data)
(12,5)
(13,data = fopen("GoodSink_fopen.txt", "w+")
(14,RET)
(15,data = NULL)
(16,data)
(17,if(GLOBAL_CONST_FIVE==5)
(18,fclose(data)
(19,if (data != NULL)
(20,data != NULL)
(21,"GoodSink_fopen.txt")
(22,data != NULL)
(23,data)
(24,GLOBAL_CONST_FIVE)
(25,GLOBAL_CONST_FIVE==5)
(26,data)
(27,NULL)
(28,fopen("GoodSink_fopen.txt", "w+")
(29,NULL)
(30,)
(31,data)
(32,)
(33,"w+")
(34,if (data != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^