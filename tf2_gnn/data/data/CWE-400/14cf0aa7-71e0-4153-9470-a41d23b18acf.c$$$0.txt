-----label-----
1
-----code-----
static void debug_help(struct fiq_debugger_state *state)
{
	debug_printf(state,
			"FIQ Debugger commands:\n");
	if (sysrq_on()) {
		debug_printf(state,
			" pc            PC status\n"
			" regs          Register dump\n"
			" allregs       Extended Register dump\n"
			" bt            Stack trace\n");
		debug_printf(state,
			" reboot [<c>]  Reboot with command <c>\n"
			" irqs          Interrupt status\n"
			" kmsg          Kernel log\n"
			" version       Kernel version\n");
		debug_printf(state,
			" cpu           Current CPU\n"
			" cpu <number>  Switch to CPU<number>\n"
			" sysrq         sysrq options\n"
			" sysrq <param> Execute sysrq with <param>\n");
	} else {
		debug_printf(state,
			" reboot        Reboot\n"
			" irqs          Interrupt status\n");
	}
	debug_printf(state,
			" sleep         Allow sleep while in FIQ\n"
			" nosleep       Disable sleep while in FIQ\n"
			" console       Switch terminal to console\n"
			" ps            Process list\n");
#ifdef CONFIG_KGDB
	if (fiq_kgdb_enable) {
		debug_printf(state,
			" kgdb          Enter kernel debugger\n");
#endif
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
12,13
13,14
13,15
13,16
14,15
16,17
19,20
19,21
19,22
20,21
21,22
23,24
23,25
23,26
24,25
25,26
25,27
25,28
26,27
28,29
31,32
32,33
32,34
32,35
33,34
35,36
38,39
39,40
39,41
39,42
40,41
42,43
45,46
46,47
47,48
47,49
47,50
48,49
50,51
53,54
54,55
54,56
54,57
55,56
57,58
-----nextToken-----
2,4,7,9,10,15,17,18,22,27,29,30,34,36,37,41,43,44,49,51,52,56,58,59
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void debug_help(struct fiq_debugger_state *state){	debug_printf(state,			"FIQ Debugger commands:\n");	if (sysrq_on()) {		debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n");		debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n");		debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n");	} else {		debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n");	}	debug_printf(state,			" sleep         Allow sleep while in FIQ\n"			" nosleep       Disable sleep while in FIQ\n"			" console       Switch terminal to console\n"			" ps            Process list\n");#ifdef CONFIG_KGDB	if (fiq_kgdb_enable) {		debug_printf(state,			" kgdb          Enter kernel debugger\n");#endif}
static void
debug_help(struct fiq_debugger_state *state)
debug_help
struct fiq_debugger_state *state
struct fiq_debugger_state
fiq_debugger_state
*state
*
state
{	debug_printf(state,			"FIQ Debugger commands:\n");	if (sysrq_on()) {		debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n");		debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n");		debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n");	} else {		debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n");	}	debug_printf(state,			" sleep         Allow sleep while in FIQ\n"			" nosleep       Disable sleep while in FIQ\n"			" console       Switch terminal to console\n"			" ps            Process list\n");#ifdef CONFIG_KGDB	if (fiq_kgdb_enable) {		debug_printf(state,			" kgdb          Enter kernel debugger\n");#endif}
debug_printf(state,			"FIQ Debugger commands:\n");
debug_printf(state,			"FIQ Debugger commands:\n")
debug_printf
debug_printf
state
state
"FIQ Debugger commands:\n"
if (sysrq_on()) {		debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n");		debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n");		debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n");	} else {		debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n");	}
sysrq_on()
sysrq_on
sysrq_on
{		debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n");		debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n");		debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n");	}
debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n");
debug_printf(state,			" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n")
debug_printf
debug_printf
state
state
" pc            PC status\n"			" regs          Register dump\n"			" allregs       Extended Register dump\n"			" bt            Stack trace\n"
debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n");
debug_printf(state,			" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n")
debug_printf
debug_printf
state
state
" reboot [<c>]  Reboot with command <c>\n"			" irqs          Interrupt status\n"			" kmsg          Kernel log\n"			" version       Kernel version\n"
debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n");
debug_printf(state,			" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n")
debug_printf
debug_printf
state
state
" cpu           Current CPU\n"			" cpu <number>  Switch to CPU<number>\n"			" sysrq         sysrq options\n"			" sysrq <param> Execute sysrq with <param>\n"
{		debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n");	}
debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n");
debug_printf(state,			" reboot        Reboot\n"			" irqs          Interrupt status\n")
debug_printf
debug_printf
state
state
" reboot        Reboot\n"			" irqs          Interrupt status\n"
debug_printf(state,			" sleep         Allow sleep while in FIQ\n"			" nosleep       Disable sleep while in FIQ\n"			" console       Switch terminal to console\n"			" ps            Process list\n");
debug_printf(state,			" sleep         Allow sleep while in FIQ\n"			" nosleep       Disable sleep while in FIQ\n"			" console       Switch terminal to console\n"			" ps            Process list\n")
debug_printf
debug_printf
state
state
" sleep         Allow sleep while in FIQ\n"			" nosleep       Disable sleep while in FIQ\n"			" console       Switch terminal to console\n"			" ps            Process list\n"
-----joern-----
(11,22,0)
(12,13,0)
(23,6,0)
(22,19,0)
(24,23,0)
(4,19,0)
(27,8,0)
(29,8,0)
(9,19,0)
(17,8,0)
(29,19,0)
(22,6,0)
(28,29,0)
(21,2,0)
(13,15,0)
(4,5,0)
(26,4,0)
(1,9,0)
(2,6,0)
(9,8,0)
(7,22,0)
(30,23,0)
(18,4,0)
(13,19,0)
(14,9,0)
(0,13,0)
(23,19,0)
(20,2,0)
(2,19,0)
(10,29,0)
(4,26,1)
(25,16,1)
(2,20,1)
(18,3,1)
(20,21,1)
(21,3,1)
(25,13,1)
(4,19,1)
(0,12,1)
(29,19,1)
(23,24,1)
(29,28,1)
(10,4,1)
(10,22,1)
(11,23,1)
(28,10,1)
(12,16,1)
(22,7,1)
(14,1,1)
(13,0,1)
(23,19,1)
(7,11,1)
(26,18,1)
(9,19,1)
(2,19,1)
(30,2,1)
(13,19,1)
(22,19,1)
(16,29,1)
(24,30,1)
(3,9,1)
(9,14,1)
(22,19,2)
(13,16,2)
(21,3,2)
(2,3,2)
(23,19,2)
(2,19,2)
(24,3,2)
(29,19,2)
(23,3,2)
(4,3,2)
(20,3,2)
(30,3,2)
(7,3,2)
(0,16,2)
(18,3,2)
(22,3,2)
(12,16,2)
(13,19,2)
(11,3,2)
(4,19,2)
(9,19,2)
(26,3,2)
-----------------------------------
(0," kgdb          Enter kernel debugger\\n")
(1,state)
(2,debug_printf(state,\n\\n\\t\\t\\t" pc            PC status\\n"\n\\n\\t\\t\\t" regs          Register dump\\n"\n\\n\\t\\t\\t" allregs       Extended Register dump\\n"\n\\n\\t\\t\\t" bt            Stack trace\\n")
(3,sysrq_on()
(4,debug_printf(state,\n\\n\\t\\t\\t" reboot        Reboot\\n"\n\\n\\t\\t\\t" irqs          Interrupt status\\n")
(5,)
(6,)
(7," cpu           Current CPU\\n"\n\\n\\t\\t\\t" cpu <number>  Switch to CPU<number>\\n"\n\\n\\t\\t\\t" sysrq         sysrq options\\n"\n\\n\\t\\t\\t" sysrq <param> Execute sysrq with <param>\\n")
(8,)
(9,debug_printf(state,\n\\n\\t\\t\\t"FIQ Debugger commands:\\n")
(10,state)
(11,state)
(12,state)
(13,debug_printf(state,\n\\n\\t\\t\\t" kgdb          Enter kernel debugger\\n")
(14,"FIQ Debugger commands:\\n")
(15,)
(16,fiq_kgdb_enable)
(17,if (fiq_kgdb_enable)
(18,state)
(19,struct fiq_debugger_state *state)
(20," pc            PC status\\n"\n\\n\\t\\t\\t" regs          Register dump\\n"\n\\n\\t\\t\\t" allregs       Extended Register dump\\n"\n\\n\\t\\t\\t" bt            Stack trace\\n")
(21,state)
(22,debug_printf(state,\n\\n\\t\\t\\t" cpu           Current CPU\\n"\n\\n\\t\\t\\t" cpu <number>  Switch to CPU<number>\\n"\n\\n\\t\\t\\t" sysrq         sysrq options\\n"\n\\n\\t\\t\\t" sysrq <param> Execute sysrq with <param>\\n")
(23,debug_printf(state,\n\\n\\t\\t\\t" reboot [<c>]  Reboot with command <c>\\n"\n\\n\\t\\t\\t" irqs          Interrupt status\\n"\n\\n\\t\\t\\t" kmsg          Kernel log\\n"\n\\n\\t\\t\\t" version       Kernel version\\n")
(24," reboot [<c>]  Reboot with command <c>\\n"\n\\n\\t\\t\\t" irqs          Interrupt status\\n"\n\\n\\t\\t\\t" kmsg          Kernel log\\n"\n\\n\\t\\t\\t" version       Kernel version\\n")
(25,RET)
(26," reboot        Reboot\\n"\n\\n\\t\\t\\t" irqs          Interrupt status\\n")
(27,if (sysrq_on()
(28," sleep         Allow sleep while in FIQ\\n"\n\\n\\t\\t\\t" nosleep       Disable sleep while in FIQ\\n"\n\\n\\t\\t\\t" console       Switch terminal to console\\n"\n\\n\\t\\t\\t" ps            Process list\\n")
(29,debug_printf(state,\n\\n\\t\\t\\t" sleep         Allow sleep while in FIQ\\n"\n\\n\\t\\t\\t" nosleep       Disable sleep while in FIQ\\n"\n\\n\\t\\t\\t" console       Switch terminal to console\\n"\n\\n\\t\\t\\t" ps            Process list\\n")
(30,state)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^