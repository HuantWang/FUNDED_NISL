-----label-----
0
-----code-----
static void goodB2G2()
{
    int count;
    /* Initialize count */
    count = -1;
    if(1)
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
    }
    if(1)
    {
        {
            size_t i = 0;
            FILE *pFile = NULL;
            const char *filename = "output_good.txt";
            /* FIX: Validate count before using it as the for loop variant to write to a file */
            if (count > 0 && count <= 20)
            {
                pFile = fopen(filename, "w+");
                if (pFile == NULL)
                {
                    exit(1);
                }
                for (i = 0; i < (size_t)count; i++)
                {
                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
                }
                if (pFile)
                {
                    fclose(pFile);
                }
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
32,33
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
38,39
38,40
40,41
42,43
43,44
43,45
44,45
46,47
46,48
46,49
49,50
50,51
52,53
53,54
53,55
55,56
55,57
55,58
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
66,67
66,68
67,68
70,71
70,72
70,73
70,74
71,72
72,73
72,74
73,74
75,76
75,77
75,78
76,77
78,79
81,82
81,83
82,83
82,84
83,84
85,86
87,88
88,89
89,90
89,91
90,91
93,94
93,95
93,96
93,97
94,95
95,96
95,97
96,97
99,100
99,101
100,101
102,103
102,104
103,104
103,105
104,105
107,108
109,110
110,111
112,113
113,114
113,115
114,115
114,116
115,116
115,117
116,117
118,119
120,121
120,122
120,123
120,124
120,125
121,122
123,124
125,126
126,127
126,128
129,130
129,131
130,131
132,133
134,135
136,137
137,138
137,139
138,139
141,142
141,143
142,143
144,145
145,146
146,147
146,148
147,148
149,150
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,31,37,39,41,45,47,48,51,54,56,57,59,64,65,68,69,74,77,79,80,84,86,91,92,97,98,101,105,106,108,111,117,119,122,124,127,128,131,133,135,139,140,143,148,150
-----computeFrom-----
12,13
12,14
61,62
61,63
62,63
62,64
66,67
66,68
72,73
72,74
82,83
82,84
95,96
95,97
99,100
99,101
114,115
114,116
-----guardedBy-----
68,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    int count;    /* Initialize count */    count = -1;    if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(1)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
static void
goodB2G2()
goodB2G2
{    int count;    /* Initialize count */    count = -1;    if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(1)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
1
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
if(1)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
1
{        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
{            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)                {                    exit(1);                }
pFile == NULL
pFile
pFile
NULL
NULL
{                    exit(1);                }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)                {                    fclose(pFile);                }
pFile
pFile
{                    fclose(pFile);                }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(73,46,0)
(39,14,0)
(81,14,0)
(8,64,0)
(52,46,0)
(63,14,0)
(66,75,0)
(18,1,0)
(12,1,0)
(38,54,0)
(22,14,0)
(54,67,0)
(68,4,0)
(43,25,0)
(15,80,0)
(42,57,0)
(1,5,0)
(32,1,0)
(67,54,0)
(36,39,0)
(4,64,0)
(19,54,0)
(39,80,0)
(9,3,0)
(40,1,0)
(54,3,0)
(80,15,0)
(72,31,0)
(41,36,0)
(35,3,0)
(3,75,0)
(10,48,0)
(48,6,0)
(57,14,0)
(21,45,0)
(76,71,0)
(47,29,0)
(77,43,0)
(26,75,0)
(39,36,0)
(44,12,0)
(49,63,0)
(53,81,0)
(14,46,0)
(14,57,0)
(37,57,0)
(20,35,0)
(13,32,0)
(28,25,0)
(43,3,0)
(71,3,0)
(30,1,0)
(16,39,0)
(65,17,0)
(78,12,0)
(56,1,0)
(50,39,0)
(24,64,0)
(51,50,0)
(67,64,0)
(59,39,0)
(54,38,0)
(62,48,0)
(69,75,0)
(3,35,0)
(70,15,0)
(55,46,0)
(33,17,0)
(25,11,0)
(2,63,0)
(71,6,0)
(17,1,0)
(6,48,0)
(0,71,0)
(48,3,0)
(81,58,0)
(57,32,0)
(60,21,0)
(39,50,0)
(79,25,0)
(27,67,0)
(80,39,0)
(25,43,0)
(74,32,0)
(6,71,0)
(57,42,1)
(2,49,1)
(12,78,1)
(0,48,1)
(23,61,1)
(59,36,1)
(39,50,1)
(14,57,1)
(27,64,1)
(4,64,1)
(48,3,1)
(23,81,1)
(71,76,1)
(79,28,1)
(41,50,1)
(36,41,1)
(7,34,1)
(64,24,1)
(35,20,1)
(13,12,1)
(43,77,1)
(53,61,1)
(22,6,1)
(71,3,1)
(27,4,1)
(77,79,1)
(23,6,1)
(8,21,1)
(80,15,1)
(15,70,1)
(34,3,1)
(39,59,1)
(4,68,1)
(68,29,1)
(39,14,1)
(21,60,1)
(32,74,1)
(6,71,1)
(74,13,1)
(23,7,1)
(7,25,1)
(50,51,1)
(70,67,1)
(76,0,1)
(25,43,1)
(20,9,1)
(48,62,1)
(6,48,1)
(3,35,1)
(78,44,1)
(49,14,1)
(44,17,1)
(24,8,1)
(63,2,1)
(80,39,1)
(67,54,1)
(68,80,1)
(37,22,1)
(57,32,1)
(47,80,1)
(16,15,1)
(54,38,1)
(63,14,1)
(29,47,1)
(67,64,1)
(61,67,1)
(81,14,1)
(65,33,1)
(8,63,1)
(62,10,1)
(39,36,1)
(10,32,1)
(43,3,1)
(33,7,1)
(51,16,1)
(42,37,1)
(19,27,1)
(60,63,1)
(28,34,1)
(54,19,1)
(17,65,1)
(81,53,1)
(54,3,1)
(78,7,2)
(51,67,2)
(32,7,2)
(81,61,2)
(48,3,2)
(39,50,2)
(27,6,2)
(71,48,2)
(22,6,2)
(43,34,2)
(63,6,2)
(37,6,2)
(80,39,2)
(25,43,2)
(49,6,2)
(57,32,2)
(81,14,2)
(25,34,2)
(80,67,2)
(44,7,2)
(76,48,2)
(67,6,2)
(6,71,2)
(59,67,2)
(33,7,2)
(17,7,2)
(4,67,2)
(10,7,2)
(53,61,2)
(6,7,2)
(28,34,2)
(63,14,2)
(8,6,2)
(67,54,2)
(80,15,2)
(29,80,2)
(54,67,2)
(42,6,2)
(14,6,2)
(0,48,2)
(68,67,2)
(14,57,2)
(71,3,2)
(62,7,2)
(19,6,2)
(2,6,2)
(47,80,2)
(67,67,2)
(54,38,2)
(57,6,2)
(54,3,2)
(39,67,2)
(50,67,2)
(70,67,2)
(54,6,2)
(19,67,2)
(64,6,2)
(21,63,2)
(36,67,2)
(67,64,2)
(41,67,2)
(13,7,2)
(60,63,2)
(39,36,2)
(6,48,2)
(27,67,2)
(16,67,2)
(65,7,2)
(12,7,2)
(4,64,2)
(15,67,2)
(43,3,2)
(74,7,2)
(61,6,2)
(3,35,2)
(24,6,2)
(39,14,2)
(79,34,2)
(77,34,2)
(48,7,2)
-----------------------------------
(0,count)
(1,)
(2,NULL)
(3,count = -1)
(4,i++)
(5,)
(6,count > 0 && count <= 20)
(7,1)
(8,i)
(9,count)
(10,count)
(11,)
(12,*pFile = NULL)
(13,filename)
(14,pFile = fopen(filename, "w+")
(15,strlen(SENTENCE)
(16,SENTENCE)
(17,i = 0)
(18,pFile)
(19,count)
(20,1)
(21,exit(1)
(22,pFile)
(23,RET)
(24,0)
(25,fscanf(stdin, "%d", &count)
(26,count)
(27,i)
(28,stdin)
(29,exit(1)
(30,filename)
(31,)
(32,*filename = "output_good.txt")
(33,i)
(34,1)
(35,-1)
(36,strlen(SENTENCE)
(37,filename)
(38,size_t)
(39,fwrite(SENTENCE, sizeof(char)
(40,if (count > 0 && count <= 20)
(41,SENTENCE)
(42,"w+")
(43,&count)
(44,pFile)
(45,)
(46,)
(47,1)
(48,count > 0)
(49,pFile)
(50,sizeof(char)
(51,char)
(52,if (pFile == NULL)
(53,pFile)
(54,(size_t)
(55,for (i = 0; i < (size_t)
(56,i)
(57,fopen(filename, "w+")
(58,)
(59,pFile)
(60,1)
(61,pFile)
(62,0)
(63,pFile == NULL)
(64,i = 0)
(65,0)
(66,if(1)
(67,i < (size_t)
(68,i)
(69,if(1)
(70,SENTENCE)
(71,count <= 20)
(72,if (strlen(SENTENCE)
(73,if (pFile)
(74,"output_good.txt")
(75,)
(76,20)
(77,count)
(78,NULL)
(79,"%d")
(80,strlen(SENTENCE)
(81,fclose(pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^