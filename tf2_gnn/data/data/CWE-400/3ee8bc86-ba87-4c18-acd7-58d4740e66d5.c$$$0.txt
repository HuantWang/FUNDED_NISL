-----label-----
0
-----code-----
static void goodG2B()
{
    twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
45,47
46,47
46,48
47,48
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
65,66
66,67
66,68
67,68
70,71
72,73
72,74
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,48,49,50,51,57,58,59,60,64,68,69,71,73,74
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
static void goodG2B(){    twoIntsStruct * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    twoIntsStruct * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
source
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
ALLOCA(100*sizeof(twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(13,2,0)
(32,24,0)
(28,12,0)
(21,32,0)
(32,21,0)
(24,2,0)
(17,31,0)
(24,28,0)
(19,8,0)
(7,2,0)
(27,14,0)
(17,6,0)
(20,24,0)
(0,30,0)
(27,28,0)
(1,7,0)
(4,32,0)
(10,31,0)
(28,27,0)
(25,2,0)
(21,30,0)
(14,5,0)
(35,2,0)
(26,2,0)
(34,2,0)
(31,17,0)
(14,27,0)
(8,7,0)
(6,17,0)
(5,14,0)
(28,24,0)
(20,8,0)
(29,2,0)
(3,34,0)
(30,2,0)
(11,5,0)
(36,14,0)
(16,32,0)
(31,24,0)
(9,21,0)
(15,24,0)
(8,20,0)
(33,20,0)
(12,28,0)
(22,20,0)
(37,34,0)
(6,2,0)
(18,31,0)
(28,12,1)
(33,22,1)
(27,14,1)
(31,10,1)
(7,1,1)
(16,4,1)
(23,13,1)
(30,0,1)
(31,24,1)
(32,24,1)
(19,20,1)
(20,33,1)
(15,26,1)
(1,8,1)
(34,3,1)
(24,28,1)
(28,27,1)
(14,5,1)
(10,18,1)
(13,6,1)
(5,11,1)
(21,32,1)
(11,36,1)
(22,24,1)
(18,30,1)
(4,7,1)
(8,19,1)
(8,20,1)
(32,16,1)
(36,15,1)
(21,9,1)
(6,17,1)
(9,32,1)
(17,31,1)
(26,34,1)
(20,24,1)
(0,21,1)
(3,37,1)
(31,24,2)
(32,24,2)
(20,24,2)
(24,28,2)
(21,32,2)
(17,31,2)
(28,27,2)
(28,12,2)
(27,14,2)
(6,17,2)
(14,5,2)
(8,20,2)
-----------------------------------
(0,0)
(1,0)
(2,)
(3,NULL)
(4,data)
(5,sizeof(twoIntsStruct)
(6,printStructLine(&data[0])
(7,data[0].intOne = 0)
(8,data[0].intOne)
(9,intTwo)
(10,0)
(11,twoIntsStruct)
(12,twoIntsStruct *)
(13,goto sink;)
(14,100*sizeof(twoIntsStruct)
(15,data)
(16,0)
(17,&data[0])
(18,data)
(19,intOne)
(20,data[0])
(21,data[0].intTwo)
(22,data)
(23,RET)
(24,data = (twoIntsStruct *)
(25,source:)
(26,goto source;)
(27,ALLOCA(100*sizeof(twoIntsStruct)
(28,(twoIntsStruct *)
(29,sink:)
(30,data[0].intTwo = 0)
(31,data[0])
(32,data[0])
(33,0)
(34,data = NULL)
(35,data)
(36,100)
(37,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^