-----label-----
1
-----code-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_rand_44_bad()
{
    size_t data;
    /* define a function pointer */
    void (*funcPtr) (size_t) = badSink;
    /* Initialize data */
    data = 0;
    /* POTENTIAL FLAW: Set data to a random value */
    data = rand();
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
32,33
33,34
33,35
34,35
36,37
37,38
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,9,11,14,17,18,21,23,26,30,31,35,38,42,44
-----computeFrom-----
28,29
28,30
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_rand_44_bad(){    size_t data;    /* define a function pointer */    void (*funcPtr) (size_t) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = rand();    /* use the function pointer */    funcPtr(data);}
void
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_rand_44_bad()
CWE789_Uncontrolled_Mem_Alloc__malloc_wchar_t_rand_44_bad
{    size_t data;    /* define a function pointer */    void (*funcPtr) (size_t) = badSink;    /* Initialize data */    data = 0;    /* POTENTIAL FLAW: Set data to a random value */    data = rand();    /* use the function pointer */    funcPtr(data);}
size_t data;
size_t data;
size_t
size_t
data
data
void (*funcPtr) (size_t) = badSink;
void (*funcPtr) (size_t) = badSink;
void
(*funcPtr) (size_t) = badSink
*funcPtr
*
funcPtr
size_t
size_t
size_t


= badSink
badSink
badSink
data = 0;
data = 0
data
data
0
data = rand();
data = rand()
data
data
rand()
rand
rand
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(8,11,0)
(13,8,0)
(4,11,0)
(12,2,0)
(6,7,0)
(7,8,0)
(0,11,0)
(2,11,0)
(7,11,0)
(9,2,0)
(1,11,0)
(8,13,0)
(14,0,0)
(5,0,0)
(3,8,0)
(6,8,1)
(3,0,1)
(2,9,1)
(9,12,1)
(14,2,1)
(5,14,1)
(13,3,1)
(8,13,1)
(0,5,1)
(10,7,1)
(7,8,1)
(7,6,1)
(7,8,2)
(8,13,2)
-----------------------------------
(0,data = 0)
(1,funcPtr)
(2,(*funcPtr)
(3,data)
(4,data)
(5,0)
(6,data)
(7,funcPtr(data)
(8,data = rand()
(9,badSink)
(10,RET)
(11,)
(12,funcPtr)
(13,rand()
(14,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^