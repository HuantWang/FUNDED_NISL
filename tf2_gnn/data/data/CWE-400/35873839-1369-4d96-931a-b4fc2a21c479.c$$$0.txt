-----label-----
1
-----code-----
static tempfile_t *
tempfile_get(void)
{
  size_t size;

  if (!tempfile_current) {
    tempfile_current = tempfile_new();
    return tempfile_current;
  }

  /* get file size */
  size = tempfile_size(tempfile_current);

  /* if the file size reaches TEMPFILE_MAX_SIZE, return new temporary file */
  if (size > TEMPFILE_MAX_SIZE) {
    tempfile_current = tempfile_new();
    return tempfile_current;
  }

  /* increment reference counter */
  tempfile_ref(tempfile_current);

  return tempfile_current;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
9,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
22,23
22,24
23,24
24,25
24,26
25,26
27,28
28,29
30,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
48,50
49,50
50,51
50,52
51,52
53,54
54,55
56,57
57,58
59,60
60,61
60,62
61,62
63,64
64,65
66,67
67,68
-----nextToken-----
3,5,6,8,10,15,17,21,26,29,32,36,39,41,45,47,52,55,58,62,65,68
-----computeFrom-----
24,25
24,26
34,35
34,36
43,44
43,45
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;IfStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static tempfile_t *tempfile_get(void){  size_t size;  if (!tempfile_current) {    tempfile_current = tempfile_new();    return tempfile_current;  }  /* get file size */  size = tempfile_size(tempfile_current);  /* if the file size reaches TEMPFILE_MAX_SIZE, return new temporary file */  if (size > TEMPFILE_MAX_SIZE) {    tempfile_current = tempfile_new();    return tempfile_current;  }  /* increment reference counter */  tempfile_ref(tempfile_current);  return tempfile_current;}
static tempfile_t
tempfile_t
*tempfile_get(void)
*
tempfile_get
void
void


{  size_t size;  if (!tempfile_current) {    tempfile_current = tempfile_new();    return tempfile_current;  }  /* get file size */  size = tempfile_size(tempfile_current);  /* if the file size reaches TEMPFILE_MAX_SIZE, return new temporary file */  if (size > TEMPFILE_MAX_SIZE) {    tempfile_current = tempfile_new();    return tempfile_current;  }  /* increment reference counter */  tempfile_ref(tempfile_current);  return tempfile_current;}
size_t size;
size_t size;
size_t
size_t
size
size
if (!tempfile_current) {    tempfile_current = tempfile_new();    return tempfile_current;  }
!tempfile_current
tempfile_current
tempfile_current
{    tempfile_current = tempfile_new();    return tempfile_current;  }
tempfile_current = tempfile_new();
tempfile_current = tempfile_new()
tempfile_current
tempfile_current
tempfile_new()
tempfile_new
tempfile_new
return tempfile_current;
tempfile_current
tempfile_current
size = tempfile_size(tempfile_current);
size = tempfile_size(tempfile_current)
size
size
tempfile_size(tempfile_current)
tempfile_size
tempfile_size
tempfile_current
tempfile_current
if (size > TEMPFILE_MAX_SIZE) {    tempfile_current = tempfile_new();    return tempfile_current;  }
size > TEMPFILE_MAX_SIZE
size
size
TEMPFILE_MAX_SIZE
TEMPFILE_MAX_SIZE
{    tempfile_current = tempfile_new();    return tempfile_current;  }
tempfile_current = tempfile_new();
tempfile_current = tempfile_new()
tempfile_current
tempfile_current
tempfile_new()
tempfile_new
tempfile_new
return tempfile_current;
tempfile_current
tempfile_current
tempfile_ref(tempfile_current);
tempfile_ref(tempfile_current);
tempfile_ref
tempfile_ref
(tempfile_current)
tempfile_current
tempfile_current
return tempfile_current;
tempfile_current
tempfile_current
-----joern-----
(12,4,0)
(17,3,0)
(25,6,0)
(29,26,0)
(19,14,0)
(2,28,0)
(12,26,0)
(25,17,0)
(17,20,0)
(14,9,0)
(4,12,0)
(7,3,0)
(1,14,0)
(22,6,0)
(5,26,0)
(27,26,0)
(23,17,0)
(8,18,0)
(15,27,0)
(28,12,0)
(16,28,0)
(6,26,0)
(13,3,0)
(21,26,0)
(24,14,0)
(0,12,0)
(25,24,0)
(14,1,0)
(3,20,0)
(24,9,0)
(10,24,0)
(11,4,0)
(3,13,0)
(0,18,1)
(6,22,1)
(27,15,1)
(2,12,1)
(7,18,1)
(10,14,1)
(16,2,1)
(15,28,1)
(25,24,1)
(17,23,1)
(14,1,1)
(22,27,1)
(3,13,1)
(4,11,1)
(23,3,1)
(1,19,1)
(24,14,1)
(28,16,1)
(11,0,1)
(12,4,1)
(13,7,1)
(25,17,1)
(19,28,1)
(24,10,1)
(28,12,1)
(17,3,1)
(25,6,1)
(18,8,1)
(24,28,2)
(12,4,2)
(17,3,2)
(14,1,2)
(2,18,2)
(27,28,2)
(6,28,2)
(1,28,2)
(25,6,2)
(25,17,2)
(12,18,2)
(3,13,2)
(25,24,2)
(4,18,2)
(28,18,2)
(13,18,2)
(3,18,2)
(24,14,2)
(16,18,2)
(19,28,2)
(23,18,2)
(14,28,2)
(10,28,2)
(22,28,2)
(7,18,2)
(17,18,2)
(15,28,2)
(28,12,2)
(0,18,2)
(11,18,2)
-----------------------------------
(0,size)
(1,tempfile_new()
(2,size)
(3,tempfile_current = tempfile_new()
(4,tempfile_size(tempfile_current)
(5,size)
(6,return tempfile_current;)
(7,tempfile_current)
(8,tempfile_current)
(9,)
(10,tempfile_current)
(11,tempfile_current)
(12,size = tempfile_size(tempfile_current)
(13,tempfile_new()
(14,tempfile_current = tempfile_new()
(15,tempfile_current)
(16,TEMPFILE_MAX_SIZE)
(17,return tempfile_current;)
(18,!tempfile_current)
(19,tempfile_current)
(20,)
(21,if (size > TEMPFILE_MAX_SIZE)
(22,tempfile_current)
(23,tempfile_current)
(24,return tempfile_current;)
(25,RET)
(26,)
(27,tempfile_ref(tempfile_current)
(28,size > TEMPFILE_MAX_SIZE)
(29,if (!tempfile_current)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^