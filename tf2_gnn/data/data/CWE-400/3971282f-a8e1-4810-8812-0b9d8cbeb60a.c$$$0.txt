-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
39,40
41,42
41,43
41,44
42,43
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
59,62
59,63
60,61
61,62
61,63
62,63
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
86,90
86,91
87,88
89,90
91,92
92,93
92,94
95,96
95,97
96,97
98,99
100,101
102,103
103,104
104,105
104,106
105,106
108,109
108,110
109,110
111,112
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,40,43,45,46,50,52,57,58,63,64,67,71,72,74,77,83,85,88,90,93,94,97,99,101,106,107,110,115,117
-----computeFrom-----
38,39
38,40
48,49
48,50
61,62
61,63
65,66
65,67
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink(int count)
CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_goodG2BSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(54,27,0)
(31,42,0)
(43,32,0)
(34,37,0)
(48,42,0)
(47,54,0)
(28,51,0)
(1,54,0)
(35,32,0)
(55,51,0)
(6,14,0)
(45,39,0)
(56,23,0)
(26,12,0)
(51,32,0)
(46,6,0)
(39,45,0)
(18,28,0)
(6,39,0)
(19,21,0)
(23,27,0)
(42,48,0)
(25,2,0)
(42,21,0)
(17,52,0)
(49,27,0)
(28,24,0)
(50,25,0)
(26,48,0)
(7,27,0)
(48,27,0)
(6,48,0)
(58,5,0)
(52,6,0)
(0,45,0)
(14,6,0)
(28,36,0)
(38,27,0)
(57,11,0)
(13,6,0)
(41,32,0)
(36,28,0)
(15,11,0)
(27,53,0)
(44,27,0)
(4,27,0)
(40,27,0)
(11,48,0)
(5,10,0)
(29,23,0)
(39,6,0)
(6,52,0)
(33,48,0)
(30,43,0)
(9,42,0)
(3,26,0)
(51,28,0)
(22,14,0)
(21,27,0)
(16,21,0)
(31,33,1)
(39,45,1)
(17,14,1)
(58,39,1)
(42,21,1)
(51,32,1)
(8,51,1)
(18,55,1)
(33,21,1)
(41,35,1)
(23,56,1)
(52,17,1)
(0,51,1)
(50,11,1)
(57,48,1)
(45,0,1)
(43,32,1)
(32,41,1)
(48,42,1)
(42,9,1)
(28,24,1)
(26,48,1)
(20,8,1)
(9,31,1)
(6,14,1)
(14,22,1)
(1,47,1)
(29,54,1)
(3,8,1)
(43,30,1)
(22,13,1)
(19,16,1)
(11,15,1)
(20,26,1)
(35,25,1)
(15,57,1)
(46,52,1)
(35,11,1)
(39,6,1)
(56,29,1)
(30,39,1)
(26,3,1)
(21,19,1)
(6,46,1)
(6,52,1)
(13,45,1)
(51,28,1)
(16,23,1)
(28,36,1)
(11,48,1)
(30,5,1)
(55,32,1)
(28,18,1)
(25,50,1)
(6,48,1)
(5,58,1)
(54,1,1)
(55,43,1)
(43,32,2)
(58,39,2)
(39,51,2)
(39,45,2)
(22,51,2)
(11,48,2)
(14,51,2)
(28,24,2)
(3,8,2)
(6,14,2)
(46,51,2)
(17,51,2)
(5,39,2)
(28,51,2)
(30,51,2)
(51,51,2)
(18,51,2)
(50,11,2)
(6,51,2)
(51,32,2)
(51,28,2)
(6,52,2)
(25,11,2)
(42,21,2)
(28,36,2)
(52,51,2)
(39,6,2)
(13,51,2)
(26,48,2)
(0,51,2)
(55,51,2)
(43,51,2)
(48,42,2)
(45,51,2)
(26,8,2)
(6,48,2)
-----------------------------------
(0,SENTENCE)
(1,0)
(2,)
(3,pFile)
(4,if (pFile == NULL)
(5,exit(1)
(6,fwrite(SENTENCE, sizeof(char)
(7,i)
(8,pFile)
(9,"w+")
(10,)
(11,pFile == NULL)
(12,)
(13,SENTENCE)
(14,sizeof(char)
(15,NULL)
(16,filename)
(17,SENTENCE)
(18,count)
(19,"output_bad.txt")
(20,RET)
(21,*filename = "output_bad.txt")
(22,char)
(23,*pFile = NULL)
(24,int count)
(25,exit(1)
(26,fclose(pFile)
(27,)
(28,(size_t)
(29,pFile)
(30,i)
(31,filename)
(32,i = 0)
(33,pFile)
(34,if (strlen(SENTENCE)
(35,i)
(36,size_t)
(37,)
(38,for (i = 0; i < (size_t)
(39,strlen(SENTENCE)
(40,filename)
(41,0)
(42,fopen(filename, "w+")
(43,i++)
(44,pFile)
(45,strlen(SENTENCE)
(46,pFile)
(47,i)
(48,pFile = fopen(filename, "w+")
(49,if (pFile)
(50,1)
(51,i < (size_t)
(52,strlen(SENTENCE)
(53,)
(54,i = 0)
(55,i)
(56,NULL)
(57,pFile)
(58,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^