-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_for_loop_66b_badSink(int countArray[])
{
    /* copy count out of countArray */
    int count = countArray[2];
    {
        size_t i = 0;
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */
        for (i = 0; i < (size_t)count; i++)
        {
            printLine("Hello");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
22,23
23,24
23,25
24,25
26,27
26,28
28,29
30,31
30,32
30,33
30,34
31,32
32,33
32,34
33,34
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
44,45
46,47
47,48
49,50
50,51
51,52
51,53
52,53
-----nextToken-----
2,4,6,8,9,13,15,19,20,25,27,29,34,35,38,42,43,45,48,53,54
-----computeFrom-----
32,33
32,34
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_for_loop_66b_badSink(int countArray[]){    /* copy count out of countArray */    int count = countArray[2];    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
void
CWE400_Resource_Exhaustion__rand_for_loop_66b_badSink(int countArray[])
CWE400_Resource_Exhaustion__rand_for_loop_66b_badSink
int countArray[]
int
countArray[]
countArray
[]
{    /* copy count out of countArray */    int count = countArray[2];    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
int count = countArray[2];
int count = countArray[2];
int
count = countArray[2]
count
= countArray[2]
countArray[2]
countArray
countArray
2
{        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            printLine("Hello");        }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(8,3,0)
(1,5,0)
(9,23,0)
(5,23,0)
(4,25,0)
(14,26,0)
(21,18,0)
(8,19,0)
(7,20,0)
(27,14,0)
(10,19,0)
(19,17,0)
(19,5,0)
(6,14,0)
(13,3,0)
(5,14,0)
(25,16,0)
(18,3,0)
(19,8,0)
(12,9,0)
(14,5,0)
(0,23,0)
(20,9,0)
(24,3,0)
(15,9,0)
(17,19,0)
(2,20,0)
(11,8,0)
(4,8,1)
(20,7,1)
(27,6,1)
(11,18,1)
(2,5,1)
(19,10,1)
(10,11,1)
(22,8,1)
(19,17,1)
(18,21,1)
(21,25,1)
(18,3,1)
(14,26,1)
(19,5,1)
(6,1,1)
(11,3,1)
(24,20,1)
(7,2,1)
(25,4,1)
(13,24,1)
(3,13,1)
(14,27,1)
(8,3,1)
(5,14,1)
(8,19,1)
(25,8,2)
(19,5,2)
(10,8,2)
(18,3,2)
(8,8,2)
(11,8,2)
(18,8,2)
(19,17,2)
(14,26,2)
(5,14,2)
(4,8,2)
(8,3,2)
(21,8,2)
(19,8,2)
(8,19,2)
-----------------------------------
(0,count)
(1,count)
(2,i)
(3,i = 0)
(4,"Hello")
(5,count = countArray[2])
(6,countArray)
(7,0)
(8,i < (size_t)
(9,)
(10,count)
(11,i)
(12,i)
(13,0)
(14,countArray[2])
(15,for (i = 0; i < (size_t)
(16,)
(17,size_t)
(18,i++)
(19,(size_t)
(20,i = 0)
(21,i)
(22,RET)
(23,)
(24,i)
(25,printLine("Hello")
(26,int countArray[])
(27,2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^