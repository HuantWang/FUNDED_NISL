-----label-----
1
-----code-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__open_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * dataPtr = (int *)dataVoidPtr;
    /* dereference dataPtr into data */
    int data = (*dataPtr);
    /* FLAW: Assign data to another file descriptor without closing the descriptor from the source */
    data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    /* avoid incidental for not closing the file */
    if (data != -1)
    {
        CLOSE(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
36,37
36,38
37,38
39,40
39,41
39,42
39,43
40,41
43,44
43,45
44,45
46,47
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,41,42,45,47,50,52,56,58,63,65
-----computeFrom-----
36,37
36,38
43,44
43,45
48,49
48,50
54,55
54,56
-----guardedBy-----
56,65
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__open_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    /* FLAW: Assign data to another file descriptor without closing the descriptor from the source */    data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    /* avoid incidental for not closing the file */    if (data != -1)    {        CLOSE(data);    }}
void
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__open_64b_badSink(void * dataVoidPtr)
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__open_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * dataPtr = (int *)dataVoidPtr;    /* dereference dataPtr into data */    int data = (*dataPtr);    /* FLAW: Assign data to another file descriptor without closing the descriptor from the source */    data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    /* avoid incidental for not closing the file */    if (data != -1)    {        CLOSE(data);    }}
int * dataPtr = (int *)dataVoidPtr;
int * dataPtr = (int *)dataVoidPtr;
int
* dataPtr = (int *)dataVoidPtr
*
dataPtr
= (int *)dataVoidPtr
(int *)dataVoidPtr
int *
int
*
*
dataVoidPtr
dataVoidPtr
int data = (*dataPtr);
int data = (*dataPtr);
int
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSink_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)    {        CLOSE(data);    }
data != -1
data
data
-1
1
{        CLOSE(data);    }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(4,15,0)
(27,26,0)
(31,0,0)
(15,4,0)
(16,11,0)
(0,10,0)
(23,15,0)
(1,11,0)
(7,28,0)
(13,23,0)
(17,4,0)
(29,12,0)
(20,30,0)
(15,6,0)
(21,23,0)
(12,1,0)
(6,15,0)
(12,28,0)
(9,15,0)
(30,4,0)
(1,0,0)
(15,23,0)
(24,11,0)
(4,11,0)
(28,12,0)
(28,11,0)
(26,4,0)
(18,26,0)
(25,6,0)
(5,11,0)
(26,27,0)
(8,6,0)
(0,14,0)
(0,1,0)
(30,19,0)
(3,27,0)
(2,1,0)
(14,0,0)
(31,2,1)
(25,8,1)
(8,23,1)
(27,3,1)
(22,26,1)
(26,27,1)
(9,17,1)
(26,4,1)
(23,21,1)
(30,4,1)
(30,20,1)
(3,18,1)
(15,23,1)
(18,4,1)
(28,12,1)
(0,14,1)
(15,6,1)
(4,15,1)
(0,31,1)
(12,1,1)
(12,29,1)
(0,10,1)
(20,26,1)
(7,1,1)
(21,13,1)
(6,25,1)
(29,7,1)
(13,9,1)
(22,30,1)
(17,28,1)
(1,0,1)
(30,26,2)
(28,12,2)
(30,4,2)
(26,4,2)
(0,10,2)
(4,15,2)
(20,26,2)
(1,0,2)
(0,14,2)
(26,27,2)
(15,23,2)
(12,1,2)
(15,6,2)
-----------------------------------
(0,(int *)
(1,* dataPtr = (int *)
(2,dataPtr)
(3,1)
(4,data = OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(5,data)
(6,S_IREAD|S_IWRITE)
(7,data)
(8,S_IREAD)
(9,"BadSink_open.txt")
(10,void * dataVoidPtr)
(11,)
(12,*dataPtr)
(13,O_RDWR)
(14,int *)
(15,OPEN("BadSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(16,dataPtr)
(17,data)
(18,data)
(19,)
(20,data)
(21,O_CREAT)
(22,RET)
(23,O_RDWR|O_CREAT)
(24,if (data != -1)
(25,S_IWRITE)
(26,data != -1)
(27,-1)
(28,data = (*dataPtr)
(29,dataPtr)
(30,CLOSE(data)
(31,dataVoidPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^