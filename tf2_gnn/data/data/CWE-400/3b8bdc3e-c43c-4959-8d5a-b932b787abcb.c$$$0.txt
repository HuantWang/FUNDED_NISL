-----label-----
0
-----code-----
static void goodB2G1()
{
    int64_t * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(GLOBAL_CONST_FIVE!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
67,68
68,69
68,70
69,70
71,72
71,73
72,73
75,76
75,77
75,78
76,77
76,78
77,78
80,81
81,82
82,83
82,84
83,84
86,87
87,88
88,89
88,90
89,90
91,92
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,64,65,66,70,73,74,78,79,84,85,90,92
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1(){    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G1()
goodB2G1
{    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(GLOBAL_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }
GLOBAL_CONST_FIVE!=5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Deallocate memory */        free(data);    }
free(data);
free(data)
free
free
data
data
-----joern-----
(27,35,0)
(38,13,0)
(39,38,0)
(26,1,0)
(11,27,0)
(13,38,0)
(10,27,0)
(29,7,0)
(10,36,0)
(23,27,0)
(30,26,0)
(35,27,0)
(5,22,0)
(33,22,0)
(13,36,0)
(4,3,0)
(36,22,0)
(10,37,0)
(14,39,0)
(28,0,0)
(40,17,0)
(12,38,0)
(42,24,0)
(18,26,0)
(4,21,0)
(32,11,0)
(26,27,0)
(1,26,0)
(41,0,0)
(35,13,0)
(8,24,0)
(2,36,0)
(43,17,0)
(31,22,0)
(27,0,0)
(20,10,0)
(16,35,0)
(38,39,0)
(25,13,0)
(15,36,0)
(21,4,0)
(6,29,0)
(9,11,0)
(13,35,0)
(1,0,0)
(34,21,0)
(35,16,0)
(13,38,1)
(11,9,1)
(40,1,1)
(24,42,1)
(35,13,1)
(8,36,1)
(21,34,1)
(43,40,1)
(40,24,1)
(34,11,1)
(10,27,1)
(36,2,1)
(4,21,1)
(1,26,1)
(41,4,1)
(19,29,1)
(19,10,1)
(27,35,1)
(17,43,1)
(42,8,1)
(10,36,1)
(39,14,1)
(10,20,1)
(13,36,1)
(26,27,1)
(32,27,1)
(12,25,1)
(41,11,1)
(6,17,1)
(38,39,1)
(35,16,1)
(2,15,1)
(11,27,1)
(18,41,1)
(14,12,1)
(20,17,1)
(25,23,1)
(29,6,1)
(23,24,1)
(30,18,1)
(26,30,1)
(9,32,1)
(18,24,2)
(39,24,2)
(35,13,2)
(14,24,2)
(13,36,2)
(35,16,2)
(1,24,2)
(4,11,2)
(23,24,2)
(38,39,2)
(9,24,2)
(10,27,2)
(6,17,2)
(32,24,2)
(11,27,2)
(25,24,2)
(10,36,2)
(26,27,2)
(11,24,2)
(38,24,2)
(1,26,2)
(4,21,2)
(29,17,2)
(13,24,2)
(12,24,2)
(27,24,2)
(35,24,2)
(10,17,2)
(41,24,2)
(26,24,2)
(34,11,2)
(27,35,2)
(20,17,2)
(30,24,2)
(21,11,2)
(13,38,2)
-----------------------------------
(0,)
(1,printLongLongLine(data[0])
(2,NULL)
(3,)
(4,exit(-1)
(5,data)
(6,"Benign, fixed string")
(7,)
(8,GLOBAL_CONST_FIVE)
(9,NULL)
(10,free(data)
(11,data == NULL)
(12,100)
(13,realloc(data, 100*sizeof(int64_t)
(14,int64_t)
(15,data)
(16,int64_t *)
(17,GLOBAL_CONST_FIVE!=5)
(18,data)
(19,RET)
(20,data)
(21,-1)
(22,)
(23,data)
(24,GLOBAL_CONST_FIVE==5)
(25,data)
(26,data[0])
(27,data = (int64_t *)
(28,if (data == NULL)
(29,printLine("Benign, fixed string")
(30,0)
(31,if(GLOBAL_CONST_FIVE==5)
(32,data)
(33,if(GLOBAL_CONST_FIVE!=5)
(34,1)
(35,(int64_t *)
(36,data = NULL)
(37,)
(38,100*sizeof(int64_t)
(39,sizeof(int64_t)
(40,GLOBAL_CONST_FIVE)
(41,L)
(42,5)
(43,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^