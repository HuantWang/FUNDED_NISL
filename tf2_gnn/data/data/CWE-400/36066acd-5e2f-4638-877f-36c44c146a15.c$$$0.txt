-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int_14_bad()
{
    if(globalFive==5)
    {
        {
            int * data = (int *)malloc(100*sizeof(int));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5;
            printIntLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int *)realloc(data, (130000)*sizeof(int));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10;
                printIntLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
55,57
56,57
58,59
58,60
59,60
62,63
63,64
63,65
64,65
66,67
66,68
67,68
67,69
69,70
71,72
71,73
71,74
72,73
74,75
76,77
76,78
77,78
79,80
80,81
80,82
83,84
83,85
84,85
84,86
85,86
87,88
89,90
89,91
89,92
90,91
91,92
91,93
92,93
92,94
93,94
97,98
98,99
98,100
99,100
101,102
101,103
102,103
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,51,52,53,57,60,61,65,68,70,73,75,78,81,82,86,88,94,95,96,100,103,104,108,110
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
48,49
48,50
63,64
63,65
76,77
76,78
84,85
84,86
91,92
91,93
-----guardedBy-----
86,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int_14_bad(){    if(globalFive==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int_14_bad()
CWE401_Memory_Leak__malloc_realloc_int_14_bad
{    if(globalFive==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }}
if(globalFive==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }
{            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }
int * data = (int *)malloc(100*sizeof(int));
int * data = (int *)malloc(100*sizeof(int));
int
* data = (int *)malloc(100*sizeof(int))
*
data
= (int *)malloc(100*sizeof(int))
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
data = (int *)realloc(data, (130000)*sizeof(int));
data = (int *)realloc(data, (130000)*sizeof(int))
data
data
(int *)realloc(data, (130000)*sizeof(int))
int *
int
*
*
realloc(data, (130000)*sizeof(int))
realloc
realloc
data
data
(130000)*sizeof(int)
(130000)
130000
sizeof(int)
int
int

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }
data[0] = 10;
data[0] = 10
data[0]
data
data
0
10
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(32,44,0)
(49,56,0)
(35,19,0)
(27,31,0)
(2,44,0)
(7,47,0)
(45,25,0)
(23,7,0)
(17,1,0)
(6,19,0)
(29,49,0)
(1,10,0)
(52,41,0)
(50,49,0)
(53,35,0)
(59,25,0)
(31,55,0)
(4,12,0)
(39,54,0)
(46,47,0)
(11,22,0)
(18,1,0)
(42,53,0)
(41,26,0)
(56,49,0)
(28,16,0)
(60,31,0)
(57,21,0)
(26,33,0)
(10,1,0)
(20,30,0)
(3,13,0)
(53,41,0)
(6,41,0)
(7,25,0)
(31,41,0)
(9,25,0)
(1,18,0)
(47,7,0)
(54,7,0)
(40,6,0)
(33,26,0)
(13,23,0)
(14,41,0)
(26,23,0)
(57,30,0)
(49,0,0)
(0,25,0)
(25,43,0)
(23,26,0)
(47,46,0)
(15,12,0)
(30,57,0)
(24,23,0)
(5,54,0)
(8,52,0)
(23,13,0)
(26,41,0)
(53,0,0)
(48,53,0)
(56,25,0)
(38,52,0)
(55,19,0)
(37,7,0)
(13,16,0)
(35,53,0)
(49,7,0)
(58,10,0)
(18,47,0)
(41,25,0)
(54,0,0)
(16,13,0)
(47,18,0)
(51,0,0)
(12,7,0)
(34,55,0)
(53,55,0)
(36,44,1)
(2,32,1)
(48,42,1)
(18,1,1)
(54,5,1)
(7,47,1)
(24,14,1)
(37,44,1)
(23,7,1)
(12,15,1)
(49,7,1)
(27,60,1)
(54,7,1)
(49,0,1)
(31,41,1)
(0,51,1)
(51,54,1)
(53,55,1)
(53,41,1)
(36,6,1)
(15,4,1)
(47,46,1)
(13,16,1)
(52,38,1)
(53,0,1)
(28,3,1)
(14,56,1)
(4,7,1)
(34,31,1)
(49,29,1)
(57,30,1)
(39,12,1)
(50,0,1)
(58,17,1)
(17,37,1)
(53,48,1)
(35,53,1)
(8,41,1)
(39,57,1)
(6,41,1)
(41,26,1)
(36,52,1)
(3,24,1)
(23,13,1)
(5,39,1)
(20,12,1)
(12,7,1)
(26,23,1)
(52,41,1)
(56,49,1)
(44,2,1)
(40,35,1)
(10,58,1)
(47,18,1)
(55,34,1)
(26,33,1)
(29,50,1)
(6,40,1)
(1,10,1)
(31,27,1)
(16,28,1)
(60,52,1)
(38,8,1)
(42,55,1)
(30,20,1)
(10,44,2)
(23,13,2)
(15,44,2)
(34,52,2)
(28,44,2)
(49,0,2)
(35,53,2)
(18,44,2)
(26,44,2)
(37,44,2)
(0,44,2)
(42,52,2)
(30,12,2)
(1,44,2)
(29,44,2)
(51,44,2)
(39,44,2)
(18,1,2)
(23,44,2)
(5,44,2)
(26,33,2)
(47,44,2)
(60,52,2)
(31,41,2)
(7,44,2)
(8,44,2)
(41,26,2)
(17,44,2)
(55,52,2)
(40,52,2)
(47,46,2)
(54,44,2)
(53,0,2)
(47,18,2)
(1,10,2)
(7,47,2)
(54,7,2)
(49,7,2)
(13,44,2)
(23,7,2)
(48,52,2)
(53,41,2)
(57,12,2)
(52,44,2)
(3,44,2)
(4,44,2)
(14,44,2)
(35,52,2)
(53,55,2)
(31,52,2)
(50,44,2)
(58,44,2)
(26,23,2)
(13,16,2)
(6,41,2)
(57,30,2)
(16,44,2)
(49,44,2)
(56,44,2)
(56,49,2)
(12,44,2)
(12,7,2)
(6,52,2)
(53,52,2)
(27,52,2)
(24,44,2)
(52,41,2)
(20,12,2)
(41,44,2)
(38,44,2)
-----------------------------------
(0,data[0] = 5)
(1,100*sizeof(int)
(2,5)
(3,130000)
(4,data)
(5,0)
(6,free(data)
(7,* data = (int *)
(8,data)
(9,data)
(10,sizeof(int)
(11,if(globalFive==5)
(12,data == NULL)
(13,(130000)
(14,data)
(15,NULL)
(16,sizeof(int)
(17,100)
(18,malloc(100*sizeof(int)
(19,)
(20,1)
(21,)
(22,)
(23,realloc(data, (130000)
(24,data)
(25,)
(26,(int *)
(27,0)
(28,int)
(29,0)
(30,-1)
(31,data[0])
(32,globalFive)
(33,int *)
(34,10)
(35,printIntLine(data[0])
(36,RET)
(37,data)
(38,NULL)
(39,data)
(40,data)
(41,data = (int *)
(42,data)
(43,)
(44,globalFive==5)
(45,if (data != NULL)
(46,int *)
(47,(int *)
(48,0)
(49,data[0])
(50,data)
(51,5)
(52,data != NULL)
(53,data[0])
(54,data[0])
(55,data[0] = 10)
(56,printIntLine(data[0])
(57,exit(-1)
(58,int)
(59,if (data == NULL)
(60,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^