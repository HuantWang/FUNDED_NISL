-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_01_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,55,56,57,61,64,65,66
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_01_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int_realloc_01_bad()
CWE401_Memory_Leak__int_realloc_01_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
;
-----joern-----
(7,32,0)
(31,28,0)
(31,26,0)
(15,21,0)
(17,5,0)
(19,27,0)
(28,5,0)
(24,18,0)
(32,21,0)
(31,17,0)
(11,27,0)
(6,5,0)
(27,28,0)
(9,31,0)
(13,31,0)
(25,1,0)
(18,4,0)
(2,32,0)
(27,26,0)
(0,3,0)
(26,5,0)
(21,3,0)
(32,6,0)
(3,21,0)
(4,18,0)
(4,14,0)
(1,26,0)
(2,29,0)
(20,26,0)
(22,28,0)
(32,2,0)
(16,6,0)
(30,1,0)
(17,31,0)
(12,6,0)
(8,5,0)
(21,32,0)
(10,5,0)
(29,2,0)
(26,2,0)
(2,26,0)
(28,22,1)
(18,24,1)
(9,13,1)
(27,11,1)
(1,26,1)
(24,1,1)
(19,4,1)
(25,26,1)
(31,9,1)
(3,0,1)
(11,19,1)
(13,28,1)
(31,26,1)
(2,29,1)
(23,17,1)
(26,2,1)
(15,7,1)
(17,31,1)
(31,28,1)
(0,15,1)
(22,27,1)
(19,1,1)
(6,16,1)
(32,6,1)
(20,6,1)
(16,12,1)
(32,21,1)
(2,32,1)
(1,30,1)
(21,3,1)
(7,20,1)
(27,26,1)
(4,18,1)
(30,25,1)
(21,3,2)
(18,1,2)
(31,26,2)
(31,28,2)
(4,18,2)
(24,1,2)
(2,32,2)
(4,1,2)
(32,21,2)
(2,29,2)
(26,2,2)
(1,26,2)
(32,6,2)
(27,26,2)
(17,31,2)
-----------------------------------
(0,int)
(1,data == NULL)
(2,(int *)
(3,sizeof(int)
(4,exit(-1)
(5,)
(6,data = NULL)
(7,data)
(8,if (data == NULL)
(9,0)
(10,data)
(11,0)
(12,data)
(13,data)
(14,)
(15,100)
(16,NULL)
(17,printIntLine(data[0])
(18,-1)
(19,data)
(20,data)
(21,100*sizeof(int)
(22,5)
(23,RET)
(24,1)
(25,data)
(26,data = (int *)
(27,data[0])
(28,data[0] = 5)
(29,int *)
(30,NULL)
(31,data[0])
(32,realloc(data, 100*sizeof(int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^