-----label-----
1
-----code-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_12_bad()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */
    data = fopen("BadSource_fopen.txt", "w+");
    if(globalReturnsTrueOrFalse())
    {
        /* FLAW: Point data to another file handle without closing the handle from the source */
        data = fopen("BadSink_fopen.txt", "w+");
        /* avoid incidental for not closing the file handle */
        if (data != NULL)
        {
            fclose(data);
        }
    }
    else
    {
        /* FIX: Close the file from the source before pointing data to a new file handle */
        if (data != NULL)
        {
            fclose(data);
        }
        data = fopen("GoodSink_fopen.txt", "w+");
        /* avoid incidental for not closing the file handle */
        if (data != NULL)
        {
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
28,31
29,30
30,31
32,33
32,34
33,34
34,35
34,36
35,36
37,38
37,39
37,40
38,39
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
55,57
55,58
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
65,66
67,68
69,70
70,71
70,72
71,72
73,74
73,75
73,76
74,75
78,79
78,80
79,80
79,81
80,81
82,83
84,85
85,86
86,87
86,88
87,88
89,90
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,31,36,39,40,41,45,47,52,54,59,61,66,68,72,75,76,77,81,83,88,90
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
43,44
43,45
57,58
57,59
70,71
70,72
79,80
79,81
-----guardedBy-----
45,54
59,68
81,90
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_12_bad(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    if(globalReturnsTrueOrFalse())    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }    else    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
void
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_12_bad()
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_12_bad
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Create a file handle using fopen() that may not be closed properly */    data = fopen("BadSource_fopen.txt", "w+");    if(globalReturnsTrueOrFalse())    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }    else    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(globalReturnsTrueOrFalse())    {        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }    else    {        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        /* FLAW: Point data to another file handle without closing the handle from the source */        data = fopen("BadSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
data = fopen("BadSink_fopen.txt", "w+");
data = fopen("BadSink_fopen.txt", "w+")
data
data
fopen("BadSink_fopen.txt", "w+")
fopen
fopen
"BadSink_fopen.txt"
"w+"
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
{        /* FIX: Close the file from the source before pointing data to a new file handle */        if (data != NULL)        {            fclose(data);        }        data = fopen("GoodSink_fopen.txt", "w+");        /* avoid incidental for not closing the file handle */        if (data != NULL)        {            fclose(data);        }    }
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
data = fopen("GoodSink_fopen.txt", "w+");
data = fopen("GoodSink_fopen.txt", "w+")
data
data
fopen("GoodSink_fopen.txt", "w+")
fopen
fopen
"GoodSink_fopen.txt"
"w+"
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(0,45,0)
(13,34,0)
(3,1,0)
(21,20,0)
(41,22,0)
(9,22,0)
(23,16,0)
(8,40,0)
(35,25,0)
(4,40,0)
(36,31,0)
(4,20,0)
(9,24,0)
(10,31,0)
(39,25,0)
(11,40,0)
(44,22,0)
(45,33,0)
(22,1,0)
(18,41,0)
(20,4,0)
(14,4,0)
(7,1,0)
(37,30,0)
(38,6,0)
(34,35,0)
(31,4,0)
(22,2,0)
(19,41,0)
(35,16,0)
(27,16,0)
(1,22,0)
(6,40,0)
(26,25,0)
(30,35,0)
(17,30,0)
(25,35,0)
(15,20,0)
(34,5,0)
(43,35,0)
(28,6,0)
(29,2,0)
(32,9,0)
(45,4,0)
(43,45,1)
(9,32,1)
(44,42,1)
(25,26,1)
(26,39,1)
(31,10,1)
(45,4,1)
(21,15,1)
(41,22,1)
(12,9,1)
(19,18,1)
(32,41,1)
(14,6,1)
(0,31,1)
(13,30,1)
(9,22,1)
(30,35,1)
(20,21,1)
(41,19,1)
(42,4,1)
(10,36,1)
(45,0,1)
(35,25,1)
(36,42,1)
(4,20,1)
(15,14,1)
(39,43,1)
(18,22,1)
(3,7,1)
(43,31,1)
(34,13,1)
(30,37,1)
(28,38,1)
(7,44,1)
(17,35,1)
(34,35,1)
(37,17,1)
(12,30,1)
(22,1,1)
(6,28,1)
(31,4,1)
(12,34,1)
(1,3,1)
(12,41,1)
(31,4,2)
(13,30,2)
(7,42,2)
(4,20,2)
(18,42,2)
(0,31,2)
(44,42,2)
(30,42,2)
(35,25,2)
(26,42,2)
(10,42,2)
(22,42,2)
(17,42,2)
(34,30,2)
(34,35,2)
(36,42,2)
(22,1,2)
(43,42,2)
(3,42,2)
(9,41,2)
(45,31,2)
(45,4,2)
(41,22,2)
(32,41,2)
(1,42,2)
(9,22,2)
(30,35,2)
(19,42,2)
(35,42,2)
(41,42,2)
(31,42,2)
(39,42,2)
(25,42,2)
(37,42,2)
-----------------------------------
(0,data)
(1,fopen("BadSink_fopen.txt", "w+")
(2,)
(3,"w+")
(4,data = fopen("BadSource_fopen.txt", "w+")
(5,)
(6,data = NULL)
(7,"BadSink_fopen.txt")
(8,data)
(9,fclose(data)
(10,NULL)
(11,if(globalReturnsTrueOrFalse()
(12,RET)
(13,data)
(14,data)
(15,"BadSource_fopen.txt")
(16,)
(17,data)
(18,data)
(19,NULL)
(20,fopen("BadSource_fopen.txt", "w+")
(21,"w+")
(22,data = fopen("BadSink_fopen.txt", "w+")
(23,if (data != NULL)
(24,)
(25,fopen("GoodSink_fopen.txt", "w+")
(26,"w+")
(27,if (data != NULL)
(28,NULL)
(29,if (data != NULL)
(30,data != NULL)
(31,data != NULL)
(32,data)
(33,)
(34,fclose(data)
(35,data = fopen("GoodSink_fopen.txt", "w+")
(36,data)
(37,NULL)
(38,data)
(39,"GoodSink_fopen.txt")
(40,)
(41,data != NULL)
(42,globalReturnsTrueOrFalse()
(43,data)
(44,data)
(45,fclose(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^