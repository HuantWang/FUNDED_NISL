-----label-----
0
-----code-----
static void handler(int sig)
{
	struct chain ch;
	int old_errno = errno;

	sem_init(&ch.target_sem, 0, 0);
	sem_init(&ch.caller_sem, 0, 0);

	ch.tid = __syscall(SYS_gettid);

	do ch.next = head;
	while (a_cas_p(&head, ch.next, &ch) != ch.next);

	if (a_cas(&target_tid, ch.tid, 0) == (ch.tid | 0x80000000))
		__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE);

	sem_wait(&ch.target_sem);
	callback(context);
	sem_post(&ch.caller_sem);
	sem_wait(&ch.target_sem);

	errno = old_errno;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
9,17
9,18
9,19
9,20
9,21
10,11
11,12
11,13
12,13
14,15
16,17
17,18
17,19
19,20
19,21
21,22
22,23
24,25
25,26
25,27
25,28
25,29
26,27
28,29
29,30
29,31
30,31
35,36
36,37
36,38
36,39
36,40
37,38
39,40
40,41
40,42
41,42
46,47
47,48
47,49
48,49
48,50
49,50
52,53
52,54
53,54
55,56
57,58
57,59
58,59
59,60
59,61
60,61
60,62
61,62
64,65
66,67
66,68
67,68
67,69
67,70
67,71
68,69
70,71
71,72
73,74
73,75
74,75
77,78
78,79
80,81
80,82
81,82
84,85
84,86
85,86
85,87
86,87
86,88
86,89
86,90
87,88
89,90
90,91
92,93
92,94
93,94
97,98
98,99
98,100
99,100
99,101
100,101
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
111,112
113,114
113,115
114,115
116,117
118,119
119,120
119,121
120,121
122,123
123,124
123,125
124,125
127,128
128,129
128,130
129,130
131,132
132,133
134,135
135,136
135,137
136,137
138,139
139,140
139,141
140,141
143,144
144,145
144,146
145,146
147,148
148,149
148,150
149,150
152,153
153,154
153,155
154,155
156,157
-----nextToken-----
2,4,6,8,13,15,18,20,23,27,31,32,33,34,38,42,43,44,45,50,51,54,56,62,63,65,69,72,75,76,79,82,83,88,91,94,95,96,101,102,103,107,109,112,115,117,121,125,126,130,133,137,141,142,146,150,151,155,157
-----computeFrom-----
47,48
47,49
59,60
59,61
66,67
66,68
85,86
85,87
98,99
98,100
113,114
113,115
153,154
153,155
-----guardedBy-----
91,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DoStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void handler(int sig){	struct chain ch;	int old_errno = errno;	sem_init(&ch.target_sem, 0, 0);	sem_init(&ch.caller_sem, 0, 0);	ch.tid = __syscall(SYS_gettid);	do ch.next = head;	while (a_cas_p(&head, ch.next, &ch) != ch.next);	if (a_cas(&target_tid, ch.tid, 0) == (ch.tid | 0x80000000))		__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE);	sem_wait(&ch.target_sem);	callback(context);	sem_post(&ch.caller_sem);	sem_wait(&ch.target_sem);	errno = old_errno;}
static void
handler(int sig)
handler
int sig
int
sig
sig
{	struct chain ch;	int old_errno = errno;	sem_init(&ch.target_sem, 0, 0);	sem_init(&ch.caller_sem, 0, 0);	ch.tid = __syscall(SYS_gettid);	do ch.next = head;	while (a_cas_p(&head, ch.next, &ch) != ch.next);	if (a_cas(&target_tid, ch.tid, 0) == (ch.tid | 0x80000000))		__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE);	sem_wait(&ch.target_sem);	callback(context);	sem_post(&ch.caller_sem);	sem_wait(&ch.target_sem);	errno = old_errno;}
struct chain ch;
struct chain ch;
struct chain
chain
ch
ch
int old_errno = errno;
int old_errno = errno;
int
old_errno = errno
old_errno
= errno
errno
errno
sem_init(&ch.target_sem, 0, 0);
sem_init(&ch.target_sem, 0, 0)
sem_init
sem_init
&ch.target_sem
ch.target_sem
ch
ch
target_sem
0
0
sem_init(&ch.caller_sem, 0, 0);
sem_init(&ch.caller_sem, 0, 0)
sem_init
sem_init
&ch.caller_sem
ch.caller_sem
ch
ch
caller_sem
0
0
ch.tid = __syscall(SYS_gettid);
ch.tid = __syscall(SYS_gettid)
ch.tid
ch
ch
tid
__syscall(SYS_gettid)
__syscall
__syscall
SYS_gettid
SYS_gettid
do ch.next = head;	while (a_cas_p(&head, ch.next, &ch) != ch.next);
ch.next = head;
ch.next = head
ch.next
ch
ch
next
head
head
a_cas_p(&head, ch.next, &ch) != ch.next
a_cas_p(&head, ch.next, &ch)
a_cas_p
a_cas_p
&head
head
head
ch.next
ch
ch
next
&ch
ch
ch
ch.next
ch
ch
next
if (a_cas(&target_tid, ch.tid, 0) == (ch.tid | 0x80000000))		__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE);
a_cas(&target_tid, ch.tid, 0) == (ch.tid | 0x80000000)
a_cas(&target_tid, ch.tid, 0)
a_cas
a_cas
&target_tid
target_tid
target_tid
ch.tid
ch
ch
tid
0
(ch.tid | 0x80000000)
ch.tid | 0x80000000
ch.tid
ch
ch
tid
0x80000000
__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE);
__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE)
__syscall
__syscall
SYS_futex
SYS_futex
&target_tid
target_tid
target_tid
FUTEX_UNLOCK_PI|FUTEX_PRIVATE
FUTEX_UNLOCK_PI
FUTEX_UNLOCK_PI
FUTEX_PRIVATE
FUTEX_PRIVATE
sem_wait(&ch.target_sem);
sem_wait(&ch.target_sem)
sem_wait
sem_wait
&ch.target_sem
ch.target_sem
ch
ch
target_sem
callback(context);
callback(context);
callback
callback
(context)
context
context
sem_post(&ch.caller_sem);
sem_post(&ch.caller_sem)
sem_post
sem_post
&ch.caller_sem
ch.caller_sem
ch
ch
caller_sem
sem_wait(&ch.target_sem);
sem_wait(&ch.target_sem)
sem_wait
sem_wait
&ch.target_sem
ch.target_sem
ch
ch
target_sem
errno = old_errno;
errno = old_errno
errno
errno
old_errno
old_errno
-----joern-----
(84,35,0)
(36,69,0)
(10,21,0)
(7,79,0)
(58,21,0)
(34,72,0)
(55,59,0)
(39,77,0)
(41,69,0)
(62,4,0)
(52,35,0)
(45,56,0)
(54,36,0)
(11,14,0)
(52,62,0)
(9,8,0)
(50,14,0)
(62,24,0)
(63,79,0)
(23,14,0)
(25,23,0)
(67,75,0)
(47,16,0)
(37,11,0)
(51,54,0)
(72,35,0)
(4,62,0)
(48,64,0)
(78,64,0)
(6,27,0)
(6,50,0)
(65,64,0)
(21,37,0)
(82,16,0)
(60,74,0)
(40,48,0)
(79,7,0)
(49,14,0)
(8,14,0)
(72,39,0)
(63,73,0)
(83,27,0)
(11,37,0)
(39,14,0)
(1,65,0)
(79,63,0)
(38,28,0)
(24,62,0)
(31,23,0)
(18,24,0)
(15,33,0)
(59,14,0)
(12,56,0)
(36,54,0)
(77,39,0)
(69,36,0)
(4,39,0)
(46,48,0)
(74,79,0)
(23,30,0)
(30,23,0)
(57,7,0)
(66,4,0)
(43,4,0)
(35,52,0)
(81,30,0)
(50,6,0)
(22,69,0)
(53,67,0)
(32,73,0)
(73,64,0)
(44,81,0)
(17,28,0)
(42,28,0)
(76,38,0)
(56,14,0)
(71,14,0)
(20,81,0)
(61,67,0)
(80,14,0)
(79,74,0)
(19,8,0)
(62,52,0)
(2,72,0)
(27,6,0)
(26,73,0)
(80,75,0)
(54,14,0)
(5,62,0)
(73,63,0)
(65,79,0)
(37,21,0)
(8,56,0)
(68,77,0)
(13,54,0)
(35,72,0)
(0,65,0)
(75,67,0)
(30,81,0)
(28,38,0)
(38,33,0)
(16,39,0)
(85,27,0)
(75,80,0)
(79,65,0)
(3,14,0)
(70,14,0)
(33,38,0)
(8,56,1)
(25,31,1)
(58,10,1)
(54,36,1)
(22,41,1)
(35,72,1)
(0,74,1)
(35,84,1)
(62,5,1)
(26,32,1)
(73,64,1)
(29,8,1)
(55,11,1)
(42,33,1)
(19,80,1)
(84,72,1)
(4,66,1)
(65,1,1)
(18,63,1)
(83,85,1)
(15,76,1)
(23,25,1)
(11,37,1)
(61,50,1)
(27,83,1)
(59,55,1)
(66,43,1)
(23,30,1)
(38,33,1)
(2,62,1)
(34,2,1)
(50,6,1)
(16,82,1)
(21,58,1)
(9,19,1)
(79,7,1)
(30,81,1)
(54,51,1)
(52,62,1)
(32,79,1)
(46,39,1)
(20,44,1)
(17,42,1)
(62,4,1)
(43,24,1)
(79,65,1)
(63,73,1)
(69,22,1)
(56,12,1)
(7,57,1)
(12,45,1)
(67,53,1)
(37,21,1)
(79,74,1)
(8,9,1)
(82,47,1)
(63,79,1)
(40,46,1)
(75,67,1)
(36,69,1)
(72,34,1)
(41,56,1)
(74,60,1)
(44,54,1)
(76,52,1)
(5,4,1)
(46,63,1)
(51,13,1)
(13,36,1)
(4,39,1)
(24,18,1)
(80,75,1)
(68,16,1)
(73,26,1)
(57,65,1)
(47,23,1)
(52,35,1)
(33,15,1)
(62,24,1)
(10,52,1)
(31,30,1)
(65,64,1)
(85,59,1)
(6,27,1)
(77,68,1)
(64,78,1)
(1,0,1)
(39,77,1)
(72,39,1)
(78,48,1)
(28,17,1)
(60,64,1)
(38,28,1)
(10,38,1)
(48,40,1)
(53,61,1)
(81,20,1)
(15,52,2)
(60,63,2)
(64,63,2)
(79,7,2)
(33,52,2)
(1,63,2)
(80,75,2)
(65,63,2)
(74,63,2)
(63,79,2)
(37,21,2)
(73,63,2)
(79,65,2)
(40,63,2)
(6,27,2)
(38,28,2)
(79,63,2)
(28,52,2)
(50,6,2)
(8,56,2)
(52,62,2)
(32,63,2)
(35,72,2)
(30,81,2)
(0,63,2)
(63,73,2)
(78,63,2)
(17,52,2)
(38,33,2)
(76,52,2)
(42,52,2)
(62,4,2)
(73,64,2)
(38,52,2)
(26,63,2)
(39,77,2)
(63,63,2)
(75,67,2)
(46,63,2)
(65,64,2)
(48,63,2)
(11,37,2)
(54,36,2)
(62,24,2)
(52,35,2)
(23,30,2)
(36,69,2)
(57,63,2)
(79,74,2)
(7,63,2)
(72,39,2)
(4,39,2)
-----------------------------------
(0,ch)
(1,next)
(2,ch)
(3,old_errno)
(4,ch.tid)
(5,0)
(6,&ch.caller_sem)
(7,&ch)
(8,errno = old_errno)
(9,old_errno)
(10,ch)
(11,sem_wait(&ch.target_sem)
(12,errno)
(13,0)
(14,)
(15,target_tid)
(16,ch.tid)
(17,FUTEX_PRIVATE)
(18,target_tid)
(19,errno)
(20,caller_sem)
(21,ch.target_sem)
(22,target_sem)
(23,sem_init(&ch.caller_sem, 0, 0)
(24,&target_tid)
(25,0)
(26,next)
(27,ch.caller_sem)
(28,FUTEX_UNLOCK_PI|FUTEX_PRIVATE)
(29,RET)
(30,&ch.caller_sem)
(31,0)
(32,ch)
(33,&target_tid)
(34,tid)
(35,ch.tid | 0x80000000)
(36,&ch.target_sem)
(37,&ch.target_sem)
(38,__syscall(SYS_futex, &target_tid, FUTEX_UNLOCK_PI|FUTEX_PRIVATE)
(39,ch.tid = __syscall(SYS_gettid)
(40,next)
(41,ch)
(42,FUTEX_UNLOCK_PI)
(43,ch)
(44,ch)
(45,old_errno)
(46,ch)
(47,ch)
(48,ch.next)
(49,ch)
(50,sem_post(&ch.caller_sem)
(51,0)
(52,a_cas(&target_tid, ch.tid, 0)
(53,target_sem)
(54,sem_init(&ch.target_sem, 0, 0)
(55,context)
(56,old_errno = errno)
(57,ch)
(58,target_sem)
(59,callback(context)
(60,head)
(61,ch)
(62,a_cas(&target_tid, ch.tid, 0)
(63,a_cas_p(&head, ch.next, &ch)
(64,ch.next = head)
(65,ch.next)
(66,tid)
(67,ch.target_sem)
(68,SYS_gettid)
(69,ch.target_sem)
(70,if (a_cas(&target_tid, ch.tid, 0)
(71,do)
(72,ch.tid)
(73,ch.next)
(74,&head)
(75,&ch.target_sem)
(76,SYS_futex)
(77,__syscall(SYS_gettid)
(78,head)
(79,a_cas_p(&head, ch.next, &ch)
(80,sem_wait(&ch.target_sem)
(81,ch.caller_sem)
(82,tid)
(83,caller_sem)
(84,0x80000000)
(85,ch)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^