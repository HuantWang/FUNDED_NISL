-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_31_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    {
        int64_t * dataCopy = data;
        int64_t * data = dataCopy;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
54,56
55,56
59,60
60,61
60,62
61,62
63,64
63,65
64,65
67,68
67,69
67,70
68,69
69,70
69,71
70,71
72,73
72,74
72,75
75,76
76,77
78,79
79,80
79,81
80,81
82,83
82,84
82,85
85,86
86,87
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,56,57,58,62,65,66,71,73,74,77,81,83,84,87,88
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_31_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_31_bad()
CWE401_Memory_Leak__int64_t_malloc_31_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
{        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * dataCopy = data;
int64_t * dataCopy = data;
int64_t
int64_t
* dataCopy = data
*
dataCopy
= data
data
data
int64_t * data = dataCopy;
int64_t * data = dataCopy;
int64_t
int64_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
;
-----joern-----
(23,19,0)
(33,36,0)
(14,12,0)
(18,35,0)
(15,35,0)
(27,11,0)
(20,11,0)
(34,20,0)
(21,34,0)
(25,9,0)
(0,5,0)
(24,11,0)
(5,9,0)
(23,36,0)
(35,1,0)
(6,11,0)
(17,2,0)
(10,27,0)
(2,12,0)
(29,6,0)
(31,9,0)
(20,34,0)
(9,27,0)
(35,11,0)
(16,11,0)
(1,17,0)
(1,22,0)
(2,17,0)
(8,2,0)
(1,35,0)
(36,23,0)
(17,1,0)
(26,5,0)
(5,27,0)
(7,6,0)
(22,1,0)
(30,11,0)
(12,2,0)
(3,27,0)
(9,35,0)
(13,34,0)
(28,18,0)
(34,35,0)
(32,18,0)
(7,29,1)
(36,33,1)
(18,28,1)
(21,13,1)
(18,35,1)
(33,18,1)
(2,12,1)
(14,8,1)
(4,5,1)
(15,6,1)
(9,25,1)
(32,35,1)
(25,31,1)
(26,0,1)
(17,2,1)
(8,15,1)
(28,32,1)
(23,36,1)
(1,17,1)
(34,35,1)
(6,7,1)
(1,22,1)
(16,18,1)
(16,23,1)
(5,9,1)
(9,35,1)
(20,34,1)
(34,21,1)
(5,26,1)
(35,1,1)
(31,20,1)
(0,9,1)
(12,14,1)
(13,16,1)
(5,9,2)
(1,17,2)
(9,35,2)
(2,12,2)
(35,1,2)
(20,34,2)
(34,35,2)
(1,22,2)
(17,2,2)
(18,35,2)
(23,36,2)
(36,18,2)
(23,18,2)
(33,18,2)
-----------------------------------
(0,data)
(1,(int64_t *)
(2,100*sizeof(int64_t)
(3,dataCopy)
(4,RET)
(5,* data = dataCopy)
(6,data = NULL)
(7,NULL)
(8,100)
(9,* dataCopy = data)
(10,data)
(11,)
(12,sizeof(int64_t)
(13,data)
(14,int64_t)
(15,data)
(16,L)
(17,malloc(100*sizeof(int64_t)
(18,data == NULL)
(19,)
(20,printLongLongLine(data[0])
(21,0)
(22,int64_t *)
(23,exit(-1)
(24,if (data == NULL)
(25,data)
(26,dataCopy)
(27,)
(28,NULL)
(29,data)
(30,data)
(31,dataCopy)
(32,data)
(33,1)
(34,data[0])
(35,data = (int64_t *)
(36,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^