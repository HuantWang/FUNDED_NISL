-----label-----
1
-----code-----
static void badSink()
{
    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;
    {
        size_t i = 0;
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */
        for (i = 0; i < (size_t)count; i++)
        {
            printLine("Hello");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
29,30
29,31
30,31
32,33
32,34
33,34
33,35
34,35
37,38
39,40
40,41
42,43
43,44
44,45
44,46
45,46
-----nextToken-----
2,4,8,10,13,18,20,22,27,28,31,35,36,38,41,46,47
-----computeFrom-----
25,26
25,27
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void badSink(){    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
static void
badSink()
badSink
{    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;    {        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }}
int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;
int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData;
int
count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData
count
= CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData
CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData
CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData
{        size_t i = 0;        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */        for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
for (i = 0; i < (size_t)count; i++)        {            printLine("Hello");        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            printLine("Hello");        }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(1,19,0)
(4,0,0)
(17,10,0)
(13,18,0)
(20,23,0)
(6,23,0)
(21,1,0)
(18,1,0)
(5,18,0)
(15,11,0)
(23,8,0)
(22,1,0)
(9,8,0)
(8,19,0)
(11,23,0)
(23,6,0)
(2,8,0)
(7,10,0)
(0,10,0)
(23,11,0)
(24,19,0)
(3,14,0)
(14,12,0)
(11,10,0)
(8,9,1)
(15,0,1)
(20,15,1)
(13,5,1)
(23,8,1)
(0,10,1)
(15,10,1)
(3,11,1)
(11,23,1)
(9,2,1)
(5,8,1)
(4,14,1)
(14,3,1)
(16,11,1)
(23,6,1)
(17,7,1)
(7,18,1)
(23,20,1)
(11,10,1)
(0,4,1)
(18,13,1)
(10,17,1)
(23,11,2)
(20,11,2)
(11,23,2)
(15,11,2)
(11,11,2)
(11,10,2)
(0,10,2)
(0,11,2)
(23,6,2)
(3,11,2)
(14,11,2)
(4,11,2)
(23,8,2)
-----------------------------------
(0,i++)
(1,)
(2,count)
(3,"Hello")
(4,i)
(5,i)
(6,size_t)
(7,i)
(8,count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData)
(9,CWE400_Resource_Exhaustion__fscanf_for_loop_45_badData)
(10,i = 0)
(11,i < (size_t)
(12,)
(13,0)
(14,printLine("Hello")
(15,i)
(16,RET)
(17,0)
(18,i = 0)
(19,)
(20,count)
(21,for (i = 0; i < (size_t)
(22,i)
(23,(size_t)
(24,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^