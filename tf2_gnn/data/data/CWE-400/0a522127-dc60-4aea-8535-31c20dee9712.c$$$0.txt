-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink()
{
    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_good.txt";
        /* FIX: Validate count before using it as the for loop variant to write to a file */
        if (count > 0 && count <= 20)
        {
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
41,43
42,43
42,44
43,44
43,45
44,45
47,48
47,49
48,49
51,52
51,53
51,54
51,55
52,53
53,54
53,55
54,55
56,57
56,58
56,59
57,58
59,60
62,63
62,64
63,64
63,65
64,65
66,67
68,69
69,70
70,71
70,72
71,72
74,75
74,76
74,77
74,78
75,76
76,77
76,78
77,78
80,81
80,82
81,82
83,84
83,85
84,85
84,86
85,86
88,89
90,91
91,92
93,94
94,95
94,96
95,96
95,97
96,97
96,98
97,98
99,100
101,102
101,103
101,104
101,105
101,106
102,103
104,105
106,107
107,108
107,109
110,111
110,112
111,112
113,114
115,116
117,118
118,119
118,120
119,120
122,123
122,124
123,124
125,126
126,127
127,128
127,129
128,129
130,131
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,45,46,49,50,55,58,60,61,65,67,72,73,78,79,82,86,87,89,92,98,100,103,105,108,109,112,114,116,120,121,124,129,131
-----computeFrom-----
42,43
42,44
43,44
43,45
47,48
47,49
53,54
53,55
63,64
63,65
76,77
76,78
80,81
80,82
95,96
95,97
-----guardedBy-----
49,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink(){    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink()
CWE400_Resource_Exhaustion__connect_socket_fwrite_68b_goodB2GSink
{    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData;
int
count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData
count
= CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData
CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData
CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(21,6,0)
(58,53,0)
(41,20,0)
(46,25,0)
(28,61,0)
(13,52,0)
(25,46,0)
(24,10,0)
(39,31,0)
(5,41,0)
(69,29,0)
(25,1,0)
(51,41,0)
(64,43,0)
(63,41,0)
(35,29,0)
(46,59,0)
(7,34,0)
(27,38,0)
(63,31,0)
(9,41,0)
(4,34,0)
(54,60,0)
(56,29,0)
(40,30,0)
(38,65,0)
(15,60,0)
(19,3,0)
(12,55,0)
(44,59,0)
(31,63,0)
(33,46,0)
(41,9,0)
(61,20,0)
(47,68,0)
(10,34,0)
(49,34,0)
(6,59,0)
(46,0,0)
(20,52,0)
(59,53,0)
(48,59,0)
(60,59,0)
(67,25,0)
(43,41,0)
(50,61,0)
(52,55,0)
(8,55,0)
(23,4,0)
(2,1,0)
(52,20,0)
(36,57,0)
(14,4,0)
(37,6,0)
(22,20,0)
(42,40,0)
(26,10,0)
(41,43,0)
(6,21,0)
(11,6,0)
(34,53,0)
(62,1,0)
(40,20,0)
(41,63,0)
(18,34,0)
(45,34,0)
(55,34,0)
(16,9,0)
(68,1,0)
(60,21,0)
(21,60,0)
(20,29,0)
(32,52,0)
(0,46,0)
(27,61,1)
(41,43,1)
(23,59,1)
(32,22,1)
(48,44,1)
(20,52,1)
(12,8,1)
(52,13,1)
(50,28,1)
(28,20,1)
(40,20,1)
(41,5,1)
(42,66,1)
(41,9,1)
(46,0,1)
(46,33,1)
(9,16,1)
(40,42,1)
(15,55,1)
(67,68,1)
(6,11,1)
(61,50,1)
(21,60,1)
(52,55,1)
(62,38,1)
(3,19,1)
(61,20,1)
(46,59,1)
(63,41,1)
(2,62,1)
(24,4,1)
(47,63,1)
(17,21,1)
(8,10,1)
(59,48,1)
(43,64,1)
(37,60,1)
(39,25,1)
(55,12,1)
(54,15,1)
(22,21,1)
(33,67,1)
(26,24,1)
(47,3,1)
(4,14,1)
(1,2,1)
(67,1,1)
(60,59,1)
(68,1,1)
(68,47,1)
(31,39,1)
(17,66,1)
(41,20,1)
(38,27,1)
(64,9,1)
(10,26,1)
(19,63,1)
(60,54,1)
(63,31,1)
(25,46,1)
(25,1,1)
(5,43,1)
(11,37,1)
(17,40,1)
(14,23,1)
(16,51,1)
(6,59,1)
(51,31,1)
(21,6,1)
(66,25,1)
(62,61,1)
(13,32,1)
(9,25,2)
(39,25,2)
(11,60,2)
(62,21,2)
(41,20,2)
(46,25,2)
(51,25,2)
(67,25,2)
(41,25,2)
(22,21,2)
(41,9,2)
(33,21,2)
(63,31,2)
(5,25,2)
(2,21,2)
(46,0,2)
(13,21,2)
(63,41,2)
(28,21,2)
(47,25,2)
(66,21,2)
(68,1,2)
(33,25,2)
(64,25,2)
(42,66,2)
(60,59,2)
(52,21,2)
(43,25,2)
(52,55,2)
(67,21,2)
(21,60,2)
(61,21,2)
(61,20,2)
(27,61,2)
(6,60,2)
(1,21,2)
(25,21,2)
(32,21,2)
(25,25,2)
(20,52,2)
(3,63,2)
(20,21,2)
(6,59,2)
(68,25,2)
(16,25,2)
(37,60,2)
(46,59,2)
(40,66,2)
(50,21,2)
(25,1,2)
(25,46,2)
(19,63,2)
(63,25,2)
(38,61,2)
(46,21,2)
(31,25,2)
(21,6,2)
(40,20,2)
(41,43,2)
-----------------------------------
(0,size_t)
(1,i = 0)
(2,0)
(3,exit(1)
(4,i = 0)
(5,pFile)
(6,count <= 20)
(7,pFile)
(8,filename)
(9,sizeof(char)
(10,*pFile = NULL)
(11,20)
(12,"output_good.txt")
(13,"w+")
(14,0)
(15,count)
(16,char)
(17,RET)
(18,i)
(19,1)
(20,pFile = fopen(filename, "w+")
(21,count > 0 && count <= 20)
(22,pFile)
(23,i)
(24,pFile)
(25,i < (size_t)
(26,NULL)
(27,1)
(28,pFile)
(29,)
(30,)
(31,strlen(SENTENCE)
(32,filename)
(33,count)
(34,)
(35,for (i = 0; i < (size_t)
(36,if (strlen(SENTENCE)
(37,count)
(38,exit(1)
(39,SENTENCE)
(40,fclose(pFile)
(41,fwrite(SENTENCE, sizeof(char)
(42,pFile)
(43,strlen(SENTENCE)
(44,count)
(45,filename)
(46,(size_t)
(47,i)
(48,CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData)
(49,if (count > 0 && count <= 20)
(50,NULL)
(51,SENTENCE)
(52,fopen(filename, "w+")
(53,)
(54,0)
(55,*filename = "output_good.txt")
(56,if (pFile)
(57,)
(58,count)
(59,count = CWE400_Resource_Exhaustion__connect_socket_fwrite_68_goodB2GData)
(60,count > 0)
(61,pFile == NULL)
(62,i)
(63,strlen(SENTENCE)
(64,SENTENCE)
(65,)
(66,pFile)
(67,i)
(68,i++)
(69,if (pFile == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^