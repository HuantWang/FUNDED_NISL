-----label-----
0
-----code-----
static void goodG2B()
{
    twoIntsStruct * data;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data;
    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
41,43
42,43
42,44
43,44
48,49
49,50
49,51
50,51
50,52
51,52
51,53
52,53
57,58
58,59
58,60
59,60
61,62
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
72,73
73,74
74,75
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,44,45,46,47,53,54,55,56,60,64,65,69,71,75
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
49,50
49,51
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data;    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink();}
static void
goodG2B()
goodG2B
{    twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data;    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink();}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
ALLOCA(100*sizeof(twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data;
CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data
CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData
CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData
data
data
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink();
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink()
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink
-----joern-----
(16,24,0)
(18,23,0)
(26,8,0)
(4,11,0)
(13,24,0)
(36,19,0)
(35,24,0)
(5,36,0)
(8,24,0)
(6,9,0)
(15,23,0)
(32,3,0)
(37,8,0)
(31,6,0)
(11,9,0)
(1,33,0)
(35,31,0)
(19,13,0)
(9,24,0)
(23,24,0)
(23,9,0)
(7,24,0)
(10,6,0)
(29,11,0)
(6,31,0)
(1,22,0)
(11,27,0)
(2,32,0)
(3,32,0)
(12,27,0)
(30,13,0)
(17,9,0)
(27,11,0)
(32,33,0)
(22,1,0)
(31,35,0)
(27,20,0)
(19,36,0)
(14,19,0)
(33,1,0)
(21,3,0)
(36,9,0)
(20,24,0)
(1,9,0)
(9,1,0)
(28,36,0)
(34,6,0)
(0,20,0)
(33,32,0)
(34,10,1)
(13,30,1)
(20,0,1)
(32,3,1)
(27,12,1)
(5,20,1)
(23,9,1)
(36,28,1)
(11,29,1)
(28,5,1)
(19,36,1)
(15,18,1)
(23,15,1)
(26,37,1)
(17,8,1)
(21,2,1)
(35,31,1)
(36,9,1)
(6,9,1)
(7,23,1)
(6,34,1)
(8,26,1)
(4,9,1)
(12,11,1)
(29,4,1)
(11,9,1)
(31,6,1)
(19,14,1)
(27,11,1)
(10,13,1)
(14,36,1)
(2,17,1)
(30,19,1)
(0,27,1)
(18,35,1)
(1,22,1)
(25,7,1)
(1,33,1)
(3,21,1)
(9,1,1)
(33,32,1)
(1,33,2)
(36,9,2)
(23,9,2)
(35,31,2)
(32,3,2)
(31,6,2)
(27,11,2)
(9,1,2)
(1,22,2)
(11,9,2)
(19,36,2)
(33,32,2)
(6,9,2)
-----------------------------------
(0,0)
(1,(twoIntsStruct *)
(2,100)
(3,sizeof(twoIntsStruct)
(4,data)
(5,data)
(6,data[0])
(7,CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink()
(8,data = NULL)
(9,data = (twoIntsStruct *)
(10,data)
(11,data[0])
(12,intOne)
(13,data[0].intTwo = 0)
(14,intTwo)
(15,data)
(16,data)
(17,data)
(18,CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData)
(19,data[0].intTwo)
(20,data[0].intOne = 0)
(21,twoIntsStruct)
(22,twoIntsStruct *)
(23,CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData = data)
(24,)
(25,RET)
(26,NULL)
(27,data[0].intOne)
(28,0)
(29,0)
(30,0)
(31,&data[0])
(32,100*sizeof(twoIntsStruct)
(33,ALLOCA(100*sizeof(twoIntsStruct)
(34,0)
(35,printStructLine(&data[0])
(36,data[0])
(37,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^