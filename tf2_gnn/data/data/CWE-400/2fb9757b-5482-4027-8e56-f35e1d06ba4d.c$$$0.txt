-----label-----
0
-----code-----
static void good2()
{
    if(globalFive==5)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            wchar_t * tmpData;
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            /* FIX: Ensure realloc() was successful before assigning data to the memory block
            * allocated with realloc() */
            if (tmpData != NULL)
            {
                data = tmpData;
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
            }
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
12,19
12,20
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
53,54
54,55
54,56
54,57
55,56
57,58
60,61
61,62
61,63
62,63
64,65
66,67
67,68
67,69
68,69
70,71
70,72
71,72
71,73
73,74
75,76
75,77
75,78
76,77
78,79
80,81
80,82
81,82
83,84
84,85
84,86
87,88
87,89
88,89
88,90
89,90
91,92
93,94
93,95
93,96
94,95
95,96
95,97
96,97
98,99
100,101
101,102
101,103
101,104
102,103
104,105
107,108
108,109
108,110
109,110
111,112
113,114
114,115
114,116
115,116
117,118
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,49,51,52,56,58,59,63,65,69,72,74,77,79,82,85,86,90,92,97,99,103,105,106,110,112,116,118
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
67,68
67,69
80,81
80,82
88,89
88,90
95,96
95,97
-----guardedBy-----
90,99
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good2(){    if(globalFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
static void
good2()
good2
{    if(globalFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
if(globalFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
globalFive==5
globalFive
globalFive
5
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wchar_t * tmpData;
wchar_t * tmpData;
wchar_t
* tmpData
*
tmpData
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
tmpData
tmpData
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(2,20,0)
(7,36,0)
(1,36,0)
(40,31,0)
(48,46,0)
(26,30,0)
(41,38,0)
(14,28,0)
(43,22,0)
(30,47,0)
(12,1,0)
(28,26,0)
(25,7,0)
(38,7,0)
(7,40,0)
(12,36,0)
(30,26,0)
(26,28,0)
(17,9,0)
(18,31,0)
(20,11,0)
(40,29,0)
(44,46,0)
(11,20,0)
(35,9,0)
(34,42,0)
(0,38,0)
(11,31,0)
(36,49,0)
(5,22,0)
(3,12,0)
(33,36,0)
(35,8,0)
(50,11,0)
(31,11,0)
(13,36,0)
(16,33,0)
(15,36,0)
(33,9,0)
(47,30,0)
(24,42,0)
(30,1,0)
(1,30,0)
(46,1,0)
(9,8,0)
(27,1,0)
(23,21,0)
(10,35,0)
(40,7,0)
(6,28,0)
(39,36,0)
(29,40,0)
(42,34,0)
(33,1,0)
(19,36,0)
(28,14,0)
(4,9,0)
(9,7,0)
(32,14,0)
(31,40,0)
(31,1,0)
(34,37,0)
(34,42,1)
(0,41,1)
(5,43,1)
(42,24,1)
(35,9,1)
(3,34,1)
(18,25,1)
(12,1,1)
(6,27,1)
(16,38,1)
(45,22,1)
(9,4,1)
(48,44,1)
(46,48,1)
(46,1,1)
(40,29,1)
(38,0,1)
(11,20,1)
(28,14,1)
(10,9,1)
(40,31,1)
(33,1,1)
(20,2,1)
(4,17,1)
(33,9,1)
(44,1,1)
(35,10,1)
(24,46,1)
(12,3,1)
(2,50,1)
(31,1,1)
(14,32,1)
(41,7,1)
(9,7,1)
(7,40,1)
(26,28,1)
(32,6,1)
(30,26,1)
(27,22,1)
(50,18,1)
(38,7,1)
(1,30,1)
(17,38,1)
(30,47,1)
(31,11,1)
(33,16,1)
(22,5,1)
(3,46,1)
(25,12,1)
(45,33,1)
(16,35,1)
(46,1,2)
(30,26,2)
(33,22,2)
(7,40,2)
(26,28,2)
(48,22,2)
(25,22,2)
(24,46,2)
(12,1,2)
(1,30,2)
(27,22,2)
(14,22,2)
(31,22,2)
(6,22,2)
(9,7,2)
(20,22,2)
(31,1,2)
(40,31,2)
(11,20,2)
(40,22,2)
(38,22,2)
(30,22,2)
(1,22,2)
(34,46,2)
(9,38,2)
(46,22,2)
(4,38,2)
(28,22,2)
(41,22,2)
(50,22,2)
(0,22,2)
(42,46,2)
(28,14,2)
(32,22,2)
(18,22,2)
(33,9,2)
(16,22,2)
(30,47,2)
(40,29,2)
(2,22,2)
(10,38,2)
(44,22,2)
(26,22,2)
(38,7,2)
(3,22,2)
(35,38,2)
(12,22,2)
(11,22,2)
(33,1,2)
(35,9,2)
(34,42,2)
(17,38,2)
(31,11,2)
(7,22,2)
-----------------------------------
(0,NULL)
(1,* data = (wchar_t *)
(2,wchar_t)
(3,data)
(4,tmpData)
(5,5)
(6,100)
(7,tmpData = (wchar_t *)
(8,)
(9,data = tmpData)
(10,data)
(11,(130000)
(12,printWLine(data)
(13,tmpData)
(14,sizeof(wchar_t)
(15,if (data == NULL)
(16,data)
(17,data)
(18,data)
(19,data)
(20,sizeof(wchar_t)
(21,)
(22,globalFive==5)
(23,if(globalFive==5)
(24,1)
(25,tmpData)
(26,malloc(100*sizeof(wchar_t)
(27,data)
(28,100*sizeof(wchar_t)
(29,wchar_t *)
(30,(wchar_t *)
(31,realloc(data, (130000)
(32,wchar_t)
(33,free(data)
(34,exit(-1)
(35,printWLine(data)
(36,)
(37,)
(38,tmpData != NULL)
(39,if (tmpData != NULL)
(40,(wchar_t *)
(41,tmpData)
(42,-1)
(43,globalFive)
(44,data)
(45,RET)
(46,data == NULL)
(47,wchar_t *)
(48,NULL)
(49,)
(50,130000)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^