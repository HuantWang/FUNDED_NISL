-----label-----
1
-----code-----
static void gasnete_convert_strided_to_addrlist(void * * srclist, void * * dstlist,
                                    gasnete_strided_stats_t const *stats,
                                    void *dstaddr, const size_t dststrides[],
                                    void *srcaddr, const size_t srcstrides[],
                                    const size_t count[], size_t stridelevels) {
  size_t const contiglevel = stats->dualcontiguity;
  size_t const limit = stridelevels - stats->nulldims;
  size_t const srccontigsz = stats->srccontigsz;
  size_t const dstcontigsz = stats->dstcontigsz;
  void * * srcpos = srclist;
  void * * dstpos = dstlist;

  gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL);
  gasneti_assert(!gasnete_strided_empty(count, stridelevels));
  gasneti_assert(limit > contiglevel);

  if (srccontigsz == dstcontigsz) {
    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \
      *(srcpos) = psrc;                                      \
      srcpos++;                                              \
      *(dstpos) = pdst;                                      \
      dstpos++;                                              \
    } while(0)
    GASNETE_STRIDED_HELPER(limit,contiglevel);
    #undef GASNETE_STRIDED_HELPER_LOOPBODY
  } else if (srccontigsz < dstcontigsz) {
    size_t const looplim = dstcontigsz / srccontigsz;
    size_t loopcnt = 0;
    gasneti_assert(looplim*srccontigsz == dstcontigsz);
    /* TODO: this loop could be made more efficient */
    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \
      *(srcpos) = psrc;                                      \
      srcpos++;                                              \
      if (loopcnt == 0) {                                    \
        *(dstpos) = pdst;                                    \
        dstpos++;                                            \
        loopcnt = looplim;                                   \
      }                                                      \
      loopcnt--;                                             \
    } while(0)
    GASNETE_STRIDED_HELPER(limit,contiglevel);
    #undef GASNETE_STRIDED_HELPER_LOOPBODY
  } else { /* srccontigsz > dstcontigsz */
    size_t const looplim = srccontigsz / dstcontigsz;
    size_t loopcnt = 0;
    gasneti_assert(looplim*dstcontigsz == srccontigsz);
    /* TODO: this loop could be made more efficient */
    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \
      if (loopcnt == 0) {                                    \
        *(srcpos) = psrc;                                    \
        srcpos++;                                            \
        loopcnt = looplim;                                   \
      }                                                      \
      loopcnt--;                                             \
      *(dstpos) = pdst;                                      \
      dstpos++;                                              \
    } while(0)
    GASNETE_STRIDED_HELPER(limit,contiglevel);
    #undef GASNETE_STRIDED_HELPER_LOOPBODY
  }
  gasneti_assert(srcpos == srclist+stats->srcsegments);
  gasneti_assert(dstpos == dstlist+stats->dstsegments);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
3,11
3,12
3,13
5,6
5,7
7,8
7,9
7,10
11,12
11,13
13,14
13,15
13,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
25,26
25,27
28,29
28,30
29,30
31,32
31,33
34,35
34,36
36,37
36,38
39,40
39,41
40,41
42,43
42,44
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
54,55
56,57
56,58
56,59
56,60
56,61
56,62
56,63
56,64
56,65
56,66
56,67
56,68
57,58
58,59
58,60
59,60
61,62
61,63
63,64
64,65
64,66
65,66
68,69
69,70
69,71
70,71
72,73
72,74
74,75
75,76
75,77
76,77
78,79
78,80
79,80
82,83
83,84
83,85
84,85
86,87
86,88
88,89
89,90
89,91
90,91
93,94
94,95
94,96
95,96
97,98
97,99
99,100
100,101
100,102
101,102
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
114,115
115,116
115,117
117,118
117,119
117,120
117,121
121,122
122,123
124,125
125,126
125,127
126,127
128,129
128,130
129,130
129,131
130,131
130,132
131,132
133,134
135,136
135,137
136,137
138,139
140,141
140,142
141,142
143,144
145,146
146,147
146,148
147,148
149,150
150,151
150,152
150,153
151,152
153,154
155,156
157,158
158,159
158,160
159,160
161,162
161,163
162,163
164,165
166,167
166,168
166,169
167,168
167,169
168,169
170,171
172,173
173,174
174,175
174,176
174,177
175,176
177,178
179,180
181,182
181,183
181,184
182,183
182,184
183,184
185,186
187,188
187,189
187,190
187,191
188,189
189,190
189,191
190,191
192,193
192,194
194,195
195,196
195,197
196,197
198,199
200,201
201,202
201,203
202,203
204,205
204,206
206,207
208,209
209,210
209,211
210,211
212,213
212,214
213,214
213,215
214,215
216,217
218,219
220,221
221,222
221,223
221,224
222,223
224,225
226,227
228,229
228,230
228,231
228,232
229,230
230,231
230,232
231,232
233,234
233,235
235,236
236,237
236,238
237,238
239,240
241,242
242,243
242,244
243,244
245,246
245,247
247,248
249,250
250,251
250,252
251,252
253,254
253,255
254,255
254,256
255,256
257,258
259,260
261,262
262,263
262,264
262,265
263,264
265,266
267,268
269,270
270,271
270,272
271,272
273,274
273,275
274,275
276,277
276,278
277,278
279,280
279,281
280,281
283,284
284,285
284,286
285,286
287,288
287,289
288,289
290,291
290,292
291,292
293,294
293,295
294,295
-----nextToken-----
2,4,6,8,9,10,12,14,15,16,19,21,22,24,26,27,30,32,33,35,37,38,41,43,44,47,49,50,53,55,60,62,66,67,71,73,77,80,81,85,87,91,92,96,98,102,103,106,108,109,110,113,116,118,119,120,123,127,132,134,137,139,142,144,148,152,154,156,160,163,165,169,171,176,178,180,184,186,191,193,197,199,203,205,207,211,215,217,219,223,225,227,232,234,238,240,244,246,248,252,256,258,260,264,266,268,272,275,278,281,282,286,289,292,295,296
-----computeFrom-----
75,76
75,77
128,129
128,130
129,130
129,131
130,131
130,132
135,136
135,137
140,141
140,142
161,162
161,163
167,168
167,169
182,183
182,184
195,196
195,197
212,213
212,214
213,214
213,215
236,237
236,238
253,254
253,255
254,255
254,256
273,274
273,275
276,277
276,278
287,288
287,289
290,291
290,292
-----guardedBy-----
184,217
186,219
-----guardedByNegation-----
169,260
171,258
184,260
186,258
-----lastLexicalUse-----
184,260
186,258
-----jump-----
184,260
186,258
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Name;ArrayModifier;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void gasnete_convert_strided_to_addrlist(void * * srclist, void * * dstlist,                                    gasnete_strided_stats_t const *stats,                                    void *dstaddr, const size_t dststrides[],                                    void *srcaddr, const size_t srcstrides[],                                    const size_t count[], size_t stridelevels) {  size_t const contiglevel = stats->dualcontiguity;  size_t const limit = stridelevels - stats->nulldims;  size_t const srccontigsz = stats->srccontigsz;  size_t const dstcontigsz = stats->dstcontigsz;  void * * srcpos = srclist;  void * * dstpos = dstlist;  gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL);  gasneti_assert(!gasnete_strided_empty(count, stridelevels));  gasneti_assert(limit > contiglevel);  if (srccontigsz == dstcontigsz) {    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else if (srccontigsz < dstcontigsz) {    size_t const looplim = dstcontigsz / srccontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*srccontigsz == dstcontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      if (loopcnt == 0) {                                    \        *(dstpos) = pdst;                                    \        dstpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else { /* srccontigsz > dstcontigsz */    size_t const looplim = srccontigsz / dstcontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*dstcontigsz == srccontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      if (loopcnt == 0) {                                    \        *(srcpos) = psrc;                                    \        srcpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }  gasneti_assert(srcpos == srclist+stats->srcsegments);  gasneti_assert(dstpos == dstlist+stats->dstsegments);}
static void
gasnete_convert_strided_to_addrlist(void * * srclist, void * * dstlist,                                    gasnete_strided_stats_t const *stats,                                    void *dstaddr, const size_t dststrides[],                                    void *srcaddr, const size_t srcstrides[],                                    const size_t count[], size_t stridelevels)
gasnete_convert_strided_to_addrlist
void * * srclist
void
* * srclist
*
*
srclist
void * * dstlist
void
* * dstlist
*
*
dstlist
gasnete_strided_stats_t const *stats
gasnete_strided_stats_t const
gasnete_strided_stats_t
*stats
*
stats
void *dstaddr
void
*dstaddr
*
dstaddr
const size_t dststrides[]
const size_t
size_t
dststrides[]
dststrides
[]
void *srcaddr
void
*srcaddr
*
srcaddr
const size_t srcstrides[]
const size_t
size_t
srcstrides[]
srcstrides
[]
const size_t count[]
const size_t
size_t
count[]
count
[]
size_t stridelevels
size_t
size_t
stridelevels
stridelevels
{  size_t const contiglevel = stats->dualcontiguity;  size_t const limit = stridelevels - stats->nulldims;  size_t const srccontigsz = stats->srccontigsz;  size_t const dstcontigsz = stats->dstcontigsz;  void * * srcpos = srclist;  void * * dstpos = dstlist;  gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL);  gasneti_assert(!gasnete_strided_empty(count, stridelevels));  gasneti_assert(limit > contiglevel);  if (srccontigsz == dstcontigsz) {    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else if (srccontigsz < dstcontigsz) {    size_t const looplim = dstcontigsz / srccontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*srccontigsz == dstcontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      if (loopcnt == 0) {                                    \        *(dstpos) = pdst;                                    \        dstpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else { /* srccontigsz > dstcontigsz */    size_t const looplim = srccontigsz / dstcontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*dstcontigsz == srccontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      if (loopcnt == 0) {                                    \        *(srcpos) = psrc;                                    \        srcpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }  gasneti_assert(srcpos == srclist+stats->srcsegments);  gasneti_assert(dstpos == dstlist+stats->dstsegments);}
size_t const contiglevel = stats->dualcontiguity;
size_t const contiglevel = stats->dualcontiguity;
size_t const
size_t
contiglevel = stats->dualcontiguity
contiglevel
= stats->dualcontiguity
stats->dualcontiguity
stats
stats
dualcontiguity
size_t const limit = stridelevels - stats->nulldims;
size_t const limit = stridelevels - stats->nulldims;
size_t const
size_t
limit = stridelevels - stats->nulldims
limit
= stridelevels - stats->nulldims
stridelevels - stats->nulldims
stridelevels
stridelevels
stats->nulldims
stats
stats
nulldims
size_t const srccontigsz = stats->srccontigsz;
size_t const srccontigsz = stats->srccontigsz;
size_t const
size_t
srccontigsz = stats->srccontigsz
srccontigsz
= stats->srccontigsz
stats->srccontigsz
stats
stats
srccontigsz
size_t const dstcontigsz = stats->dstcontigsz;
size_t const dstcontigsz = stats->dstcontigsz;
size_t const
size_t
dstcontigsz = stats->dstcontigsz
dstcontigsz
= stats->dstcontigsz
stats->dstcontigsz
stats
stats
dstcontigsz
void * * srcpos = srclist;
void * * srcpos = srclist;
void
* * srcpos = srclist
*
*
srcpos
= srclist
srclist
srclist
void * * dstpos = dstlist;
void * * dstpos = dstlist;
void
* * dstpos = dstlist
*
*
dstpos
= dstlist
dstlist
dstlist
gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL);
gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL)
gasneti_assert
gasneti_assert
srclist != NULL && dstlist != NULL && stats != NULL
srclist != NULL && dstlist != NULL
srclist != NULL
srclist
srclist
NULL
NULL
dstlist != NULL
dstlist
dstlist
NULL
NULL
stats != NULL
stats
stats
NULL
NULL
gasneti_assert(!gasnete_strided_empty(count, stridelevels));
gasneti_assert(!gasnete_strided_empty(count, stridelevels))
gasneti_assert
gasneti_assert
!gasnete_strided_empty(count, stridelevels)
gasnete_strided_empty(count, stridelevels)
gasnete_strided_empty
gasnete_strided_empty
count
count
stridelevels
stridelevels
gasneti_assert(limit > contiglevel);
gasneti_assert(limit > contiglevel)
gasneti_assert
gasneti_assert
limit > contiglevel
limit
limit
contiglevel
contiglevel
if (srccontigsz == dstcontigsz) {    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else if (srccontigsz < dstcontigsz) {    size_t const looplim = dstcontigsz / srccontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*srccontigsz == dstcontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      if (loopcnt == 0) {                                    \        *(dstpos) = pdst;                                    \        dstpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else { /* srccontigsz > dstcontigsz */    size_t const looplim = srccontigsz / dstcontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*dstcontigsz == srccontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      if (loopcnt == 0) {                                    \        *(srcpos) = psrc;                                    \        srcpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }
srccontigsz == dstcontigsz
srccontigsz
srccontigsz
dstcontigsz
dstcontigsz
{    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }
GASNETE_STRIDED_HELPER(limit,contiglevel);
GASNETE_STRIDED_HELPER(limit,contiglevel)
GASNETE_STRIDED_HELPER
GASNETE_STRIDED_HELPER
limit
limit
contiglevel
contiglevel
if (srccontigsz < dstcontigsz) {    size_t const looplim = dstcontigsz / srccontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*srccontigsz == dstcontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      if (loopcnt == 0) {                                    \        *(dstpos) = pdst;                                    \        dstpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  } else { /* srccontigsz > dstcontigsz */    size_t const looplim = srccontigsz / dstcontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*dstcontigsz == srccontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      if (loopcnt == 0) {                                    \        *(srcpos) = psrc;                                    \        srcpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }
srccontigsz < dstcontigsz
srccontigsz
srccontigsz
dstcontigsz
dstcontigsz
{    size_t const looplim = dstcontigsz / srccontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*srccontigsz == dstcontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      *(srcpos) = psrc;                                      \      srcpos++;                                              \      if (loopcnt == 0) {                                    \        *(dstpos) = pdst;                                    \        dstpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }
size_t const looplim = dstcontigsz / srccontigsz;
size_t const looplim = dstcontigsz / srccontigsz;
size_t const
size_t
looplim = dstcontigsz / srccontigsz
looplim
= dstcontigsz / srccontigsz
dstcontigsz / srccontigsz
dstcontigsz
dstcontigsz
srccontigsz
srccontigsz
size_t loopcnt = 0;
size_t loopcnt = 0;
size_t
size_t
loopcnt = 0
loopcnt
= 0
0
gasneti_assert(looplim*srccontigsz == dstcontigsz);
gasneti_assert(looplim*srccontigsz == dstcontigsz)
gasneti_assert
gasneti_assert
looplim*srccontigsz == dstcontigsz
looplim*srccontigsz
looplim
looplim
srccontigsz
srccontigsz
dstcontigsz
dstcontigsz
GASNETE_STRIDED_HELPER(limit,contiglevel);
GASNETE_STRIDED_HELPER(limit,contiglevel)
GASNETE_STRIDED_HELPER
GASNETE_STRIDED_HELPER
limit
limit
contiglevel
contiglevel
{ /* srccontigsz > dstcontigsz */    size_t const looplim = srccontigsz / dstcontigsz;    size_t loopcnt = 0;    gasneti_assert(looplim*dstcontigsz == srccontigsz);    /* TODO: this loop could be made more efficient */    #define GASNETE_STRIDED_HELPER_LOOPBODY(psrc,pdst)  do { \      if (loopcnt == 0) {                                    \        *(srcpos) = psrc;                                    \        srcpos++;                                            \        loopcnt = looplim;                                   \      }                                                      \      loopcnt--;                                             \      *(dstpos) = pdst;                                      \      dstpos++;                                              \    } while(0)    GASNETE_STRIDED_HELPER(limit,contiglevel);    #undef GASNETE_STRIDED_HELPER_LOOPBODY  }
size_t const looplim = srccontigsz / dstcontigsz;
size_t const looplim = srccontigsz / dstcontigsz;
size_t const
size_t
looplim = srccontigsz / dstcontigsz
looplim
= srccontigsz / dstcontigsz
srccontigsz / dstcontigsz
srccontigsz
srccontigsz
dstcontigsz
dstcontigsz
size_t loopcnt = 0;
size_t loopcnt = 0;
size_t
size_t
loopcnt = 0
loopcnt
= 0
0
gasneti_assert(looplim*dstcontigsz == srccontigsz);
gasneti_assert(looplim*dstcontigsz == srccontigsz)
gasneti_assert
gasneti_assert
looplim*dstcontigsz == srccontigsz
looplim*dstcontigsz
looplim
looplim
dstcontigsz
dstcontigsz
srccontigsz
srccontigsz
GASNETE_STRIDED_HELPER(limit,contiglevel);
GASNETE_STRIDED_HELPER(limit,contiglevel)
GASNETE_STRIDED_HELPER
GASNETE_STRIDED_HELPER
limit
limit
contiglevel
contiglevel
gasneti_assert(srcpos == srclist+stats->srcsegments);
gasneti_assert(srcpos == srclist+stats->srcsegments)
gasneti_assert
gasneti_assert
srcpos == srclist+stats->srcsegments
srcpos
srcpos
srclist+stats->srcsegments
srclist
srclist
stats->srcsegments
stats
stats
srcsegments
gasneti_assert(dstpos == dstlist+stats->dstsegments);
gasneti_assert(dstpos == dstlist+stats->dstsegments)
gasneti_assert
gasneti_assert
dstpos == dstlist+stats->dstsegments
dstpos
dstpos
dstlist+stats->dstsegments
dstlist
dstlist
stats->dstsegments
stats
stats
dstsegments
-----joern-----
(68,32,0)
(73,57,0)
(26,75,0)
(19,32,0)
(41,12,0)
(75,26,0)
(69,75,0)
(4,70,0)
(31,15,0)
(16,57,0)
(10,8,0)
(75,8,0)
(30,10,0)
(9,63,0)
(26,57,0)
(54,35,0)
(28,64,0)
(82,32,0)
(17,16,0)
(15,29,0)
(34,43,0)
(18,12,0)
(66,38,0)
(61,37,0)
(38,42,0)
(35,57,0)
(40,74,0)
(39,57,0)
(10,80,0)
(28,6,0)
(74,57,0)
(27,53,0)
(21,18,0)
(38,17,0)
(36,60,0)
(59,56,0)
(53,57,0)
(49,34,0)
(70,35,0)
(28,60,0)
(50,10,0)
(45,6,0)
(52,57,0)
(11,57,0)
(80,10,0)
(34,15,0)
(41,35,0)
(81,82,0)
(62,9,0)
(67,57,0)
(74,40,0)
(38,64,0)
(35,29,0)
(60,28,0)
(51,40,0)
(82,8,0)
(1,53,0)
(83,76,0)
(2,6,0)
(22,76,0)
(76,8,0)
(56,53,0)
(5,40,0)
(55,19,0)
(9,43,0)
(77,41,0)
(78,9,0)
(32,57,0)
(79,80,0)
(49,57,0)
(65,26,0)
(7,82,0)
(3,38,0)
(34,49,0)
(6,57,0)
(20,2,0)
(71,57,0)
(48,60,0)
(60,8,0)
(46,35,0)
(72,2,0)
(24,18,0)
(15,34,0)
(53,63,0)
(16,17,0)
(76,43,0)
(6,28,0)
(43,76,0)
(70,37,0)
(13,57,0)
(32,82,0)
(44,75,0)
(40,26,0)
(58,15,0)
(37,12,0)
(17,38,0)
(43,9,0)
(0,28,0)
(80,57,0)
(24,53,0)
(14,57,0)
(40,6,0)
(43,34,0)
(19,80,0)
(47,19,0)
(23,24,0)
(2,26,0)
(56,12,0)
(40,26,1)
(54,46,1)
(56,59,1)
(46,80,1)
(75,44,1)
(74,40,1)
(79,32,1)
(10,50,1)
(69,65,1)
(6,28,1)
(32,82,1)
(9,78,1)
(47,74,1)
(15,58,1)
(34,43,1)
(53,1,1)
(38,64,1)
(20,33,1)
(78,62,1)
(24,53,1)
(44,69,1)
(76,22,1)
(83,9,1)
(70,4,1)
(28,60,1)
(30,79,1)
(40,6,1)
(27,35,1)
(15,29,1)
(81,7,1)
(70,35,1)
(33,2,1)
(2,26,1)
(51,5,1)
(18,21,1)
(17,38,1)
(5,16,1)
(45,26,1)
(10,8,1)
(0,45,1)
(24,23,1)
(56,53,1)
(60,36,1)
(2,6,1)
(76,8,1)
(75,8,1)
(19,55,1)
(33,56,1)
(40,51,1)
(19,80,1)
(59,18,1)
(68,6,1)
(41,35,1)
(4,19,1)
(58,31,1)
(82,81,1)
(61,70,1)
(43,9,1)
(23,41,1)
(66,3,1)
(48,0,1)
(72,20,1)
(55,47,1)
(22,83,1)
(60,8,1)
(33,19,1)
(50,30,1)
(19,32,1)
(82,8,1)
(38,42,1)
(41,77,1)
(3,49,1)
(77,37,1)
(62,15,1)
(49,34,1)
(1,27,1)
(37,61,1)
(53,63,1)
(2,72,1)
(31,53,1)
(7,68,1)
(25,33,1)
(16,17,1)
(43,76,1)
(80,10,1)
(34,15,1)
(36,48,1)
(26,75,1)
(28,64,1)
(9,63,1)
(21,24,1)
(35,54,1)
(35,29,1)
(38,66,1)
(78,15,2)
(2,33,2)
(80,10,2)
(2,6,2)
(76,8,2)
(33,33,2)
(10,8,2)
(32,82,2)
(9,15,2)
(62,15,2)
(40,6,2)
(18,19,2)
(70,35,2)
(9,63,2)
(74,40,2)
(24,53,2)
(49,34,2)
(15,29,2)
(16,17,2)
(56,19,2)
(26,75,2)
(82,8,2)
(23,19,2)
(22,9,2)
(21,19,2)
(17,38,2)
(41,19,2)
(41,35,2)
(70,19,2)
(76,9,2)
(43,15,2)
(60,8,2)
(28,64,2)
(34,43,2)
(72,33,2)
(56,53,2)
(40,26,2)
(34,15,2)
(83,9,2)
(61,19,2)
(4,19,2)
(37,19,2)
(53,63,2)
(75,8,2)
(77,19,2)
(19,32,2)
(59,19,2)
(38,42,2)
(28,60,2)
(24,19,2)
(35,29,2)
(43,9,2)
(20,33,2)
(38,64,2)
(19,80,2)
(6,28,2)
(2,26,2)
(43,76,2)
-----------------------------------
(0,stridelevels)
(1,dstlist)
(2,GASNETE_STRIDED_HELPER(limit,contiglevel)
(3,count)
(4,srcpos)
(5,limit)
(6,limit = stridelevels - stats->nulldims)
(7,stats)
(8,gasnete_strided_stats_t const *stats)
(9,dstlist != NULL)
(10,stats->dstcontigsz)
(11,while(0)
(12,)
(13,dstpos)
(14,contiglevel)
(15,srclist != NULL)
(16,gasneti_assert(!gasnete_strided_empty(count, stridelevels)
(17,!gasnete_strided_empty(count, stridelevels)
(18,*(dstpos)
(19,srccontigsz == dstcontigsz)
(20,limit)
(21,pdst)
(22,NULL)
(23,dstpos)
(24,*(dstpos)
(25,RET)
(26,contiglevel = stats->dualcontiguity)
(27,dstpos)
(28,stridelevels - stats->nulldims)
(29,void * * srclist)
(30,stats)
(31,srclist)
(32,srccontigsz = stats->srccontigsz)
(33,0)
(34,srclist != NULL && dstlist != NULL && stats != NULL)
(35,* * srcpos = srclist)
(36,nulldims)
(37,*(srcpos)
(38,gasnete_strided_empty(count, stridelevels)
(39,limit)
(40,limit > contiglevel)
(41,srcpos++)
(42,const size_t count[])
(43,dstlist != NULL && stats != NULL)
(44,dualcontiguity)
(45,limit)
(46,srcpos)
(47,srccontigsz)
(48,stats)
(49,gasneti_assert(srclist != NULL && dstlist != NULL && stats != NULL)
(50,dstcontigsz)
(51,contiglevel)
(52,srcpos)
(53,* * dstpos = dstlist)
(54,srclist)
(55,dstcontigsz)
(56,dstpos++)
(57,)
(58,NULL)
(59,dstpos)
(60,stats->nulldims)
(61,psrc)
(62,dstlist)
(63,void * * dstlist)
(64,size_t stridelevels)
(65,contiglevel)
(66,stridelevels)
(67,dstcontigsz)
(68,srccontigsz)
(69,stats)
(70,*(srcpos)
(71,srccontigsz)
(72,contiglevel)
(73,if (srccontigsz == dstcontigsz)
(74,gasneti_assert(limit > contiglevel)
(75,stats->dualcontiguity)
(76,stats != NULL)
(77,srcpos)
(78,NULL)
(79,dstcontigsz)
(80,dstcontigsz = stats->dstcontigsz)
(81,srccontigsz)
(82,stats->srccontigsz)
(83,stats)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^