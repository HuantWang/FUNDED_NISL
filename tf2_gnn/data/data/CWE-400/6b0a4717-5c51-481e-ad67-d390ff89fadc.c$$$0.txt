-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad()
{
    int count;
    /* define a function pointer */
    void (*funcPtr) (int) = badSink;
    /* Initialize count */
    count = -1;
    /* POTENTIAL FLAW: Read count from the console using fscanf() */
    fscanf(stdin, "%d", &count);
    /* use the function pointer */
    funcPtr(count);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,36,37,40,44,46
-----computeFrom-----
26,27
26,28
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad(){    int count;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Read count from the console using fscanf() */    fscanf(stdin, "%d", &count);    /* use the function pointer */    funcPtr(count);}
void
CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad()
CWE400_Resource_Exhaustion__fscanf_fwrite_44_bad
{    int count;    /* define a function pointer */    void (*funcPtr) (int) = badSink;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Read count from the console using fscanf() */    fscanf(stdin, "%d", &count);    /* use the function pointer */    funcPtr(count);}
int count;
int count;
int
count
count
void (*funcPtr) (int) = badSink;
void (*funcPtr) (int) = badSink;
void
(*funcPtr) (int) = badSink
*funcPtr
*
funcPtr
int
int


= badSink
badSink
badSink
count = -1;
count = -1
count
count
-1
1
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
funcPtr(count);
funcPtr(count)
funcPtr
funcPtr
count
count
-----joern-----
(0,15,0)
(12,3,0)
(1,7,0)
(13,10,0)
(8,15,0)
(17,11,0)
(5,8,0)
(7,3,0)
(7,15,0)
(10,15,0)
(4,3,0)
(15,8,0)
(11,2,0)
(15,2,0)
(9,2,0)
(10,2,0)
(16,11,0)
(3,2,0)
(3,7,0)
(14,2,0)
(15,8,1)
(8,5,1)
(4,12,1)
(7,15,1)
(10,15,1)
(13,3,1)
(11,16,1)
(0,11,1)
(10,13,1)
(3,7,1)
(6,10,1)
(12,15,1)
(16,17,1)
(5,0,1)
(1,4,1)
(7,1,1)
(15,8,2)
(10,15,2)
(3,7,2)
(7,15,2)
-----------------------------------
(0,count)
(1,count)
(2,)
(3,fscanf(stdin, "%d", &count)
(4,"%d")
(5,1)
(6,RET)
(7,&count)
(8,-1)
(9,count)
(10,funcPtr(count)
(11,(*funcPtr)
(12,stdin)
(13,count)
(14,funcPtr)
(15,count = -1)
(16,badSink)
(17,funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^