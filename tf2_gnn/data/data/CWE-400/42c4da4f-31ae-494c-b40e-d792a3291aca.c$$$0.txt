-----label-----
0
-----code-----
static void goodB2G2()
{
    int64_t * data;
    data = NULL;
    if(GLOBAL_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)calloc(100, sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(GLOBAL_CONST_FIVE==5)
    {
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
66,67
68,69
68,70
69,70
72,73
72,74
73,74
73,75
74,75
77,78
78,79
79,80
79,81
80,81
82,83
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,38,42,43,47,49,54,56,61,62,63,67,70,71,75,76,81,83
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
45,46
45,47
58,59
58,60
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)calloc(100, sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G2()
goodB2G2
{    int64_t * data;    data = NULL;    if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)calloc(100, sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Deallocate memory */        free(data);    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)calloc(100, sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)calloc(100, sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(GLOBAL_CONST_FIVE==5)    {        /* FIX: Deallocate memory */        free(data);    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        /* FIX: Deallocate memory */        free(data);    }
free(data);
free(data)
free
free
data
data
-----joern-----
(19,24,0)
(13,29,0)
(6,31,0)
(17,5,0)
(5,38,0)
(3,8,0)
(21,9,0)
(9,25,0)
(16,5,0)
(17,24,0)
(25,33,0)
(23,11,0)
(22,27,0)
(14,7,0)
(5,16,0)
(20,27,0)
(31,16,0)
(25,9,0)
(36,34,0)
(29,18,0)
(30,17,0)
(26,30,0)
(18,29,0)
(12,11,0)
(1,17,0)
(14,27,0)
(27,34,0)
(37,29,0)
(0,8,0)
(18,24,0)
(29,17,0)
(5,17,0)
(4,24,0)
(15,14,0)
(16,31,0)
(39,30,0)
(2,16,0)
(38,5,0)
(35,34,0)
(14,17,0)
(32,34,0)
(37,4,1)
(14,27,1)
(18,29,1)
(1,8,1)
(14,15,1)
(21,30,1)
(14,17,1)
(8,0,1)
(30,17,1)
(31,6,1)
(16,31,1)
(4,25,1)
(39,26,1)
(5,16,1)
(26,17,1)
(29,17,1)
(25,9,1)
(2,1,1)
(15,11,1)
(30,39,1)
(11,12,1)
(23,8,1)
(29,13,1)
(4,30,1)
(10,14,1)
(10,11,1)
(9,21,1)
(20,22,1)
(3,27,1)
(27,20,1)
(6,2,1)
(5,38,1)
(17,5,1)
(23,18,1)
(12,23,1)
(13,37,1)
(0,3,1)
(14,11,2)
(1,8,2)
(6,8,2)
(14,17,2)
(29,17,2)
(4,8,2)
(29,8,2)
(39,8,2)
(30,8,2)
(15,11,2)
(16,31,2)
(26,8,2)
(9,30,2)
(13,8,2)
(31,8,2)
(14,27,2)
(16,8,2)
(17,8,2)
(5,16,2)
(18,29,2)
(30,17,2)
(18,8,2)
(5,8,2)
(2,8,2)
(5,38,2)
(37,8,2)
(25,9,2)
(25,30,2)
(17,5,2)
(21,30,2)
-----------------------------------
(0,5)
(1,data)
(2,100)
(3,GLOBAL_CONST_FIVE)
(4,L)
(5,(int64_t *)
(6,int64_t)
(7,)
(8,GLOBAL_CONST_FIVE==5)
(9,-1)
(10,RET)
(11,GLOBAL_CONST_FIVE==5)
(12,5)
(13,0)
(14,free(data)
(15,data)
(16,calloc(100, sizeof(int64_t)
(17,data = (int64_t *)
(18,printLongLongLine(data[0])
(19,if (data == NULL)
(20,NULL)
(21,1)
(22,data)
(23,GLOBAL_CONST_FIVE)
(24,)
(25,exit(-1)
(26,data)
(27,data = NULL)
(28, sizeof(int64_t)
(29,data[0])
(30,data == NULL)
(31,sizeof(int64_t)
(32,data)
(33,)
(34,)
(35,if(GLOBAL_CONST_FIVE==5)
(36,if(GLOBAL_CONST_FIVE==5)
(37,data)
(38,int64_t *)
(39,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^