-----label-----
1
-----code-----
static void
parse_legacy(Eo_Lexer *ls)
{
   eo_lexer_get(ls);
   check(ls, TOK_VALUE);
   ls->tmp.legacy_def = eina_stringshare_add(ls->t.value);
   eo_lexer_get(ls);
   check_next(ls, ';');
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
19,22
20,21
22,23
24,25
26,27
27,28
27,29
28,29
28,30
29,30
29,31
30,31
34,35
34,36
35,36
37,38
37,39
38,39
38,40
39,40
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
-----nextToken-----
2,4,7,9,10,15,17,21,23,25,31,32,33,36,40,41,42,46,48,52,54,55
-----computeFrom-----
27,28
27,29
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
static voidparse_legacy(Eo_Lexer *ls){   eo_lexer_get(ls);   check(ls, TOK_VALUE);   ls->tmp.legacy_def = eina_stringshare_add(ls->t.value);   eo_lexer_get(ls);   check_next(ls, ';');}
static void
parse_legacy(Eo_Lexer *ls)
parse_legacy
Eo_Lexer *ls
Eo_Lexer
Eo_Lexer
*ls
*
ls
{   eo_lexer_get(ls);   check(ls, TOK_VALUE);   ls->tmp.legacy_def = eina_stringshare_add(ls->t.value);   eo_lexer_get(ls);   check_next(ls, ';');}
eo_lexer_get(ls);
eo_lexer_get(ls)
eo_lexer_get
eo_lexer_get
ls
ls
check(ls, TOK_VALUE);
check(ls, TOK_VALUE)
check
check
ls
ls
TOK_VALUE
TOK_VALUE
ls->tmp.legacy_def = eina_stringshare_add(ls->t.value);
ls->tmp.legacy_def = eina_stringshare_add(ls->t.value)
ls->tmp.legacy_def
ls->tmp
ls
ls
tmp
legacy_def
eina_stringshare_add(ls->t.value)
eina_stringshare_add
eina_stringshare_add
ls->t.value
ls->t
ls
ls
t
value
eo_lexer_get(ls);
eo_lexer_get(ls)
eo_lexer_get
eo_lexer_get
ls
ls
check_next(ls, ';');
check_next(ls, ';')
check_next
check_next
ls
ls
';'
-----joern-----
(15,18,0)
(11,10,0)
(17,9,0)
(23,15,0)
(8,13,0)
(8,18,0)
(24,18,0)
(4,8,0)
(22,24,0)
(0,10,0)
(16,13,0)
(19,16,0)
(0,20,0)
(14,17,0)
(1,13,0)
(12,9,0)
(10,0,0)
(21,15,0)
(20,13,0)
(7,1,0)
(2,8,0)
(10,15,0)
(20,0,0)
(6,9,0)
(3,24,0)
(15,10,0)
(9,17,0)
(16,18,0)
(1,18,0)
(24,13,0)
(17,20,0)
(9,18,0)
(12,24,1)
(2,4,1)
(11,15,1)
(10,11,1)
(14,9,1)
(1,18,1)
(9,18,1)
(4,1,1)
(7,20,1)
(16,19,1)
(10,15,1)
(16,18,1)
(9,6,1)
(0,10,1)
(15,18,1)
(23,21,1)
(6,12,1)
(15,23,1)
(8,18,1)
(22,3,1)
(8,2,1)
(17,9,1)
(5,8,1)
(21,17,1)
(17,14,1)
(24,22,1)
(20,0,1)
(24,18,1)
(1,7,1)
(3,16,1)
(15,18,2)
(10,15,2)
(1,18,2)
(0,10,2)
(16,18,2)
(17,9,2)
(8,18,2)
(24,18,2)
(20,0,2)
(9,18,2)
-----------------------------------
(0,eina_stringshare_add(ls->t.value)
(1,eo_lexer_get(ls)
(2,';')
(3,ls)
(4,ls)
(5,RET)
(6,tmp)
(7,ls)
(8,check_next(ls, ';')
(9,ls->tmp)
(10,ls->t.value)
(11,value)
(12,ls)
(13,)
(14,legacy_def)
(15,ls->t)
(16,eo_lexer_get(ls)
(17,ls->tmp.legacy_def)
(18,Eo_Lexer *ls)
(19,ls)
(20,ls->tmp.legacy_def = eina_stringshare_add(ls->t.value)
(21,ls)
(22,TOK_VALUE)
(23,t)
(24,check(ls, TOK_VALUE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^