-----label-----
0
-----code-----
static void machine_kexec_mask_interrupts(void)
{
	unsigned int i;
	struct irq_desc *desc;

	for_each_irq_desc(i, desc) {
		struct irq_chip *chip;

		chip = irq_desc_get_chip(desc);
		if (!chip)
			continue;

		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))
			chip->irq_eoi(&desc->irq_data);

		if (chip->irq_mask)
			chip->irq_mask(&desc->irq_data);

		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))
			chip->irq_disable(&desc->irq_data);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
10,11
11,12
11,13
13,14
15,16
16,17
16,18
17,18
19,20
19,21
22,23
23,24
23,25
23,26
24,25
26,27
28,29
30,31
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
34,35
36,37
36,38
39,40
40,41
40,42
41,42
43,44
43,45
44,45
46,47
48,49
48,50
49,50
50,51
53,54
53,55
54,55
54,56
55,56
55,57
56,57
59,60
59,61
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
73,74
74,75
74,76
75,76
78,79
78,80
79,80
79,81
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
90,91
90,92
91,92
94,95
94,96
95,96
95,97
96,97
96,98
97,98
100,101
101,102
101,103
102,103
104,105
105,106
105,107
106,107
109,110
110,111
110,112
111,112
111,113
112,113
115,116
116,117
116,118
117,118
-----nextToken-----
2,4,6,8,12,14,18,20,21,25,27,29,35,37,38,42,45,47,51,52,57,58,61,65,66,71,72,76,77,81,82,87,88,92,93,98,99,103,107,108,113,114,118,119
-----computeFrom-----
40,41
40,42
54,55
54,56
95,96
95,97
-----guardedBy-----
57,71
58,72
66,77
65,76
98,113
99,114
108,119
107,118
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ProblemStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ContinueStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void machine_kexec_mask_interrupts(void){	unsigned int i;	struct irq_desc *desc;	for_each_irq_desc(i, desc) {		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}}
static void
machine_kexec_mask_interrupts(void)
machine_kexec_mask_interrupts
void
void


{	unsigned int i;	struct irq_desc *desc;	for_each_irq_desc(i, desc) {		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}}
unsigned int i;
unsigned int i;
unsigned int
i
i
struct irq_desc *desc;
struct irq_desc *desc;
struct irq_desc
irq_desc
*desc
*
desc
for_each_irq_desc(i, desc)
for_each_irq_desc(i, desc)
for_each_irq_desc
for_each_irq_desc
i
i
desc
desc
)
{		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}
struct irq_chip *chip;
struct irq_chip *chip;
struct irq_chip
irq_chip
*chip
*
chip
chip = irq_desc_get_chip(desc);
chip = irq_desc_get_chip(desc)
chip
chip
irq_desc_get_chip(desc)
irq_desc_get_chip
irq_desc_get_chip
desc
desc
if (!chip)			continue;
!chip
chip
chip
continue;
if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);
chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
chip->irq_eoi
chip
chip
irq_eoi
irqd_irq_inprogress(&desc->irq_data)
irqd_irq_inprogress
irqd_irq_inprogress
&desc->irq_data
desc->irq_data
desc
desc
irq_data
chip->irq_eoi(&desc->irq_data);
chip->irq_eoi(&desc->irq_data)
chip->irq_eoi
chip
chip
irq_eoi
&desc->irq_data
desc->irq_data
desc
desc
irq_data
if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);
chip->irq_mask
chip
chip
irq_mask
chip->irq_mask(&desc->irq_data);
chip->irq_mask(&desc->irq_data)
chip->irq_mask
chip
chip
irq_mask
&desc->irq_data
desc->irq_data
desc
desc
irq_data
if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);
chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
chip->irq_disable
chip
chip
irq_disable
!irqd_irq_disabled(&desc->irq_data)
irqd_irq_disabled(&desc->irq_data)
irqd_irq_disabled
irqd_irq_disabled
&desc->irq_data
desc->irq_data
desc
desc
irq_data
chip->irq_disable(&desc->irq_data);
chip->irq_disable(&desc->irq_data)
chip->irq_disable
chip
chip
irq_disable
&desc->irq_data
desc->irq_data
desc
desc
irq_data
-----joern-----
(43,45,0)
(33,24,0)
(34,35,0)
(15,0,0)
(51,25,0)
(31,15,0)
(12,17,0)
(13,12,0)
(10,53,0)
(0,15,0)
(6,12,0)
(30,18,0)
(43,16,0)
(1,18,0)
(18,35,0)
(7,31,0)
(16,43,0)
(4,25,0)
(44,33,0)
(10,41,0)
(3,18,0)
(39,50,0)
(44,14,0)
(48,6,0)
(49,9,0)
(26,38,0)
(41,10,0)
(40,26,0)
(42,53,0)
(17,12,0)
(52,18,0)
(46,53,0)
(11,35,0)
(27,50,0)
(53,10,0)
(38,26,0)
(12,18,0)
(33,44,0)
(29,25,0)
(32,13,0)
(22,17,0)
(50,12,0)
(19,9,0)
(24,33,0)
(38,41,0)
(5,18,0)
(37,26,0)
(6,14,0)
(25,51,0)
(21,51,0)
(8,45,0)
(14,44,0)
(20,45,0)
(2,6,0)
(15,31,0)
(45,43,0)
(47,31,0)
(14,6,0)
(41,38,0)
(26,12,0)
(51,21,0)
(24,9,0)
(23,12,0)
(9,24,0)
(38,41,1)
(21,51,1)
(50,39,1)
(39,27,1)
(40,13,1)
(37,40,1)
(27,38,1)
(6,48,1)
(28,14,1)
(53,46,1)
(41,10,1)
(15,31,1)
(16,43,1)
(33,24,1)
(46,42,1)
(22,23,1)
(45,20,1)
(12,17,1)
(13,12,1)
(4,14,1)
(47,50,1)
(0,15,1)
(14,44,1)
(7,47,1)
(51,25,1)
(26,12,1)
(20,8,1)
(13,32,1)
(44,33,1)
(29,4,1)
(31,7,1)
(42,26,1)
(25,29,1)
(8,38,1)
(26,37,1)
(48,2,1)
(9,49,1)
(43,45,1)
(14,6,1)
(28,21,1)
(32,12,1)
(49,19,1)
(38,26,1)
(10,53,1)
(50,12,1)
(27,16,1)
(2,50,1)
(6,12,1)
(40,36,1)
(36,13,1)
(17,22,1)
(2,0,1)
(19,6,1)
(24,9,1)
(42,26,2)
(51,25,2)
(51,14,2)
(0,50,2)
(43,45,2)
(15,50,2)
(8,38,2)
(20,38,2)
(19,6,2)
(16,43,2)
(7,50,2)
(13,12,2)
(41,26,2)
(50,12,2)
(9,6,2)
(43,38,2)
(38,26,2)
(49,6,2)
(15,31,2)
(14,6,2)
(24,9,2)
(16,38,2)
(31,50,2)
(33,24,2)
(10,53,2)
(33,6,2)
(41,10,2)
(0,15,2)
(21,14,2)
(25,14,2)
(38,41,2)
(29,14,2)
(45,38,2)
(26,12,2)
(24,6,2)
(4,14,2)
(47,50,2)
(36,13,2)
(10,26,2)
(44,33,2)
(6,12,2)
(53,26,2)
(44,6,2)
(21,51,2)
(46,26,2)
(12,17,2)
(14,44,2)
-----------------------------------
(0,chip->irq_mask(&desc->irq_data)
(1,if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
(2,chip)
(3,chip)
(4,desc)
(5,if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
(6,chip->irq_disable)
(7,irq_data)
(8,desc)
(9,desc->irq_data)
(10,&desc->irq_data)
(11,desc)
(12,chip = irq_desc_get_chip(desc)
(13,!chip)
(14,chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
(15,&desc->irq_data)
(16,chip->irq_eoi(&desc->irq_data)
(17,irq_desc_get_chip(desc)
(18,)
(19,desc)
(20,irq_data)
(21,chip->irq_disable(&desc->irq_data)
(22,desc)
(23,chip)
(24,&desc->irq_data)
(25,desc->irq_data)
(26,chip->irq_eoi)
(27,chip)
(28,RET)
(29,irq_data)
(30,if (chip->irq_mask)
(31,desc->irq_data)
(32,chip)
(33,irqd_irq_disabled(&desc->irq_data)
(34,i)
(35,)
(36,continue;)
(37,irq_eoi)
(38,chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
(39,irq_mask)
(40,chip)
(41,irqd_irq_inprogress(&desc->irq_data)
(42,desc)
(43,&desc->irq_data)
(44,!irqd_irq_disabled(&desc->irq_data)
(45,desc->irq_data)
(46,irq_data)
(47,desc)
(48,irq_disable)
(49,irq_data)
(50,chip->irq_mask)
(51,&desc->irq_data)
(52,if (!chip)
(53,desc->irq_data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^