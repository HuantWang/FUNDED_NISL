-----label-----
0
-----code-----
static struct device *ehea_register_port(struct ehea_port *port,
					 struct device_node *dn)
{
	int ret;

	port->ofdev.node = of_node_get(dn);
	port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev;

	sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id);
	port->ofdev.dev.release = logical_port_release;

	ret = of_device_register(&port->ofdev);
	if (ret) {
		ehea_error("failed to register device. ret=%d", ret);
		goto out;
	}

	ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id);
        if (ret) {
		ehea_error("failed to register attributes, ret=%d", ret);
		goto out_unreg_of_dev;
	}
	
	return &port->ofdev.dev;

out_unreg_of_dev:
	of_device_unregister(&port->ofdev);
out:
	return NULL;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
7,8
7,9
8,9
10,11
10,12
13,14
13,15
14,15
16,17
16,18
19,20
19,21
19,22
19,23
19,24
19,25
19,26
19,27
19,28
19,29
19,30
19,31
20,21
21,22
21,23
23,24
25,26
26,27
26,28
27,28
27,29
28,29
28,30
29,30
33,34
33,35
34,35
36,37
38,39
39,40
39,41
40,41
40,42
41,42
41,43
42,43
42,44
43,44
48,49
49,50
49,51
50,51
50,52
51,52
51,53
52,53
52,54
53,54
59,60
60,61
60,62
60,63
60,64
61,62
63,64
63,65
64,65
64,66
65,66
65,67
66,67
72,73
72,74
73,74
76,77
77,78
77,79
78,79
78,80
79,80
79,81
80,81
80,82
81,82
86,87
88,89
89,90
89,91
90,91
92,93
92,94
93,94
95,96
96,97
96,98
97,98
100,101
100,102
101,102
103,104
103,105
104,105
105,106
105,107
105,108
106,107
109,110
111,112
113,114
114,115
114,116
115,116
117,118
117,119
117,120
118,119
120,121
121,122
121,123
122,123
122,124
123,124
127,128
128,129
130,131
130,132
131,132
133,134
133,135
134,135
135,136
135,137
135,138
136,137
139,140
141,142
143,144
144,145
145,146
145,147
146,147
146,148
147,148
151,152
151,153
153,154
154,155
154,156
155,156
157,158
158,159
158,160
159,160
162,163
162,164
164,165
165,166
-----nextToken-----
3,5,6,9,11,12,15,17,18,22,24,30,31,32,35,37,44,45,46,47,54,55,56,57,58,62,67,68,69,70,71,74,75,82,83,84,85,87,91,94,98,99,102,107,108,110,112,116,119,124,125,126,129,132,137,138,140,142,148,149,150,152,156,160,161,163,166
-----computeFrom-----
26,27
26,28
39,40
39,41
77,78
77,79
89,90
89,91
114,115
114,116
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;UnaryExpression;FieldReference;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;GotoStatement;Name;ReturnStatement;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LabelStatement;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct device *ehea_register_port(struct ehea_port *port,					 struct device_node *dn){	int ret;	port->ofdev.node = of_node_get(dn);	port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev;	sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id);	port->ofdev.dev.release = logical_port_release;	ret = of_device_register(&port->ofdev);	if (ret) {		ehea_error("failed to register device. ret=%d", ret);		goto out;	}	ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id);        if (ret) {		ehea_error("failed to register attributes, ret=%d", ret);		goto out_unreg_of_dev;	}		return &port->ofdev.dev;out_unreg_of_dev:	of_device_unregister(&port->ofdev);out:	return NULL;}
static struct device
device
*ehea_register_port(struct ehea_port *port,					 struct device_node *dn)
*
ehea_register_port
struct ehea_port *port
struct ehea_port
ehea_port
*port
*
port
struct device_node *dn
struct device_node
device_node
*dn
*
dn
{	int ret;	port->ofdev.node = of_node_get(dn);	port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev;	sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id);	port->ofdev.dev.release = logical_port_release;	ret = of_device_register(&port->ofdev);	if (ret) {		ehea_error("failed to register device. ret=%d", ret);		goto out;	}	ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id);        if (ret) {		ehea_error("failed to register attributes, ret=%d", ret);		goto out_unreg_of_dev;	}		return &port->ofdev.dev;out_unreg_of_dev:	of_device_unregister(&port->ofdev);out:	return NULL;}
int ret;
int ret;
int
ret
ret
port->ofdev.node = of_node_get(dn);
port->ofdev.node = of_node_get(dn)
port->ofdev.node
port->ofdev
port
port
ofdev
node
of_node_get(dn)
of_node_get
of_node_get
dn
dn
port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev;
port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev
port->ofdev.dev.parent
port->ofdev.dev
port->ofdev
port
port
ofdev
dev
parent
&port->adapter->ebus_dev->ofdev.dev
port->adapter->ebus_dev->ofdev.dev
port->adapter->ebus_dev->ofdev
port->adapter->ebus_dev
port->adapter
port
port
adapter
ebus_dev
ofdev
dev
sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id);
sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id)
sprintf
sprintf
port->ofdev.dev.bus_id
port->ofdev.dev
port->ofdev
port
port
ofdev
dev
bus_id
"port%d"
port->logical_port_id
port
port
logical_port_id
port->ofdev.dev.release = logical_port_release;
port->ofdev.dev.release = logical_port_release
port->ofdev.dev.release
port->ofdev.dev
port->ofdev
port
port
ofdev
dev
release
logical_port_release
logical_port_release
ret = of_device_register(&port->ofdev);
ret = of_device_register(&port->ofdev)
ret
ret
of_device_register(&port->ofdev)
of_device_register
of_device_register
&port->ofdev
port->ofdev
port
port
ofdev
if (ret) {		ehea_error("failed to register device. ret=%d", ret);		goto out;	}
ret
ret
{		ehea_error("failed to register device. ret=%d", ret);		goto out;	}
ehea_error("failed to register device. ret=%d", ret);
ehea_error("failed to register device. ret=%d", ret)
ehea_error
ehea_error
"failed to register device. ret=%d"
ret
ret
goto out;
out
ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id);
ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id)
ret
ret
device_create_file(&port->ofdev.dev, &dev_attr_log_port_id)
device_create_file
device_create_file
&port->ofdev.dev
port->ofdev.dev
port->ofdev
port
port
ofdev
dev
&dev_attr_log_port_id
dev_attr_log_port_id
dev_attr_log_port_id
if (ret) {		ehea_error("failed to register attributes, ret=%d", ret);		goto out_unreg_of_dev;	}
ret
ret
{		ehea_error("failed to register attributes, ret=%d", ret);		goto out_unreg_of_dev;	}
ehea_error("failed to register attributes, ret=%d", ret);
ehea_error("failed to register attributes, ret=%d", ret)
ehea_error
ehea_error
"failed to register attributes, ret=%d"
ret
ret
goto out_unreg_of_dev;
out_unreg_of_dev
return &port->ofdev.dev;
&port->ofdev.dev
port->ofdev.dev
port->ofdev
port
port
ofdev
dev
out_unreg_of_dev:	of_device_unregister(&port->ofdev);
out_unreg_of_dev
of_device_unregister(&port->ofdev);
of_device_unregister(&port->ofdev)
of_device_unregister
of_device_unregister
&port->ofdev
port->ofdev
port
port
ofdev
out:	return NULL;
out
return NULL;
NULL
NULL
-----joern-----
(73,17,0)
(14,53,0)
(79,99,0)
(93,75,0)
(13,3,0)
(78,3,0)
(88,25,0)
(58,71,0)
(68,34,0)
(96,53,0)
(60,42,0)
(95,12,0)
(44,68,0)
(51,47,0)
(98,81,0)
(37,75,0)
(64,53,0)
(82,43,0)
(41,26,0)
(49,28,0)
(61,71,0)
(28,53,0)
(99,85,0)
(28,83,0)
(0,9,0)
(19,73,0)
(65,53,0)
(38,81,0)
(26,3,0)
(46,30,0)
(36,24,0)
(64,6,0)
(14,0,0)
(85,13,0)
(80,3,0)
(15,2,0)
(94,47,0)
(24,3,0)
(96,57,0)
(2,36,0)
(23,29,0)
(66,96,0)
(1,84,0)
(63,14,0)
(81,1,0)
(32,3,0)
(16,65,0)
(83,9,0)
(12,13,0)
(77,33,0)
(17,73,0)
(29,3,0)
(71,29,0)
(48,4,0)
(31,3,0)
(30,43,0)
(9,83,0)
(30,53,0)
(70,14,0)
(99,17,0)
(22,59,0)
(8,94,0)
(76,18,0)
(24,36,0)
(34,68,0)
(84,29,0)
(59,22,0)
(1,81,0)
(35,83,0)
(43,82,0)
(11,3,0)
(56,6,0)
(10,94,0)
(52,3,0)
(40,30,0)
(39,3,0)
(55,65,0)
(20,47,0)
(22,53,0)
(81,53,0)
(26,12,0)
(65,20,0)
(97,57,0)
(57,12,0)
(94,3,0)
(83,28,0)
(26,47,0)
(9,0,0)
(62,9,0)
(92,24,0)
(69,4,0)
(47,20,0)
(91,96,0)
(94,12,0)
(11,34,0)
(36,82,0)
(60,32,0)
(72,0,0)
(17,99,0)
(6,10,0)
(32,60,0)
(27,22,0)
(71,33,0)
(43,30,0)
(34,11,0)
(84,1,0)
(29,84,0)
(4,73,0)
(4,53,0)
(94,59,0)
(85,99,0)
(45,43,0)
(86,64,0)
(57,96,0)
(82,36,0)
(10,6,0)
(0,14,0)
(87,17,0)
(59,32,0)
(8,26,0)
(13,85,0)
(47,18,0)
(73,4,0)
(26,59,0)
(75,24,0)
(89,22,0)
(18,3,0)
(75,25,0)
(68,53,0)
(67,60,0)
(5,20,0)
(6,64,0)
(90,59,0)
(20,65,0)
(12,57,0)
(74,68,0)
(36,2,0)
(7,28,0)
(54,64,0)
(0,3,0)
(86,21,1)
(83,28,1)
(95,57,1)
(43,30,1)
(64,54,1)
(91,32,1)
(73,4,1)
(59,22,1)
(90,22,1)
(83,35,1)
(98,23,1)
(22,27,1)
(26,59,1)
(94,12,1)
(66,91,1)
(71,29,1)
(36,82,1)
(77,71,1)
(40,92,1)
(14,53,1)
(23,18,1)
(28,53,1)
(48,12,1)
(65,53,1)
(73,19,1)
(96,53,1)
(32,60,1)
(4,69,1)
(6,56,1)
(65,55,1)
(0,14,1)
(70,72,1)
(88,75,1)
(67,59,1)
(7,49,1)
(18,76,1)
(41,11,1)
(14,63,1)
(8,26,1)
(13,85,1)
(46,40,1)
(16,0,1)
(34,68,1)
(49,13,1)
(15,82,1)
(79,17,1)
(30,46,1)
(57,97,1)
(38,98,1)
(81,38,1)
(85,99,1)
(84,1,1)
(8,94,1)
(99,79,1)
(60,67,1)
(0,9,1)
(26,47,1)
(5,65,1)
(56,64,1)
(2,15,1)
(36,2,1)
(37,93,1)
(20,5,1)
(58,61,1)
(10,6,1)
(9,62,1)
(68,53,1)
(35,28,1)
(9,83,1)
(19,4,1)
(41,77,1)
(69,48,1)
(63,70,1)
(29,84,1)
(74,88,1)
(94,10,1)
(60,42,1)
(75,24,1)
(47,20,1)
(76,47,1)
(57,96,1)
(51,20,1)
(72,9,1)
(28,7,1)
(92,50,1)
(22,53,1)
(44,74,1)
(68,44,1)
(93,21,1)
(12,95,1)
(96,66,1)
(26,12,1)
(12,57,1)
(62,83,1)
(45,30,1)
(6,64,1)
(30,53,1)
(50,29,1)
(75,37,1)
(20,65,1)
(87,73,1)
(1,81,1)
(43,45,1)
(54,86,1)
(61,50,1)
(55,16,1)
(21,24,1)
(11,34,1)
(47,51,1)
(64,53,1)
(94,59,1)
(97,96,1)
(94,47,1)
(17,73,1)
(59,90,1)
(27,89,1)
(26,41,1)
(99,17,1)
(4,53,1)
(81,53,1)
(17,87,1)
(71,58,1)
(24,36,1)
(82,43,1)
(20,65,2)
(74,21,2)
(36,2,2)
(34,21,2)
(9,83,2)
(65,53,2)
(43,30,2)
(86,21,2)
(10,21,2)
(26,47,2)
(43,50,2)
(94,12,2)
(94,21,2)
(17,73,2)
(64,53,2)
(96,53,2)
(68,21,2)
(56,21,2)
(73,4,2)
(15,50,2)
(61,50,2)
(83,28,2)
(92,50,2)
(59,22,2)
(40,50,2)
(24,36,2)
(82,43,2)
(8,94,2)
(64,21,2)
(28,53,2)
(37,21,2)
(57,96,2)
(85,99,2)
(82,50,2)
(75,24,2)
(29,84,2)
(71,50,2)
(36,50,2)
(30,53,2)
(14,53,2)
(41,50,2)
(46,50,2)
(0,9,2)
(54,21,2)
(4,53,2)
(10,6,2)
(26,59,2)
(81,53,2)
(94,59,2)
(6,64,2)
(12,57,2)
(68,53,2)
(2,50,2)
(26,21,2)
(84,1,2)
(34,68,2)
(60,42,2)
(94,47,2)
(6,21,2)
(45,50,2)
(11,21,2)
(93,21,2)
(1,81,2)
(11,34,2)
(22,53,2)
(24,50,2)
(36,82,2)
(44,21,2)
(32,60,2)
(99,17,2)
(77,50,2)
(0,14,2)
(41,21,2)
(58,50,2)
(88,21,2)
(26,50,2)
(71,29,2)
(75,21,2)
(26,12,2)
(8,26,2)
(30,50,2)
(13,85,2)
(47,20,2)
(21,50,2)
-----------------------------------
(0,sprintf(port->ofdev.dev.bus_id, "port%d", port->logical_port_id)
(1,&port->ofdev)
(2,&dev_attr_log_port_id)
(3,)
(4,port->adapter)
(5,dev)
(6,port->ofdev.dev)
(7,ofdev)
(8,RET)
(9,port->ofdev.dev.bus_id)
(10,&port->ofdev.dev)
(11,of_device_unregister(&port->ofdev)
(12,port->ofdev.dev.parent)
(13,port->ofdev.dev.parent = &port->adapter->ebus_dev->ofdev.dev)
(14,port->logical_port_id)
(15,dev_attr_log_port_id)
(16,port)
(17,port->adapter->ebus_dev->ofdev)
(18,port->ofdev.dev.release = logical_port_release)
(19,ebus_dev)
(20,port->ofdev.dev)
(21,ret)
(22,port->ofdev)
(23,ret)
(24,ret = device_create_file(&port->ofdev.dev, &dev_attr_log_port_id)
(25,)
(26,return NULL;)
(27,ofdev)
(28,port->ofdev)
(29,ret = of_device_register(&port->ofdev)
(30,port->ofdev)
(31,out:)
(32,port->ofdev.node = of_node_get(dn)
(33,)
(34,&port->ofdev)
(35,dev)
(36,device_create_file(&port->ofdev.dev, &dev_attr_log_port_id)
(37,ret)
(38,ofdev)
(39,if (ret)
(40,port)
(41,NULL)
(42,struct device_node *dn)
(43,port->ofdev.dev)
(44,ofdev)
(45,dev)
(46,ofdev)
(47,port->ofdev.dev.release)
(48,port)
(49,port)
(50,ret)
(51,release)
(52,out_unreg_of_dev:)
(53,struct ehea_port *port)
(54,ofdev)
(55,ofdev)
(56,dev)
(57,port->ofdev.dev)
(58,ret)
(59,port->ofdev.node)
(60,of_node_get(dn)
(61,"failed to register device. ret=%d")
(62,bus_id)
(63,logical_port_id)
(64,port->ofdev)
(65,port->ofdev)
(66,ofdev)
(67,dn)
(68,port->ofdev)
(69,adapter)
(70,port)
(71,ehea_error("failed to register device. ret=%d", ret)
(72,"port%d")
(73,port->adapter->ebus_dev)
(74,port)
(75,ehea_error("failed to register attributes, ret=%d", ret)
(76,logical_port_release)
(77,goto out;)
(78,if (ret)
(79,dev)
(80,ret)
(81,port->ofdev)
(82,&port->ofdev.dev)
(83,port->ofdev.dev)
(84,of_device_register(&port->ofdev)
(85,&port->adapter->ebus_dev->ofdev.dev)
(86,port)
(87,ofdev)
(88,goto out_unreg_of_dev;)
(89,port)
(90,node)
(91,port)
(92,ret)
(93,"failed to register attributes, ret=%d")
(94,return &port->ofdev.dev;)
(95,parent)
(96,port->ofdev)
(97,dev)
(98,port)
(99,port->adapter->ebus_dev->ofdev.dev)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^