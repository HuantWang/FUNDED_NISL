-----label-----
1
-----code-----
void pcibios_report_status(u_int status_mask, int warn)
{
	struct list_head *l;

	list_for_each(l, &pci_root_buses) {
		struct pci_bus *bus = pci_bus_b(l);

		pcibios_bus_report_status(bus, status_mask, warn);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
10,11
10,12
12,13
14,15
14,16
14,17
14,18
15,16
16,17
16,18
17,18
19,20
19,21
22,23
23,24
23,25
23,26
24,25
26,27
28,29
29,30
31,32
32,33
32,34
33,34
34,35
34,36
35,36
37,38
37,39
37,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
47,50
47,51
48,49
50,51
52,53
54,55
-----nextToken-----
2,4,7,9,11,13,18,20,21,25,27,30,36,38,39,43,45,49,51,53,55
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;ProblemStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void pcibios_report_status(u_int status_mask, int warn){	struct list_head *l;	list_for_each(l, &pci_root_buses) {		struct pci_bus *bus = pci_bus_b(l);		pcibios_bus_report_status(bus, status_mask, warn);	}}
void
pcibios_report_status(u_int status_mask, int warn)
pcibios_report_status
u_int status_mask
u_int
u_int
status_mask
status_mask
int warn
int
warn
warn
{	struct list_head *l;	list_for_each(l, &pci_root_buses) {		struct pci_bus *bus = pci_bus_b(l);		pcibios_bus_report_status(bus, status_mask, warn);	}}
struct list_head *l;
struct list_head *l;
struct list_head
list_head
*l
*
l
list_for_each(l, &pci_root_buses)
list_for_each(l, &pci_root_buses)
list_for_each
list_for_each
l
l
&pci_root_buses
pci_root_buses
pci_root_buses
)
{		struct pci_bus *bus = pci_bus_b(l);		pcibios_bus_report_status(bus, status_mask, warn);	}
struct pci_bus *bus = pci_bus_b(l);
struct pci_bus *bus = pci_bus_b(l);
struct pci_bus
pci_bus
*bus = pci_bus_b(l)
*
bus
= pci_bus_b(l)
pci_bus_b(l)
pci_bus_b
pci_bus_b
l
l
pcibios_bus_report_status(bus, status_mask, warn);
pcibios_bus_report_status(bus, status_mask, warn)
pcibios_bus_report_status
pcibios_bus_report_status
bus
bus
status_mask
status_mask
warn
warn
-----joern-----
(2,12,0)
(6,9,0)
(9,14,0)
(0,8,0)
(9,12,0)
(3,5,0)
(1,9,0)
(4,2,0)
(7,12,0)
(2,5,0)
(9,2,0)
(12,8,0)
(5,2,0)
(9,13,0)
(11,9,0)
(9,11,1)
(11,1,1)
(9,13,1)
(3,4,1)
(1,6,1)
(9,14,1)
(10,9,1)
(6,2,1)
(5,3,1)
(9,2,1)
(2,5,1)
(2,5,2)
(9,14,2)
(9,2,2)
(9,13,2)
-----------------------------------
(0,l)
(1,status_mask)
(2,*bus = pci_bus_b(l)
(3,l)
(4,bus)
(5,pci_bus_b(l)
(6,bus)
(7,bus)
(8,)
(9,pcibios_bus_report_status(bus, status_mask, warn)
(10,RET)
(11,warn)
(12,)
(13,int warn)
(14,u_int status_mask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^