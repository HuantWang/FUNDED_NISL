-----label-----
1
-----code-----
soter_status_t soter_rsa_key_pair_gen_cleanup(soter_rsa_key_pair_gen_t* ctx)
{
    SOTER_CHECK_PARAM(ctx);
    if (ctx->pkey_ctx) {
        EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);
        if (pkey) {
            EVP_PKEY_free(pkey);
        }
        EVP_PKEY_CTX_free(ctx->pkey_ctx);
    }
    return SOTER_SUCCESS;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
9,11
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
25,26
26,27
26,28
27,28
29,30
29,31
29,32
32,33
33,34
33,35
34,35
36,37
36,38
37,38
40,41
40,42
41,42
43,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
58,59
59,60
-----nextToken-----
3,5,8,10,11,16,18,22,23,28,30,31,35,38,39,42,47,49,53,56,57,60
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
soter_status_t soter_rsa_key_pair_gen_cleanup(soter_rsa_key_pair_gen_t* ctx){    SOTER_CHECK_PARAM(ctx);    if (ctx->pkey_ctx) {        EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);        if (pkey) {            EVP_PKEY_free(pkey);        }        EVP_PKEY_CTX_free(ctx->pkey_ctx);    }    return SOTER_SUCCESS;}
soter_status_t
soter_status_t
soter_rsa_key_pair_gen_cleanup(soter_rsa_key_pair_gen_t* ctx)
soter_rsa_key_pair_gen_cleanup
soter_rsa_key_pair_gen_t* ctx
soter_rsa_key_pair_gen_t
soter_rsa_key_pair_gen_t
* ctx
*
ctx
{    SOTER_CHECK_PARAM(ctx);    if (ctx->pkey_ctx) {        EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);        if (pkey) {            EVP_PKEY_free(pkey);        }        EVP_PKEY_CTX_free(ctx->pkey_ctx);    }    return SOTER_SUCCESS;}
SOTER_CHECK_PARAM(ctx);
SOTER_CHECK_PARAM(ctx)
SOTER_CHECK_PARAM
SOTER_CHECK_PARAM
ctx
ctx
if (ctx->pkey_ctx) {        EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);        if (pkey) {            EVP_PKEY_free(pkey);        }        EVP_PKEY_CTX_free(ctx->pkey_ctx);    }
ctx->pkey_ctx
ctx
ctx
pkey_ctx
{        EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);        if (pkey) {            EVP_PKEY_free(pkey);        }        EVP_PKEY_CTX_free(ctx->pkey_ctx);    }
EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);
EVP_PKEY* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx);
EVP_PKEY
EVP_PKEY
* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx)
*
pkey
= EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx)
EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx)
EVP_PKEY_CTX_get0_pkey
EVP_PKEY_CTX_get0_pkey
ctx->pkey_ctx
ctx
ctx
pkey_ctx
if (pkey) {            EVP_PKEY_free(pkey);        }
pkey
pkey
{            EVP_PKEY_free(pkey);        }
EVP_PKEY_free(pkey);
EVP_PKEY_free(pkey)
EVP_PKEY_free
EVP_PKEY_free
pkey
pkey
EVP_PKEY_CTX_free(ctx->pkey_ctx);
EVP_PKEY_CTX_free(ctx->pkey_ctx)
EVP_PKEY_CTX_free
EVP_PKEY_CTX_free
ctx->pkey_ctx
ctx
ctx
pkey_ctx
return SOTER_SUCCESS;
SOTER_SUCCESS
SOTER_SUCCESS
-----joern-----
(27,22,0)
(3,27,0)
(26,14,0)
(7,17,0)
(9,24,0)
(9,18,0)
(13,18,0)
(11,22,0)
(16,12,0)
(23,10,0)
(1,17,0)
(21,10,0)
(27,3,0)
(6,14,0)
(19,13,0)
(25,9,0)
(24,10,0)
(2,9,0)
(22,18,0)
(8,22,0)
(16,3,0)
(6,18,0)
(0,6,0)
(15,13,0)
(20,16,0)
(17,14,0)
(3,10,0)
(22,27,0)
(24,9,0)
(4,3,0)
(6,0,1)
(9,18,1)
(4,13,1)
(13,18,1)
(11,4,1)
(2,5,1)
(22,8,1)
(9,25,1)
(17,7,1)
(7,13,1)
(24,9,1)
(16,20,1)
(7,24,1)
(2,16,1)
(25,2,1)
(5,3,1)
(16,3,1)
(27,22,1)
(3,27,1)
(13,19,1)
(20,5,1)
(19,15,1)
(6,18,1)
(1,17,1)
(15,6,1)
(8,11,1)
(22,18,1)
(13,18,2)
(16,3,2)
(2,13,2)
(3,27,2)
(11,13,2)
(25,13,2)
(16,5,2)
(24,13,2)
(27,13,2)
(6,18,2)
(1,17,2)
(8,13,2)
(9,13,2)
(22,13,2)
(3,13,2)
(22,18,2)
(27,22,2)
(4,13,2)
(20,5,2)
(9,18,2)
(5,13,2)
(24,9,2)
-----------------------------------
(0,ctx)
(1,RET)
(2,ctx)
(3,* pkey = EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx)
(4,pkey)
(5,pkey)
(6,SOTER_CHECK_PARAM(ctx)
(7,SOTER_SUCCESS)
(8,pkey_ctx)
(9,ctx->pkey_ctx)
(10,)
(11,ctx)
(12,)
(13,ctx->pkey_ctx)
(14,)
(15,ctx)
(16,EVP_PKEY_free(pkey)
(17,return SOTER_SUCCESS;)
(18,soter_rsa_key_pair_gen_t* ctx)
(19,pkey_ctx)
(20,pkey)
(21,pkey)
(22,ctx->pkey_ctx)
(23,if (pkey)
(24,EVP_PKEY_CTX_free(ctx->pkey_ctx)
(25,pkey_ctx)
(26,if (ctx->pkey_ctx)
(27,EVP_PKEY_CTX_get0_pkey(ctx->pkey_ctx)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^