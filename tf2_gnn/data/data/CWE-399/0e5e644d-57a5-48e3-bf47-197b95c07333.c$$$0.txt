-----label-----
1
-----code-----
static int ethoc_remove(struct platform_device *pdev)
{
	struct net_device *netdev = platform_get_drvdata(pdev);
	struct ethoc *priv = netdev_priv(netdev);

	platform_set_drvdata(pdev, NULL);

	if (netdev) {
		netif_napi_del(&priv->napi);
		phy_disconnect(priv->phy);
		priv->phy = NULL;

		if (priv->mdio) {
			mdiobus_unregister(priv->mdio);
			kfree(priv->mdio->irq);
			mdiobus_free(priv->mdio);
		}
		unregister_netdev(netdev);
		free_netdev(netdev);
	}

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
29,32
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
39,42
40,41
42,43
44,45
46,47
46,48
47,48
49,50
49,51
49,52
49,53
49,54
49,55
50,51
51,52
51,53
52,53
54,55
55,56
55,57
56,57
59,60
60,61
60,62
61,62
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
73,74
75,76
75,77
76,77
76,78
77,78
80,81
80,82
80,83
81,82
82,83
82,84
83,84
85,86
85,87
86,87
89,90
90,91
90,92
91,92
93,94
93,95
94,95
94,96
95,96
99,100
100,101
100,102
101,102
103,104
103,105
104,105
107,108
108,109
108,110
109,110
111,112
113,114
114,115
114,116
115,116
117,118
119,120
-----nextToken-----
2,4,7,9,10,15,17,18,22,24,28,30,31,35,37,41,43,45,48,53,57,58,62,65,66,71,72,74,78,79,84,87,88,92,96,97,98,102,105,106,110,112,116,118,120
-----computeFrom-----
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int ethoc_remove(struct platform_device *pdev){	struct net_device *netdev = platform_get_drvdata(pdev);	struct ethoc *priv = netdev_priv(netdev);	platform_set_drvdata(pdev, NULL);	if (netdev) {		netif_napi_del(&priv->napi);		phy_disconnect(priv->phy);		priv->phy = NULL;		if (priv->mdio) {			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}		unregister_netdev(netdev);		free_netdev(netdev);	}	return 0;}
static int
ethoc_remove(struct platform_device *pdev)
ethoc_remove
struct platform_device *pdev
struct platform_device
platform_device
*pdev
*
pdev
{	struct net_device *netdev = platform_get_drvdata(pdev);	struct ethoc *priv = netdev_priv(netdev);	platform_set_drvdata(pdev, NULL);	if (netdev) {		netif_napi_del(&priv->napi);		phy_disconnect(priv->phy);		priv->phy = NULL;		if (priv->mdio) {			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}		unregister_netdev(netdev);		free_netdev(netdev);	}	return 0;}
struct net_device *netdev = platform_get_drvdata(pdev);
struct net_device *netdev = platform_get_drvdata(pdev);
struct net_device
net_device
*netdev = platform_get_drvdata(pdev)
*
netdev
= platform_get_drvdata(pdev)
platform_get_drvdata(pdev)
platform_get_drvdata
platform_get_drvdata
pdev
pdev
struct ethoc *priv = netdev_priv(netdev);
struct ethoc *priv = netdev_priv(netdev);
struct ethoc
ethoc
*priv = netdev_priv(netdev)
*
priv
= netdev_priv(netdev)
netdev_priv(netdev)
netdev_priv
netdev_priv
netdev
netdev
platform_set_drvdata(pdev, NULL);
platform_set_drvdata(pdev, NULL)
platform_set_drvdata
platform_set_drvdata
pdev
pdev
NULL
NULL
if (netdev) {		netif_napi_del(&priv->napi);		phy_disconnect(priv->phy);		priv->phy = NULL;		if (priv->mdio) {			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}		unregister_netdev(netdev);		free_netdev(netdev);	}
netdev
netdev
{		netif_napi_del(&priv->napi);		phy_disconnect(priv->phy);		priv->phy = NULL;		if (priv->mdio) {			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}		unregister_netdev(netdev);		free_netdev(netdev);	}
netif_napi_del(&priv->napi);
netif_napi_del(&priv->napi)
netif_napi_del
netif_napi_del
&priv->napi
priv->napi
priv
priv
napi
phy_disconnect(priv->phy);
phy_disconnect(priv->phy)
phy_disconnect
phy_disconnect
priv->phy
priv
priv
phy
priv->phy = NULL;
priv->phy = NULL
priv->phy
priv
priv
phy
NULL
NULL
if (priv->mdio) {			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}
priv->mdio
priv
priv
mdio
{			mdiobus_unregister(priv->mdio);			kfree(priv->mdio->irq);			mdiobus_free(priv->mdio);		}
mdiobus_unregister(priv->mdio);
mdiobus_unregister(priv->mdio)
mdiobus_unregister
mdiobus_unregister
priv->mdio
priv
priv
mdio
kfree(priv->mdio->irq);
kfree(priv->mdio->irq)
kfree
kfree
priv->mdio->irq
priv->mdio
priv
priv
mdio
irq
mdiobus_free(priv->mdio);
mdiobus_free(priv->mdio)
mdiobus_free
mdiobus_free
priv->mdio
priv
priv
mdio
unregister_netdev(netdev);
unregister_netdev(netdev)
unregister_netdev
unregister_netdev
netdev
netdev
free_netdev(netdev);
free_netdev(netdev)
free_netdev
free_netdev
netdev
netdev
return 0;
0
-----joern-----
(41,12,0)
(18,37,0)
(5,34,0)
(23,40,0)
(4,28,0)
(38,37,0)
(44,36,0)
(39,34,0)
(11,16,0)
(31,14,0)
(48,24,0)
(30,5,0)
(36,4,0)
(9,5,0)
(34,5,0)
(23,0,0)
(37,1,0)
(37,38,0)
(34,4,0)
(21,0,0)
(14,47,0)
(4,53,0)
(6,7,0)
(19,12,0)
(10,47,0)
(5,53,0)
(29,53,0)
(7,40,0)
(9,52,0)
(1,5,0)
(57,1,0)
(26,12,0)
(49,6,0)
(27,16,0)
(22,1,0)
(17,0,0)
(19,47,0)
(1,37,0)
(38,40,0)
(33,53,0)
(35,9,0)
(10,25,0)
(55,5,0)
(12,5,0)
(43,47,0)
(42,46,0)
(52,47,0)
(16,53,0)
(0,23,0)
(2,53,0)
(0,5,0)
(45,24,0)
(7,6,0)
(24,5,0)
(51,28,0)
(12,19,0)
(28,4,0)
(36,47,0)
(28,56,0)
(6,5,0)
(14,4,0)
(13,55,0)
(3,55,0)
(32,6,0)
(16,56,0)
(54,4,0)
(24,25,0)
(8,52,0)
(46,53,0)
(46,9,0)
(25,10,0)
(25,24,0)
(15,9,0)
(50,46,0)
(18,1,1)
(36,44,1)
(14,31,1)
(32,49,1)
(34,39,1)
(20,16,1)
(31,55,1)
(24,5,1)
(12,5,1)
(44,14,1)
(37,18,1)
(52,8,1)
(48,45,1)
(9,5,1)
(10,25,1)
(24,48,1)
(0,21,1)
(39,30,1)
(19,12,1)
(1,5,1)
(21,17,1)
(6,32,1)
(55,5,1)
(3,13,1)
(11,5,1)
(38,37,1)
(8,9,1)
(35,19,1)
(55,3,1)
(22,57,1)
(57,23,1)
(14,4,1)
(51,54,1)
(1,22,1)
(50,20,1)
(7,6,1)
(13,52,1)
(15,35,1)
(23,0,1)
(28,56,1)
(37,1,1)
(4,28,1)
(41,10,1)
(27,11,1)
(25,24,1)
(46,50,1)
(46,9,1)
(45,20,1)
(36,4,1)
(42,46,1)
(34,4,1)
(16,56,1)
(9,15,1)
(0,5,1)
(16,27,1)
(28,51,1)
(5,34,1)
(30,4,1)
(50,36,1)
(12,26,1)
(31,7,1)
(26,41,1)
(6,5,1)
(49,38,1)
(17,55,1)
(3,20,2)
(46,9,2)
(7,6,2)
(6,5,2)
(24,20,2)
(13,20,2)
(45,20,2)
(6,55,2)
(0,55,2)
(19,20,2)
(5,34,2)
(10,25,2)
(32,55,2)
(17,55,2)
(28,56,2)
(9,5,2)
(22,55,2)
(38,55,2)
(1,5,2)
(7,55,2)
(38,37,2)
(42,46,2)
(48,20,2)
(36,20,2)
(41,20,2)
(44,20,2)
(23,55,2)
(36,4,2)
(25,24,2)
(26,20,2)
(19,12,2)
(16,56,2)
(1,55,2)
(37,1,2)
(9,20,2)
(21,55,2)
(4,28,2)
(49,55,2)
(8,20,2)
(15,20,2)
(55,5,2)
(34,4,2)
(31,20,2)
(57,55,2)
(55,20,2)
(10,20,2)
(0,5,2)
(23,0,2)
(25,20,2)
(24,5,2)
(18,55,2)
(37,55,2)
(35,20,2)
(12,20,2)
(12,5,2)
(14,4,2)
(14,20,2)
(52,20,2)
-----------------------------------
(0,priv->mdio)
(1,priv->mdio)
(2,netdev)
(3,mdio)
(4,*netdev = platform_get_drvdata(pdev)
(5,*priv = netdev_priv(netdev)
(6,priv->mdio)
(7,mdiobus_free(priv->mdio)
(8,NULL)
(9,priv->phy)
(10,netif_napi_del(&priv->napi)
(11,pdev)
(12,priv->phy)
(13,priv)
(14,unregister_netdev(netdev)
(15,phy)
(16,platform_set_drvdata(pdev, NULL)
(17,priv)
(18,irq)
(19,phy_disconnect(priv->phy)
(20,netdev)
(21,mdio)
(22,mdio)
(23,mdiobus_unregister(priv->mdio)
(24,priv->napi)
(25,&priv->napi)
(26,phy)
(27,NULL)
(28,platform_get_drvdata(pdev)
(29,if (netdev)
(30,priv)
(31,netdev)
(32,mdio)
(33,priv)
(34,netdev_priv(netdev)
(35,priv)
(36,free_netdev(netdev)
(37,priv->mdio->irq)
(38,kfree(priv->mdio->irq)
(39,netdev)
(40,)
(41,priv)
(42,RET)
(43,if (priv->mdio)
(44,netdev)
(45,priv)
(46,return 0;)
(47,)
(48,napi)
(49,priv)
(50,0)
(51,pdev)
(52,priv->phy = NULL)
(53,)
(54,netdev)
(55,priv->mdio)
(56,struct platform_device *pdev)
(57,priv)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^