-----label-----
0
-----code-----
static void machine_kexec_mask_interrupts(void)
{
	unsigned int i;
	struct irq_desc *desc;

	for_each_irq_desc(i, desc) {
		struct irq_chip *chip;

		chip = irq_desc_get_chip(desc);
		if (!chip)
			continue;

		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))
			chip->irq_eoi(&desc->irq_data);

		if (chip->irq_mask)
			chip->irq_mask(&desc->irq_data);

		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))
			chip->irq_disable(&desc->irq_data);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
10,11
11,12
11,13
13,14
15,16
16,17
16,18
17,18
19,20
19,21
22,23
23,24
23,25
23,26
24,25
26,27
28,29
30,31
31,32
31,33
31,34
31,35
31,36
31,37
32,33
33,34
33,35
34,35
36,37
36,38
39,40
40,41
40,42
41,42
43,44
43,45
44,45
46,47
48,49
48,50
49,50
50,51
53,54
53,55
54,55
54,56
55,56
55,57
56,57
59,60
59,61
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
73,74
74,75
74,76
75,76
78,79
78,80
79,80
79,81
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
90,91
90,92
91,92
94,95
94,96
95,96
95,97
96,97
96,98
97,98
100,101
101,102
101,103
102,103
104,105
105,106
105,107
106,107
109,110
110,111
110,112
111,112
111,113
112,113
115,116
116,117
116,118
117,118
-----nextToken-----
2,4,6,8,12,14,18,20,21,25,27,29,35,37,38,42,45,47,51,52,57,58,61,65,66,71,72,76,77,81,82,87,88,92,93,98,99,103,107,108,113,114,118,119
-----computeFrom-----
40,41
40,42
54,55
54,56
95,96
95,97
-----guardedBy-----
57,71
58,72
66,77
65,76
98,113
99,114
108,119
107,118
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ProblemStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ContinueStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void machine_kexec_mask_interrupts(void){	unsigned int i;	struct irq_desc *desc;	for_each_irq_desc(i, desc) {		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}}
static void
machine_kexec_mask_interrupts(void)
machine_kexec_mask_interrupts
void
void


{	unsigned int i;	struct irq_desc *desc;	for_each_irq_desc(i, desc) {		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}}
unsigned int i;
unsigned int i;
unsigned int
i
i
struct irq_desc *desc;
struct irq_desc *desc;
struct irq_desc
irq_desc
*desc
*
desc
for_each_irq_desc(i, desc)
for_each_irq_desc(i, desc)
for_each_irq_desc
for_each_irq_desc
i
i
desc
desc
)
{		struct irq_chip *chip;		chip = irq_desc_get_chip(desc);		if (!chip)			continue;		if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);		if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);		if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);	}
struct irq_chip *chip;
struct irq_chip *chip;
struct irq_chip
irq_chip
*chip
*
chip
chip = irq_desc_get_chip(desc);
chip = irq_desc_get_chip(desc)
chip
chip
irq_desc_get_chip(desc)
irq_desc_get_chip
irq_desc_get_chip
desc
desc
if (!chip)			continue;
!chip
chip
chip
continue;
if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data))			chip->irq_eoi(&desc->irq_data);
chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
chip->irq_eoi
chip
chip
irq_eoi
irqd_irq_inprogress(&desc->irq_data)
irqd_irq_inprogress
irqd_irq_inprogress
&desc->irq_data
desc->irq_data
desc
desc
irq_data
chip->irq_eoi(&desc->irq_data);
chip->irq_eoi(&desc->irq_data)
chip->irq_eoi
chip
chip
irq_eoi
&desc->irq_data
desc->irq_data
desc
desc
irq_data
if (chip->irq_mask)			chip->irq_mask(&desc->irq_data);
chip->irq_mask
chip
chip
irq_mask
chip->irq_mask(&desc->irq_data);
chip->irq_mask(&desc->irq_data)
chip->irq_mask
chip
chip
irq_mask
&desc->irq_data
desc->irq_data
desc
desc
irq_data
if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data))			chip->irq_disable(&desc->irq_data);
chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
chip->irq_disable
chip
chip
irq_disable
!irqd_irq_disabled(&desc->irq_data)
irqd_irq_disabled(&desc->irq_data)
irqd_irq_disabled
irqd_irq_disabled
&desc->irq_data
desc->irq_data
desc
desc
irq_data
chip->irq_disable(&desc->irq_data);
chip->irq_disable(&desc->irq_data)
chip->irq_disable
chip
chip
irq_disable
&desc->irq_data
desc->irq_data
desc
desc
irq_data
-----joern-----
(9,20,0)
(13,46,0)
(49,1,0)
(17,21,0)
(12,26,0)
(25,9,0)
(28,12,0)
(22,19,0)
(5,52,0)
(38,29,0)
(39,23,0)
(33,11,0)
(43,23,0)
(14,45,0)
(46,8,0)
(4,24,0)
(10,17,0)
(40,27,0)
(2,21,0)
(50,53,0)
(19,27,0)
(19,22,0)
(29,45,0)
(1,53,0)
(34,43,0)
(20,36,0)
(53,1,0)
(35,46,0)
(23,43,0)
(1,20,0)
(44,11,0)
(27,19,0)
(11,52,0)
(34,50,0)
(24,20,0)
(46,20,0)
(43,34,0)
(14,8,0)
(41,21,0)
(50,34,0)
(8,14,0)
(0,29,0)
(51,27,0)
(53,50,0)
(21,17,0)
(18,23,0)
(7,11,0)
(3,11,0)
(8,46,0)
(48,52,0)
(45,29,0)
(17,10,0)
(45,14,0)
(20,11,0)
(31,1,0)
(42,36,0)
(15,11,0)
(47,26,0)
(16,20,0)
(26,47,0)
(26,12,0)
(32,12,0)
(37,24,0)
(36,20,0)
(18,39,1)
(1,49,1)
(34,43,1)
(21,41,1)
(50,34,1)
(23,18,1)
(26,12,1)
(46,20,1)
(9,20,1)
(35,9,1)
(17,21,1)
(37,10,1)
(2,8,1)
(27,40,1)
(24,4,1)
(31,24,1)
(53,1,1)
(6,22,1)
(9,25,1)
(19,27,1)
(30,9,1)
(0,38,1)
(38,46,1)
(29,0,1)
(8,46,1)
(25,20,1)
(20,36,1)
(32,28,1)
(39,1,1)
(12,32,1)
(40,51,1)
(46,13,1)
(36,42,1)
(37,8,1)
(6,53,1)
(28,24,1)
(41,2,1)
(8,14,1)
(43,23,1)
(10,17,1)
(4,37,1)
(35,30,1)
(1,20,1)
(53,50,1)
(45,29,1)
(51,53,1)
(14,45,1)
(49,31,1)
(42,16,1)
(47,26,1)
(22,19,1)
(13,35,1)
(31,47,1)
(24,20,1)
(14,45,2)
(10,17,2)
(43,1,2)
(8,14,2)
(22,53,2)
(50,1,2)
(38,46,2)
(12,24,2)
(39,1,2)
(53,50,2)
(8,46,2)
(34,1,2)
(47,26,2)
(19,27,2)
(26,12,2)
(29,46,2)
(32,24,2)
(2,8,2)
(26,24,2)
(22,19,2)
(24,20,2)
(19,53,2)
(50,34,2)
(28,24,2)
(18,1,2)
(34,43,2)
(47,24,2)
(53,1,2)
(21,8,2)
(45,29,2)
(23,1,2)
(17,8,2)
(0,46,2)
(41,8,2)
(51,53,2)
(27,53,2)
(17,21,2)
(10,8,2)
(45,46,2)
(40,53,2)
(14,46,2)
(20,36,2)
(43,23,2)
(1,20,2)
(46,20,2)
(30,9,2)
(9,20,2)
-----------------------------------
(0,irq_data)
(1,chip->irq_disable)
(2,desc)
(3,chip)
(4,irq_mask)
(5,desc)
(6,RET)
(7,if (chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
(8,chip->irq_eoi && irqd_irq_inprogress(&desc->irq_data)
(9,!chip)
(10,chip->irq_eoi(&desc->irq_data)
(11,)
(12,desc->irq_data)
(13,irq_eoi)
(14,irqd_irq_inprogress(&desc->irq_data)
(15,if (chip->irq_mask)
(16,chip)
(17,&desc->irq_data)
(18,irq_data)
(19,&desc->irq_data)
(20,chip = irq_desc_get_chip(desc)
(21,desc->irq_data)
(22,chip->irq_disable(&desc->irq_data)
(23,desc->irq_data)
(24,chip->irq_mask)
(25,chip)
(26,&desc->irq_data)
(27,desc->irq_data)
(28,desc)
(29,desc->irq_data)
(30,continue;)
(31,chip)
(32,irq_data)
(33,if (!chip)
(34,irqd_irq_disabled(&desc->irq_data)
(35,chip)
(36,irq_desc_get_chip(desc)
(37,chip)
(38,desc)
(39,desc)
(40,irq_data)
(41,irq_data)
(42,desc)
(43,&desc->irq_data)
(44,if (chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
(45,&desc->irq_data)
(46,chip->irq_eoi)
(47,chip->irq_mask(&desc->irq_data)
(48,i)
(49,irq_disable)
(50,!irqd_irq_disabled(&desc->irq_data)
(51,desc)
(52,)
(53,chip->irq_disable && !irqd_irq_disabled(&desc->irq_data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^