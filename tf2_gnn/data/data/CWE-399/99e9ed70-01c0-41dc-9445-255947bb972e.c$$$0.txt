-----label-----
0
-----code-----
static struct sk_buff *be_xmit_workarounds(struct be_adapter *adapter,
					   struct sk_buff *skb,
					   struct be_wrb_params *wrb_params)
{
	/* Lancer, SH and BE3 in SRIOV mode have a bug wherein
	 * packets that are 32b or less may cause a transmit stall
	 * on that port. The workaround is to pad such packets
	 * (len <= 32 bytes) to a minimum length of 36b.
	 */
	if (skb->len <= 32) {
		if (skb_put_padto(skb, 36))
			return NULL;
	}

	if (BEx_chip(adapter) || lancer_chip(adapter)) {
		skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);
		if (!skb)
			return NULL;
	}

	return skb;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
4,9
7,8
7,9
8,9
10,11
10,12
13,14
13,15
14,15
16,17
16,18
19,20
19,21
20,21
22,23
22,24
25,26
25,27
25,28
26,27
26,28
27,28
27,29
28,29
28,30
29,30
33,34
34,35
34,36
35,36
35,37
35,38
36,37
38,39
41,42
42,43
44,45
44,46
45,46
45,47
46,47
46,48
47,48
49,50
51,52
51,53
52,53
54,55
56,57
56,58
57,58
58,59
58,60
59,60
61,62
61,63
61,64
61,65
62,63
64,65
66,67
68,69
70,71
70,72
71,72
72,73
74,75
75,76
77,78
78,79
-----nextToken-----
3,5,6,9,11,12,15,17,18,21,23,24,30,31,32,37,39,40,43,48,50,53,55,60,63,65,67,69,73,76,79
-----computeFrom-----
27,28
27,29
45,46
45,47
58,59
58,60
-----guardedBy-----
30,39
55,65
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct sk_buff *be_xmit_workarounds(struct be_adapter *adapter,					   struct sk_buff *skb,					   struct be_wrb_params *wrb_params){	/* Lancer, SH and BE3 in SRIOV mode have a bug wherein	 * packets that are 32b or less may cause a transmit stall	 * on that port. The workaround is to pad such packets	 * (len <= 32 bytes) to a minimum length of 36b.	 */	if (skb->len <= 32) {		if (skb_put_padto(skb, 36))			return NULL;	}	if (BEx_chip(adapter) || lancer_chip(adapter)) {		skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);		if (!skb)			return NULL;	}	return skb;}
static struct sk_buff
sk_buff
*be_xmit_workarounds(struct be_adapter *adapter,					   struct sk_buff *skb,					   struct be_wrb_params *wrb_params)
*
be_xmit_workarounds
struct be_adapter *adapter
struct be_adapter
be_adapter
*adapter
*
adapter
struct sk_buff *skb
struct sk_buff
sk_buff
*skb
*
skb
struct be_wrb_params *wrb_params
struct be_wrb_params
be_wrb_params
*wrb_params
*
wrb_params
{	/* Lancer, SH and BE3 in SRIOV mode have a bug wherein	 * packets that are 32b or less may cause a transmit stall	 * on that port. The workaround is to pad such packets	 * (len <= 32 bytes) to a minimum length of 36b.	 */	if (skb->len <= 32) {		if (skb_put_padto(skb, 36))			return NULL;	}	if (BEx_chip(adapter) || lancer_chip(adapter)) {		skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);		if (!skb)			return NULL;	}	return skb;}
if (skb->len <= 32) {		if (skb_put_padto(skb, 36))			return NULL;	}
skb->len <= 32
skb->len
skb
skb
len
32
{		if (skb_put_padto(skb, 36))			return NULL;	}
if (skb_put_padto(skb, 36))			return NULL;
skb_put_padto(skb, 36)
skb_put_padto
skb_put_padto
skb
skb
36
return NULL;
NULL
NULL
if (BEx_chip(adapter) || lancer_chip(adapter)) {		skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);		if (!skb)			return NULL;	}
BEx_chip(adapter) || lancer_chip(adapter)
BEx_chip(adapter)
BEx_chip
BEx_chip
adapter
adapter
lancer_chip(adapter)
lancer_chip
lancer_chip
adapter
adapter
{		skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);		if (!skb)			return NULL;	}
skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params);
skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params)
skb
skb
be_lancer_xmit_workarounds(adapter, skb, wrb_params)
be_lancer_xmit_workarounds
be_lancer_xmit_workarounds
adapter
adapter
skb
skb
wrb_params
wrb_params
if (!skb)			return NULL;
!skb
skb
skb
return NULL;
NULL
NULL
return skb;
skb
skb
-----joern-----
(29,37,0)
(5,36,0)
(15,34,0)
(17,7,0)
(19,12,0)
(28,0,0)
(21,31,0)
(12,11,0)
(12,0,0)
(1,17,0)
(16,12,0)
(24,11,0)
(10,34,0)
(6,21,0)
(27,0,0)
(17,11,0)
(21,34,0)
(13,29,0)
(2,10,0)
(12,29,0)
(3,7,0)
(32,17,0)
(15,23,0)
(16,30,0)
(26,15,0)
(15,29,0)
(29,11,0)
(14,37,0)
(7,17,0)
(15,11,0)
(9,11,0)
(4,24,0)
(31,10,0)
(16,25,0)
(33,30,0)
(31,21,0)
(29,15,0)
(20,25,0)
(10,31,0)
(24,29,0)
(18,15,0)
(8,9,0)
(22,9,0)
(35,15,0)
(16,12,1)
(33,24,1)
(25,20,1)
(22,8,1)
(6,10,1)
(31,21,1)
(35,18,1)
(17,1,1)
(29,15,1)
(29,11,1)
(26,13,1)
(13,31,1)
(7,17,1)
(31,10,1)
(9,11,1)
(30,33,1)
(15,23,1)
(8,7,1)
(12,29,1)
(16,30,1)
(10,34,1)
(18,26,1)
(24,29,1)
(7,3,1)
(17,11,1)
(15,34,1)
(12,19,1)
(19,31,1)
(21,34,1)
(16,25,1)
(20,9,1)
(2,9,1)
(21,6,1)
(12,11,1)
(15,11,1)
(15,35,1)
(2,7,1)
(10,2,1)
(24,11,1)
(19,24,1)
(4,29,1)
(9,22,1)
(1,32,1)
(24,4,1)
(3,17,1)
(21,10,2)
(25,9,2)
(2,7,2)
(12,29,2)
(31,10,2)
(4,31,2)
(19,24,2)
(9,11,2)
(31,9,2)
(33,24,2)
(31,21,2)
(7,17,2)
(12,24,2)
(12,31,2)
(10,9,2)
(13,31,2)
(16,30,2)
(18,31,2)
(16,12,2)
(19,31,2)
(8,7,2)
(24,29,2)
(29,15,2)
(10,34,2)
(35,31,2)
(2,9,2)
(26,31,2)
(15,34,2)
(30,24,2)
(15,23,2)
(24,31,2)
(12,11,2)
(21,34,2)
(31,7,2)
(15,11,2)
(6,10,2)
(9,7,2)
(24,11,2)
(16,25,2)
(29,11,2)
(15,31,2)
(20,9,2)
(22,7,2)
(10,7,2)
(29,31,2)
(17,11,2)
-----------------------------------
(0,)
(1,len)
(2,adapter)
(3,32)
(4,skb)
(5,if (skb_put_padto(skb, 36)
(6,adapter)
(7,skb->len <= 32)
(8,skb)
(9,skb_put_padto(skb, 36)
(10,BEx_chip(adapter)
(11,struct sk_buff *skb)
(12,return skb;)
(13,skb)
(14,if (!skb)
(15,be_lancer_xmit_workarounds(adapter, skb, wrb_params)
(16,RET)
(17,skb->len)
(18,skb)
(19,skb)
(20,NULL)
(21,lancer_chip(adapter)
(22,36)
(23,struct be_wrb_params *wrb_params)
(24,!skb)
(25,return NULL;)
(26,adapter)
(27,if (skb->len <= 32)
(28,if (BEx_chip(adapter)
(29,skb = be_lancer_xmit_workarounds(adapter, skb, wrb_params)
(30,return NULL;)
(31,BEx_chip(adapter)
(32,skb)
(33,NULL)
(34,struct be_adapter *adapter)
(35,wrb_params)
(36,)
(37,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^