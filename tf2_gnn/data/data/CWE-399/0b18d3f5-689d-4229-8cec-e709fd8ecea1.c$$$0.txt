-----label-----
1
-----code-----
int ptrace_request(struct task_struct *child, long request,
		   long addr, long data)
{
	int ret = -EIO;

	switch (request) {
#ifdef PTRACE_OLDSETOPTIONS
	case PTRACE_OLDSETOPTIONS:
#endif
	case PTRACE_SETOPTIONS:
		ret = ptrace_setoptions(child, data);
		break;
	case PTRACE_GETEVENTMSG:
		ret = put_user(child->ptrace_message, (unsigned long __user *) data);
		break;
	case PTRACE_GETSIGINFO:
		ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);
		break;
	case PTRACE_SETSIGINFO:
		ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);
		break;
	default:
		break;
	}

	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
19,20
19,21
21,22
23,24
23,25
23,26
24,25
25,26
25,27
27,28
27,29
29,30
30,31
31,32
33,34
33,35
34,35
36,37
36,38
36,39
36,40
36,41
36,42
36,43
36,44
36,45
36,46
36,47
36,48
36,49
36,50
37,38
38,39
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
49,50
52,53
53,54
55,56
57,58
58,59
60,61
62,63
63,64
65,66
69,70
70,71
-----nextToken-----
2,4,7,9,10,12,14,16,18,20,22,26,28,32,35,39,43,46,48,50,51,54,56,59,61,64,66,67,68,71
-----computeFrom-----
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ProblemStatement;BreakStatement;CaseStatement;IdExpression;Name;ProblemStatement;BreakStatement;CaseStatement;IdExpression;Name;ProblemStatement;BreakStatement;DefaultStatement;BreakStatement;ReturnStatement;IdExpression;Name;
-----ast_node-----
int ptrace_request(struct task_struct *child, long request,		   long addr, long data){	int ret = -EIO;	switch (request) {#ifdef PTRACE_OLDSETOPTIONS	case PTRACE_OLDSETOPTIONS:#endif	case PTRACE_SETOPTIONS:		ret = ptrace_setoptions(child, data);		break;	case PTRACE_GETEVENTMSG:		ret = put_user(child->ptrace_message, (unsigned long __user *) data);		break;	case PTRACE_GETSIGINFO:		ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);		break;	case PTRACE_SETSIGINFO:		ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);		break;	default:		break;	}	return ret;}
int
ptrace_request(struct task_struct *child, long request,		   long addr, long data)
ptrace_request
struct task_struct *child
struct task_struct
task_struct
*child
*
child
long request
long
request
request
long addr
long
addr
addr
long data
long
data
data
{	int ret = -EIO;	switch (request) {#ifdef PTRACE_OLDSETOPTIONS	case PTRACE_OLDSETOPTIONS:#endif	case PTRACE_SETOPTIONS:		ret = ptrace_setoptions(child, data);		break;	case PTRACE_GETEVENTMSG:		ret = put_user(child->ptrace_message, (unsigned long __user *) data);		break;	case PTRACE_GETSIGINFO:		ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);		break;	case PTRACE_SETSIGINFO:		ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);		break;	default:		break;	}	return ret;}
int ret = -EIO;
int ret = -EIO;
int
ret = -EIO
ret
= -EIO
-EIO
EIO
EIO
switch (request) {#ifdef PTRACE_OLDSETOPTIONS	case PTRACE_OLDSETOPTIONS:#endif	case PTRACE_SETOPTIONS:		ret = ptrace_setoptions(child, data);		break;	case PTRACE_GETEVENTMSG:		ret = put_user(child->ptrace_message, (unsigned long __user *) data);		break;	case PTRACE_GETSIGINFO:		ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);		break;	case PTRACE_SETSIGINFO:		ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);		break;	default:		break;	}
request
request
{#ifdef PTRACE_OLDSETOPTIONS	case PTRACE_OLDSETOPTIONS:#endif	case PTRACE_SETOPTIONS:		ret = ptrace_setoptions(child, data);		break;	case PTRACE_GETEVENTMSG:		ret = put_user(child->ptrace_message, (unsigned long __user *) data);		break;	case PTRACE_GETSIGINFO:		ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);		break;	case PTRACE_SETSIGINFO:		ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);		break;	default:		break;	}
case PTRACE_SETOPTIONS:
PTRACE_SETOPTIONS
PTRACE_SETOPTIONS
ret = ptrace_setoptions(child, data);
ret = ptrace_setoptions(child, data)
ret
ret
ptrace_setoptions(child, data)
ptrace_setoptions
ptrace_setoptions
child
child
data
data
break;
case PTRACE_GETEVENTMSG:
PTRACE_GETEVENTMSG
PTRACE_GETEVENTMSG
ret = put_user(child->ptrace_message, (unsigned long __user *) data);
break;
case PTRACE_GETSIGINFO:
PTRACE_GETSIGINFO
PTRACE_GETSIGINFO
ret = ptrace_getsiginfo(child, (siginfo_t __user *) data);
break;
case PTRACE_SETSIGINFO:
PTRACE_SETSIGINFO
PTRACE_SETSIGINFO
ret = ptrace_setsiginfo(child, (siginfo_t __user *) data);
break;
default:
break;
return ret;
ret
ret
-----joern-----
(44,37,0)
(0,31,0)
(39,5,0)
(31,16,0)
(45,8,0)
(20,16,0)
(4,16,0)
(42,34,0)
(21,11,0)
(11,15,0)
(3,16,0)
(40,50,0)
(47,38,0)
(22,16,0)
(32,50,0)
(46,34,0)
(34,16,0)
(46,15,0)
(2,16,0)
(38,16,0)
(47,45,0)
(10,16,0)
(5,29,0)
(1,31,0)
(17,14,0)
(30,16,0)
(34,46,0)
(36,29,0)
(14,8,0)
(11,35,0)
(8,37,0)
(19,18,0)
(51,37,0)
(14,17,0)
(24,51,0)
(46,37,0)
(49,45,0)
(35,11,0)
(27,47,0)
(51,38,0)
(47,5,0)
(52,44,0)
(47,34,0)
(31,1,0)
(5,18,0)
(7,16,0)
(23,46,0)
(25,38,0)
(8,45,0)
(45,16,0)
(50,15,0)
(12,47,0)
(1,50,0)
(18,5,0)
(13,16,0)
(41,44,0)
(48,16,0)
(33,16,0)
(1,44,0)
(26,14,0)
(14,15,0)
(11,51,0)
(47,29,0)
(8,14,0)
(6,8,0)
(43,29,0)
(50,32,0)
(9,46,0)
(38,51,0)
(44,1,0)
(47,31,0)
(51,11,0)
(50,1,0)
(47,38,1)
(48,38,1)
(12,7,1)
(11,15,1)
(46,15,1)
(24,25,1)
(12,48,1)
(14,26,1)
(51,37,1)
(4,31,1)
(5,18,1)
(38,51,1)
(42,28,1)
(47,5,1)
(41,52,1)
(12,10,1)
(8,14,1)
(18,19,1)
(12,2,1)
(7,34,1)
(9,23,1)
(26,6,1)
(44,41,1)
(28,5,1)
(34,46,1)
(47,12,1)
(12,4,1)
(40,44,1)
(51,11,1)
(44,37,1)
(10,45,1)
(0,28,1)
(45,8,1)
(11,35,1)
(47,34,1)
(27,47,1)
(19,39,1)
(2,28,1)
(47,45,1)
(46,9,1)
(21,24,1)
(1,50,1)
(1,44,1)
(46,37,1)
(49,28,1)
(50,40,1)
(14,17,1)
(14,15,1)
(25,28,1)
(23,42,1)
(50,15,1)
(47,31,1)
(11,21,1)
(31,1,1)
(8,37,1)
(6,49,1)
(50,32,1)
(52,0,1)
(50,28,2)
(21,28,2)
(51,28,2)
(51,37,2)
(31,28,2)
(11,15,2)
(25,28,2)
(31,1,2)
(47,45,2)
(46,15,2)
(47,34,2)
(48,28,2)
(42,28,2)
(47,31,2)
(8,28,2)
(44,28,2)
(1,50,2)
(38,28,2)
(45,28,2)
(6,28,2)
(11,28,2)
(0,28,2)
(46,28,2)
(4,28,2)
(34,28,2)
(46,37,2)
(49,28,2)
(27,47,2)
(14,15,2)
(8,14,2)
(11,35,2)
(23,28,2)
(34,46,2)
(47,38,2)
(47,5,2)
(10,28,2)
(7,28,2)
(24,28,2)
(52,28,2)
(44,37,2)
(14,17,2)
(2,28,2)
(14,28,2)
(50,32,2)
(9,28,2)
(40,28,2)
(5,18,2)
(1,28,2)
(41,28,2)
(45,8,2)
(50,15,2)
(1,44,2)
(38,51,2)
(51,11,2)
(8,37,2)
(26,28,2)
-----------------------------------
(0,ret)
(1,put_user(child->ptrace_message, (unsigned long __user *)
(2,break;)
(3,case PTRACE_SETOPTIONS:)
(4,break;)
(5,ret = -EIO)
(6,child)
(7,break;)
(8,ptrace_setsiginfo(child, (siginfo_t __user *)
(9,data)
(10,break;)
(11,(siginfo_t __user *)
(12,ret)
(13,case PTRACE_GETSIGINFO:)
(14,(siginfo_t __user *)
(15,long data)
(16,)
(17,siginfo_t __user *)
(18,-EIO)
(19,EIO)
(20,case PTRACE_GETEVENTMSG:)
(21,data)
(22,case PTRACE_SETSIGINFO:)
(23,child)
(24,child)
(25,ret)
(26,data)
(27,RET)
(28,request)
(29,)
(30,default:)
(31,ret = put_user(child->ptrace_message, (unsigned long __user *)
(32,unsigned long __user *)
(33,case PTRACE_OLDSETOPTIONS:)
(34,ret = ptrace_setoptions(child, data)
(35,siginfo_t __user *)
(36,ret)
(37,struct task_struct *child)
(38,ret = ptrace_getsiginfo(child, (siginfo_t __user *)
(39,ret)
(40,data)
(41,ptrace_message)
(42,ret)
(43,switch (request)
(44,child->ptrace_message)
(45,ret = ptrace_setsiginfo(child, (siginfo_t __user *)
(46,ptrace_setoptions(child, data)
(47,return ret;)
(48,break;)
(49,ret)
(50,(unsigned long __user *)
(51,ptrace_getsiginfo(child, (siginfo_t __user *)
(52,child)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^