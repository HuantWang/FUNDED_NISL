-----label-----
1
-----code-----
int
lpfc_do_work(void *p)
{
	struct lpfc_hba *phba = p;
	int rc;

	set_user_nice(current, MIN_NICE);
	current->flags |= PF_NOFREEZE;
	phba->data_flags = 0;

	while (!kthread_should_stop()) {
		/* wait and check worker queue activities */
		rc = wait_event_interruptible(phba->work_waitq,
					(test_and_clear_bit(LPFC_DATA_READY,
							    &phba->data_flags)
					 || kthread_should_stop()));
		/* Signal wakeup shall terminate the worker thread */
		if (rc) {
			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,
					"0433 Wakeup on signal: rc=x%x\n", rc);
			break;
		}

		/* Attend pending lpfc data processing */
		lpfc_work_done(phba);
	}
	phba->worker_thread = NULL;
	lpfc_printf_log(phba, KERN_INFO, LOG_ELS,
			"0432 Worker thread stopped.\n");
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
10,19
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
21,22
22,23
22,24
24,25
26,27
27,28
27,29
27,30
28,29
30,31
32,33
34,35
35,36
35,37
36,37
36,38
37,38
40,41
42,43
43,44
43,45
44,45
44,46
45,46
49,50
49,51
50,51
51,52
52,53
54,55
54,56
54,57
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
68,70
68,71
69,70
71,72
73,74
74,75
74,76
75,76
78,79
79,80
81,82
81,83
82,83
84,85
84,86
85,86
86,87
86,88
86,89
86,90
86,91
86,92
87,88
89,90
91,92
93,94
96,97
99,100
100,101
100,102
101,102
103,104
105,106
106,107
106,108
107,108
107,109
108,109
111,112
113,114
114,115
114,116
114,117
114,118
114,119
115,116
117,118
119,120
121,122
124,125
-----nextToken-----
2,4,6,8,9,14,16,17,20,23,25,29,31,33,38,39,41,46,47,48,53,58,61,64,65,70,72,76,77,80,83,88,90,92,94,95,97,98,102,104,109,110,112,116,118,120,122,123,125
-----computeFrom-----
35,36
35,37
43,44
43,45
56,57
56,58
67,68
67,69
106,107
106,108
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;WhileStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
intlpfc_do_work(void *p){	struct lpfc_hba *phba = p;	int rc;	set_user_nice(current, MIN_NICE);	current->flags |= PF_NOFREEZE;	phba->data_flags = 0;	while (!kthread_should_stop()) {		/* wait and check worker queue activities */		rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()));		/* Signal wakeup shall terminate the worker thread */		if (rc) {			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}		/* Attend pending lpfc data processing */		lpfc_work_done(phba);	}	phba->worker_thread = NULL;	lpfc_printf_log(phba, KERN_INFO, LOG_ELS,			"0432 Worker thread stopped.\n");	return 0;}
int
lpfc_do_work(void *p)
lpfc_do_work
void *p
void
*p
*
p
{	struct lpfc_hba *phba = p;	int rc;	set_user_nice(current, MIN_NICE);	current->flags |= PF_NOFREEZE;	phba->data_flags = 0;	while (!kthread_should_stop()) {		/* wait and check worker queue activities */		rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()));		/* Signal wakeup shall terminate the worker thread */		if (rc) {			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}		/* Attend pending lpfc data processing */		lpfc_work_done(phba);	}	phba->worker_thread = NULL;	lpfc_printf_log(phba, KERN_INFO, LOG_ELS,			"0432 Worker thread stopped.\n");	return 0;}
struct lpfc_hba *phba = p;
struct lpfc_hba *phba = p;
struct lpfc_hba
lpfc_hba
*phba = p
*
phba
= p
p
p
int rc;
int rc;
int
rc
rc
set_user_nice(current, MIN_NICE);
set_user_nice(current, MIN_NICE)
set_user_nice
set_user_nice
current
current
MIN_NICE
MIN_NICE
current->flags |= PF_NOFREEZE;
current->flags |= PF_NOFREEZE
current->flags
current
current
flags
PF_NOFREEZE
PF_NOFREEZE
phba->data_flags = 0;
phba->data_flags = 0
phba->data_flags
phba
phba
data_flags
0
while (!kthread_should_stop()) {		/* wait and check worker queue activities */		rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()));		/* Signal wakeup shall terminate the worker thread */		if (rc) {			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}		/* Attend pending lpfc data processing */		lpfc_work_done(phba);	}
!kthread_should_stop()
kthread_should_stop()
kthread_should_stop
kthread_should_stop
{		/* wait and check worker queue activities */		rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()));		/* Signal wakeup shall terminate the worker thread */		if (rc) {			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}		/* Attend pending lpfc data processing */		lpfc_work_done(phba);	}
rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()));
rc = wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()))
rc
rc
wait_event_interruptible(phba->work_waitq,					(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()))
wait_event_interruptible
wait_event_interruptible
phba->work_waitq
phba
phba
work_waitq
(test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop())
test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)					 || kthread_should_stop()
test_and_clear_bit(LPFC_DATA_READY,							    &phba->data_flags)
test_and_clear_bit
test_and_clear_bit
LPFC_DATA_READY
LPFC_DATA_READY
&phba->data_flags
phba->data_flags
phba
phba
data_flags
kthread_should_stop()
kthread_should_stop
kthread_should_stop
if (rc) {			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}
rc
rc
{			lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);			break;		}
lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc);
lpfc_printf_log(phba, KERN_ERR, LOG_ELS,					"0433 Wakeup on signal: rc=x%x\n", rc)
lpfc_printf_log
lpfc_printf_log
phba
phba
KERN_ERR
KERN_ERR
LOG_ELS
LOG_ELS
"0433 Wakeup on signal: rc=x%x\n"
rc
rc
break;
lpfc_work_done(phba);
lpfc_work_done(phba)
lpfc_work_done
lpfc_work_done
phba
phba
phba->worker_thread = NULL;
phba->worker_thread = NULL
phba->worker_thread
phba
phba
worker_thread
NULL
NULL
lpfc_printf_log(phba, KERN_INFO, LOG_ELS,			"0432 Worker thread stopped.\n");
lpfc_printf_log(phba, KERN_INFO, LOG_ELS,			"0432 Worker thread stopped.\n")
lpfc_printf_log
lpfc_printf_log
phba
phba
KERN_INFO
KERN_INFO
LOG_ELS
LOG_ELS
"0432 Worker thread stopped.\n"
return 0;
0
-----joern-----
(11,61,0)
(34,36,0)
(0,23,0)
(14,28,0)
(4,2,0)
(36,5,0)
(36,44,0)
(47,44,0)
(13,62,0)
(36,34,0)
(35,43,0)
(34,49,0)
(44,36,0)
(15,61,0)
(32,3,0)
(13,49,0)
(7,1,0)
(10,15,0)
(43,1,0)
(6,61,0)
(2,6,0)
(54,43,0)
(31,62,0)
(33,15,0)
(62,23,0)
(41,23,0)
(39,0,0)
(57,56,0)
(4,3,0)
(2,23,0)
(43,23,0)
(58,43,0)
(53,4,0)
(4,28,0)
(19,5,0)
(0,61,0)
(56,61,0)
(9,23,0)
(48,2,0)
(30,61,0)
(20,0,0)
(43,5,0)
(22,28,0)
(38,4,0)
(16,44,0)
(5,36,0)
(21,3,0)
(52,0,0)
(3,23,0)
(23,42,0)
(59,43,0)
(3,30,0)
(49,13,0)
(5,27,0)
(46,0,0)
(34,26,0)
(24,41,0)
(18,62,0)
(8,30,0)
(62,13,0)
(40,25,0)
(45,6,0)
(55,49,0)
(51,61,0)
(26,34,0)
(23,61,0)
(41,27,0)
(4,61,0)
(49,34,0)
(28,56,0)
(50,27,0)
(37,43,0)
(29,61,0)
(12,23,0)
(25,40,0)
(62,30,0)
(44,23,0)
(17,2,0)
(23,42,1)
(8,3,1)
(48,17,1)
(45,2,1)
(7,43,1)
(44,23,1)
(28,22,1)
(58,54,1)
(62,23,1)
(12,9,1)
(5,36,1)
(21,32,1)
(47,19,1)
(18,55,1)
(34,49,1)
(60,5,1)
(56,57,1)
(25,30,1)
(15,33,1)
(26,49,1)
(38,4,1)
(46,20,1)
(22,14,1)
(59,58,1)
(62,31,1)
(43,59,1)
(55,44,1)
(17,40,1)
(3,23,1)
(3,21,1)
(53,0,1)
(20,39,1)
(35,60,1)
(4,53,1)
(25,41,1)
(49,13,1)
(14,15,1)
(30,8,1)
(13,62,1)
(2,48,1)
(17,7,1)
(2,23,1)
(39,6,1)
(4,3,1)
(4,2,1)
(6,45,1)
(43,5,1)
(19,40,1)
(36,34,1)
(62,30,1)
(34,26,1)
(23,12,1)
(44,16,1)
(36,44,1)
(41,23,1)
(41,24,1)
(0,23,1)
(16,47,1)
(40,25,1)
(57,28,1)
(54,37,1)
(10,23,1)
(52,46,1)
(37,35,1)
(32,56,1)
(24,60,1)
(31,18,1)
(0,52,1)
(43,23,1)
(4,28,1)
(33,10,1)
(7,60,2)
(18,40,2)
(49,40,2)
(34,26,2)
(55,40,2)
(60,40,2)
(16,40,2)
(40,60,2)
(34,49,2)
(3,23,2)
(49,13,2)
(36,40,2)
(34,40,2)
(4,28,2)
(4,2,2)
(37,60,2)
(19,40,2)
(54,60,2)
(26,49,2)
(41,60,2)
(2,23,2)
(38,4,2)
(62,30,2)
(43,5,2)
(62,40,2)
(40,25,2)
(35,60,2)
(4,3,2)
(36,44,2)
(31,40,2)
(36,34,2)
(44,23,2)
(47,40,2)
(23,42,2)
(59,60,2)
(44,40,2)
(41,23,2)
(25,60,2)
(58,60,2)
(24,60,2)
(62,23,2)
(13,40,2)
(13,62,2)
(5,40,2)
(0,23,2)
(5,36,2)
(43,23,2)
(43,60,2)
-----------------------------------
(0,lpfc_printf_log(phba, KERN_INFO, LOG_ELS,\n\\n\\t\\t\\t"0432 Worker thread stopped.\\n")
(1,)
(2,phba->worker_thread)
(3,phba->data_flags)
(4,return 0;)
(5,rc = wait_event_interruptible(phba->work_waitq,\n\\n\\t\\t\\t\\t\\t(test_and_clear_bit(LPFC_DATA_READY,\n\\n\\t\\t\\t\\t\\t\\t\\t    &phba->data_flags)
(6,phba->worker_thread = NULL)
(7,break;)
(8,0)
(9,phba)
(10,current)
(11,while (!kthread_should_stop()
(12,p)
(13,&phba->data_flags)
(14,current)
(15,set_user_nice(current, MIN_NICE)
(16,work_waitq)
(17,phba)
(18,phba)
(19,rc)
(20,KERN_INFO)
(21,data_flags)
(22,flags)
(23,*phba = p)
(24,phba)
(25,kthread_should_stop()
(26,kthread_should_stop()
(27,)
(28,current->flags)
(29,rc)
(30,phba->data_flags = 0)
(31,data_flags)
(32,phba)
(33,MIN_NICE)
(34,test_and_clear_bit(LPFC_DATA_READY,\n\\n\\t\\t\\t\\t\\t\\t\\t    &phba->data_flags)
(35,phba)
(36,wait_event_interruptible(phba->work_waitq,\n\\n\\t\\t\\t\\t\\t(test_and_clear_bit(LPFC_DATA_READY,\n\\n\\t\\t\\t\\t\\t\\t\\t    &phba->data_flags)
(37,KERN_ERR)
(38,RET)
(39,phba)
(40,!kthread_should_stop()
(41,lpfc_work_done(phba)
(42,void *p)
(43,lpfc_printf_log(phba, KERN_ERR, LOG_ELS,\n\\n\\t\\t\\t\\t\\t"0433 Wakeup on signal: rc=x%x\\n", rc)
(44,phba->work_waitq)
(45,NULL)
(46,LOG_ELS)
(47,phba)
(48,worker_thread)
(49,test_and_clear_bit(LPFC_DATA_READY,\n\\n\\t\\t\\t\\t\\t\\t\\t    &phba->data_flags)
(50,if (rc)
(51,phba)
(52,"0432 Worker thread stopped.\\n")
(53,0)
(54,LOG_ELS)
(55,LPFC_DATA_READY)
(56,current->flags |= PF_NOFREEZE)
(57,PF_NOFREEZE)
(58,"0433 Wakeup on signal: rc=x%x\\n")
(59,rc)
(60,rc)
(61,)
(62,phba->data_flags)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^