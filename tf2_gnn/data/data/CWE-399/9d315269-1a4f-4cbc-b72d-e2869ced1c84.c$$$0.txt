-----label-----
0
-----code-----
void mm_iommu_mapped_dec(struct mm_iommu_table_group_mem_t *mem)
{
	atomic64_add_unless(&mem->mapped, -1, 1);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
13,14
13,15
13,16
13,17
14,15
16,17
17,18
17,19
18,19
21,22
-----nextToken-----
2,4,7,9,10,15,19,20,22,23
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;LiteralExpression;LiteralExpression;
-----ast_node-----
void mm_iommu_mapped_dec(struct mm_iommu_table_group_mem_t *mem){	atomic64_add_unless(&mem->mapped, -1, 1);}
void
mm_iommu_mapped_dec(struct mm_iommu_table_group_mem_t *mem)
mm_iommu_mapped_dec
struct mm_iommu_table_group_mem_t *mem
struct mm_iommu_table_group_mem_t
mm_iommu_table_group_mem_t
*mem
*
mem
{	atomic64_add_unless(&mem->mapped, -1, 1);}
atomic64_add_unless(&mem->mapped, -1, 1);
atomic64_add_unless(&mem->mapped, -1, 1)
atomic64_add_unless
atomic64_add_unless
&mem->mapped
mem->mapped
mem
mem
mapped
-1
1
1
-----joern-----
(3,9,0)
(7,6,0)
(6,0,0)
(3,0,0)
(5,3,0)
(8,6,0)
(1,8,0)
(0,6,0)
(6,8,0)
(10,3,0)
(6,4,0)
(0,3,0)
(7,8,1)
(6,0,1)
(6,8,1)
(8,1,1)
(0,3,1)
(1,0,1)
(10,5,1)
(6,7,1)
(3,9,1)
(3,10,1)
(2,6,1)
(0,3,2)
(6,0,2)
(6,8,2)
(3,9,2)
-----------------------------------
(0,&mem->mapped)
(1,1)
(2,RET)
(3,mem->mapped)
(4,)
(5,mem)
(6,atomic64_add_unless(&mem->mapped, -1, 1)
(7,1)
(8,-1)
(9,struct mm_iommu_table_group_mem_t *mem)
(10,mapped)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^