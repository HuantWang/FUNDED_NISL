-----label-----
0
-----code-----
static void binder_set_nice(long nice)
{
	long min_nice;
	if (can_nice(current, nice)) {
		set_user_nice(current, nice);
		return;
	}
	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;
	binder_debug(BINDER_DEBUG_PRIORITY_CAP,
		     "%d: nice value %ld not allowed use %ld instead\n",
		      current->pid, nice, min_nice);
	set_user_nice(current, min_nice);
	if (min_nice < 20)
		return;
	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
10,11
11,12
11,13
13,14
15,16
15,17
16,17
16,18
16,19
17,18
19,20
21,22
23,24
23,25
24,25
25,26
25,27
25,28
26,27
28,29
30,31
33,34
34,35
34,36
35,36
37,38
37,39
39,40
39,41
40,41
40,42
41,42
41,43
42,43
42,44
43,44
47,48
50,51
51,52
51,53
51,54
51,55
51,56
51,57
52,53
54,55
57,58
57,59
58,59
61,62
63,64
65,66
66,67
66,68
66,69
67,68
69,70
71,72
73,74
73,75
74,75
74,76
75,76
79,80
80,81
80,82
80,83
81,82
84,85
84,86
85,86
-----nextToken-----
2,4,6,8,12,14,18,20,22,27,29,31,32,36,38,44,45,46,48,49,53,55,56,59,60,62,64,68,70,72,76,77,78,82,83,86,87
-----computeFrom-----
34,35
34,36
37,38
37,39
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;LiteralExpression;FieldReference;ArraySubscriptExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void binder_set_nice(long nice){	long min_nice;	if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;	binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);	set_user_nice(current, min_nice);	if (min_nice < 20)		return;	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);}
static void
binder_set_nice(long nice)
binder_set_nice
long nice
long
nice
nice
{	long min_nice;	if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;	binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);	set_user_nice(current, min_nice);	if (min_nice < 20)		return;	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);}
long min_nice;
long min_nice;
long
min_nice
min_nice
if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}
can_nice(current, nice)
can_nice
can_nice
current
current
nice
nice
{		set_user_nice(current, nice);		return;	}
set_user_nice(current, nice);
set_user_nice(current, nice)
set_user_nice
set_user_nice
current
current
nice
nice
return;
min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;
min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur
min_nice
min_nice
20 - current->signal->rlim[RLIMIT_NICE].rlim_cur
20
current->signal->rlim[RLIMIT_NICE].rlim_cur
current->signal->rlim[RLIMIT_NICE]
current->signal->rlim
current->signal
current
current
signal
rlim
RLIMIT_NICE
RLIMIT_NICE
rlim_cur
binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);
binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice)
binder_debug
binder_debug
BINDER_DEBUG_PRIORITY_CAP
BINDER_DEBUG_PRIORITY_CAP
"%d: nice value %ld not allowed use %ld instead\n"
current->pid
current
current
pid
nice
nice
min_nice
min_nice
set_user_nice(current, min_nice);
set_user_nice(current, min_nice)
set_user_nice
set_user_nice
current
current
min_nice
min_nice
if (min_nice < 20)		return;
min_nice < 20
min_nice
min_nice
20
return;
binder_user_error("%d RLIMIT_NICE not set\n", current->pid);
binder_user_error("%d RLIMIT_NICE not set\n", current->pid)
binder_user_error
binder_user_error
"%d RLIMIT_NICE not set\n"
current->pid
current
current
pid
-----joern-----
(22,5,0)
(15,3,0)
(20,44,0)
(19,16,0)
(24,21,0)
(24,18,0)
(37,12,0)
(30,24,0)
(13,12,0)
(36,18,0)
(41,8,0)
(31,10,0)
(31,32,0)
(9,32,0)
(33,13,0)
(6,17,0)
(39,24,0)
(24,20,0)
(27,1,0)
(38,1,0)
(2,44,0)
(14,31,0)
(29,46,0)
(43,46,0)
(24,17,0)
(44,10,0)
(34,20,0)
(41,37,0)
(1,20,0)
(13,21,0)
(46,20,0)
(40,17,0)
(35,24,0)
(20,17,0)
(23,5,0)
(44,20,0)
(10,44,0)
(4,9,0)
(42,9,0)
(7,24,0)
(46,17,0)
(0,10,0)
(5,21,0)
(11,13,0)
(45,3,0)
(32,31,0)
(25,17,0)
(18,24,0)
(10,31,0)
(3,16,0)
(26,32,0)
(16,17,0)
(28,18,0)
(16,3,0)
(32,9,0)
(34,5,1)
(1,27,1)
(3,45,1)
(10,0,1)
(2,34,1)
(18,36,1)
(45,15,1)
(13,11,1)
(28,39,1)
(15,19,1)
(33,5,1)
(16,3,1)
(46,20,1)
(7,18,1)
(39,30,1)
(24,20,1)
(29,24,1)
(31,32,1)
(41,8,1)
(32,26,1)
(10,31,1)
(36,28,1)
(37,13,1)
(11,33,1)
(9,42,1)
(27,38,1)
(31,14,1)
(41,37,1)
(5,23,1)
(43,29,1)
(5,21,1)
(35,7,1)
(26,9,1)
(23,22,1)
(8,1,1)
(0,31,1)
(32,9,1)
(24,18,1)
(1,20,1)
(46,43,1)
(19,1,1)
(14,32,1)
(24,35,1)
(41,16,1)
(4,2,1)
(24,21,1)
(30,20,1)
(20,44,1)
(44,10,1)
(38,46,1)
(13,21,1)
(42,4,1)
(26,5,2)
(20,44,2)
(7,5,2)
(42,5,2)
(32,5,2)
(43,5,2)
(19,1,2)
(37,5,2)
(27,5,2)
(38,5,2)
(11,5,2)
(8,1,2)
(34,5,2)
(46,20,2)
(1,5,2)
(30,5,2)
(16,3,2)
(9,5,2)
(44,10,2)
(14,5,2)
(13,21,2)
(10,5,2)
(31,32,2)
(3,1,2)
(24,20,2)
(15,1,2)
(28,5,2)
(1,20,2)
(0,5,2)
(16,1,2)
(39,5,2)
(4,5,2)
(31,5,2)
(41,37,2)
(29,5,2)
(24,21,2)
(5,21,2)
(36,5,2)
(24,5,2)
(32,9,2)
(2,5,2)
(33,5,2)
(10,31,2)
(41,8,2)
(45,1,2)
(20,5,2)
(35,5,2)
(24,18,2)
(18,5,2)
(46,5,2)
(44,5,2)
(13,5,2)
-----------------------------------
(0,rlim_cur)
(1,min_nice < 20)
(2,20)
(3,current->pid)
(4,current)
(5,can_nice(current, nice)
(6,min_nice)
(7,nice)
(8,return;)
(9,current->signal)
(10,current->signal->rlim[RLIMIT_NICE].rlim_cur)
(11,nice)
(12,)
(13,set_user_nice(current, nice)
(14,RLIMIT_NICE)
(15,current)
(16,binder_user_error("%d RLIMIT_NICE not set\\n", current->pid)
(17,)
(18,current->pid)
(19,"%d RLIMIT_NICE not set\\n")
(20,min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur)
(21,long nice)
(22,current)
(23,nice)
(24,binder_debug(BINDER_DEBUG_PRIORITY_CAP,\n\\n\\t\\t     "%d: nice value %ld not allowed use %ld instead\\n",\n\\n\\t\\t      current->pid, nice, min_nice)
(25,if (can_nice(current, nice)
(26,rlim)
(27,20)
(28,current)
(29,current)
(30,BINDER_DEBUG_PRIORITY_CAP)
(31,current->signal->rlim[RLIMIT_NICE])
(32,current->signal->rlim)
(33,current)
(34,min_nice)
(35,min_nice)
(36,pid)
(37,return;)
(38,min_nice)
(39,"%d: nice value %ld not allowed use %ld instead\\n")
(40,if (min_nice < 20)
(41,RET)
(42,signal)
(43,min_nice)
(44,20 - current->signal->rlim[RLIMIT_NICE].rlim_cur)
(45,pid)
(46,set_user_nice(current, min_nice)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^