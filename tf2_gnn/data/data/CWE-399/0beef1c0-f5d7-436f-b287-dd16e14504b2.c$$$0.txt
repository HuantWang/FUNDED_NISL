-----label-----
0
-----code-----
struct fw_device *fw_device_get_by_devt(dev_t devt)
{
	struct fw_device *device;

	down_read(&idr_rwsem);
	device = idr_find(&fw_device_idr, MINOR(devt));
	if (device)
		fw_device_get(device);
	up_read(&idr_rwsem);

	return device;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
15,16
17,18
17,19
20,21
21,22
21,23
22,23
24,25
25,26
25,27
28,29
29,30
29,31
30,31
32,33
32,34
32,35
33,34
35,36
36,37
38,39
38,40
39,40
41,42
43,44
43,45
44,45
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
56,57
57,58
59,60
60,61
-----nextToken-----
3,5,6,9,11,16,18,19,23,26,27,31,34,37,40,42,45,49,51,55,58,61
-----computeFrom-----
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;ReferenceOperator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct fw_device *fw_device_get_by_devt(dev_t devt){	struct fw_device *device;	down_read(&idr_rwsem);	device = idr_find(&fw_device_idr, MINOR(devt));	if (device)		fw_device_get(device);	up_read(&idr_rwsem);	return device;}
struct fw_device
fw_device
*fw_device_get_by_devt(dev_t devt)
*
fw_device_get_by_devt
dev_t devt
dev_t
dev_t
devt
devt
{	struct fw_device *device;	down_read(&idr_rwsem);	device = idr_find(&fw_device_idr, MINOR(devt));	if (device)		fw_device_get(device);	up_read(&idr_rwsem);	return device;}
struct fw_device *device;
struct fw_device *device;
struct fw_device
fw_device
*device
*
device
down_read(&idr_rwsem);
down_read(&idr_rwsem);
down_read
down_read
(&idr_rwsem)
&idr_rwsem
&
idr_rwsem
device = idr_find(&fw_device_idr, MINOR(devt));
device = idr_find(&fw_device_idr, MINOR(devt))
device
device
idr_find(&fw_device_idr, MINOR(devt))
idr_find
idr_find
&fw_device_idr
fw_device_idr
fw_device_idr
MINOR(devt)
MINOR
MINOR
devt
devt
if (device)		fw_device_get(device);
device
device
fw_device_get(device);
fw_device_get(device)
fw_device_get
fw_device_get
device
device
up_read(&idr_rwsem);
up_read(&idr_rwsem)
up_read
up_read
&idr_rwsem
idr_rwsem
idr_rwsem
return device;
device
device
-----joern-----
(4,18,0)
(20,3,0)
(11,14,0)
(22,15,0)
(14,16,0)
(2,16,0)
(7,16,0)
(15,16,0)
(13,22,0)
(21,9,0)
(1,16,0)
(14,18,0)
(15,22,0)
(10,1,0)
(12,4,0)
(8,16,0)
(6,8,0)
(8,6,0)
(1,14,0)
(5,6,0)
(3,18,0)
(0,1,0)
(18,3,0)
(4,17,0)
(18,4,0)
(18,14,0)
(9,14,0)
(1,10,1)
(18,3,1)
(11,8,1)
(15,22,1)
(0,1,1)
(21,19,1)
(19,14,1)
(13,19,1)
(4,12,1)
(8,6,1)
(9,21,1)
(3,20,1)
(22,13,1)
(13,9,1)
(4,17,1)
(14,18,1)
(6,5,1)
(10,15,1)
(12,3,1)
(9,14,1)
(18,4,1)
(1,14,1)
(20,11,1)
(9,19,2)
(18,4,2)
(0,1,2)
(21,19,2)
(18,3,2)
(1,14,2)
(4,17,2)
(15,22,2)
(14,18,2)
(8,6,2)
(9,14,2)
-----------------------------------
(0,RET)
(1,return device;)
(2,if (device)
(3,&fw_device_idr)
(4,MINOR(devt)
(5,idr_rwsem)
(6,&idr_rwsem)
(7,device)
(8,down_read(&idr_rwsem)
(9,fw_device_get(device)
(10,device)
(11,device)
(12,devt)
(13,idr_rwsem)
(14,device = idr_find(&fw_device_idr, MINOR(devt)
(15,up_read(&idr_rwsem)
(16,)
(17,dev_t devt)
(18,idr_find(&fw_device_idr, MINOR(devt)
(19,device)
(20,fw_device_idr)
(21,device)
(22,&idr_rwsem)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^