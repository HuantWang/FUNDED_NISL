-----label-----
1
-----code-----
int bad2(){
  int b=10;
  if (b > 1) {
    b=2;
  }
 else {
    b=0;
  }
  return b;
}

-----children-----
0,1
0,2
0,3
3,4
4,1
4,5
5,6
5,7
3,8
8,9
9,6
9,10
8,11
11,12
12,13
13,6
13,14
8,15
15,16
16,17
17,6
17,18
3,19
19,6
-----nextToken-----
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
----------jump----------
-----attribute-----
PrimitiveType,SimpleName,Block,VariableDeclarationStatement,PrimitiveType,VariableDeclarationFragment,SimpleName,NumberLiteral,IfStatement,InfixExpression,SimpleName,NumberLiteral,Block,ExpressionStatement,Assignment,SimpleName,NumberLiteral,Block,ExpressionStatement,Assignment,SimpleName,NumberLiteral,ReturnStatement,SimpleName,PrimitiveType,SimpleName,Block,VariableDeclarationStatement,PrimitiveType,VariableDeclarationFragment,SimpleName,NumberLiteral,IfStatement,InfixExpression,SimpleName,NumberLiteral,Block,ExpressionStatement,Assignment,SimpleName,NumberLiteral,Block,ExpressionStatement,Assignment,SimpleName,NumberLiteral,ReturnStatement,SimpleName
-----joern-----
0,1,0
0,2,0
0,3,0
3,4,0
4,1,0
4,5,0
5,6,0
5,7,0
3,8,0
8,9,0
9,6,0
9,10,0
8,11,0
11,12,0
12,13,0
13,6,0
13,14,0
8,15,0
15,16,0
16,17,0
17,6,0
17,18,0
3,19,0
19,6,0
9,16,1
9,12,1
16,19,1
12,19,1
4,9,1
9,16,2
9,12,2
16,19,2
12,19,2
4,9,2
------------------------------------
(3,{  int b=10;  if (b > 1) {    b=2;  } else {    b=0;  }  return b;})
(6,b)
(2,bad2)
(9,b > 1)
(16,b=0;)
(0,int bad2(){  int b=10;  if (b > 1) {    b=2;  } else {    b=0;  }  return b;})
(12,b=2;)
(8,if (b > 1) {  b=2;} else {  b=0;})
(11,{  b=2;})
(1,int)
(15,{  b=0;})
(18,0)
(10,1)
(14,2)
(17,b=0)
(13,b=2)
(5,b=10)
(19,return b;)
(4,int b=10;)
(7,10)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
