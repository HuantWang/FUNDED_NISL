-----label-----
0
-----code-----
static void goodG2B()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    goodG2BStatic = 1; /* true */
    goodG2BSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
41,43
42,43
42,44
43,44
48,49
49,50
49,51
50,51
50,52
51,52
51,53
52,53
57,58
58,59
58,60
59,60
61,62
61,63
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
72,73
73,74
73,75
74,75
77,78
78,79
78,80
79,80
81,82
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,44,45,46,47,53,54,55,56,60,64,66,70,71,75,76,80,82
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
49,50
49,51
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    struct _twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goodG2BStatic = 1; /* true */    goodG2BSink(data);}
static void
goodG2B()
goodG2B
{    struct _twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goodG2BStatic = 1; /* true */    goodG2BSink(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
ALLOCA(100*sizeof(struct _twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
goodG2BStatic = 1;
goodG2BStatic = 1
goodG2BStatic
goodG2BStatic
1
goodG2BSink(data);
goodG2BSink(data)
goodG2BSink
goodG2BSink
data
data
-----joern-----
(24,12,0)
(7,27,0)
(40,20,0)
(12,10,0)
(20,35,0)
(17,4,0)
(17,13,0)
(33,19,0)
(30,13,0)
(10,23,0)
(29,23,0)
(3,25,0)
(18,15,0)
(15,18,0)
(19,22,0)
(31,24,0)
(19,35,0)
(35,20,0)
(16,8,0)
(39,23,0)
(12,24,0)
(2,25,0)
(11,39,0)
(28,13,0)
(15,35,0)
(36,18,0)
(13,17,0)
(27,35,0)
(32,12,0)
(16,29,0)
(0,35,0)
(4,17,0)
(35,23,0)
(6,21,0)
(34,39,0)
(8,16,0)
(21,23,0)
(27,23,0)
(9,19,0)
(13,30,0)
(25,23,0)
(20,40,0)
(18,21,0)
(26,23,0)
(38,15,0)
(16,22,0)
(20,30,0)
(14,10,0)
(22,16,0)
(37,24,0)
(30,20,0)
(5,15,0)
(22,19,0)
(29,16,0)
(24,35,0)
(18,36,1)
(31,37,1)
(39,34,1)
(37,35,1)
(16,8,1)
(9,33,1)
(15,35,1)
(25,2,1)
(33,21,1)
(32,24,1)
(2,3,1)
(3,29,1)
(34,11,1)
(12,24,1)
(12,32,1)
(18,15,1)
(30,13,1)
(27,7,1)
(14,12,1)
(20,40,1)
(24,35,1)
(15,5,1)
(36,15,1)
(13,17,1)
(5,38,1)
(22,19,1)
(6,18,1)
(7,25,1)
(10,14,1)
(24,31,1)
(0,39,1)
(17,28,1)
(35,20,1)
(27,35,1)
(38,10,1)
(20,30,1)
(21,6,1)
(19,35,1)
(29,16,1)
(16,22,1)
(1,27,1)
(19,9,1)
(28,0,1)
(17,4,1)
(17,4,2)
(18,15,2)
(20,40,2)
(22,19,2)
(13,17,2)
(20,30,2)
(24,35,2)
(29,16,2)
(16,8,2)
(35,20,2)
(16,22,2)
(19,35,2)
(27,35,2)
(12,24,2)
(15,35,2)
(30,13,2)
-----------------------------------
(0,data)
(1,RET)
(2,1)
(3,goodG2BStatic)
(4,struct _twoIntsStruct)
(5,0)
(6,0)
(7,data)
(8,twoIntsStruct *)
(9,0)
(10,data[0].intOne = 0)
(11,data)
(12,data[0].intOne)
(13,100*sizeof(struct _twoIntsStruct)
(14,0)
(15,data[0])
(16,(twoIntsStruct *)
(17,sizeof(struct _twoIntsStruct)
(18,data[0].intTwo)
(19,data[0])
(20,(struct _twoIntsStruct *)
(21,data[0].intTwo = 0)
(22,&data[0])
(23,)
(24,data[0])
(25,goodG2BStatic = 1)
(26,data)
(27,goodG2BSink(data)
(28,100)
(29,printStructLine((twoIntsStruct *)
(30,ALLOCA(100*sizeof(struct _twoIntsStruct)
(31,0)
(32,intOne)
(33,data)
(34,NULL)
(35,data = (struct _twoIntsStruct *)
(36,intTwo)
(37,data)
(38,data)
(39,data = NULL)
(40,struct _twoIntsStruct *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^