-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int_13_bad()
{
    if(GLOBAL_CONST_FIVE==5)
    {
        {
            int * data = (int *)malloc(100*sizeof(int));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5;
            printIntLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int *)realloc(data, (130000)*sizeof(int));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10;
                printIntLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
49,51
50,51
54,55
55,56
55,57
56,57
58,59
58,60
59,60
62,63
63,64
63,65
64,65
66,67
66,68
67,68
67,69
69,70
71,72
71,73
71,74
72,73
74,75
76,77
76,78
77,78
79,80
80,81
80,82
83,84
83,85
84,85
84,86
85,86
87,88
89,90
89,91
89,92
90,91
91,92
91,93
92,93
92,94
93,94
97,98
98,99
98,100
99,100
101,102
101,103
102,103
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,51,52,53,57,60,61,65,68,70,73,75,78,81,82,86,88,94,95,96,100,103,104,108,110
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
48,49
48,50
63,64
63,65
76,77
76,78
84,85
84,86
91,92
91,93
-----guardedBy-----
86,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int_13_bad(){    if(GLOBAL_CONST_FIVE==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int_13_bad()
CWE401_Memory_Leak__malloc_realloc_int_13_bad
{    if(GLOBAL_CONST_FIVE==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }}
if(GLOBAL_CONST_FIVE==5)    {        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }
GLOBAL_CONST_FIVE==5
GLOBAL_CONST_FIVE
GLOBAL_CONST_FIVE
5
{        {            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }    }
{            int * data = (int *)malloc(100*sizeof(int));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5;            printIntLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int *)realloc(data, (130000)*sizeof(int));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }        }
int * data = (int *)malloc(100*sizeof(int));
int * data = (int *)malloc(100*sizeof(int));
int
* data = (int *)malloc(100*sizeof(int))
*
data
= (int *)malloc(100*sizeof(int))
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
data = (int *)realloc(data, (130000)*sizeof(int));
data = (int *)realloc(data, (130000)*sizeof(int))
data
data
(int *)realloc(data, (130000)*sizeof(int))
int *
int
*
*
realloc(data, (130000)*sizeof(int))
realloc
realloc
data
data
(130000)*sizeof(int)
(130000)
130000
sizeof(int)
int
int

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10;                printIntLine(data[0]);                free(data);            }
data[0] = 10;
data[0] = 10
data[0]
data
data
0
10
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(33,51,0)
(39,54,0)
(25,17,0)
(3,19,0)
(55,51,0)
(3,53,0)
(53,3,0)
(51,58,0)
(6,30,0)
(37,24,0)
(37,12,0)
(30,41,0)
(60,5,0)
(43,26,0)
(32,58,0)
(28,32,0)
(16,22,0)
(19,41,0)
(15,32,0)
(51,36,0)
(10,45,0)
(32,41,0)
(7,53,0)
(19,3,0)
(14,42,0)
(47,5,0)
(31,58,0)
(24,41,0)
(36,51,0)
(46,34,0)
(9,24,0)
(11,1,0)
(44,19,0)
(23,41,0)
(34,41,0)
(41,5,0)
(17,38,0)
(27,5,0)
(36,59,0)
(19,44,0)
(48,32,0)
(21,57,0)
(18,22,0)
(12,5,0)
(57,59,0)
(52,34,0)
(5,20,0)
(38,50,0)
(51,12,0)
(56,12,0)
(58,5,0)
(30,58,0)
(37,40,0)
(22,24,0)
(53,26,0)
(2,1,0)
(51,57,0)
(41,19,0)
(24,22,0)
(24,37,0)
(35,30,0)
(42,59,0)
(26,53,0)
(42,12,0)
(1,57,0)
(40,37,0)
(29,13,0)
(22,16,0)
(48,5,0)
(32,48,0)
(49,16,0)
(0,54,0)
(38,17,0)
(1,12,0)
(12,37,0)
(4,13,0)
(13,12,0)
(30,35,1)
(18,9,1)
(51,12,1)
(57,21,1)
(34,41,1)
(24,41,1)
(25,34,1)
(32,15,1)
(11,2,1)
(13,12,1)
(21,1,1)
(0,39,1)
(4,12,1)
(6,34,1)
(49,18,1)
(8,54,1)
(19,44,1)
(1,12,1)
(48,32,1)
(15,28,1)
(24,22,1)
(37,40,1)
(33,57,1)
(9,56,1)
(43,7,1)
(19,3,1)
(17,25,1)
(12,37,1)
(31,30,1)
(6,38,1)
(7,23,1)
(29,4,1)
(53,26,1)
(22,16,1)
(28,58,1)
(32,41,1)
(54,0,1)
(16,49,1)
(34,46,1)
(58,31,1)
(1,11,1)
(51,58,1)
(38,17,1)
(13,29,1)
(46,52,1)
(23,54,1)
(30,41,1)
(51,55,1)
(26,43,1)
(8,42,1)
(51,57,1)
(32,58,1)
(37,24,1)
(3,53,1)
(42,12,1)
(35,6,1)
(52,41,1)
(8,13,1)
(36,51,1)
(41,19,1)
(14,36,1)
(2,13,1)
(55,33,1)
(42,14,1)
(56,48,1)
(42,13,2)
(33,13,2)
(7,54,2)
(2,13,2)
(24,22,2)
(31,54,2)
(4,54,2)
(25,34,2)
(21,13,2)
(26,54,2)
(32,54,2)
(19,3,2)
(37,54,2)
(34,54,2)
(29,54,2)
(46,54,2)
(53,26,2)
(6,54,2)
(51,12,2)
(32,58,2)
(24,41,2)
(38,17,2)
(13,54,2)
(56,54,2)
(37,24,2)
(51,57,2)
(41,19,2)
(3,54,2)
(52,54,2)
(42,12,2)
(23,54,2)
(30,41,2)
(22,16,2)
(15,54,2)
(12,37,2)
(53,54,2)
(19,54,2)
(57,13,2)
(48,32,2)
(51,13,2)
(13,12,2)
(12,54,2)
(51,58,2)
(11,13,2)
(24,54,2)
(48,54,2)
(14,13,2)
(3,53,2)
(58,54,2)
(32,41,2)
(1,13,2)
(1,12,2)
(19,44,2)
(36,51,2)
(22,54,2)
(38,34,2)
(16,54,2)
(30,54,2)
(34,41,2)
(37,40,2)
(28,54,2)
(41,54,2)
(43,54,2)
(49,54,2)
(18,54,2)
(36,13,2)
(35,54,2)
(17,34,2)
(9,54,2)
(55,13,2)
-----------------------------------
(0,5)
(1,data[0])
(2,data)
(3,malloc(100*sizeof(int)
(4,data)
(5,)
(6,data)
(7,100)
(8,RET)
(9,data)
(10,if(GLOBAL_CONST_FIVE==5)
(11,0)
(12,data = (int *)
(13,data != NULL)
(14,data)
(15,0)
(16,sizeof(int)
(17,-1)
(18,130000)
(19,(int *)
(20,)
(21,10)
(22,(130000)
(23,data)
(24,realloc(data, (130000)
(25,1)
(26,sizeof(int)
(27,data)
(28,data)
(29,NULL)
(30,data[0])
(31,5)
(32,data[0])
(33,data)
(34,data == NULL)
(35,0)
(36,printIntLine(data[0])
(37,(int *)
(38,exit(-1)
(39,GLOBAL_CONST_FIVE)
(40,int *)
(41,* data = (int *)
(42,free(data)
(43,int)
(44,int *)
(45,)
(46,NULL)
(47,if (data != NULL)
(48,printIntLine(data[0])
(49,int)
(50,)
(51,data[0])
(52,data)
(53,100*sizeof(int)
(54,GLOBAL_CONST_FIVE==5)
(55,0)
(56,data)
(57,data[0] = 10)
(58,data[0] = 5)
(59,)
(60,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^