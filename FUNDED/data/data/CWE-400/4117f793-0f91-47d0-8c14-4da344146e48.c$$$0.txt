-----label-----
0
-----code-----
static void goodB2G1()
{
    int64_t * data;
    data = NULL;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(8)
    {
    case 7:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    default:
        /* FIX: Deallocate memory */
        free(data);
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
21,30
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
76,77
77,78
77,79
78,79
82,83
82,84
84,85
84,86
84,87
84,88
84,89
84,90
85,86
87,88
88,89
88,90
89,90
94,95
95,96
95,97
96,97
98,99
-----nextToken-----
2,4,9,11,12,16,18,20,23,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,74,75,79,80,81,83,86,90,91,92,93,97,99,100
-----computeFrom-----
14,15
14,16
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;
-----ast_node-----
static void goodB2G1(){    int64_t * data;    data = NULL;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(8)    {    case 7:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    default:        /* FIX: Deallocate memory */        free(data);        break;    }}
static void
goodB2G1()
goodB2G1
{    int64_t * data;    data = NULL;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(8)    {    case 7:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    default:        /* FIX: Deallocate memory */        free(data);        break;    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(8)    {    case 7:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    default:        /* FIX: Deallocate memory */        free(data);        break;    }
8
{    case 7:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    default:        /* FIX: Deallocate memory */        free(data);        break;    }
case 7:
7
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
default:
free(data);
free(data)
free
free
data
data
break;
-----joern-----
(37,8,0)
(36,32,0)
(17,21,0)
(30,20,0)
(13,3,0)
(43,30,0)
(15,21,0)
(34,13,0)
(18,33,0)
(6,20,0)
(8,1,0)
(40,20,0)
(2,19,0)
(22,21,0)
(24,21,0)
(46,20,0)
(7,3,0)
(0,39,0)
(35,40,0)
(9,42,0)
(18,13,0)
(33,18,0)
(30,17,0)
(44,17,0)
(27,48,0)
(47,3,0)
(12,1,0)
(2,48,0)
(10,42,0)
(41,32,0)
(23,7,0)
(45,32,0)
(32,41,0)
(41,3,0)
(13,18,0)
(14,3,0)
(16,3,0)
(1,8,0)
(30,13,0)
(18,8,0)
(39,1,0)
(42,13,0)
(48,2,0)
(26,20,0)
(11,3,0)
(25,3,0)
(28,20,0)
(38,17,0)
(1,39,0)
(31,3,0)
(8,17,0)
(8,18,0)
(32,13,0)
(42,13,1)
(5,26,1)
(18,8,1)
(9,13,1)
(6,40,1)
(30,13,1)
(16,42,1)
(25,7,1)
(40,35,1)
(17,38,1)
(43,29,1)
(8,17,1)
(32,13,1)
(4,17,1)
(41,32,1)
(23,4,1)
(37,34,1)
(27,42,1)
(30,43,1)
(48,27,1)
(39,0,1)
(29,25,1)
(34,4,1)
(10,9,1)
(8,1,1)
(13,18,1)
(30,17,1)
(31,41,1)
(0,12,1)
(35,29,1)
(2,48,1)
(26,30,1)
(12,37,1)
(38,44,1)
(1,39,1)
(29,31,1)
(16,2,1)
(42,10,1)
(5,6,1)
(18,33,1)
(7,23,1)
(32,36,1)
(36,45,1)
(45,16,1)
(8,17,2)
(36,4,2)
(8,4,2)
(23,4,2)
(26,29,2)
(41,32,2)
(18,4,2)
(37,4,2)
(30,13,2)
(6,29,2)
(13,18,2)
(9,4,2)
(12,4,2)
(25,4,2)
(41,4,2)
(31,4,2)
(1,39,2)
(7,4,2)
(1,4,2)
(2,42,2)
(32,13,2)
(43,29,2)
(30,29,2)
(0,4,2)
(30,17,2)
(32,4,2)
(48,42,2)
(45,4,2)
(35,29,2)
(18,33,2)
(18,8,2)
(27,42,2)
(40,29,2)
(10,4,2)
(42,13,2)
(42,4,2)
(39,4,2)
(8,1,2)
(2,48,2)
(34,4,2)
(16,4,2)
(13,4,2)
-----------------------------------
(0,int64_t)
(1,100*sizeof(int64_t)
(2,exit(-1)
(3,)
(4,6)
(5,RET)
(6,break;)
(7,printLine("Benign, fixed string")
(8,realloc(data, 100*sizeof(int64_t)
(9,data)
(10,NULL)
(11,case 6:)
(12,100)
(13,data = (int64_t *)
(14,if (data == NULL)
(15,switch(8)
(16,L)
(17,data = NULL)
(18,(int64_t *)
(19,)
(20,)
(21,)
(22,data)
(23,"Benign, fixed string")
(24,switch(6)
(25,break;)
(26,break;)
(27,1)
(28,case 7:)
(29,8)
(30,free(data)
(31,break;)
(32,data[0])
(33,int64_t *)
(34,data)
(35,"Benign, fixed string")
(36,0)
(37,data)
(38,NULL)
(39,sizeof(int64_t)
(40,printLine("Benign, fixed string")
(41,printLongLongLine(data[0])
(42,data == NULL)
(43,data)
(44,data)
(45,data)
(46,default:)
(47,default:)
(48,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^