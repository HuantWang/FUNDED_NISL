-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_char_22_badSink(char * data)
{
    if(CWE401_Memory_Leak__strdup_char_22_badGlobal)
    {
        /* POTENTIAL FLAW: No deallocation of memory */
        /* no deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
11,13
12,13
14,15
-----nextToken-----
2,4,6,8,9,13,15
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__strdup_char_22_badSink(char * data){    if(CWE401_Memory_Leak__strdup_char_22_badGlobal)    {        /* POTENTIAL FLAW: No deallocation of memory */        /* no deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__strdup_char_22_badSink(char * data)
CWE401_Memory_Leak__strdup_char_22_badSink
char * data
char
* data
*
data
{    if(CWE401_Memory_Leak__strdup_char_22_badGlobal)    {        /* POTENTIAL FLAW: No deallocation of memory */        /* no deallocation */        ; /* empty statement needed for some flow variants */    }}
if(CWE401_Memory_Leak__strdup_char_22_badGlobal)    {        /* POTENTIAL FLAW: No deallocation of memory */        /* no deallocation */        ; /* empty statement needed for some flow variants */    }
CWE401_Memory_Leak__strdup_char_22_badGlobal
CWE401_Memory_Leak__strdup_char_22_badGlobal
{        /* POTENTIAL FLAW: No deallocation of memory */        /* no deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(0,3,0)
(2,1,1)
-----------------------------------
(0,if(CWE401_Memory_Leak__strdup_char_22_badGlobal)
(1,CWE401_Memory_Leak__strdup_char_22_badGlobal)
(2,RET)
(3,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^