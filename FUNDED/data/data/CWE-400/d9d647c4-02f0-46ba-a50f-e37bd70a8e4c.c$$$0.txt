-----label-----
0
-----code-----
void exit_wrapper_preamble(void)
{
	static int did_exit_wrapper = 0;

	if(did_exit_wrapper)
		return;

	did_exit_wrapper = 1;

	sigset_t set_cont, set_prev;
	void (*prev_handler)(int signum);
	struct timespec timeout = {.tv_sec = 2, .tv_nsec = 0}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
10,11
11,12
11,13
13,14
13,15
15,16
17,18
17,19
18,19
21,22
22,23
22,24
23,24
26,27
27,28
27,29
27,30
28,29
30,31
32,33
34,35
35,36
35,37
37,38
37,39
38,39
38,40
41,42
41,43
43,44
-----nextToken-----
2,4,6,8,12,14,16,19,20,24,25,29,31,33,36,39,40,42,44
-----computeFrom-----
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;IdExpression;Name;ReturnStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ProblemStatement;
-----ast_node-----
void exit_wrapper_preamble(void){	static int did_exit_wrapper = 0;	if(did_exit_wrapper)		return;	did_exit_wrapper = 1;	sigset_t set_cont, set_prev;	void (*prev_handler)(int signum);	struct timespec timeout = {.tv_sec = 2, .tv_nsec = 0}
void
exit_wrapper_preamble(void)
exit_wrapper_preamble
void
void


{	static int did_exit_wrapper = 0;	if(did_exit_wrapper)		return;	did_exit_wrapper = 1;	sigset_t set_cont, set_prev;	void (*prev_handler)(int signum);	struct timespec timeout = {.tv_sec = 2, .tv_nsec = 0}
static int did_exit_wrapper = 0;
static int did_exit_wrapper = 0;
static int
did_exit_wrapper = 0
did_exit_wrapper
= 0
0
if(did_exit_wrapper)		return;
did_exit_wrapper
did_exit_wrapper
return;
did_exit_wrapper = 1;
did_exit_wrapper = 1
did_exit_wrapper
did_exit_wrapper
1
sigset_t set_cont, set_prev;
sigset_t set_cont, set_prev;
sigset_t
sigset_t
set_cont
set_cont
set_prev
set_prev
void (*prev_handler)(int signum);
void (*prev_handler)(int signum);
void
(*prev_handler)(int signum)
*prev_handler
*
prev_handler
int signum
int
signum
signum
struct timespec timeout = {.tv_sec = 2, .tv_nsec = 0
-----joern-----
(10,41,0)
(20,26,0)
(21,8,0)
(4,41,0)
(19,41,0)
(7,20,0)
(16,41,0)
(8,21,0)
(25,13,0)
(8,41,0)
(17,41,0)
(26,41,0)
(12,8,0)
(31,41,0)
(9,2,0)
(44,41,0)
(4,30,0)
(22,4,0)
(29,41,0)
(2,41,0)
(24,36,0)
(36,41,0)
(30,4,0)
(14,17,0)
(40,42,0)
(13,41,0)
(6,29,0)
(27,36,0)
(1,2,0)
(40,17,1)
(14,8,1)
(15,6,1)
(25,4,1)
(22,30,1)
(11,43,1)
(36,27,1)
(20,7,1)
(28,16,1)
(18,5,1)
(32,35,1)
(27,24,1)
(4,22,1)
(43,14,1)
(42,40,1)
(8,21,1)
(9,1,1)
(4,30,1)
(35,36,1)
(32,28,2)
(21,28,2)
(1,28,2)
(40,28,2)
(6,28,2)
(15,28,2)
(2,28,2)
(45,28,2)
(4,28,2)
(4,30,2)
(11,28,2)
(17,28,2)
(29,28,2)
(22,28,2)
(5,28,2)
(27,28,2)
(7,28,2)
(12,28,2)
(20,28,2)
(39,28,2)
(42,28,2)
(24,28,2)
(37,28,2)
(18,28,2)
(13,28,2)
(14,28,2)
(30,28,2)
(43,28,2)
(35,28,2)
(33,28,2)
(8,21,2)
(8,28,2)
(9,28,2)
(34,28,2)
(25,28,2)
(0,28,2)
(26,28,2)
(36,28,2)
(38,28,2)
(3,28,2)
(23,28,2)
-----------------------------------
(0,END_WAIT)
(1,D_DEBUG)
(2,debug(D_DEBUG, "Waiting for monitoring: %d.\\n", getpid()
(3,D_DEBUG)
(4,sigaddset(&set_cont, SIGCONT)
(5,&set_prev)
(6,NULL)
(7,origin)
(8,debug(D_DEBUG, "%s from %d.\\n", str_msgtype(END_WAIT)
(9,"Waiting for monitoring: %d.\\n")
(10,)
(11,wakeup_pselect_from_exit)
(12,D_DEBUG)
(13,sigprocmask(SIG_BLOCK, &set_cont, &set_prev)
(14,prev_handler)
(15,timeout)
(16,did_exit_wrapper = 0)
(17,prev_handler = signal(SIGCONT, wakeup_pselect_from_exit)
(18,NULL)
(19,if(did_exit_wrapper)
(20,msg.origin)
(21,getpid()
(22,SIGCONT)
(23,str_msgtype(END_WAIT)
(24,msg.type)
(25,SIG_BLOCK)
(26,msg.origin = getpid()
(27,END_WAIT)
(28,did_exit_wrapper)
(29,pselect(0, NULL, NULL, NULL, &timeout, &set_prev)
(30,&set_cont)
(31,did_exit_wrapper)
(32,error)
(33,getpid()
(34,&msg)
(35,msg)
(36,msg.type   = END_WAIT)
(37,msg.data)
(38,set_prev)
(39,1)
(40,set_cont)
(41,)
(42,&set_cont)
(43,SIGCONT)
(44,prev_handler)
(45,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^