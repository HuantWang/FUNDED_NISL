-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad()
{
    if(GLOBAL_CONST_TRUE)
    {
        {
            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            data[0] = 5LL;
            printLongLongLine(data[0]);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                data[0] = 10LL;
                printLongLongLine(data[0]);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
32,33
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
67,68
67,69
68,69
68,70
69,70
71,72
73,74
73,75
73,76
74,75
76,77
78,79
78,80
79,80
81,82
82,83
82,84
83,84
86,87
86,88
87,88
87,89
88,89
90,91
92,93
92,94
92,95
93,94
94,95
94,96
95,96
95,97
96,97
100,101
101,102
101,103
102,103
104,105
104,106
105,106
108,109
109,110
109,111
110,111
112,113
-----nextToken-----
2,4,8,14,16,17,22,24,27,29,33,34,38,40,45,47,52,53,54,58,61,62,66,70,72,75,77,80,84,85,89,91,97,98,99,103,106,107,111,113
-----computeFrom-----
28,29
28,30
36,37
36,38
49,50
49,51
64,65
64,66
78,79
78,80
87,88
87,89
94,95
94,96
-----guardedBy-----
89,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad(){    if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad()
CWE401_Memory_Leak__malloc_realloc_int64_t_09_bad
{    if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }}
if(GLOBAL_CONST_TRUE)    {        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }    }
{            int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            data[0] = 5LL;            printLongLongLine(data[0]);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }        }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
data = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
data
data
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data != NULL)            {                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                data[0] = 10LL;                printLongLongLine(data[0]);                free(data);            }
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(36,7,0)
(24,34,0)
(19,42,0)
(21,35,0)
(41,24,0)
(41,40,0)
(42,19,0)
(30,34,0)
(14,21,0)
(26,37,0)
(49,17,0)
(21,26,0)
(26,21,0)
(6,35,0)
(7,36,0)
(19,22,0)
(22,34,0)
(32,37,0)
(4,24,0)
(15,35,0)
(31,45,0)
(0,36,0)
(37,26,0)
(8,12,0)
(39,19,0)
(13,21,0)
(36,21,0)
(8,28,0)
(2,4,0)
(10,26,0)
(3,41,0)
(34,22,0)
(22,19,0)
(34,30,0)
(45,21,0)
(9,50,0)
(50,37,0)
(35,33,0)
(13,43,0)
(16,45,0)
(7,43,0)
(40,41,0)
(37,24,0)
(50,9,0)
(25,42,0)
(26,10,0)
(40,35,0)
(37,50,0)
(5,4,0)
(12,8,0)
(38,41,0)
(27,36,0)
(29,35,0)
(24,35,0)
(11,9,0)
(34,24,0)
(18,24,0)
(46,43,0)
(23,50,0)
(48,13,0)
(47,12,0)
(1,35,0)
(15,4,1)
(9,11,1)
(31,16,1)
(34,22,1)
(7,36,1)
(26,10,1)
(37,24,1)
(36,21,1)
(4,5,1)
(44,45,1)
(41,24,1)
(11,23,1)
(26,37,1)
(21,26,1)
(32,14,1)
(19,42,1)
(12,47,1)
(5,2,1)
(27,46,1)
(13,21,1)
(24,34,1)
(45,21,1)
(40,41,1)
(25,39,1)
(42,25,1)
(15,8,1)
(4,24,1)
(2,24,1)
(13,48,1)
(48,7,1)
(45,31,1)
(47,4,1)
(46,45,1)
(14,40,1)
(44,20,1)
(50,9,1)
(18,20,1)
(39,18,1)
(34,30,1)
(16,21,1)
(8,12,1)
(38,3,1)
(0,27,1)
(41,38,1)
(44,13,1)
(23,32,1)
(37,50,1)
(22,19,1)
(3,15,1)
(36,0,1)
(34,22,2)
(46,45,2)
(2,20,2)
(34,30,2)
(7,45,2)
(9,20,2)
(14,20,2)
(22,20,2)
(24,34,2)
(3,20,2)
(40,20,2)
(26,10,2)
(37,24,2)
(40,41,2)
(42,20,2)
(24,20,2)
(36,45,2)
(0,45,2)
(21,26,2)
(23,20,2)
(41,24,2)
(34,20,2)
(41,20,2)
(4,20,2)
(32,20,2)
(26,20,2)
(26,37,2)
(8,4,2)
(25,20,2)
(8,12,2)
(7,36,2)
(50,9,2)
(22,19,2)
(31,20,2)
(19,42,2)
(13,45,2)
(13,21,2)
(45,20,2)
(19,20,2)
(15,20,2)
(4,24,2)
(38,20,2)
(27,45,2)
(45,21,2)
(18,20,2)
(37,50,2)
(48,45,2)
(47,4,2)
(36,21,2)
(37,20,2)
(39,20,2)
(11,20,2)
(5,20,2)
(21,20,2)
(12,4,2)
(50,20,2)
(16,20,2)
-----------------------------------
(0,0)
(1,if (data != NULL)
(2,data)
(3,data)
(4,data == NULL)
(5,NULL)
(6,if (data == NULL)
(7,printLongLongLine(data[0])
(8,exit(-1)
(9,sizeof(int64_t)
(10,int64_t *)
(11,int64_t)
(12,-1)
(13,free(data)
(14,data)
(15,L)
(16,data)
(17,)
(18,data)
(19,100*sizeof(int64_t)
(20,GLOBAL_CONST_TRUE)
(21,data = (int64_t *)
(22,malloc(100*sizeof(int64_t)
(23,130000)
(24,* data = (int64_t *)
(25,int64_t)
(26,(int64_t *)
(27,data)
(28,)
(29,data)
(30,int64_t *)
(31,NULL)
(32,data)
(33,)
(34,(int64_t *)
(35,)
(36,data[0])
(37,realloc(data, (130000)
(38,0)
(39,100)
(40,printLongLongLine(data[0])
(41,data[0])
(42,sizeof(int64_t)
(43,)
(44,RET)
(45,data != NULL)
(46,L)
(47,1)
(48,data)
(49,if(GLOBAL_CONST_TRUE)
(50,(130000)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^