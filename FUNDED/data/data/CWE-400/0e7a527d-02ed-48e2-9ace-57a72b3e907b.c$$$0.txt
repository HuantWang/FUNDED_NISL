-----label-----
0
-----code-----
static void goodB2G1()
{
    twoIntsStruct * data;
    data = NULL;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(globalFive!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
87,90
88,89
88,90
89,90
92,93
93,94
94,95
94,96
95,96
98,99
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,96,97,102,104
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1(){    twoIntsStruct * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G1()
goodB2G1
{    twoIntsStruct * data;    data = NULL;    if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalFive==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Deallocate memory */        free(data);    }
globalFive!=5
globalFive
globalFive
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Deallocate memory */        free(data);    }
free(data);
free(data)
free
free
data
data
-----joern-----
(19,36,0)
(50,34,0)
(31,45,0)
(36,52,0)
(44,55,0)
(24,34,0)
(49,19,0)
(27,44,0)
(26,17,0)
(57,20,0)
(34,52,0)
(41,34,0)
(25,24,0)
(29,12,0)
(35,46,0)
(51,30,0)
(16,22,0)
(8,34,0)
(22,13,0)
(10,28,0)
(53,50,0)
(42,50,0)
(43,7,0)
(33,46,0)
(11,55,0)
(3,12,0)
(46,33,0)
(2,36,0)
(1,45,0)
(23,52,0)
(35,55,0)
(15,8,0)
(35,12,0)
(44,54,0)
(12,35,0)
(22,28,0)
(55,20,0)
(56,23,0)
(0,20,0)
(44,34,0)
(46,34,0)
(4,7,0)
(40,35,0)
(24,56,0)
(6,28,0)
(9,8,0)
(8,19,0)
(18,52,0)
(13,52,0)
(48,13,0)
(12,29,0)
(23,56,0)
(14,17,0)
(28,34,0)
(34,46,0)
(32,51,0)
(37,20,0)
(19,8,0)
(31,39,0)
(38,55,0)
(45,31,0)
(47,24,0)
(21,29,0)
(46,35,0)
(56,24,0)
(28,22,0)
(41,7,1)
(43,55,1)
(24,47,1)
(55,38,1)
(2,19,1)
(50,34,1)
(1,50,1)
(5,51,1)
(6,10,1)
(38,11,1)
(28,6,1)
(27,17,1)
(19,8,1)
(22,28,1)
(44,27,1)
(15,13,1)
(44,34,1)
(45,1,1)
(34,46,1)
(48,22,1)
(3,40,1)
(32,17,1)
(8,9,1)
(5,44,1)
(36,2,1)
(25,36,1)
(53,34,1)
(44,55,1)
(29,21,1)
(13,48,1)
(14,7,1)
(14,23,1)
(22,16,1)
(23,56,1)
(46,35,1)
(12,29,1)
(4,43,1)
(35,12,1)
(31,45,1)
(8,34,1)
(10,50,1)
(24,34,1)
(19,49,1)
(26,14,1)
(7,4,1)
(56,24,1)
(16,28,1)
(46,33,1)
(10,31,1)
(9,15,1)
(50,42,1)
(47,25,1)
(21,3,1)
(51,32,1)
(40,41,1)
(17,26,1)
(42,53,1)
(28,34,1)
(35,55,1)
(49,8,1)
(44,17,2)
(9,7,2)
(51,17,2)
(12,7,2)
(21,7,2)
(47,7,2)
(46,35,2)
(36,7,2)
(40,7,2)
(31,50,2)
(46,33,2)
(32,17,2)
(24,7,2)
(49,7,2)
(8,34,2)
(27,17,2)
(2,7,2)
(35,7,2)
(34,7,2)
(19,8,2)
(12,29,2)
(45,50,2)
(22,28,2)
(25,7,2)
(3,7,2)
(31,45,2)
(15,7,2)
(24,34,2)
(19,7,2)
(1,50,2)
(48,7,2)
(13,7,2)
(44,34,2)
(23,56,2)
(35,55,2)
(29,7,2)
(46,7,2)
(56,24,2)
(23,7,2)
(28,7,2)
(8,7,2)
(41,7,2)
(44,55,2)
(10,7,2)
(53,7,2)
(34,46,2)
(6,7,2)
(28,34,2)
(16,7,2)
(22,7,2)
(50,34,2)
(42,7,2)
(56,7,2)
(35,12,2)
(50,7,2)
-----------------------------------
(0,if(globalFive==5)
(1,1)
(2,0)
(3,100)
(4,5)
(5,RET)
(6,0)
(7,globalFive==5)
(8,data[0])
(9,0)
(10,data)
(11,data)
(12,100*sizeof(twoIntsStruct)
(13,data[0].intOne = 0)
(14,globalFive)
(15,data)
(16,intOne)
(17,globalFive!=5)
(18,if (data == NULL)
(19,data[0].intTwo)
(20,)
(21,twoIntsStruct)
(22,data[0].intOne)
(23,printStructLine(&data[0])
(24,data[0])
(25,data)
(26,5)
(27,data)
(28,data[0])
(29,sizeof(twoIntsStruct)
(30,)
(31,exit(-1)
(32,"Benign, fixed string")
(33,twoIntsStruct *)
(34,data = (twoIntsStruct *)
(35,realloc(data, 100*sizeof(twoIntsStruct)
(36,data[0].intTwo = 0)
(37,data)
(38,NULL)
(39,)
(40,data)
(41,data)
(42,NULL)
(43,globalFive)
(44,free(data)
(45,-1)
(46,(twoIntsStruct *)
(47,0)
(48,0)
(49,intTwo)
(50,data == NULL)
(51,printLine("Benign, fixed string")
(52,)
(53,data)
(54,)
(55,data = NULL)
(56,&data[0])
(57,if(globalFive!=5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^