-----label-----
0
-----code-----
void end_wrapper_epilogue(void)
{
	debug(D_DEBUG, "%s from %d.\n", str_msgtype(END), getpid());

	struct rmonitor_msg msg;
	msg.type   = END;
	msg.error  = 0;
	msg.origin = getpid();
	msg.data.p = getpid();

	send_monitor_msg(&msg);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
10,11
11,12
11,13
11,14
11,15
11,16
12,13
14,15
17,18
17,19
18,19
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
33,35
34,35
37,38
39,40
40,41
40,42
41,42
41,43
42,43
46,47
47,48
47,49
48,49
48,50
49,50
52,53
53,54
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
63,64
64,65
66,67
67,68
67,69
68,69
70,71
71,72
-----nextToken-----
2,4,6,8,13,15,16,19,21,24,28,30,35,36,38,43,44,45,50,51,54,60,61,62,65,69,72
-----computeFrom-----
32,33
32,34
40,41
40,42
47,48
47,49
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void end_wrapper_epilogue(void){	debug(D_DEBUG, "%s from %d.\n", str_msgtype(END), getpid());	struct rmonitor_msg msg;	msg.type   = END;	msg.error  = 0;	msg.origin = getpid();	msg.data.p = getpid();	send_monitor_msg(&msg);}
void
end_wrapper_epilogue(void)
end_wrapper_epilogue
void
void


{	debug(D_DEBUG, "%s from %d.\n", str_msgtype(END), getpid());	struct rmonitor_msg msg;	msg.type   = END;	msg.error  = 0;	msg.origin = getpid();	msg.data.p = getpid();	send_monitor_msg(&msg);}
debug(D_DEBUG, "%s from %d.\n", str_msgtype(END), getpid());
debug(D_DEBUG, "%s from %d.\n", str_msgtype(END), getpid())
debug
debug
D_DEBUG
D_DEBUG
"%s from %d.\n"
str_msgtype(END)
str_msgtype
str_msgtype
END
END
getpid()
getpid
getpid
struct rmonitor_msg msg;
struct rmonitor_msg msg;
struct rmonitor_msg
rmonitor_msg
msg
msg
msg.type   = END;
msg.type   = END
msg.type
msg
msg
type
END
END
msg.error  = 0;
msg.error  = 0
msg.error
msg
msg
error
0
msg.origin = getpid();
msg.origin = getpid()
msg.origin
msg
msg
origin
getpid()
getpid
getpid
msg.data.p = getpid();
msg.data.p = getpid()
msg.data.p
msg.data
msg
msg
data
p
getpid()
getpid
getpid
send_monitor_msg(&msg);
send_monitor_msg(&msg)
send_monitor_msg
send_monitor_msg
&msg
msg
msg
-----joern-----
(7,1,0)
(14,1,0)
(27,25,0)
(14,28,0)
(21,14,0)
(29,1,0)
(22,32,0)
(18,21,0)
(2,17,0)
(15,1,0)
(6,26,0)
(17,2,0)
(11,31,0)
(2,1,0)
(14,21,0)
(16,23,0)
(0,32,0)
(9,5,0)
(32,7,0)
(20,8,0)
(8,5,0)
(4,14,0)
(31,24,0)
(25,27,0)
(26,15,0)
(5,1,0)
(28,14,0)
(3,7,0)
(27,1,0)
(12,31,0)
(13,8,0)
(33,23,0)
(24,31,0)
(10,24,0)
(15,26,0)
(30,14,0)
(23,27,0)
(24,2,0)
(9,8,1)
(14,28,1)
(16,33,1)
(12,11,1)
(13,7,1)
(24,31,1)
(21,18,1)
(17,24,1)
(28,21,1)
(33,5,1)
(6,2,1)
(32,22,1)
(24,10,1)
(3,32,1)
(23,16,1)
(25,23,1)
(4,30,1)
(14,21,1)
(20,13,1)
(31,12,1)
(18,4,1)
(26,6,1)
(8,20,1)
(5,9,1)
(27,25,1)
(22,0,1)
(10,31,1)
(11,27,1)
(2,17,1)
(19,15,1)
(0,14,1)
(7,3,1)
(15,26,1)
(27,25,2)
(14,28,2)
(14,21,2)
(24,31,2)
(15,26,2)
(2,17,2)
-----------------------------------
(0,msg)
(1,)
(2,msg.data.p = getpid()
(3,END)
(4,"%s from %d.\\n")
(5,msg.error  = 0)
(6,msg)
(7,msg.type   = END)
(8,msg.error)
(9,0)
(10,p)
(11,msg)
(12,data)
(13,msg)
(14,debug(D_DEBUG, "%s from %d.\\n", str_msgtype(END)
(15,send_monitor_msg(&msg)
(16,origin)
(17,getpid()
(18,END)
(19,RET)
(20,error)
(21,str_msgtype(END)
(22,type)
(23,msg.origin)
(24,msg.data.p)
(25,getpid()
(26,&msg)
(27,msg.origin = getpid()
(28,getpid()
(29,msg)
(30,D_DEBUG)
(31,msg.data)
(32,msg.type)
(33,msg)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^