-----label-----
0
-----code-----
static void goodB2G2()
{
    int64_t * data;
    data = NULL;
    switch(6)
    {
    case 6:
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    switch(7)
    {
    case 7:
        /* FIX: Deallocate memory */
        free(data);
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
21,30
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
76,77
77,78
77,79
78,79
82,83
82,84
84,85
84,86
84,87
84,88
84,89
84,90
85,86
87,88
88,89
88,90
89,90
91,92
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,9,11,12,16,18,20,23,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,74,75,79,80,81,83,86,90,92,93,94,98,99,100
-----computeFrom-----
14,15
14,16
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
static void goodB2G2(){    int64_t * data;    data = NULL;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* FIX: Deallocate memory */        free(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
static void
goodB2G2()
goodB2G2
{    int64_t * data;    data = NULL;    switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    switch(7)    {    case 7:        /* FIX: Deallocate memory */        free(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
switch(6)    {    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
switch(7)    {    case 7:        /* FIX: Deallocate memory */        free(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
7
{    case 7:        /* FIX: Deallocate memory */        free(data);        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 7:
7
free(data);
free(data)
free
free
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(1,48,0)
(10,31,0)
(27,48,0)
(32,48,0)
(8,48,0)
(13,24,0)
(38,19,0)
(6,4,0)
(13,45,0)
(14,43,0)
(31,12,0)
(9,31,0)
(22,2,0)
(37,24,0)
(43,31,0)
(42,31,0)
(43,44,0)
(47,48,0)
(26,18,0)
(6,19,0)
(17,12,0)
(19,6,0)
(25,44,0)
(34,12,0)
(15,44,0)
(10,6,0)
(21,2,0)
(24,13,0)
(46,38,0)
(33,44,0)
(36,22,0)
(0,48,0)
(18,19,0)
(6,10,0)
(19,48,0)
(41,44,0)
(20,38,0)
(29,23,0)
(18,32,0)
(40,1,0)
(7,19,0)
(32,18,0)
(2,22,0)
(10,2,0)
(43,19,0)
(23,44,0)
(3,12,0)
(5,48,0)
(2,10,0)
(4,6,0)
(28,18,0)
(16,10,0)
(30,48,0)
(38,46,1)
(0,38,1)
(24,37,1)
(32,18,1)
(31,9,1)
(38,19,1)
(10,31,1)
(36,21,1)
(6,4,1)
(33,43,1)
(5,1,1)
(18,19,1)
(35,33,1)
(28,26,1)
(41,23,1)
(46,20,1)
(18,28,1)
(26,0,1)
(47,32,1)
(1,40,1)
(39,47,1)
(16,7,1)
(40,11,1)
(20,19,1)
(21,16,1)
(14,39,1)
(37,38,1)
(35,41,1)
(23,29,1)
(10,2,1)
(19,6,1)
(43,31,1)
(29,39,1)
(39,5,1)
(11,31,1)
(0,13,1)
(43,19,1)
(9,42,1)
(43,14,1)
(7,11,1)
(13,24,1)
(6,10,1)
(22,36,1)
(2,22,1)
(28,11,2)
(46,11,2)
(18,11,2)
(33,39,2)
(6,4,2)
(29,39,2)
(10,31,2)
(38,11,2)
(20,11,2)
(10,11,2)
(37,38,2)
(18,19,2)
(24,38,2)
(16,11,2)
(19,6,2)
(40,11,2)
(7,11,2)
(2,11,2)
(13,24,2)
(43,19,2)
(47,11,2)
(23,39,2)
(14,39,2)
(19,11,2)
(43,31,2)
(0,11,2)
(13,38,2)
(10,2,2)
(2,22,2)
(43,39,2)
(32,18,2)
(38,19,2)
(21,11,2)
(36,11,2)
(5,11,2)
(6,11,2)
(32,11,2)
(41,39,2)
(6,10,2)
(22,11,2)
(26,11,2)
(1,11,2)
-----------------------------------
(0,L)
(1,printLine("Benign, fixed string")
(2,100*sizeof(int64_t)
(3,data)
(4,int64_t *)
(5,break;)
(6,(int64_t *)
(7,data)
(8,if (data == NULL)
(9,NULL)
(10,realloc(data, 100*sizeof(int64_t)
(11,6)
(12,)
(13,exit(-1)
(14,data)
(15,default:)
(16,data)
(17,switch(7)
(18,data[0])
(19,data = (int64_t *)
(20,data)
(21,100)
(22,sizeof(int64_t)
(23,printLine("Benign, fixed string")
(24,-1)
(25,case 7:)
(26,data)
(27,case 6:)
(28,0)
(29,"Benign, fixed string")
(30,default:)
(31,data = NULL)
(32,printLongLongLine(data[0])
(33,break;)
(34,switch(6)
(35,RET)
(36,int64_t)
(37,1)
(38,data == NULL)
(39,7)
(40,"Benign, fixed string")
(41,break;)
(42,data)
(43,free(data)
(44,)
(45,)
(46,NULL)
(47,break;)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^