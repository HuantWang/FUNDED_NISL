-----label-----
0
-----code-----
static int ohci_cancel_packet(struct fw_card *card, struct fw_packet *packet)
{
	struct fw_ohci *ohci = fw_ohci(card);
	struct context *ctx = &ohci->at_request_ctx;
	struct driver_data *driver_data = packet->driver_data;
	int retval = -ENOENT;

	tasklet_disable(&ctx->tasklet);

	if (packet->ack != 0)
		goto out;

	if (packet->payload_bus)
		dma_unmap_single(ohci->card.device, packet->payload_bus,
				 packet->payload_length, DMA_TO_DEVICE);

	log_ar_at_event('T', packet->speed, packet->header, 0x20);
	driver_data->packet = NULL;
	packet->ack = RCODE_CANCELLED;
	packet->callback(packet, &ohci->card, packet->ack);
	retval = 0;

 out:
	tasklet_enable(&ctx->tasklet);

	return retval;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
17,25
17,26
17,27
17,28
17,29
17,30
17,31
18,19
19,20
19,21
20,21
22,23
22,24
22,25
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
35,36
35,37
35,38
38,39
39,40
40,41
40,42
41,42
44,45
45,46
45,47
46,47
48,49
48,50
48,51
51,52
52,53
52,54
53,54
56,57
57,58
57,59
59,60
59,61
61,62
62,63
63,64
65,66
66,67
66,68
67,68
69,70
70,71
70,72
71,72
74,75
74,76
75,76
75,77
76,77
76,78
77,78
81,82
83,84
83,85
84,85
84,86
85,86
88,89
89,90
89,91
89,92
89,93
89,94
90,91
92,93
92,94
93,94
93,95
94,95
98,99
98,100
99,100
102,103
102,104
103,104
106,107
108,109
109,110
109,111
109,112
109,113
109,114
110,111
113,114
113,115
114,115
117,118
117,119
118,119
122,123
123,124
123,125
124,125
124,126
125,126
128,129
130,131
131,132
131,133
132,133
132,134
133,134
136,137
138,139
139,140
139,141
139,142
139,143
140,141
140,142
141,142
144,145
146,147
147,148
147,149
148,149
151,152
151,153
152,153
155,156
156,157
156,158
157,158
160,161
160,162
162,163
163,164
163,165
164,165
166,167
167,168
167,169
168,169
171,172
172,173
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,24,28,30,34,36,37,42,43,47,49,50,54,55,58,60,64,68,72,73,78,79,80,82,86,87,91,95,96,97,100,101,104,105,107,111,112,115,116,119,120,121,126,127,129,134,135,137,142,143,145,149,150,153,154,158,159,161,165,169,170,173
-----computeFrom-----
75,76
75,77
123,124
123,125
131,132
131,133
156,157
156,158
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;GotoStatement;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int ohci_cancel_packet(struct fw_card *card, struct fw_packet *packet){	struct fw_ohci *ohci = fw_ohci(card);	struct context *ctx = &ohci->at_request_ctx;	struct driver_data *driver_data = packet->driver_data;	int retval = -ENOENT;	tasklet_disable(&ctx->tasklet);	if (packet->ack != 0)		goto out;	if (packet->payload_bus)		dma_unmap_single(ohci->card.device, packet->payload_bus,				 packet->payload_length, DMA_TO_DEVICE);	log_ar_at_event('T', packet->speed, packet->header, 0x20);	driver_data->packet = NULL;	packet->ack = RCODE_CANCELLED;	packet->callback(packet, &ohci->card, packet->ack);	retval = 0; out:	tasklet_enable(&ctx->tasklet);	return retval;}
static int
ohci_cancel_packet(struct fw_card *card, struct fw_packet *packet)
ohci_cancel_packet
struct fw_card *card
struct fw_card
fw_card
*card
*
card
struct fw_packet *packet
struct fw_packet
fw_packet
*packet
*
packet
{	struct fw_ohci *ohci = fw_ohci(card);	struct context *ctx = &ohci->at_request_ctx;	struct driver_data *driver_data = packet->driver_data;	int retval = -ENOENT;	tasklet_disable(&ctx->tasklet);	if (packet->ack != 0)		goto out;	if (packet->payload_bus)		dma_unmap_single(ohci->card.device, packet->payload_bus,				 packet->payload_length, DMA_TO_DEVICE);	log_ar_at_event('T', packet->speed, packet->header, 0x20);	driver_data->packet = NULL;	packet->ack = RCODE_CANCELLED;	packet->callback(packet, &ohci->card, packet->ack);	retval = 0; out:	tasklet_enable(&ctx->tasklet);	return retval;}
struct fw_ohci *ohci = fw_ohci(card);
struct fw_ohci *ohci = fw_ohci(card);
struct fw_ohci
fw_ohci
*ohci = fw_ohci(card)
*
ohci
= fw_ohci(card)
fw_ohci(card)
fw_ohci
fw_ohci
card
card
struct context *ctx = &ohci->at_request_ctx;
struct context *ctx = &ohci->at_request_ctx;
struct context
context
*ctx = &ohci->at_request_ctx
*
ctx
= &ohci->at_request_ctx
&ohci->at_request_ctx
ohci->at_request_ctx
ohci
ohci
at_request_ctx
struct driver_data *driver_data = packet->driver_data;
struct driver_data *driver_data = packet->driver_data;
struct driver_data
driver_data
*driver_data = packet->driver_data
*
driver_data
= packet->driver_data
packet->driver_data
packet
packet
driver_data
int retval = -ENOENT;
int retval = -ENOENT;
int
retval = -ENOENT
retval
= -ENOENT
-ENOENT
ENOENT
ENOENT
tasklet_disable(&ctx->tasklet);
tasklet_disable(&ctx->tasklet)
tasklet_disable
tasklet_disable
&ctx->tasklet
ctx->tasklet
ctx
ctx
tasklet
if (packet->ack != 0)		goto out;
packet->ack != 0
packet->ack
packet
packet
ack
0
goto out;
out
if (packet->payload_bus)		dma_unmap_single(ohci->card.device, packet->payload_bus,				 packet->payload_length, DMA_TO_DEVICE);
packet->payload_bus
packet
packet
payload_bus
dma_unmap_single(ohci->card.device, packet->payload_bus,				 packet->payload_length, DMA_TO_DEVICE);
dma_unmap_single(ohci->card.device, packet->payload_bus,				 packet->payload_length, DMA_TO_DEVICE)
dma_unmap_single
dma_unmap_single
ohci->card.device
ohci->card
ohci
ohci
card
device
packet->payload_bus
packet
packet
payload_bus
packet->payload_length
packet
packet
payload_length
DMA_TO_DEVICE
DMA_TO_DEVICE
log_ar_at_event('T', packet->speed, packet->header, 0x20);
log_ar_at_event('T', packet->speed, packet->header, 0x20)
log_ar_at_event
log_ar_at_event
'T'
packet->speed
packet
packet
speed
packet->header
packet
packet
header
0x20
driver_data->packet = NULL;
driver_data->packet = NULL
driver_data->packet
driver_data
driver_data
packet
NULL
NULL
packet->ack = RCODE_CANCELLED;
packet->ack = RCODE_CANCELLED
packet->ack
packet
packet
ack
RCODE_CANCELLED
RCODE_CANCELLED
packet->callback(packet, &ohci->card, packet->ack);
packet->callback(packet, &ohci->card, packet->ack)
packet->callback
packet
packet
callback
packet
packet
&ohci->card
ohci->card
ohci
ohci
card
packet->ack
packet
packet
ack
retval = 0;
retval = 0
retval
retval
0
out:	tasklet_enable(&ctx->tasklet);
out
tasklet_enable(&ctx->tasklet);
tasklet_enable(&ctx->tasklet)
tasklet_enable
tasklet_enable
&ctx->tasklet
ctx->tasklet
ctx
ctx
tasklet
return retval;
retval
retval
-----joern-----
(83,7,0)
(89,72,0)
(48,78,0)
(55,88,0)
(72,78,0)
(41,49,0)
(58,66,0)
(80,45,0)
(21,30,0)
(67,76,0)
(21,36,0)
(91,37,0)
(66,86,0)
(51,49,0)
(55,27,0)
(68,49,0)
(82,86,0)
(50,45,0)
(3,49,0)
(19,26,0)
(45,50,0)
(7,83,0)
(35,66,0)
(2,40,0)
(92,30,0)
(42,49,0)
(65,36,0)
(45,36,0)
(54,27,0)
(15,73,0)
(37,78,0)
(35,36,0)
(94,65,0)
(44,28,0)
(25,76,0)
(85,67,0)
(78,49,0)
(46,65,0)
(81,21,0)
(64,37,0)
(13,49,0)
(20,50,0)
(9,54,0)
(6,49,0)
(52,35,0)
(70,35,0)
(22,12,0)
(4,49,0)
(86,36,0)
(54,14,0)
(26,72,0)
(66,76,0)
(27,49,0)
(66,35,0)
(76,67,0)
(79,41,0)
(16,36,0)
(15,36,0)
(3,13,0)
(34,73,0)
(84,36,0)
(1,55,0)
(69,83,0)
(17,84,0)
(74,34,0)
(2,62,0)
(30,49,0)
(63,49,0)
(90,54,0)
(76,66,0)
(31,84,0)
(10,3,0)
(56,5,0)
(16,49,0)
(39,72,0)
(30,65,0)
(87,21,0)
(8,13,0)
(71,2,0)
(16,34,0)
(62,49,0)
(24,86,0)
(47,16,0)
(16,7,0)
(33,73,0)
(14,54,0)
(38,34,0)
(12,40,0)
(30,21,0)
(32,3,0)
(83,27,0)
(26,19,0)
(78,14,0)
(67,27,0)
(0,49,0)
(65,30,0)
(77,67,0)
(34,16,0)
(5,56,0)
(56,37,0)
(29,2,0)
(40,49,0)
(75,27,0)
(7,16,0)
(3,41,0)
(93,40,0)
(57,62,0)
(11,83,0)
(41,28,0)
(53,15,0)
(43,15,0)
(5,49,0)
(27,55,0)
(12,36,0)
(19,49,0)
(40,12,0)
(73,49,0)
(61,30,0)
(37,56,0)
(18,12,0)
(60,45,0)
(14,78,0)
(86,66,0)
(72,26,0)
(34,36,0)
(23,13,0)
(28,41,0)
(25,67,1)
(86,36,1)
(18,93,1)
(83,69,1)
(65,36,1)
(2,40,1)
(35,70,1)
(40,12,1)
(81,65,1)
(57,2,1)
(69,11,1)
(47,73,1)
(46,94,1)
(39,59,1)
(15,36,1)
(10,19,1)
(30,21,1)
(3,41,1)
(19,26,1)
(29,30,1)
(8,16,1)
(20,45,1)
(56,37,1)
(15,53,1)
(55,1,1)
(34,73,1)
(7,83,1)
(71,29,1)
(87,81,1)
(12,22,1)
(58,35,1)
(92,66,1)
(45,60,1)
(30,65,1)
(66,35,1)
(43,62,1)
(50,20,1)
(90,48,1)
(85,77,1)
(16,34,1)
(33,15,1)
(50,45,1)
(45,36,1)
(66,58,1)
(21,36,1)
(67,85,1)
(55,88,1)
(28,44,1)
(72,89,1)
(70,52,1)
(93,78,1)
(27,55,1)
(11,47,1)
(1,75,1)
(62,57,1)
(26,72,1)
(13,23,1)
(86,82,1)
(91,64,1)
(79,40,1)
(77,84,1)
(66,86,1)
(23,8,1)
(72,78,1)
(54,27,1)
(65,46,1)
(76,25,1)
(89,39,1)
(53,43,1)
(44,79,1)
(16,36,1)
(94,92,1)
(37,91,1)
(34,38,1)
(82,24,1)
(38,74,1)
(21,87,1)
(59,50,1)
(35,36,1)
(61,21,1)
(52,86,1)
(34,36,1)
(17,31,1)
(80,5,1)
(24,76,1)
(3,10,1)
(32,3,1)
(66,76,1)
(73,33,1)
(84,36,1)
(76,67,1)
(30,61,1)
(22,18,1)
(39,13,1)
(67,27,1)
(41,28,1)
(92,84,1)
(3,13,1)
(12,36,1)
(14,54,1)
(9,90,1)
(78,14,1)
(54,9,1)
(16,7,1)
(74,7,1)
(48,27,1)
(5,56,1)
(2,71,1)
(83,27,1)
(64,41,1)
(31,50,1)
(84,17,1)
(60,80,1)
(37,78,1)
(32,3,2)
(74,50,2)
(16,7,2)
(67,27,2)
(81,50,2)
(76,67,2)
(2,40,2)
(50,45,2)
(35,84,2)
(14,54,2)
(59,50,2)
(41,28,2)
(66,84,2)
(30,50,2)
(40,12,2)
(86,84,2)
(33,50,2)
(34,73,2)
(30,65,2)
(7,83,2)
(71,50,2)
(54,27,2)
(47,50,2)
(15,50,2)
(72,78,2)
(13,50,2)
(16,34,2)
(84,36,2)
(16,50,2)
(34,36,2)
(37,78,2)
(31,50,2)
(85,84,2)
(21,36,2)
(66,76,2)
(83,27,2)
(70,84,2)
(46,50,2)
(8,50,2)
(27,55,2)
(15,36,2)
(19,26,2)
(43,50,2)
(3,41,2)
(61,50,2)
(77,84,2)
(53,50,2)
(94,50,2)
(58,84,2)
(2,50,2)
(24,84,2)
(65,36,2)
(65,50,2)
(76,84,2)
(78,14,2)
(26,72,2)
(35,36,2)
(73,50,2)
(87,50,2)
(55,88,2)
(38,50,2)
(7,50,2)
(52,84,2)
(69,50,2)
(30,21,2)
(25,84,2)
(66,35,2)
(3,13,2)
(84,50,2)
(67,84,2)
(86,36,2)
(45,36,2)
(21,50,2)
(92,50,2)
(29,50,2)
(83,50,2)
(5,56,2)
(82,84,2)
(56,37,2)
(66,86,2)
(62,50,2)
(12,36,2)
(23,50,2)
(57,50,2)
(17,50,2)
(11,50,2)
(16,36,2)
(34,50,2)
-----------------------------------
(0,ctx)
(1,card)
(2,driver_data->packet)
(3,return retval;)
(4,if (packet->payload_bus)
(5,tasklet_disable(&ctx->tasklet)
(6,driver_data)
(7,&ohci->card)
(8,retval)
(9,at_request_ctx)
(10,retval)
(11,ohci)
(12,packet->driver_data)
(13,retval = 0)
(14,&ohci->at_request_ctx)
(15,packet->ack)
(16,packet->callback(packet, &ohci->card, packet->ack)
(17,payload_bus)
(18,packet)
(19,tasklet_enable(&ctx->tasklet)
(20,0)
(21,packet->header)
(22,driver_data)
(23,0)
(24,packet)
(25,device)
(26,&ctx->tasklet)
(27,*ohci = fw_ohci(card)
(28,-ENOENT)
(29,driver_data)
(30,log_ar_at_event('T', packet->speed, packet->header, 0x20)
(31,packet)
(32,RET)
(33,RCODE_CANCELLED)
(34,packet->ack)
(35,packet->payload_length)
(36,struct fw_packet *packet)
(37,ctx->tasklet)
(38,ack)
(39,ctx)
(40,*driver_data = packet->driver_data)
(41,retval = -ENOENT)
(42,retval)
(43,packet)
(44,ENOENT)
(45,packet->ack)
(46,speed)
(47,packet)
(48,ctx)
(49,)
(50,packet->ack != 0)
(51,ohci)
(52,packet)
(53,ack)
(54,ohci->at_request_ctx)
(55,fw_ohci(card)
(56,&ctx->tasklet)
(57,NULL)
(58,DMA_TO_DEVICE)
(59,goto out;)
(60,ack)
(61,0x20)
(62,driver_data->packet = NULL)
(63,if (packet->ack != 0)
(64,ctx)
(65,packet->speed)
(66,dma_unmap_single(ohci->card.device, packet->payload_bus,\n\\n\\t\\t\\t\\t packet->payload_length, DMA_TO_DEVICE)
(67,ohci->card)
(68,out:)
(69,card)
(70,payload_length)
(71,packet)
(72,ctx->tasklet)
(73,packet->ack = RCODE_CANCELLED)
(74,packet)
(75,ohci)
(76,ohci->card.device)
(77,ohci)
(78,*ctx = &ohci->at_request_ctx)
(79,retval)
(80,packet)
(81,packet)
(82,payload_bus)
(83,ohci->card)
(84,packet->payload_bus)
(85,card)
(86,packet->payload_bus)
(87,header)
(88,struct fw_card *card)
(89,tasklet)
(90,ohci)
(91,tasklet)
(92,'T')
(93,driver_data)
(94,packet)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^