-----label-----
0
-----code-----
static int driver_send_unicast(Peer *receiver, Message *message) {
        int r;

        r = driver_monitor(receiver->bus, NULL, message);
        if (r)
                return error_fold(r);

        r = connection_queue(&receiver->connection, NULL, message);
        if (r) {
                if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {
                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);

                        connection_shutdown(&receiver->connection);

                        log_append_here(receiver->bus->log, LOG_WARNING, 0);
                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,
                                                   receiver->bus->seclabel, receiver->policy->seclabel,
                                                   message);
                        if (r == CONNECTION_E_QUOTA)
                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);
                        else
                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);
                        if (r)
                                return error_fold(r);
                } else {
                        return error_fold(r);
                }
        }

        return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
27,31
28,29
30,31
30,32
31,32
34,35
36,37
38,39
38,40
39,40
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
51,54
51,55
52,53
54,55
55,56
55,57
56,57
59,60
61,62
63,64
63,65
64,65
66,67
67,68
67,69
67,70
68,69
68,70
69,70
69,71
70,71
72,73
74,75
74,76
75,76
77,78
79,80
79,81
79,82
79,83
79,84
79,85
80,81
81,82
81,83
82,83
84,85
84,86
86,87
87,88
87,89
88,89
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
99,100
100,101
100,102
101,102
104,105
105,106
105,107
105,108
105,109
106,107
108,109
108,110
109,110
109,111
110,111
114,115
117,118
118,119
118,120
118,121
118,122
118,123
118,124
118,125
118,126
118,127
119,120
121,122
121,123
122,123
125,126
127,128
127,129
128,129
131,132
133,134
134,135
136,137
136,138
137,138
137,139
138,139
142,143
142,144
143,144
143,145
144,145
148,149
150,151
150,152
150,153
151,152
151,153
152,153
154,155
156,157
157,158
157,159
158,159
160,161
160,162
160,163
160,164
161,162
163,164
163,165
164,165
164,166
165,166
170,171
170,172
171,172
174,175
175,176
175,177
176,177
178,179
178,180
178,181
178,182
179,180
181,182
181,183
182,183
182,184
183,184
188,189
188,190
189,190
192,193
192,194
193,194
195,196
196,197
196,198
197,198
199,200
201,202
202,203
203,204
203,205
204,205
206,207
208,209
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,26,29,32,33,35,37,40,44,46,50,53,57,58,60,62,65,71,73,76,78,83,85,89,93,94,98,102,103,107,111,112,113,115,116,120,123,124,126,129,130,132,135,139,140,141,145,146,147,149,153,155,159,162,166,167,168,169,172,173,177,180,184,185,186,187,190,191,194,198,200,205,207,209
-----computeFrom-----
24,25
24,26
48,49
48,50
68,69
68,70
69,70
69,71
74,75
74,76
151,152
151,153
157,158
157,159
175,176
175,177
-----guardedBy-----
76,200
73,155
153,159
-----guardedByNegation-----
76,207
153,177
-----lastLexicalUse-----
76,207
153,177
-----jump-----
76,207
153,177
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int driver_send_unicast(Peer *receiver, Message *message) {        int r;        r = driver_monitor(receiver->bus, NULL, message);        if (r)                return error_fold(r);        r = connection_queue(&receiver->connection, NULL, message);        if (r) {                if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }        return 0;}
static int
driver_send_unicast(Peer *receiver, Message *message)
driver_send_unicast
Peer *receiver
Peer
Peer
*receiver
*
receiver
Message *message
Message
Message
*message
*
message
{        int r;        r = driver_monitor(receiver->bus, NULL, message);        if (r)                return error_fold(r);        r = connection_queue(&receiver->connection, NULL, message);        if (r) {                if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }        return 0;}
int r;
int r;
int
r
r
r = driver_monitor(receiver->bus, NULL, message);
r = driver_monitor(receiver->bus, NULL, message)
r
r
driver_monitor(receiver->bus, NULL, message)
driver_monitor
driver_monitor
receiver->bus
receiver
receiver
bus
NULL
NULL
message
message
if (r)                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
r = connection_queue(&receiver->connection, NULL, message);
r = connection_queue(&receiver->connection, NULL, message)
r
r
connection_queue(&receiver->connection, NULL, message)
connection_queue
connection_queue
&receiver->connection
receiver->connection
receiver
receiver
connection
NULL
NULL
message
message
if (r) {                if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }
r
r
{                if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }
if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }
r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS
r == CONNECTION_E_QUOTA
r
r
CONNECTION_E_QUOTA
CONNECTION_E_QUOTA
r == CONNECTION_E_UNEXPECTED_FDS
r
r
CONNECTION_E_UNEXPECTED_FDS
CONNECTION_E_UNEXPECTED_FDS
{                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);                        if (r)                                return error_fold(r);                }
NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);
NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);
NameSet
NameSet
receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
receiver_names
= NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
NAME_SET_INIT_FROM_OWNER
NAME_SET_INIT_FROM_OWNER
&receiver->owned_names
receiver->owned_names
receiver
receiver
owned_names
connection_shutdown(&receiver->connection);
connection_shutdown(&receiver->connection)
connection_shutdown
connection_shutdown
&receiver->connection
receiver->connection
receiver
receiver
connection
log_append_here(receiver->bus->log, LOG_WARNING, 0);
log_append_here(receiver->bus->log, LOG_WARNING, 0)
log_append_here
log_append_here
receiver->bus->log
receiver->bus
receiver
receiver
bus
log
LOG_WARNING
LOG_WARNING
0
bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);
bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message)
bus_log_append_transaction
bus_log_append_transaction
receiver->bus
receiver
receiver
bus
ADDRESS_ID_INVALID
ADDRESS_ID_INVALID
receiver->id
receiver
receiver
id
NULL
NULL
&receiver_names
receiver_names
receiver_names
receiver->bus->seclabel
receiver->bus
receiver
receiver
bus
seclabel
receiver->policy->seclabel
receiver->policy
receiver
receiver
policy
seclabel
message
message
if (r == CONNECTION_E_QUOTA)                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        else                                r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);
r == CONNECTION_E_QUOTA
r
r
CONNECTION_E_QUOTA
CONNECTION_E_QUOTA
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
r
r
log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
log_commitf
log_commitf
receiver->bus->log
receiver->bus
receiver
receiver
bus
log
"Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects."
receiver->id
receiver
receiver
id
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id);
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id)
r
r
log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id)
log_commitf
log_commitf
receiver->bus->log
receiver->bus
receiver
receiver
bus
log
"Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects."
receiver->id
receiver
receiver
id
if (r)                                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
{                        return error_fold(r);                }
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
return 0;
0
-----joern-----
(10,95,0)
(112,13,0)
(90,39,0)
(80,44,0)
(116,113,0)
(28,68,0)
(79,82,0)
(81,91,0)
(20,38,0)
(37,16,0)
(3,18,0)
(94,60,0)
(58,67,0)
(95,13,0)
(109,68,0)
(43,3,0)
(110,86,0)
(54,82,0)
(60,82,0)
(23,72,0)
(110,16,0)
(45,27,0)
(101,63,0)
(96,49,0)
(95,42,0)
(23,95,0)
(55,13,0)
(34,72,0)
(18,113,0)
(61,94,0)
(87,61,0)
(75,95,0)
(12,50,0)
(2,82,0)
(95,106,0)
(67,18,0)
(98,95,0)
(49,82,0)
(52,47,0)
(106,95,0)
(11,31,0)
(99,67,0)
(115,39,0)
(71,49,0)
(18,67,0)
(30,1,0)
(110,9,0)
(44,80,0)
(103,113,0)
(53,42,0)
(93,113,0)
(102,10,0)
(38,2,0)
(83,42,0)
(15,3,0)
(95,25,0)
(70,108,0)
(65,87,0)
(85,48,0)
(25,50,0)
(36,87,0)
(111,13,0)
(97,16,0)
(2,38,0)
(77,60,0)
(9,110,0)
(95,6,0)
(9,40,0)
(40,82,0)
(80,82,0)
(86,110,0)
(84,93,0)
(0,86,0)
(46,67,0)
(32,81,0)
(92,110,0)
(89,63,0)
(28,48,0)
(42,95,0)
(73,54,0)
(44,93,0)
(31,113,0)
(72,82,0)
(67,46,0)
(3,43,0)
(68,13,0)
(26,48,0)
(44,6,0)
(14,94,0)
(118,3,0)
(4,18,0)
(61,87,0)
(67,6,0)
(17,55,0)
(46,49,0)
(51,80,0)
(94,61,0)
(39,18,0)
(7,54,0)
(42,82,0)
(79,17,0)
(35,72,0)
(95,23,0)
(40,9,0)
(17,79,0)
(27,18,0)
(81,93,0)
(5,9,0)
(100,65,0)
(8,113,0)
(70,91,0)
(21,79,0)
(76,102,0)
(105,80,0)
(25,95,0)
(16,110,0)
(41,40,0)
(56,2,0)
(24,23,0)
(107,10,0)
(70,31,0)
(93,44,0)
(57,2,0)
(50,20,0)
(78,44,0)
(10,102,0)
(104,106,0)
(74,25,0)
(50,13,0)
(72,23,0)
(63,18,0)
(16,82,0)
(65,86,0)
(102,82,0)
(66,95,0)
(20,50,0)
(106,82,0)
(70,52,0)
(38,20,0)
(65,108,0)
(22,61,0)
(63,43,0)
(119,106,0)
(19,28,0)
(55,17,0)
(62,102,0)
(95,10,0)
(29,40,0)
(120,60,0)
(54,61,0)
(48,28,0)
(48,82,0)
(61,54,0)
(33,13,0)
(43,63,0)
(88,68,0)
(117,79,0)
(27,52,0)
(60,94,0)
(68,28,0)
(69,44,0)
(49,46,0)
(3,15,1)
(83,53,1)
(96,71,1)
(119,104,1)
(14,60,1)
(61,54,1)
(70,31,1)
(118,114,1)
(79,117,1)
(7,73,1)
(36,39,1)
(39,18,1)
(9,5,1)
(50,20,1)
(80,105,1)
(95,23,1)
(16,82,1)
(11,114,1)
(85,55,1)
(62,76,1)
(64,86,1)
(110,16,1)
(92,9,1)
(59,93,1)
(51,84,1)
(48,26,1)
(15,118,1)
(72,35,1)
(114,18,1)
(32,59,1)
(109,28,1)
(27,18,1)
(65,86,1)
(25,50,1)
(81,93,1)
(74,75,1)
(67,58,1)
(86,110,1)
(55,17,1)
(60,77,1)
(95,25,1)
(67,6,1)
(41,0,1)
(44,69,1)
(108,65,1)
(2,82,1)
(27,45,1)
(90,115,1)
(34,10,1)
(18,67,1)
(68,88,1)
(12,43,1)
(38,2,1)
(45,43,1)
(68,28,1)
(40,29,1)
(22,94,1)
(2,56,1)
(26,85,1)
(10,102,1)
(60,82,1)
(11,64,1)
(107,102,1)
(94,14,1)
(42,83,1)
(24,72,1)
(106,82,1)
(70,108,1)
(29,41,1)
(53,68,1)
(70,52,1)
(105,51,1)
(9,40,1)
(48,82,1)
(17,79,1)
(44,80,1)
(106,119,1)
(95,66,1)
(120,36,1)
(5,40,1)
(61,94,1)
(16,97,1)
(54,7,1)
(91,81,1)
(31,11,1)
(63,18,1)
(102,82,1)
(76,25,1)
(10,107,1)
(23,24,1)
(102,62,1)
(79,82,1)
(73,22,1)
(69,78,1)
(25,74,1)
(63,89,1)
(21,50,1)
(28,48,1)
(81,32,1)
(40,82,1)
(67,46,1)
(88,109,1)
(3,18,1)
(75,106,1)
(66,23,1)
(98,42,1)
(77,120,1)
(95,10,1)
(101,3,1)
(117,21,1)
(43,3,1)
(95,6,1)
(71,4,1)
(94,60,1)
(0,39,1)
(35,34,1)
(43,63,1)
(44,6,1)
(93,44,1)
(104,98,1)
(87,61,1)
(72,82,1)
(97,37,1)
(49,96,1)
(95,106,1)
(54,82,1)
(39,90,1)
(70,91,1)
(23,72,1)
(58,99,1)
(100,64,1)
(52,27,1)
(65,100,1)
(95,42,1)
(4,59,1)
(46,49,1)
(49,82,1)
(37,92,1)
(78,80,1)
(20,38,1)
(28,19,1)
(42,82,1)
(65,87,1)
(89,101,1)
(57,12,1)
(19,48,1)
(80,82,1)
(110,9,1)
(56,57,1)
(64,87,1)
(115,95,1)
(99,46,1)
(16,82,2)
(114,59,2)
(49,82,2)
(72,43,2)
(0,39,2)
(83,43,2)
(85,43,2)
(2,43,2)
(49,59,2)
(11,114,2)
(34,43,2)
(20,43,2)
(27,43,2)
(24,43,2)
(76,43,2)
(80,82,2)
(55,17,2)
(70,31,2)
(45,43,2)
(87,39,2)
(61,54,2)
(68,28,2)
(86,110,2)
(55,43,2)
(96,59,2)
(46,59,2)
(110,39,2)
(67,46,2)
(110,9,2)
(63,18,2)
(93,44,2)
(9,40,2)
(94,60,2)
(95,10,2)
(67,6,2)
(22,39,2)
(23,43,2)
(50,43,2)
(72,82,2)
(5,39,2)
(70,91,2)
(19,43,2)
(65,86,2)
(102,43,2)
(42,43,2)
(38,2,2)
(86,39,2)
(40,39,2)
(36,39,2)
(4,59,2)
(27,18,2)
(54,82,2)
(31,64,2)
(37,39,2)
(95,43,2)
(58,59,2)
(43,3,2)
(31,114,2)
(17,79,2)
(26,43,2)
(23,72,2)
(99,59,2)
(42,82,2)
(18,59,2)
(95,23,2)
(21,43,2)
(29,39,2)
(75,43,2)
(106,43,2)
(48,82,2)
(70,108,2)
(98,43,2)
(118,114,2)
(101,3,2)
(71,59,2)
(90,43,2)
(88,43,2)
(16,39,2)
(94,39,2)
(7,39,2)
(46,49,2)
(17,43,2)
(18,67,2)
(61,39,2)
(39,18,2)
(95,25,2)
(32,59,2)
(28,43,2)
(25,43,2)
(89,3,2)
(10,43,2)
(20,38,2)
(81,59,2)
(74,43,2)
(35,43,2)
(25,50,2)
(11,64,2)
(97,39,2)
(28,48,2)
(79,43,2)
(102,82,2)
(14,39,2)
(77,39,2)
(109,43,2)
(106,82,2)
(15,114,2)
(12,43,2)
(92,39,2)
(81,93,2)
(117,43,2)
(73,39,2)
(43,63,2)
(38,43,2)
(70,52,2)
(50,20,2)
(100,64,2)
(110,16,2)
(48,43,2)
(66,43,2)
(43,114,2)
(79,82,2)
(9,39,2)
(53,43,2)
(65,87,2)
(64,43,2)
(60,82,2)
(44,80,2)
(87,61,2)
(107,43,2)
(108,64,2)
(120,39,2)
(57,43,2)
(40,82,2)
(3,114,2)
(95,6,2)
(54,39,2)
(91,59,2)
(115,43,2)
(65,64,2)
(95,106,2)
(39,43,2)
(104,43,2)
(61,94,2)
(44,6,2)
(95,42,2)
(3,18,2)
(56,43,2)
(60,39,2)
(67,59,2)
(62,43,2)
(68,43,2)
(52,43,2)
(63,3,2)
(10,102,2)
(41,39,2)
(119,43,2)
(2,82,2)
-----------------------------------
(0,r)
(1,)
(2,receiver->owned_names)
(3,r == CONNECTION_E_QUOTA)
(4,r)
(5,log)
(6,Message *message)
(7,id)
(8,r)
(9,receiver->bus->log)
(10,receiver->bus->seclabel)
(11,0)
(12,receiver_names)
(13,)
(14,log)
(15,CONNECTION_E_QUOTA)
(16,receiver->id)
(17,&receiver->connection)
(18,r = connection_queue(&receiver->connection, NULL, message)
(19,log)
(20,NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
(21,receiver)
(22,"Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.")
(23,receiver->policy->seclabel)
(24,seclabel)
(25,&receiver_names)
(26,bus)
(27,error_fold(r)
(28,receiver->bus->log)
(29,bus)
(30,if (r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS)
(31,return 0;)
(32,r)
(33,receiver_names)
(34,receiver)
(35,policy)
(36,r)
(37,receiver)
(38,&receiver->owned_names)
(39,r == CONNECTION_E_QUOTA)
(40,receiver->bus)
(41,receiver)
(42,receiver->bus)
(43,r == CONNECTION_E_QUOTA || r == CONNECTION_E_UNEXPECTED_FDS)
(44,driver_monitor(receiver->bus, NULL, message)
(45,r)
(46,&receiver->connection)
(47,)
(48,receiver->bus)
(49,receiver->connection)
(50,receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
(51,receiver)
(52,return error_fold(r)
(53,receiver)
(54,receiver->id)
(55,connection_shutdown(&receiver->connection)
(56,owned_names)
(57,receiver)
(58,message)
(59,r)
(60,receiver->bus)
(61,log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
(62,bus)
(63,r == CONNECTION_E_UNEXPECTED_FDS)
(64,r)
(65,error_fold(r)
(66,message)
(67,connection_queue(&receiver->connection, NULL, message)
(68,log_append_here(receiver->bus->log, LOG_WARNING, 0)
(69,message)
(70,RET)
(71,receiver)
(72,receiver->policy)
(73,receiver)
(74,receiver_names)
(75,NULL)
(76,receiver)
(77,bus)
(78,NULL)
(79,receiver->connection)
(80,receiver->bus)
(81,error_fold(r)
(82,Peer *receiver)
(83,bus)
(84,r)
(85,receiver)
(86,r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id)
(87,r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
(88,0)
(89,CONNECTION_E_UNEXPECTED_FDS)
(90,CONNECTION_E_QUOTA)
(91,return error_fold(r)
(92,"Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.")
(93,r = driver_monitor(receiver->bus, NULL, message)
(94,receiver->bus->log)
(95,bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,\n\\n                                                   receiver->bus->seclabel, receiver->policy->seclabel,\n\\n                                                   message)
(96,connection)
(97,id)
(98,ADDRESS_ID_INVALID)
(99,NULL)
(100,r)
(101,r)
(102,receiver->bus)
(103,if (r)
(104,receiver)
(105,bus)
(106,receiver->id)
(107,seclabel)
(108,return error_fold(r)
(109,LOG_WARNING)
(110,log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not support receiving file descriptors it expects.", receiver->id)
(111,if (r == CONNECTION_E_QUOTA)
(112,if (r)
(113,)
(114,r)
(115,r)
(116,if (r)
(117,connection)
(118,r)
(119,id)
(120,receiver)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^