-----label-----
0
-----code-----
void
tapdisk_channel_reap(tapdisk_channel_t *channel, int status)
{
	/* Nothing left to defer for in channel_close() */
	channel->tapdisk_pid = -1; 

	/* No IPC after this point */
	channel->open = 0;

	/*
	 * A tapdisk writes CLOSE_RSP and exists. What triggers first,
	 * SIGCHLD or the readfd? Cannot always guarantee events to be
	 * ordered synchronously on the observer side, so we refrain
	 * from assuming any particular order.
	 *
	 * Hence we escalate only the obvious cases. This also means:
	 * A tapdisk broken enough to return status 0 AND dropping the
	 * shutdown message would make us leak a channel.
	 */

	if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {
		tapdisk_channel_fatal(channel,
				      "tapdisk died with status %d", 
				      WEXITSTATUS(status));
		return;
	}
	
	if (WIFSIGNALED(status)) {
		tapdisk_channel_fatal(channel,
				      "tapdisk killed by signal %d", 
				      WTERMSIG(status));
		return;
	}

	if (channel->state == TAPDISK_CHANNEL_CLOSED) {
		/* We saw the shutdown message */
		tapdisk_channel_close(channel);
		return;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
15,19
15,20
16,17
17,18
17,19
18,19
18,20
19,20
22,23
24,25
25,26
25,27
26,27
26,28
27,28
31,32
31,33
32,33
32,34
33,34
33,35
34,35
36,37
38,39
38,40
39,40
39,41
40,41
42,43
45,46
45,47
46,47
47,48
47,49
47,50
47,51
48,49
50,51
53,54
53,55
54,55
56,57
59,60
59,61
60,61
60,62
61,62
63,64
65,66
65,67
66,67
67,68
67,69
67,70
67,71
68,69
70,71
73,74
73,75
74,75
76,77
79,80
79,81
80,81
80,82
81,82
81,83
82,83
85,86
87,88
87,89
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,7,9,10,12,14,20,21,23,28,29,30,35,37,41,43,44,49,51,52,55,57,58,62,64,69,71,72,75,77,78,83,84,86,91,93,94
-----computeFrom-----
17,18
17,19
25,26
25,27
32,33
32,34
38,39
38,40
80,81
80,82
-----guardedBy-----
41,55
43,57
83,93
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;
-----ast_node-----
voidtapdisk_channel_reap(tapdisk_channel_t *channel, int status){	/* Nothing left to defer for in channel_close() */	channel->tapdisk_pid = -1; 	/* No IPC after this point */	channel->open = 0;	/*	 * A tapdisk writes CLOSE_RSP and exists. What triggers first,	 * SIGCHLD or the readfd? Cannot always guarantee events to be	 * ordered synchronously on the observer side, so we refrain	 * from assuming any particular order.	 *	 * Hence we escalate only the obvious cases. This also means:	 * A tapdisk broken enough to return status 0 AND dropping the	 * shutdown message would make us leak a channel.	 */	if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {		tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status));		return;	}		if (WIFSIGNALED(status)) {		tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status));		return;	}	if (channel->state == TAPDISK_CHANNEL_CLOSED) {		/* We saw the shutdown message */		tapdisk_channel_close(channel);		return;	}}
void
tapdisk_channel_reap(tapdisk_channel_t *channel, int status)
tapdisk_channel_reap
tapdisk_channel_t *channel
tapdisk_channel_t
tapdisk_channel_t
*channel
*
channel
int status
int
status
status
{	/* Nothing left to defer for in channel_close() */	channel->tapdisk_pid = -1; 	/* No IPC after this point */	channel->open = 0;	/*	 * A tapdisk writes CLOSE_RSP and exists. What triggers first,	 * SIGCHLD or the readfd? Cannot always guarantee events to be	 * ordered synchronously on the observer side, so we refrain	 * from assuming any particular order.	 *	 * Hence we escalate only the obvious cases. This also means:	 * A tapdisk broken enough to return status 0 AND dropping the	 * shutdown message would make us leak a channel.	 */	if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {		tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status));		return;	}		if (WIFSIGNALED(status)) {		tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status));		return;	}	if (channel->state == TAPDISK_CHANNEL_CLOSED) {		/* We saw the shutdown message */		tapdisk_channel_close(channel);		return;	}}
channel->tapdisk_pid = -1;
channel->tapdisk_pid = -1
channel->tapdisk_pid
channel
channel
tapdisk_pid
-1
1
channel->open = 0;
channel->open = 0
channel->open
channel
channel
open
0
if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {		tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status));		return;	}
WIFEXITED(status) && WEXITSTATUS(status) != 0
WIFEXITED(status)
WIFEXITED
WIFEXITED
status
status
WEXITSTATUS(status) != 0
WEXITSTATUS(status)
WEXITSTATUS
WEXITSTATUS
status
status
0
{		tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status));		return;	}
tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status));
tapdisk_channel_fatal(channel,				      "tapdisk died with status %d", 				      WEXITSTATUS(status))
tapdisk_channel_fatal
tapdisk_channel_fatal
channel
channel
"tapdisk died with status %d"
WEXITSTATUS(status)
WEXITSTATUS
WEXITSTATUS
status
status
return;
if (WIFSIGNALED(status)) {		tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status));		return;	}
WIFSIGNALED(status)
WIFSIGNALED
WIFSIGNALED
status
status
{		tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status));		return;	}
tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status));
tapdisk_channel_fatal(channel,				      "tapdisk killed by signal %d", 				      WTERMSIG(status))
tapdisk_channel_fatal
tapdisk_channel_fatal
channel
channel
"tapdisk killed by signal %d"
WTERMSIG(status)
WTERMSIG
WTERMSIG
status
status
return;
if (channel->state == TAPDISK_CHANNEL_CLOSED) {		/* We saw the shutdown message */		tapdisk_channel_close(channel);		return;	}
channel->state == TAPDISK_CHANNEL_CLOSED
channel->state
channel
channel
state
TAPDISK_CHANNEL_CLOSED
TAPDISK_CHANNEL_CLOSED
{		/* We saw the shutdown message */		tapdisk_channel_close(channel);		return;	}
tapdisk_channel_close(channel);
tapdisk_channel_close(channel)
tapdisk_channel_close
tapdisk_channel_close
channel
channel
return;
-----joern-----
(22,32,0)
(0,47,0)
(49,43,0)
(11,25,0)
(20,49,0)
(8,2,0)
(12,15,0)
(37,6,0)
(7,0,0)
(30,5,0)
(46,6,0)
(1,27,0)
(6,16,0)
(38,39,0)
(29,42,0)
(3,30,0)
(18,33,0)
(26,41,0)
(41,0,0)
(42,43,0)
(34,33,0)
(26,35,0)
(15,47,0)
(41,26,0)
(6,43,0)
(30,43,0)
(17,49,0)
(44,47,0)
(23,12,0)
(9,10,0)
(44,30,0)
(13,35,0)
(40,41,0)
(15,12,0)
(31,33,0)
(49,2,0)
(27,47,0)
(38,43,0)
(39,33,0)
(0,41,0)
(32,5,0)
(22,21,0)
(45,30,0)
(21,48,0)
(12,48,0)
(25,39,0)
(30,44,0)
(42,10,0)
(35,47,0)
(39,25,0)
(28,15,0)
(14,16,0)
(22,9,0)
(16,33,0)
(35,26,0)
(24,38,0)
(12,43,0)
(2,49,0)
(19,12,0)
(4,38,0)
(36,44,0)
(4,24,1)
(22,21,1)
(38,43,1)
(22,9,1)
(35,13,1)
(27,47,1)
(42,43,1)
(27,1,1)
(0,47,1)
(23,27,1)
(44,47,1)
(22,2,1)
(38,4,1)
(36,3,1)
(17,20,1)
(11,38,1)
(15,47,1)
(35,47,1)
(26,35,1)
(19,23,1)
(32,30,1)
(39,25,1)
(25,11,1)
(14,6,1)
(21,12,1)
(9,42,1)
(1,26,1)
(12,15,1)
(12,43,1)
(37,46,1)
(20,27,1)
(30,44,1)
(13,16,1)
(42,29,1)
(30,43,1)
(28,19,1)
(41,0,1)
(6,43,1)
(46,39,1)
(2,49,1)
(7,35,1)
(6,37,1)
(41,40,1)
(0,7,1)
(16,14,1)
(45,26,1)
(29,2,1)
(49,43,1)
(3,45,1)
(15,28,1)
(8,49,1)
(22,32,1)
(26,41,1)
(2,8,1)
(44,36,1)
(40,0,1)
(49,17,1)
(2,49,2)
(27,26,2)
(40,35,2)
(36,26,2)
(28,27,2)
(42,2,2)
(6,43,2)
(19,27,2)
(12,15,2)
(20,27,2)
(22,9,2)
(39,25,2)
(45,26,2)
(3,26,2)
(42,43,2)
(12,43,2)
(41,35,2)
(49,27,2)
(15,27,2)
(49,43,2)
(29,2,2)
(23,27,2)
(41,0,2)
(30,44,2)
(0,47,2)
(9,2,2)
(1,26,2)
(21,27,2)
(30,26,2)
(35,47,2)
(17,27,2)
(44,47,2)
(32,26,2)
(22,32,2)
(15,47,2)
(27,47,2)
(12,27,2)
(30,43,2)
(22,21,2)
(44,26,2)
(38,43,2)
(26,41,2)
(26,35,2)
(0,35,2)
(7,35,2)
(2,27,2)
(8,27,2)
-----------------------------------
(0,WEXITSTATUS(status)
(1,status)
(2,channel->state == TAPDISK_CHANNEL_CLOSED)
(3,"tapdisk died with status %d")
(4,tapdisk_pid)
(5,)
(6,channel->open)
(7,status)
(8,TAPDISK_CHANNEL_CLOSED)
(9,return;)
(10,)
(11,1)
(12,tapdisk_channel_fatal(channel,\n\\n\\t\\t\\t\\t      "tapdisk killed by signal %d", \n\\n\\t\\t\\t\\t      WTERMSIG(status)
(13,status)
(14,0)
(15,WTERMSIG(status)
(16,channel->open = 0)
(17,state)
(18,if (WIFEXITED(status)
(19,"tapdisk killed by signal %d")
(20,channel)
(21,return;)
(22,RET)
(23,channel)
(24,channel)
(25,-1)
(26,WIFEXITED(status)
(27,WIFSIGNALED(status)
(28,status)
(29,channel)
(30,tapdisk_channel_fatal(channel,\n\\n\\t\\t\\t\\t      "tapdisk died with status %d", \n\\n\\t\\t\\t\\t      WEXITSTATUS(status)
(31,if (channel->state == TAPDISK_CHANNEL_CLOSED)
(32,return;)
(33,)
(34,if (WIFSIGNALED(status)
(35,WIFEXITED(status)
(36,status)
(37,open)
(38,channel->tapdisk_pid)
(39,channel->tapdisk_pid = -1)
(40,0)
(41,WEXITSTATUS(status)
(42,tapdisk_channel_close(channel)
(43,tapdisk_channel_t *channel)
(44,WEXITSTATUS(status)
(45,channel)
(46,channel)
(47,int status)
(48,)
(49,channel->state)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^