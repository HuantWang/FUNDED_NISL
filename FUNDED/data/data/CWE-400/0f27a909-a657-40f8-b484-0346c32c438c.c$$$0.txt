-----label-----
1
-----code-----
static int unbounded_response(const char *header, const char *repeats)
{
    ne_session *sess;
    struct infinite i = { header, repeats};
    int dbg;

    CALL(make_session(&sess, serve_infinite, &i));

    dbg = ne_debug_mask;

    ONN("unbounded PROPFIND response did not fail",
        ne_simple_propfind(sess, "/", 0, NULL,
                           dummy_results, NULL) != NE_ERROR);

    CALL(reap_server());
    ne_session_destroy(sess);
    return OK;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
7,8
7,9
10,11
10,12
12,13
12,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
15,23
15,24
16,17
17,18
17,19
18,19
20,21
20,22
23,24
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
38,39
40,41
41,42
41,43
42,43
44,45
44,46
44,47
44,48
45,46
47,48
48,49
50,51
52,53
53,54
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
62,65
63,64
66,67
66,68
67,68
67,69
67,70
67,71
67,72
67,73
67,74
68,69
70,71
74,75
76,77
78,79
80,81
82,83
83,84
83,85
84,85
86,87
87,88
89,90
90,91
90,92
91,92
93,94
95,96
96,97
-----nextToken-----
2,4,6,8,9,11,13,14,19,21,22,26,28,32,34,37,39,43,46,49,51,54,58,60,64,65,69,71,72,73,75,77,79,81,85,88,92,94,97
-----computeFrom-----
56,57
56,58
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;FunctionDeclarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int unbounded_response(const char *header, const char *repeats){    ne_session *sess;    struct infinite i = { header, repeats};    int dbg;    CALL(make_session(&sess, serve_infinite, &i));    dbg = ne_debug_mask;    ONN("unbounded PROPFIND response did not fail",        ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL) != NE_ERROR);    CALL(reap_server());    ne_session_destroy(sess);    return OK;}
static int
unbounded_response(const char *header, const char *repeats)
unbounded_response
const char *header
const char
*header
*
header
const char *repeats
const char
*repeats
*
repeats
{    ne_session *sess;    struct infinite i = { header, repeats};    int dbg;    CALL(make_session(&sess, serve_infinite, &i));    dbg = ne_debug_mask;    ONN("unbounded PROPFIND response did not fail",        ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL) != NE_ERROR);    CALL(reap_server());    ne_session_destroy(sess);    return OK;}
ne_session *sess;
ne_session *sess;
ne_session
ne_session
*sess
*
sess
struct infinite i = { header, repeats};
struct infinite i = { header, repeats};
struct infinite
infinite
i = { header, repeats}
i
= { header, repeats}
{ header, repeats}
header
header
repeats
repeats
int dbg;
int dbg;
int
dbg
dbg
CALL(make_session(&sess, serve_infinite, &i));
CALL(make_session(&sess, serve_infinite, &i))
CALL
CALL
make_session(&sess, serve_infinite, &i)
make_session
make_session
&sess
sess
sess
serve_infinite
serve_infinite
&i
i
i
dbg = ne_debug_mask;
dbg = ne_debug_mask
dbg
dbg
ne_debug_mask
ne_debug_mask
ONN("unbounded PROPFIND response did not fail",        ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL) != NE_ERROR);
ONN("unbounded PROPFIND response did not fail",        ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL) != NE_ERROR)
ONN
ONN
"unbounded PROPFIND response did not fail"
ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL) != NE_ERROR
ne_simple_propfind(sess, "/", 0, NULL,                           dummy_results, NULL)
ne_simple_propfind
ne_simple_propfind
sess
sess
"/"
0
NULL
NULL
dummy_results
dummy_results
NULL
NULL
NE_ERROR
NE_ERROR
CALL(reap_server());
CALL(reap_server());
CALL
CALL
(reap_server())
reap_server()
reap_server
ne_session_destroy(sess);
ne_session_destroy(sess)
ne_session_destroy
ne_session_destroy
sess
sess
return OK;
OK
OK
-----joern-----
(21,30,0)
(6,30,0)
(22,0,0)
(32,11,0)
(3,18,0)
(18,30,0)
(25,23,0)
(15,33,0)
(20,30,0)
(8,23,0)
(16,30,0)
(16,8,0)
(27,30,0)
(17,27,0)
(2,6,0)
(31,11,0)
(13,23,0)
(7,31,0)
(5,8,0)
(28,23,0)
(10,9,0)
(19,23,0)
(11,30,0)
(14,9,0)
(26,23,0)
(15,30,0)
(0,9,0)
(24,23,0)
(12,30,0)
(4,27,0)
(33,15,0)
(23,8,0)
(31,9,0)
(9,0,0)
(8,16,0)
(1,16,0)
(9,31,0)
(9,10,0)
(10,30,0)
(29,18,0)
(24,19,1)
(17,4,1)
(1,27,1)
(28,25,1)
(31,11,1)
(2,15,1)
(18,29,1)
(5,23,1)
(31,7,1)
(11,32,1)
(7,14,1)
(10,9,1)
(13,1,1)
(16,8,1)
(3,18,1)
(9,0,1)
(15,33,1)
(25,13,1)
(4,10,1)
(23,26,1)
(14,0,1)
(33,16,1)
(8,23,1)
(29,6,1)
(8,5,1)
(19,28,1)
(6,2,1)
(27,17,1)
(26,24,1)
(9,31,1)
(22,11,1)
(0,22,1)
(10,9,2)
(9,0,2)
(15,33,2)
(9,31,2)
(16,8,2)
(8,23,2)
(31,11,2)
(3,18,2)
-----------------------------------
(0,&sess)
(1,"unbounded PROPFIND response did not fail")
(2,sess)
(3,RET)
(4,dbg)
(5,NE_ERROR)
(6,ne_session_destroy(sess)
(7,i)
(8,ne_simple_propfind(sess, "/", 0, NULL,\n\\n                           dummy_results, NULL)
(9,make_session(&sess, serve_infinite, &i)
(10,CALL(make_session(&sess, serve_infinite, &i)
(11,i = { header, repeats})
(12,dbg)
(13,sess)
(14,serve_infinite)
(15,CALL(reap_server()
(16,ONN("unbounded PROPFIND response did not fail",\n\\n        ne_simple_propfind(sess, "/", 0, NULL,\n\\n                           dummy_results, NULL)
(17,ne_debug_mask)
(18,return OK;)
(19,NULL)
(20,i)
(21,sess)
(22,sess)
(23,ne_simple_propfind(sess, "/", 0, NULL,\n\\n                           dummy_results, NULL)
(24,dummy_results)
(25,"/")
(26,NULL)
(27,dbg = ne_debug_mask)
(28,0)
(29,OK)
(30,)
(31,&i)
(32,i)
(33,reap_server()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^