-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Sink(int count)
{
    if(CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)
    {
        /* FIX: Validate count before using it as a parameter in the sleep function */
        if (count > 0 && count <= 2000)
        {
            SLEEP(count);
            printLine("Sleep time OK");
        }
        else
        {
            printLine("Sleep time too long");
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
15,16
15,17
16,17
16,18
17,18
20,21
20,22
21,22
24,25
24,26
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
36,37
37,38
38,39
38,40
39,40
-----nextToken-----
2,4,6,8,12,18,19,22,23,28,30,34,35,40,41
-----computeFrom-----
15,16
15,17
16,17
16,18
20,21
20,22
-----guardedBy-----
22,30
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Sink(int count){    if(CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)    {        /* FIX: Validate count before using it as a parameter in the sleep function */        if (count > 0 && count <= 2000)        {            SLEEP(count);            printLine("Sleep time OK");        }        else        {            printLine("Sleep time too long");        }    }}
void
CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Sink(int count)
CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Sink
int count
int
count
count
{    if(CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)    {        /* FIX: Validate count before using it as a parameter in the sleep function */        if (count > 0 && count <= 2000)        {            SLEEP(count);            printLine("Sleep time OK");        }        else        {            printLine("Sleep time too long");        }    }}
if(CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)    {        /* FIX: Validate count before using it as a parameter in the sleep function */        if (count > 0 && count <= 2000)        {            SLEEP(count);            printLine("Sleep time OK");        }        else        {            printLine("Sleep time too long");        }    }
CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global
CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global
{        /* FIX: Validate count before using it as a parameter in the sleep function */        if (count > 0 && count <= 2000)        {            SLEEP(count);            printLine("Sleep time OK");        }        else        {            printLine("Sleep time too long");        }    }
if (count > 0 && count <= 2000)        {            SLEEP(count);            printLine("Sleep time OK");        }        else        {            printLine("Sleep time too long");        }
count > 0 && count <= 2000
count > 0
count
count
0
count <= 2000
count
count
2000
{            SLEEP(count);            printLine("Sleep time OK");        }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time OK");
printLine("Sleep time OK")
printLine
printLine
"Sleep time OK"
{            printLine("Sleep time too long");        }
printLine("Sleep time too long");
printLine("Sleep time too long")
printLine
printLine
"Sleep time too long"
-----joern-----
(12,10,0)
(16,3,0)
(1,2,0)
(11,17,0)
(6,17,0)
(16,15,0)
(3,17,0)
(17,15,0)
(8,15,0)
(8,2,0)
(3,16,0)
(5,7,0)
(21,16,0)
(19,5,0)
(14,9,0)
(17,3,0)
(13,1,0)
(18,8,0)
(4,16,0)
(4,20,1)
(17,11,1)
(5,19,1)
(8,18,1)
(19,3,1)
(16,15,1)
(3,16,1)
(0,5,1)
(17,15,1)
(21,4,1)
(0,20,1)
(3,17,1)
(0,1,1)
(8,15,1)
(18,3,1)
(11,6,1)
(13,8,1)
(16,21,1)
(6,16,1)
(1,13,1)
(21,20,2)
(6,16,2)
(8,15,2)
(4,20,2)
(17,16,2)
(5,3,2)
(1,3,2)
(3,16,2)
(16,20,2)
(18,3,2)
(3,20,2)
(11,16,2)
(16,15,2)
(17,15,2)
(3,17,2)
(13,3,2)
(19,3,2)
(8,3,2)
-----------------------------------
(0,RET)
(1,printLine("Sleep time OK")
(2,)
(3,count > 0 && count <= 2000)
(4,count)
(5,printLine("Sleep time too long")
(6,count)
(7,)
(8,SLEEP(count)
(9,)
(10,)
(11,2000)
(12,if (count > 0 && count <= 2000)
(13,"Sleep time OK")
(14,if(CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)
(15,int count)
(16,count > 0)
(17,count <= 2000)
(18,count)
(19,"Sleep time too long")
(20,CWE400_Resource_Exhaustion__rand_sleep_22_goodB2G2Global)
(21,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^