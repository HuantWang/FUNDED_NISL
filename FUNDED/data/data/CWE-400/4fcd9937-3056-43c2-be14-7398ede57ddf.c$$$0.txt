-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fgets_fwrite_51_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read count from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to int */
            count = atoi(inputBuffer);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
19,21
21,22
21,23
21,24
23,24
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
30,32
30,33
30,34
31,32
33,34
35,36
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,8,10,14,16,20,22,25,27,32,34,36,38,40,45,48,50,55,56,60,62
-----computeFrom-----
12,13
12,14
29,30
29,31
43,44
43,45
-----guardedBy-----
34,50
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__fgets_fwrite_51_bad(){    int count;    /* Initialize count */    count = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count);}
void
CWE400_Resource_Exhaustion__fgets_fwrite_51_bad()
CWE400_Resource_Exhaustion__fgets_fwrite_51_bad
{    int count;    /* Initialize count */    count = -1;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }    CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count);}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read count from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to int */            count = atoi(inputBuffer);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to int */            count = atoi(inputBuffer);        }
count = atoi(inputBuffer);
count = atoi(inputBuffer)
count
count
atoi(inputBuffer)
atoi
atoi
inputBuffer
inputBuffer
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count);
CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count)
CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink
CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink
count
count
-----joern-----
(4,3,0)
(3,25,0)
(16,22,0)
(26,2,0)
(11,28,0)
(2,28,0)
(9,28,0)
(22,24,0)
(0,27,0)
(19,24,0)
(24,27,0)
(6,3,0)
(4,22,0)
(14,24,0)
(7,22,0)
(2,3,0)
(18,1,0)
(1,21,0)
(28,27,0)
(23,21,0)
(15,5,0)
(8,21,0)
(3,4,0)
(21,22,0)
(21,1,0)
(13,4,0)
(20,11,0)
(2,27,0)
(10,21,0)
(28,11,0)
(5,12,0)
(18,21,1)
(11,20,1)
(3,4,1)
(26,3,1)
(22,16,1)
(21,22,1)
(8,22,1)
(26,5,1)
(1,18,1)
(17,2,1)
(2,28,1)
(15,1,1)
(6,1,1)
(21,23,1)
(13,6,1)
(4,22,1)
(5,15,1)
(16,7,1)
(7,28,1)
(20,9,1)
(23,10,1)
(1,21,1)
(4,13,1)
(2,26,1)
(10,8,1)
(2,3,1)
(28,11,1)
(13,1,2)
(4,22,2)
(15,1,2)
(5,1,2)
(3,1,2)
(1,21,2)
(6,1,2)
(3,4,2)
(2,28,2)
(4,1,2)
(28,11,2)
(21,22,2)
(2,3,2)
-----------------------------------
(0,count)
(1,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(2,CWE400_Resource_Exhaustion__fgets_fwrite_51b_badSink(count)
(3,count = atoi(inputBuffer)
(4,atoi(inputBuffer)
(5,printLine("fgets()
(6,count)
(7,inputBuffer)
(8,inputBuffer)
(9,count)
(10,CHAR_ARRAY_SIZE)
(11,-1)
(12,)
(13,inputBuffer)
(14,inputBuffer)
(15,"fgets()
(16,"")
(17,RET)
(18,NULL)
(19,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(20,1)
(21,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(22,inputBuffer[CHAR_ARRAY_SIZE] = "")
(23,stdin)
(24,)
(25,)
(26,count)
(27,)
(28,count = -1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^