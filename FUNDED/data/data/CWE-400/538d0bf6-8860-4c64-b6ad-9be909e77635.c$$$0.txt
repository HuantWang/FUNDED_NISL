-----label-----
1
-----code-----
void CWE401_Memory_Leak__char_realloc_17_bad()
{
    int i,j;
    char * data;
    data = NULL;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (char *)realloc(data, 100*sizeof(char));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        strcpy(data, "A String");
        printLine(data);
    }
    for(j = 0; j < 1; j++)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
16,18
19,20
20,21
20,22
21,22
23,24
25,26
25,27
25,28
25,29
26,27
27,28
27,29
28,29
31,32
31,33
32,33
35,36
36,37
38,39
38,40
38,41
38,42
39,40
40,41
40,42
41,42
43,44
43,45
44,45
44,46
46,47
48,49
48,50
48,51
49,50
51,52
53,54
53,55
55,56
56,57
56,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
68,69
70,71
72,73
73,74
73,75
73,76
74,75
76,77
79,80
80,81
80,82
81,82
83,84
85,86
85,87
85,88
85,89
86,87
87,88
87,89
88,89
91,92
91,93
92,93
95,96
96,97
98,99
-----nextToken-----
2,4,8,10,12,15,17,18,22,24,29,30,33,34,37,42,45,47,50,52,54,57,58,62,64,69,71,75,77,78,82,84,89,90,93,94,97,99
-----computeFrom-----
20,21
20,22
27,28
27,29
31,32
31,33
40,41
40,42
53,54
53,55
60,61
60,62
87,88
87,89
91,92
91,93
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__char_realloc_17_bad(){    int i,j;    char * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (char *)realloc(data, 100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__char_realloc_17_bad()
CWE401_Memory_Leak__char_realloc_17_bad
{    int i,j;    char * data;    data = NULL;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (char *)realloc(data, 100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);    }    for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int i,j;
int i,j;
int
i
i
j
j
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (char *)realloc(data, 100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (char *)realloc(data, 100*sizeof(char));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        strcpy(data, "A String");        printLine(data);    }
data = (char *)realloc(data, 100*sizeof(char));
data = (char *)realloc(data, 100*sizeof(char))
data
data
(char *)realloc(data, 100*sizeof(char))
char *
char
*
*
realloc(data, 100*sizeof(char))
realloc
realloc
data
data
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
for(j = 0; j < 1; j++)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(49,24,0)
(43,24,0)
(24,26,0)
(48,32,0)
(14,38,0)
(29,21,0)
(8,44,0)
(3,28,0)
(37,19,0)
(7,46,0)
(18,2,0)
(10,31,0)
(38,46,0)
(11,22,0)
(33,37,0)
(21,8,0)
(40,38,0)
(45,46,0)
(25,1,0)
(47,43,0)
(28,15,0)
(12,28,0)
(2,24,0)
(34,2,0)
(8,21,0)
(41,15,0)
(26,35,0)
(27,19,0)
(39,1,0)
(9,36,0)
(28,24,0)
(43,23,0)
(35,26,0)
(4,46,0)
(6,25,0)
(43,26,0)
(17,23,0)
(22,19,0)
(43,38,0)
(32,23,0)
(26,24,0)
(31,15,0)
(31,24,0)
(36,1,0)
(20,1,0)
(13,25,0)
(24,15,0)
(0,19,0)
(23,32,0)
(5,37,0)
(26,43,0)
(23,43,0)
(42,46,0)
(16,46,0)
(37,19,1)
(31,10,1)
(26,43,1)
(43,23,1)
(3,8,1)
(43,24,1)
(25,13,1)
(34,18,1)
(14,40,1)
(2,34,1)
(5,19,1)
(11,31,1)
(23,32,1)
(17,47,1)
(43,38,1)
(28,24,1)
(6,36,1)
(24,26,1)
(9,25,1)
(26,35,1)
(6,1,1)
(38,14,1)
(13,6,1)
(48,17,1)
(28,12,1)
(31,24,1)
(33,5,1)
(22,19,1)
(21,29,1)
(10,28,1)
(18,24,1)
(5,22,1)
(12,3,1)
(32,48,1)
(36,9,1)
(1,39,1)
(37,33,1)
(0,27,1)
(20,37,1)
(49,37,1)
(47,49,1)
(19,0,1)
(2,24,1)
(8,21,1)
(27,38,1)
(30,25,1)
(36,1,1)
(39,20,1)
(25,1,1)
(3,2,1)
(29,2,1)
(22,11,1)
(25,25,2)
(21,2,2)
(26,43,2)
(31,24,2)
(29,2,2)
(23,32,2)
(12,37,2)
(48,37,2)
(43,37,2)
(36,25,2)
(43,24,2)
(3,37,2)
(9,25,2)
(2,37,2)
(25,1,2)
(24,37,2)
(23,37,2)
(37,37,2)
(47,37,2)
(6,25,2)
(22,19,2)
(32,37,2)
(36,1,2)
(43,23,2)
(26,37,2)
(49,37,2)
(10,37,2)
(5,37,2)
(31,37,2)
(8,2,2)
(34,37,2)
(26,35,2)
(17,37,2)
(11,37,2)
(24,26,2)
(22,37,2)
(28,24,2)
(8,21,2)
(2,24,2)
(13,25,2)
(37,19,2)
(43,38,2)
(33,37,2)
(28,37,2)
(18,37,2)
-----------------------------------
(0,0)
(1,j = 0)
(2,data == NULL)
(3,data)
(4,for(i = 0; i < 1; i++)
(5,i)
(6,j)
(7,for(j = 0; j < 1; j++)
(8,exit(-1)
(9,j)
(10,data)
(11,i)
(12,"A String")
(13,1)
(14,NULL)
(15,)
(16,j)
(17,100)
(18,data)
(19,i = 0)
(20,j)
(21,-1)
(22,i++)
(23,100*sizeof(char)
(24,data = (char *)
(25,j < 1)
(26,(char *)
(27,i)
(28,strcpy(data, "A String")
(29,1)
(30,RET)
(31,printLine(data)
(32,sizeof(char)
(33,1)
(34,NULL)
(35,char *)
(36,j++)
(37,i < 1)
(38,data = NULL)
(39,0)
(40,data)
(41,if (data == NULL)
(42,i)
(43,realloc(data, 100*sizeof(char)
(44,)
(45,data)
(46,)
(47,data)
(48,char)
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^