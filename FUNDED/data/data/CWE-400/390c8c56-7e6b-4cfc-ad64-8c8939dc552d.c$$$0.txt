-----label-----
0
-----code-----
static void goodG2B()
{
    int count;
    void (*funcPtr) (int) = goodG2BSink;
    /* Initialize count */
    count = -1;
    /* FIX: Use a relatively small number */
    count = 20;
    funcPtr(count);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,35,39,41
-----computeFrom-----
26,27
26,28
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    int count;    void (*funcPtr) (int) = goodG2BSink;    /* Initialize count */    count = -1;    /* FIX: Use a relatively small number */    count = 20;    funcPtr(count);}
static void
goodG2B()
goodG2B
{    int count;    void (*funcPtr) (int) = goodG2BSink;    /* Initialize count */    count = -1;    /* FIX: Use a relatively small number */    count = 20;    funcPtr(count);}
int count;
int count;
int
count
count
void (*funcPtr) (int) = goodG2BSink;
void (*funcPtr) (int) = goodG2BSink;
void
(*funcPtr) (int) = goodG2BSink
*funcPtr
*
funcPtr
int
int


= goodG2BSink
goodG2BSink
goodG2BSink
count = -1;
count = -1
count
count
-1
1
count = 20;
count = 20
count
count
20
funcPtr(count);
funcPtr(count)
funcPtr
funcPtr
count
count
-----joern-----
(10,5,0)
(7,0,0)
(3,5,0)
(2,5,0)
(6,5,0)
(11,6,0)
(8,11,0)
(9,14,0)
(0,5,0)
(4,6,0)
(13,0,0)
(12,10,0)
(14,5,0)
(15,14,0)
(6,11,0)
(10,0,0)
(10,12,1)
(1,10,1)
(10,0,1)
(12,0,1)
(11,8,1)
(7,6,1)
(9,15,1)
(6,11,1)
(8,4,1)
(13,7,1)
(4,14,1)
(0,13,1)
(14,9,1)
(10,0,2)
(6,11,2)
-----------------------------------
(0,count = 20)
(1,RET)
(2,funcPtr)
(3,count)
(4,count)
(5,)
(6,count = -1)
(7,count)
(8,1)
(9,goodG2BSink)
(10,funcPtr(count)
(11,-1)
(12,count)
(13,20)
(14,(*funcPtr)
(15,funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^