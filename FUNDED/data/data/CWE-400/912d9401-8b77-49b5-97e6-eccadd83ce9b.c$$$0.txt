-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fgets_sleep_42_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    count = badSource(count);
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
27,28
27,29
28,29
30,31
32,33
33,34
33,35
34,35
-----nextToken-----
2,4,8,10,14,16,20,23,25,29,31,35,36
-----computeFrom-----
12,13
12,14
18,19
18,20
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fgets_sleep_42_bad(){    int count;    /* Initialize count */    count = -1;    count = badSource(count);    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
void
CWE400_Resource_Exhaustion__fgets_sleep_42_bad()
CWE400_Resource_Exhaustion__fgets_sleep_42_bad
{    int count;    /* Initialize count */    count = -1;    count = badSource(count);    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
count = badSource(count);
count = badSource(count)
count
count
badSource(count)
badSource
badSource
count
count
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(1,9,0)
(3,2,0)
(4,13,0)
(0,9,0)
(4,2,0)
(12,14,0)
(14,1,0)
(6,13,0)
(1,13,0)
(11,4,0)
(14,13,0)
(9,1,0)
(2,4,0)
(5,13,0)
(8,5,0)
(10,1,0)
(9,4,0)
(1,9,1)
(8,14,1)
(10,4,1)
(14,1,1)
(5,8,1)
(9,0,1)
(7,5,1)
(0,10,1)
(9,4,1)
(12,1,1)
(3,11,1)
(4,2,1)
(14,12,1)
(2,3,1)
(1,9,2)
(4,2,2)
(14,1,2)
(9,4,2)
-----------------------------------
(0,count)
(1,count = badSource(count)
(2,-1)
(3,1)
(4,count = -1)
(5,printLine("Sleep time possibly too long")
(6,count)
(7,RET)
(8,"Sleep time possibly too long")
(9,badSource(count)
(10,count)
(11,count)
(12,count)
(13,)
(14,SLEEP(count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^