-----label-----
0
-----code-----
static void good1()
{
    if(STATIC_CONST_FIVE!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            wchar_t * tmpData;
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            /* FIX: Ensure realloc() was successful before assigning data to the memory block
            * allocated with realloc() */
            if (tmpData != NULL)
            {
                data = tmpData;
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
            }
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
6,9
7,8
7,9
8,9
11,12
12,13
13,14
13,15
14,15
17,18
18,19
18,20
18,21
18,22
18,23
18,24
18,25
18,26
19,20
20,21
20,22
22,23
22,24
22,25
25,26
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
56,57
56,58
59,60
60,61
60,62
60,63
61,62
63,64
66,67
67,68
67,69
68,69
70,71
72,73
73,74
73,75
74,75
76,77
76,78
77,78
77,79
79,80
81,82
81,83
81,84
82,83
84,85
86,87
86,88
87,88
89,90
90,91
90,92
93,94
93,95
94,95
94,96
95,96
97,98
99,100
99,101
99,102
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
107,110
108,109
110,111
113,114
114,115
114,116
115,116
117,118
119,120
120,121
120,122
121,122
123,124
-----nextToken-----
2,4,9,10,15,16,21,23,24,28,30,33,35,38,39,43,45,50,52,55,57,58,62,64,65,69,71,75,78,80,83,85,88,91,92,96,98,103,105,109,111,112,116,118,122,124
-----computeFrom-----
7,8
7,9
34,35
34,36
41,42
41,43
73,74
73,75
86,87
86,88
94,95
94,96
101,102
101,103
-----guardedBy-----
96,105
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good1(){    if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
static void
good1()
good1
{    if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
STATIC_CONST_FIVE!=5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wchar_t * tmpData;
wchar_t * tmpData;
wchar_t
* tmpData
*
tmpData
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
tmpData
tmpData
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(39,8,0)
(30,44,0)
(37,47,0)
(44,47,0)
(5,21,0)
(1,46,0)
(33,38,0)
(25,14,0)
(34,35,0)
(35,53,0)
(18,33,0)
(46,35,0)
(23,31,0)
(42,47,0)
(7,40,0)
(19,13,0)
(20,35,0)
(37,2,0)
(26,14,0)
(6,5,0)
(22,42,0)
(48,3,0)
(37,10,0)
(10,37,0)
(46,16,0)
(3,46,0)
(44,13,0)
(47,37,0)
(13,19,0)
(2,37,0)
(17,5,0)
(16,44,0)
(14,26,0)
(31,47,0)
(13,44,0)
(43,12,0)
(41,35,0)
(11,6,0)
(16,36,0)
(26,2,0)
(5,46,0)
(31,35,0)
(47,35,0)
(45,5,0)
(49,19,0)
(28,18,0)
(36,16,0)
(2,26,0)
(33,18,0)
(50,9,0)
(31,5,0)
(27,13,0)
(16,46,0)
(42,35,0)
(29,9,0)
(51,3,0)
(4,8,0)
(9,47,0)
(44,16,0)
(24,35,0)
(52,47,0)
(6,21,0)
(32,7,0)
(15,26,0)
(30,1,1)
(37,10,1)
(29,50,1)
(42,47,1)
(28,9,1)
(31,23,1)
(16,36,1)
(0,7,1)
(6,11,1)
(18,28,1)
(44,13,1)
(27,30,1)
(52,8,1)
(14,25,1)
(42,22,1)
(49,27,1)
(37,2,1)
(22,33,1)
(17,3,1)
(23,6,1)
(31,5,1)
(50,47,1)
(16,44,1)
(33,18,1)
(31,47,1)
(19,49,1)
(51,48,1)
(3,51,1)
(11,5,1)
(45,17,1)
(32,8,1)
(15,52,1)
(0,31,1)
(5,46,1)
(48,46,1)
(1,42,1)
(47,37,1)
(13,19,1)
(8,4,1)
(26,14,1)
(5,45,1)
(23,3,1)
(44,47,1)
(46,16,1)
(7,32,1)
(3,46,1)
(2,26,1)
(4,39,1)
(6,5,1)
(9,29,1)
(22,9,1)
(25,15,1)
(9,47,1)
(28,9,2)
(11,3,2)
(29,8,2)
(17,3,2)
(14,8,2)
(6,3,2)
(18,9,2)
(42,8,2)
(2,26,2)
(45,3,2)
(48,8,2)
(13,19,2)
(3,46,2)
(13,8,2)
(30,8,2)
(37,10,2)
(26,8,2)
(5,3,2)
(33,18,2)
(33,9,2)
(2,8,2)
(31,5,2)
(7,8,2)
(32,8,2)
(5,46,2)
(1,8,2)
(31,8,2)
(26,14,2)
(16,8,2)
(42,47,2)
(15,8,2)
(27,8,2)
(19,8,2)
(9,8,2)
(25,8,2)
(3,8,2)
(9,47,2)
(22,8,2)
(47,37,2)
(47,8,2)
(31,47,2)
(44,47,2)
(51,8,2)
(52,8,2)
(49,8,2)
(37,8,2)
(46,8,2)
(16,44,2)
(44,8,2)
(16,36,2)
(37,2,2)
(50,8,2)
(6,5,2)
(44,13,2)
(23,8,2)
(46,16,2)
-----------------------------------
(0,RET)
(1,tmpData)
(2,malloc(100*sizeof(wchar_t)
(3,tmpData != NULL)
(4,5)
(5,data = tmpData)
(6,printWLine(data)
(7,printLine("Benign, fixed string")
(8,STATIC_CONST_FIVE!=5)
(9,data == NULL)
(10,wchar_t *)
(11,data)
(12,)
(13,(130000)
(14,sizeof(wchar_t)
(15,100)
(16,(wchar_t *)
(17,data)
(18,-1)
(19,sizeof(wchar_t)
(20,if (tmpData != NULL)
(21,)
(22,data)
(23,data)
(24,data)
(25,wchar_t)
(26,100*sizeof(wchar_t)
(27,130000)
(28,1)
(29,NULL)
(30,data)
(31,free(data)
(32,"Benign, fixed string")
(33,exit(-1)
(34,tmpData)
(35,)
(36,wchar_t *)
(37,(wchar_t *)
(38,)
(39,STATIC_CONST_FIVE)
(40,)
(41,if (data == NULL)
(42,printWLine(data)
(43,if(STATIC_CONST_FIVE!=5)
(44,realloc(data, (130000)
(45,tmpData)
(46,tmpData = (wchar_t *)
(47,* data = (wchar_t *)
(48,tmpData)
(49,wchar_t)
(50,data)
(51,NULL)
(52,data)
(53,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^