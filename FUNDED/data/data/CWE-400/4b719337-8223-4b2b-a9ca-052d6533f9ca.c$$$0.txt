-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_for_loop_07_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    if(staticFive==5)
    {
        /* POTENTIAL FLAW: Set count to a random value */
        count = RAND32();
    }
    if(staticFive==5)
    {
        {
            size_t i = 0;
            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */
            for (i = 0; i < (size_t)count; i++)
            {
                printLine("Hello");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
25,26
27,28
28,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
38,39
38,40
39,40
41,42
41,43
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
59,60
61,62
62,63
64,65
65,66
66,67
66,68
67,68
-----nextToken-----
2,4,8,10,14,16,20,21,26,29,33,34,40,42,44,49,50,53,57,58,60,63,68,69
-----computeFrom-----
12,13
12,14
18,19
18,20
24,25
24,26
31,32
31,33
47,48
47,49
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_for_loop_07_bad(){    int count;    /* Initialize count */    count = -1;    if(staticFive==5)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(staticFive==5)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
void
CWE400_Resource_Exhaustion__rand_for_loop_07_bad()
CWE400_Resource_Exhaustion__rand_for_loop_07_bad
{    int count;    /* Initialize count */    count = -1;    if(staticFive==5)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(staticFive==5)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(staticFive==5)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
staticFive==5
staticFive
staticFive
5
{        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
if(staticFive==5)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }
{            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                printLine("Hello");            }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(33,13,0)
(35,14,0)
(20,21,0)
(5,15,0)
(27,28,0)
(1,20,0)
(22,4,0)
(7,3,0)
(31,1,0)
(13,0,0)
(10,25,0)
(17,28,0)
(27,12,0)
(29,21,0)
(36,15,0)
(28,23,0)
(11,28,0)
(30,21,0)
(38,35,0)
(37,0,0)
(13,27,0)
(8,22,0)
(3,0,0)
(32,22,0)
(2,20,0)
(12,27,0)
(4,6,0)
(26,0,0)
(20,1,0)
(24,25,0)
(28,11,0)
(19,21,0)
(34,4,0)
(16,4,0)
(9,27,0)
(27,20,0)
(27,13,0)
(27,12,1)
(33,0,1)
(10,28,1)
(8,32,1)
(38,13,1)
(3,7,1)
(13,27,1)
(32,25,1)
(36,20,1)
(27,9,1)
(31,2,1)
(27,20,1)
(35,38,1)
(20,1,1)
(13,0,1)
(25,24,1)
(18,25,1)
(22,8,1)
(28,11,1)
(11,17,1)
(10,15,1)
(37,22,1)
(26,37,1)
(27,28,1)
(0,26,1)
(18,13,1)
(7,35,1)
(15,5,1)
(33,3,1)
(5,36,1)
(1,31,1)
(24,10,1)
(3,0,1)
(17,15,1)
(9,33,1)
(38,13,2)
(8,25,2)
(22,25,2)
(13,25,2)
(3,0,2)
(13,27,2)
(0,25,2)
(3,13,2)
(13,0,2)
(35,13,2)
(27,20,2)
(28,11,2)
(9,13,2)
(27,28,2)
(13,13,2)
(20,1,2)
(9,25,2)
(28,15,2)
(7,13,2)
(27,13,2)
(17,15,2)
(26,25,2)
(27,12,2)
(27,25,2)
(11,15,2)
(32,25,2)
(33,13,2)
(37,25,2)
(33,25,2)
-----------------------------------
(0,i = 0)
(1,-1)
(2,count)
(3,i++)
(4,)
(5,5)
(6,)
(7,i)
(8,0)
(9,count)
(10,staticFive)
(11,RAND32()
(12,size_t)
(13,i < (size_t)
(14,)
(15,staticFive==5)
(16,i)
(17,count)
(18,RET)
(19,count)
(20,count = -1)
(21,)
(22,i = 0)
(23,)
(24,5)
(25,staticFive==5)
(26,0)
(27,(size_t)
(28,count = RAND32()
(29,if(staticFive==5)
(30,if(staticFive==5)
(31,1)
(32,i)
(33,i)
(34,for (i = 0; i < (size_t)
(35,printLine("Hello")
(36,staticFive)
(37,i)
(38,"Hello")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^