-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_08_bad()
{
    int64_t * data;
    data = NULL;
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(staticReturnsTrue())
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
74,75
74,76
75,76
76,77
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,77,79
-----computeFrom-----
14,15
14,16
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_08_bad(){    int64_t * data;    data = NULL;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_08_bad()
CWE401_Memory_Leak__int64_t_realloc_08_bad
{    int64_t * data;    data = NULL;    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(staticReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(staticReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(4,16,0)
(15,27,0)
(27,6,0)
(28,7,0)
(15,25,0)
(3,13,0)
(17,10,0)
(14,27,0)
(22,10,0)
(0,21,0)
(31,21,0)
(15,22,0)
(19,6,0)
(18,22,0)
(30,7,0)
(16,1,0)
(13,22,0)
(7,22,0)
(23,10,0)
(22,15,0)
(6,27,0)
(6,19,0)
(30,10,0)
(27,31,0)
(7,30,0)
(25,15,0)
(20,21,0)
(8,7,0)
(26,21,0)
(2,31,0)
(24,13,0)
(29,31,0)
(27,15,0)
(1,5,0)
(9,19,0)
(33,6,0)
(1,16,0)
(17,1,1)
(7,22,1)
(16,4,1)
(6,19,1)
(33,14,1)
(14,18,1)
(9,33,1)
(27,6,1)
(17,13,1)
(31,2,1)
(13,22,1)
(15,25,1)
(27,31,1)
(15,27,1)
(30,7,1)
(11,31,1)
(7,28,1)
(22,15,1)
(1,16,1)
(8,17,1)
(13,3,1)
(2,29,1)
(12,32,1)
(32,30,1)
(3,24,1)
(28,8,1)
(24,22,1)
(32,11,1)
(18,11,1)
(4,13,1)
(19,9,1)
(27,6,2)
(15,25,2)
(22,11,2)
(8,11,2)
(17,11,2)
(27,31,2)
(6,11,2)
(1,16,2)
(33,11,2)
(24,11,2)
(7,11,2)
(14,11,2)
(19,11,2)
(3,11,2)
(30,11,2)
(15,27,2)
(18,11,2)
(13,22,2)
(4,13,2)
(16,13,2)
(13,11,2)
(22,15,2)
(6,19,2)
(7,22,2)
(27,11,2)
(1,13,2)
(15,11,2)
(9,11,2)
(28,11,2)
(30,7,2)
-----------------------------------
(0,if(staticReturnsTrue()
(1,exit(-1)
(2,NULL)
(3,NULL)
(4,1)
(5,)
(6,100*sizeof(int64_t)
(7,data[0])
(8,data)
(9,int64_t)
(10,)
(11,staticReturnsTrue()
(12,RET)
(13,data == NULL)
(14,data)
(15,(int64_t *)
(16,-1)
(17,L)
(18,data)
(19,sizeof(int64_t)
(20,data)
(21,)
(22,data = (int64_t *)
(23,if (data == NULL)
(24,data)
(25,int64_t *)
(26,if(staticReturnsTrue()
(27,realloc(data, 100*sizeof(int64_t)
(28,0)
(29,data)
(30,printLongLongLine(data[0])
(31,data = NULL)
(32,staticReturnsTrue()
(33,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^