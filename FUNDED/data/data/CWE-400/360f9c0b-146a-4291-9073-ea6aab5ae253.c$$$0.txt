-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad()
{
    if(staticFive==5)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
8,9
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
14,15
14,16
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
48,51
49,50
51,52
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
64,65
64,66
65,66
65,67
67,68
69,70
69,71
69,72
70,71
72,73
74,75
74,76
75,76
77,78
78,79
78,80
81,82
81,83
82,83
82,84
83,84
85,86
87,88
87,89
87,90
88,89
89,90
89,91
89,92
90,91
92,93
95,96
96,97
96,98
97,98
99,100
101,102
102,103
102,104
103,104
105,106
-----nextToken-----
2,4,9,10,15,17,18,22,24,27,29,32,33,37,39,44,46,50,52,53,57,59,63,66,68,71,73,76,79,80,84,86,91,93,94,98,100,104,106
-----computeFrom-----
7,8
7,9
28,29
28,30
35,36
35,37
61,62
61,63
74,75
74,76
82,83
82,84
-----guardedBy-----
84,106
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad(){    if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad()
CWE401_Memory_Leak__malloc_realloc_wchar_t_07_bad
{    if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
if(staticFive==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
staticFive==5
staticFive
staticFive
5
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(46,44,0)
(23,18,0)
(5,45,0)
(33,38,0)
(46,14,0)
(32,12,0)
(37,10,0)
(13,7,0)
(44,16,0)
(11,20,0)
(42,20,0)
(1,39,0)
(26,38,0)
(19,7,0)
(20,11,0)
(16,44,0)
(17,1,0)
(36,20,0)
(2,19,0)
(13,42,0)
(20,36,0)
(24,16,0)
(35,12,0)
(27,11,0)
(15,9,0)
(38,42,0)
(44,46,0)
(18,27,0)
(16,24,0)
(3,11,0)
(1,46,0)
(28,39,0)
(42,39,0)
(45,34,0)
(34,45,0)
(20,42,0)
(41,27,0)
(30,16,0)
(27,18,0)
(0,39,0)
(40,9,0)
(11,1,0)
(39,25,0)
(6,39,0)
(43,42,0)
(31,24,0)
(19,42,0)
(11,27,0)
(22,13,0)
(4,0,0)
(0,1,0)
(46,1,0)
(12,1,0)
(34,8,0)
(29,39,0)
(14,46,0)
(5,12,1)
(46,44,1)
(41,3,1)
(13,42,1)
(4,12,1)
(18,23,1)
(32,1,1)
(34,45,1)
(43,0,1)
(19,2,1)
(11,27,1)
(30,17,1)
(21,13,1)
(27,18,1)
(44,16,1)
(35,32,1)
(20,36,1)
(4,34,1)
(21,38,1)
(40,15,1)
(33,26,1)
(1,46,1)
(38,42,1)
(3,43,1)
(24,31,1)
(12,35,1)
(42,20,1)
(21,9,1)
(9,40,1)
(26,42,1)
(19,42,1)
(38,33,1)
(31,30,1)
(12,1,1)
(45,5,1)
(17,9,1)
(20,11,1)
(0,1,1)
(23,41,1)
(2,38,1)
(11,1,1)
(22,19,1)
(13,22,1)
(16,24,1)
(46,14,1)
(0,4,1)
(22,38,2)
(42,9,2)
(11,27,2)
(0,9,2)
(27,9,2)
(32,9,2)
(16,24,2)
(17,9,2)
(46,44,2)
(4,9,2)
(16,9,2)
(11,1,2)
(20,36,2)
(44,16,2)
(33,9,2)
(2,38,2)
(13,38,2)
(44,9,2)
(23,9,2)
(43,9,2)
(38,42,2)
(1,9,2)
(42,20,2)
(26,9,2)
(20,11,2)
(12,9,2)
(46,14,2)
(20,9,2)
(45,12,2)
(11,9,2)
(31,9,2)
(38,9,2)
(35,9,2)
(41,9,2)
(30,9,2)
(46,9,2)
(3,9,2)
(24,9,2)
(34,12,2)
(27,18,2)
(12,1,2)
(19,38,2)
(34,45,2)
(19,42,2)
(5,12,2)
(13,42,2)
(18,9,2)
(0,1,2)
(1,46,2)
-----------------------------------
(0,printWLine(data)
(1,* data = (wchar_t *)
(2,data)
(3,data)
(4,data)
(5,1)
(6,if (data == NULL)
(7,)
(8,)
(9,staticFive==5)
(10,)
(11,realloc(data, (130000)
(12,data == NULL)
(13,free(data)
(14,wchar_t *)
(15,staticFive)
(16,100*sizeof(wchar_t)
(17,data)
(18,sizeof(wchar_t)
(19,printWLine(data)
(20,(wchar_t *)
(21,RET)
(22,data)
(23,wchar_t)
(24,sizeof(wchar_t)
(25,)
(26,data)
(27,(130000)
(28,if (data != NULL)
(29,data)
(30,100)
(31,wchar_t)
(32,data)
(33,NULL)
(34,exit(-1)
(35,NULL)
(36,wchar_t *)
(37,if(staticFive==5)
(38,data != NULL)
(39,)
(40,5)
(41,130000)
(42,data = (wchar_t *)
(43,data)
(44,malloc(100*sizeof(wchar_t)
(45,-1)
(46,(wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^