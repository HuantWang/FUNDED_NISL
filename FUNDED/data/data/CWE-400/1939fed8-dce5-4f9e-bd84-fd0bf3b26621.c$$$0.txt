-----label-----
0
-----code-----
static void prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,
			    int more, ldms_set_t set, void *arg)
{
	ldmsd_prdcr_set_t prd_set = arg;
	int rc;

	pthread_mutex_lock(&prd_set->lock);
	if (status != LDMS_LOOKUP_OK) {
		ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);
		if (prd_set->set)
			ldms_set_delete(prd_set->set);
		prd_set->set = NULL;
		goto err;
	}
	/*
	 * Check that the producer name in the metric set matches our
	 * name. If it doesn't, we write a warning to the log file
	 */
	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))
		ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"
			 "does not match the producer name '%s' in the '%s' metric set.\n",
			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),
			 ldms_set_instance_name_get(set));
	prd_set->set = set;
	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));
	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;
	ldmsd_strgp_update(prd_set);
	pthread_mutex_unlock(&prd_set->lock);
	return;
err:
	prd_set->state = LDMSD_PRDCR_SET_STATE_START;
	pthread_mutex_unlock(&prd_set->lock);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
6,7
8,9
10,11
10,12
11,12
13,14
15,16
15,17
17,18
19,20
19,21
20,21
22,23
24,25
24,26
26,27
26,28
29,30
29,31
29,32
29,33
29,34
29,35
29,36
29,37
29,38
29,39
29,40
29,41
29,42
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
39,40
40,41
40,42
42,43
44,45
45,46
45,47
46,47
48,49
49,50
49,51
50,51
53,54
53,55
54,55
54,56
55,56
57,58
59,60
59,61
59,62
59,63
60,61
61,62
61,63
61,64
61,65
62,63
64,65
67,68
67,69
68,69
71,72
71,73
72,73
72,74
73,74
76,77
77,78
77,79
78,79
80,81
80,82
81,82
84,85
85,86
85,87
86,87
86,88
87,88
90,91
92,93
94,95
94,96
95,96
95,97
95,98
96,97
98,99
98,100
99,100
99,101
100,101
100,102
101,102
106,107
106,108
107,108
109,110
111,112
112,113
112,114
112,115
112,116
112,117
112,118
113,114
115,116
118,119
118,120
119,120
119,121
120,121
120,122
121,122
126,127
126,128
127,128
129,130
131,132
131,133
132,133
134,135
136,137
137,138
137,139
138,139
138,140
139,140
142,143
144,145
145,146
145,147
146,147
146,148
147,148
150,151
150,152
151,152
153,154
153,155
154,155
156,157
158,159
159,160
159,161
160,161
160,162
161,162
164,165
166,167
167,168
167,169
168,169
170,171
172,173
173,174
173,175
174,175
176,177
177,178
177,179
178,179
182,183
182,184
184,185
185,186
185,187
186,187
186,188
187,188
190,191
192,193
193,194
193,195
194,195
196,197
197,198
197,199
198,199
-----nextToken-----
2,4,7,9,12,14,16,18,21,23,25,27,28,33,35,38,41,43,47,51,52,56,58,63,65,66,69,70,74,75,79,82,83,88,89,91,93,97,102,103,104,105,108,110,114,116,117,122,123,124,125,128,130,133,135,140,141,143,148,149,152,155,157,162,163,165,169,171,175,179,180,181,183,188,189,191,195,199,200
-----computeFrom-----
54,55
54,56
85,86
85,87
137,138
137,139
145,146
145,147
159,160
159,161
185,186
185,187
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;GotoStatement;Name;IfStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;LabelStatement;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,			    int more, ldms_set_t set, void *arg){	ldmsd_prdcr_set_t prd_set = arg;	int rc;	pthread_mutex_lock(&prd_set->lock);	if (status != LDMS_LOOKUP_OK) {		ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}	/*	 * Check that the producer name in the metric set matches our	 * name. If it doesn't, we write a warning to the log file	 */	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));	prd_set->set = set;	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;	ldmsd_strgp_update(prd_set);	pthread_mutex_unlock(&prd_set->lock);	return;err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;	pthread_mutex_unlock(&prd_set->lock);}
static void
prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,			    int more, ldms_set_t set, void *arg)
prdcr_lookup_cb
ldms_t xprt
ldms_t
ldms_t
xprt
xprt
enum ldms_lookup_status status
enum ldms_lookup_status
ldms_lookup_status
status
status
int more
int
more
more
ldms_set_t set
ldms_set_t
ldms_set_t
set
set
void *arg
void
*arg
*
arg
{	ldmsd_prdcr_set_t prd_set = arg;	int rc;	pthread_mutex_lock(&prd_set->lock);	if (status != LDMS_LOOKUP_OK) {		ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}	/*	 * Check that the producer name in the metric set matches our	 * name. If it doesn't, we write a warning to the log file	 */	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));	prd_set->set = set;	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;	ldmsd_strgp_update(prd_set);	pthread_mutex_unlock(&prd_set->lock);	return;err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;	pthread_mutex_unlock(&prd_set->lock);}
ldmsd_prdcr_set_t prd_set = arg;
ldmsd_prdcr_set_t prd_set = arg;
ldmsd_prdcr_set_t
ldmsd_prdcr_set_t
prd_set = arg
prd_set
= arg
arg
arg
int rc;
int rc;
int
rc
rc
pthread_mutex_lock(&prd_set->lock);
pthread_mutex_lock(&prd_set->lock)
pthread_mutex_lock
pthread_mutex_lock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
if (status != LDMS_LOOKUP_OK) {		ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}
status != LDMS_LOOKUP_OK
status
status
LDMS_LOOKUP_OK
LDMS_LOOKUP_OK
{		ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}
ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name);
ldmsd_log(LDMSD_LERROR, "Error doing lookup for set '%s'\n", prd_set->inst_name)
ldmsd_log
ldmsd_log
LDMSD_LERROR
LDMSD_LERROR
"Error doing lookup for set '%s'\n"
prd_set->inst_name
prd_set
prd_set
inst_name
if (prd_set->set)			ldms_set_delete(prd_set->set);
prd_set->set
prd_set
prd_set
set
ldms_set_delete(prd_set->set);
ldms_set_delete(prd_set->set)
ldms_set_delete
ldms_set_delete
prd_set->set
prd_set
prd_set
set
prd_set->set = NULL;
prd_set->set = NULL
prd_set->set
prd_set
prd_set
set
NULL
NULL
goto err;
err
if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));
strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set))
strcmp
strcmp
prd_set->prdcr->obj.name
prd_set->prdcr->obj
prd_set->prdcr
prd_set
prd_set
prdcr
obj
name
ldms_set_producer_name_get(set)
ldms_set_producer_name_get
ldms_set_producer_name_get
set
set
ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));
ldmsd_log(LDMSD_LERROR, "Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set))
ldmsd_log
ldmsd_log
LDMSD_LERROR
LDMSD_LERROR
"Warning: The producer name '%s' in the configuration\n"			 "does not match the producer name '%s' in the '%s' metric set.\n"
prd_set->prdcr->obj.name
prd_set->prdcr->obj
prd_set->prdcr
prd_set
prd_set
prdcr
obj
name
ldms_set_producer_name_get(set)
ldms_set_producer_name_get
ldms_set_producer_name_get
set
set
ldms_set_instance_name_get(set)
ldms_set_instance_name_get
ldms_set_instance_name_get
set
set
prd_set->set = set;
prd_set->set = set
prd_set->set
prd_set
prd_set
set
set
set
prd_set->schema_name = strdup(ldms_set_schema_name_get(set));
prd_set->schema_name = strdup(ldms_set_schema_name_get(set))
prd_set->schema_name
prd_set
prd_set
schema_name
strdup(ldms_set_schema_name_get(set))
strdup
strdup
ldms_set_schema_name_get(set)
ldms_set_schema_name_get
ldms_set_schema_name_get
set
set
prd_set->state = LDMSD_PRDCR_SET_STATE_READY;
prd_set->state = LDMSD_PRDCR_SET_STATE_READY
prd_set->state
prd_set
prd_set
state
LDMSD_PRDCR_SET_STATE_READY
LDMSD_PRDCR_SET_STATE_READY
ldmsd_strgp_update(prd_set);
ldmsd_strgp_update(prd_set)
ldmsd_strgp_update
ldmsd_strgp_update
prd_set
prd_set
pthread_mutex_unlock(&prd_set->lock);
pthread_mutex_unlock(&prd_set->lock)
pthread_mutex_unlock
pthread_mutex_unlock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
return;
err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;
err
prd_set->state = LDMSD_PRDCR_SET_STATE_START;
prd_set->state = LDMSD_PRDCR_SET_STATE_START
prd_set->state
prd_set
prd_set
state
LDMSD_PRDCR_SET_STATE_START
LDMSD_PRDCR_SET_STATE_START
pthread_mutex_unlock(&prd_set->lock);
pthread_mutex_unlock(&prd_set->lock)
pthread_mutex_unlock
pthread_mutex_unlock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
-----joern-----
(43,90,0)
(44,93,0)
(63,73,0)
(68,75,0)
(49,30,0)
(93,44,0)
(20,74,0)
(12,52,0)
(75,74,0)
(42,11,0)
(23,64,0)
(40,39,0)
(83,85,0)
(89,82,0)
(57,79,0)
(33,11,0)
(96,74,0)
(55,52,0)
(25,83,0)
(73,63,0)
(87,59,0)
(64,19,0)
(28,98,0)
(98,96,0)
(6,96,0)
(79,84,0)
(72,84,0)
(61,74,0)
(4,42,0)
(25,96,0)
(62,0,0)
(88,96,0)
(78,83,0)
(66,25,0)
(90,85,0)
(38,14,0)
(36,67,0)
(30,48,0)
(59,10,0)
(20,48,0)
(86,85,0)
(97,26,0)
(59,87,0)
(37,54,0)
(98,37,0)
(0,20,0)
(34,57,0)
(84,96,0)
(14,96,0)
(29,32,0)
(13,9,0)
(5,82,0)
(27,97,0)
(84,79,0)
(65,74,0)
(24,93,0)
(36,74,0)
(93,96,0)
(1,74,0)
(32,73,0)
(95,0,0)
(2,4,0)
(0,96,0)
(11,33,0)
(37,98,0)
(42,4,0)
(4,39,0)
(33,48,0)
(70,74,0)
(91,98,0)
(7,11,0)
(71,97,0)
(80,85,0)
(67,36,0)
(17,9,0)
(57,34,0)
(92,25,0)
(3,84,0)
(14,74,0)
(8,33,0)
(34,30,0)
(83,25,0)
(53,63,0)
(64,96,0)
(9,96,0)
(60,6,0)
(6,75,0)
(79,57,0)
(39,4,0)
(39,96,0)
(22,29,0)
(18,83,0)
(16,19,0)
(30,34,0)
(54,37,0)
(10,96,0)
(69,15,0)
(82,96,0)
(9,67,0)
(46,39,0)
(11,7,0)
(47,11,0)
(96,81,0)
(77,96,0)
(10,59,0)
(52,96,0)
(56,93,0)
(100,79,0)
(29,96,0)
(99,10,0)
(67,9,0)
(52,90,0)
(58,10,0)
(45,42,0)
(50,6,0)
(31,74,0)
(73,32,0)
(94,57,0)
(63,48,0)
(76,29,0)
(11,42,0)
(51,11,0)
(19,74,0)
(32,74,0)
(87,74,0)
(54,74,0)
(15,74,0)
(21,20,0)
(35,7,0)
(41,64,0)
(7,48,0)
(19,16,1)
(38,19,1)
(12,55,1)
(94,79,1)
(49,57,1)
(68,6,1)
(33,8,1)
(24,82,1)
(35,42,1)
(36,67,1)
(17,13,1)
(39,96,1)
(4,2,1)
(98,96,1)
(18,97,1)
(42,4,1)
(79,84,1)
(29,96,1)
(37,98,1)
(25,96,1)
(84,72,1)
(79,100,1)
(41,32,1)
(57,79,1)
(63,53,1)
(73,63,1)
(9,17,1)
(11,42,1)
(9,96,1)
(93,56,1)
(0,96,1)
(3,97,1)
(7,35,1)
(14,38,1)
(15,87,1)
(51,34,1)
(62,11,1)
(55,44,1)
(45,4,1)
(21,0,1)
(93,96,1)
(87,59,1)
(60,86,1)
(83,25,1)
(46,47,1)
(20,48,1)
(57,94,1)
(8,7,1)
(52,12,1)
(54,37,1)
(89,83,1)
(32,73,1)
(11,33,1)
(53,29,1)
(90,43,1)
(97,26,1)
(40,46,1)
(14,96,1)
(76,20,1)
(64,23,1)
(10,96,1)
(27,54,1)
(75,68,1)
(55,82,1)
(34,57,1)
(0,95,1)
(6,50,1)
(29,22,1)
(44,93,1)
(72,3,1)
(69,36,1)
(39,40,1)
(96,88,1)
(98,28,1)
(100,84,1)
(52,96,1)
(5,89,1)
(43,52,1)
(71,27,1)
(30,49,1)
(82,5,1)
(50,60,1)
(59,10,1)
(25,92,1)
(13,75,1)
(62,34,1)
(78,18,1)
(92,66,1)
(69,15,1)
(20,21,1)
(95,62,1)
(33,48,1)
(66,78,1)
(64,96,1)
(47,51,1)
(10,99,1)
(2,39,1)
(11,7,1)
(56,24,1)
(23,41,1)
(96,81,1)
(16,64,1)
(4,39,1)
(91,96,1)
(58,14,1)
(82,96,1)
(84,96,1)
(7,48,1)
(67,9,1)
(86,90,1)
(22,76,1)
(30,48,1)
(6,96,1)
(42,45,1)
(88,77,1)
(97,71,1)
(63,48,1)
(99,58,1)
(34,30,1)
(28,91,1)
(32,73,2)
(58,97,2)
(34,97,2)
(0,96,2)
(44,93,2)
(22,97,2)
(75,97,2)
(8,34,2)
(36,97,2)
(67,9,2)
(6,96,2)
(18,97,2)
(50,97,2)
(29,97,2)
(23,97,2)
(37,98,2)
(52,96,2)
(4,34,2)
(36,67,2)
(30,48,2)
(72,97,2)
(38,97,2)
(11,34,2)
(20,48,2)
(84,96,2)
(62,97,2)
(47,34,2)
(89,97,2)
(95,97,2)
(79,84,2)
(5,97,2)
(33,34,2)
(57,79,2)
(42,4,2)
(16,97,2)
(39,96,2)
(42,34,2)
(12,97,2)
(9,97,2)
(46,34,2)
(90,97,2)
(87,97,2)
(11,42,2)
(49,97,2)
(93,96,2)
(11,33,2)
(7,48,2)
(66,97,2)
(0,97,2)
(76,97,2)
(82,97,2)
(67,97,2)
(25,96,2)
(87,59,2)
(84,97,2)
(79,97,2)
(59,10,2)
(35,34,2)
(98,96,2)
(51,34,2)
(96,81,2)
(54,37,2)
(100,97,2)
(33,48,2)
(19,97,2)
(7,34,2)
(11,7,2)
(73,97,2)
(41,97,2)
(94,97,2)
(20,97,2)
(34,30,2)
(53,97,2)
(56,82,2)
(21,97,2)
(78,97,2)
(64,96,2)
(86,97,2)
(82,96,2)
(13,97,2)
(2,34,2)
(68,97,2)
(57,97,2)
(40,34,2)
(39,34,2)
(92,97,2)
(60,97,2)
(45,34,2)
(55,97,2)
(63,97,2)
(32,97,2)
(99,97,2)
(14,97,2)
(97,26,2)
(29,96,2)
(83,97,2)
(69,15,2)
(9,96,2)
(44,82,2)
(93,82,2)
(17,97,2)
(14,96,2)
(3,97,2)
(34,57,2)
(73,63,2)
(4,39,2)
(30,97,2)
(15,97,2)
(10,97,2)
(10,96,2)
(25,97,2)
(63,48,2)
(83,25,2)
(64,97,2)
(6,97,2)
(52,97,2)
(43,97,2)
(59,97,2)
(24,82,2)
-----------------------------------
(0,prd_set->set)
(1,if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(2,obj)
(3,prd_set)
(4,prd_set->prdcr->obj)
(5,set)
(6,prd_set->state)
(7,ldms_set_producer_name_get(set)
(8,set)
(9,prd_set->lock)
(10,prd_set->lock)
(11,ldmsd_log(LDMSD_LERROR, "Warning: The producer name \'%s\' in the configuration\\n"\n\\n\\t\\t\\t "does not match the producer name \'%s\' in the \'%s\' metric set.\\n",\n\\n\\t\\t\\t prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(12,set)
(13,prd_set)
(14,ldmsd_strgp_update(prd_set)
(15,return;)
(16,LDMSD_PRDCR_SET_STATE_READY)
(17,lock)
(18,LDMSD_LERROR)
(19,prd_set->state = LDMSD_PRDCR_SET_STATE_READY)
(20,prd_set->set = set)
(21,set)
(22,schema_name)
(23,state)
(24,prd_set)
(25,prd_set->inst_name)
(26,enum ldms_lookup_status status)
(27,status)
(28,lock)
(29,prd_set->schema_name)
(30,ldms_set_producer_name_get(set)
(31,rc)
(32,prd_set->schema_name = strdup(ldms_set_schema_name_get(set)
(33,ldms_set_instance_name_get(set)
(34,strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(35,set)
(36,pthread_mutex_unlock(&prd_set->lock)
(37,&prd_set->lock)
(38,prd_set)
(39,prd_set->prdcr)
(40,prdcr)
(41,prd_set)
(42,prd_set->prdcr->obj.name)
(43,NULL)
(44,ldms_set_delete(prd_set->set)
(45,name)
(46,prd_set)
(47,"Warning: The producer name \'%s\' in the configuration\\n"\n\\n\\t\\t\\t "does not match the producer name \'%s\' in the \'%s\' metric set.\\n")
(48,ldms_set_t set)
(49,set)
(50,state)
(51,LDMSD_LERROR)
(52,prd_set->set)
(53,set)
(54,pthread_mutex_lock(&prd_set->lock)
(55,prd_set)
(56,set)
(57,prd_set->prdcr->obj.name)
(58,prd_set)
(59,&prd_set->lock)
(60,prd_set)
(61,prd_set)
(62,prd_set)
(63,ldms_set_schema_name_get(set)
(64,prd_set->state)
(65,if (status != LDMS_LOOKUP_OK)
(66,prd_set)
(67,&prd_set->lock)
(68,LDMSD_PRDCR_SET_STATE_START)
(69,RET)
(70,err:)
(71,LDMS_LOOKUP_OK)
(72,prdcr)
(73,strdup(ldms_set_schema_name_get(set)
(74,)
(75,prd_set->state = LDMSD_PRDCR_SET_STATE_START)
(76,prd_set)
(77,prd_set)
(78,"Error doing lookup for set \'%s\'\\n")
(79,prd_set->prdcr->obj)
(80,if (prd_set->set)
(81,void *arg)
(82,prd_set->set)
(83,ldmsd_log(LDMSD_LERROR, "Error doing lookup for set \'%s\'\\n", prd_set->inst_name)
(84,prd_set->prdcr)
(85,)
(86,goto err;)
(87,pthread_mutex_unlock(&prd_set->lock)
(88,arg)
(89,prd_set)
(90,prd_set->set = NULL)
(91,prd_set)
(92,inst_name)
(93,prd_set->set)
(94,name)
(95,set)
(96,prd_set = arg)
(97,status != LDMS_LOOKUP_OK)
(98,prd_set->lock)
(99,lock)
(100,obj)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^