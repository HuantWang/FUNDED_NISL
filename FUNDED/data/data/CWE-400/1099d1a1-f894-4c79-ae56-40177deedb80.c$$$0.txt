-----label-----
1
-----code-----
static int
tapdisk_channel_start_process(tapdisk_channel_t *channel,
			      char *write_dev, char *read_dev)
{
	pid_t child;
	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };

	if ((child = fork()) == -1)
		return -errno;

	if (!child) {
		int i;
		for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)
			if (i != STDIN_FILENO &&
			    i != STDOUT_FILENO &&
			    i != STDERR_FILENO)
				close(i);

		execvp("tapdisk", argv);
		_exit(1);
	} else {
		pid_t got;
		do {
			got = waitpid(child, NULL, 0);
		} while (got != child);
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
18,19
18,20
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
31,32
31,33
31,34
31,35
35,36
36,37
36,38
36,39
36,40
38,39
40,41
42,43
44,45
44,46
45,46
45,47
46,47
47,48
47,49
48,49
50,51
51,52
53,54
55,56
56,57
57,58
59,60
59,61
59,62
60,61
61,62
63,64
63,65
63,66
63,67
64,65
65,66
65,67
67,68
69,70
69,71
69,72
69,73
70,71
71,72
71,73
72,73
75,76
75,77
76,77
78,79
78,80
79,80
81,82
83,84
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
90,91
92,93
94,95
94,96
95,96
97,98
99,100
99,101
100,101
102,103
104,105
105,106
105,107
106,107
108,109
110,111
111,112
111,113
111,114
112,113
115,116
117,118
118,119
118,120
119,120
122,123
122,124
123,124
124,125
124,126
125,126
127,128
129,130
129,131
130,131
131,132
132,133
132,134
133,134
135,136
135,137
135,138
135,139
136,137
138,139
140,141
143,144
143,145
144,145
146,147
148,149
-----nextToken-----
2,4,7,9,10,12,14,15,17,19,20,25,27,30,32,33,34,37,39,41,43,49,52,54,58,62,66,68,73,74,77,80,82,85,91,93,96,98,101,103,107,109,113,114,116,120,121,126,128,134,137,139,141,142,145,147,149
-----computeFrom-----
45,46
45,47
47,48
47,49
71,72
71,73
75,76
75,77
87,88
87,89
88,89
88,90
89,90
89,91
94,95
94,96
99,100
99,101
132,133
132,134
143,144
143,145
-----guardedBy-----
101,109
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;UnaryExpression;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DoStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static inttapdisk_channel_start_process(tapdisk_channel_t *channel,			      char *write_dev, char *read_dev){	pid_t child;	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };	if ((child = fork()) == -1)		return -errno;	if (!child) {		int i;		for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)			if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);		execvp("tapdisk", argv);		_exit(1);	} else {		pid_t got;		do {			got = waitpid(child, NULL, 0);		} while (got != child);	}	return 0;}
static int
tapdisk_channel_start_process(tapdisk_channel_t *channel,			      char *write_dev, char *read_dev)
tapdisk_channel_start_process
tapdisk_channel_t *channel
tapdisk_channel_t
tapdisk_channel_t
*channel
*
channel
char *write_dev
char
*write_dev
*
write_dev
char *read_dev
char
*read_dev
*
read_dev
{	pid_t child;	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };	if ((child = fork()) == -1)		return -errno;	if (!child) {		int i;		for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)			if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);		execvp("tapdisk", argv);		_exit(1);	} else {		pid_t got;		do {			got = waitpid(child, NULL, 0);		} while (got != child);	}	return 0;}
pid_t child;
pid_t child;
pid_t
pid_t
child
child
char *argv[] = { "tapdisk", write_dev, read_dev, NULL };
char *argv[] = { "tapdisk", write_dev, read_dev, NULL };
char
*argv[] = { "tapdisk", write_dev, read_dev, NULL }
*
argv
[]
= { "tapdisk", write_dev, read_dev, NULL }
{ "tapdisk", write_dev, read_dev, NULL }
"tapdisk"
write_dev
write_dev
read_dev
read_dev
NULL
NULL
if ((child = fork()) == -1)		return -errno;
(child = fork()) == -1
(child = fork())
child = fork()
child
child
fork()
fork
fork
-1
1
return -errno;
-errno
errno
errno
if (!child) {		int i;		for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)			if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);		execvp("tapdisk", argv);		_exit(1);	} else {		pid_t got;		do {			got = waitpid(child, NULL, 0);		} while (got != child);	}
!child
child
child
{		int i;		for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)			if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);		execvp("tapdisk", argv);		_exit(1);	}
int i;
int i;
int
i
i
for (i = 0 ; i < sysconf(_SC_OPEN_MAX) ; i++)			if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);
i = 0 ;
i = 0
i
i
0
i < sysconf(_SC_OPEN_MAX)
i
i
sysconf(_SC_OPEN_MAX)
sysconf
sysconf
_SC_OPEN_MAX
_SC_OPEN_MAX
i++
i
i
if (i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO)				close(i);
i != STDIN_FILENO &&			    i != STDOUT_FILENO &&			    i != STDERR_FILENO
i != STDIN_FILENO &&			    i != STDOUT_FILENO
i != STDIN_FILENO
i
i
STDIN_FILENO
STDIN_FILENO
i != STDOUT_FILENO
i
i
STDOUT_FILENO
STDOUT_FILENO
i != STDERR_FILENO
i
i
STDERR_FILENO
STDERR_FILENO
close(i);
close(i)
close
close
i
i
execvp("tapdisk", argv);
execvp("tapdisk", argv)
execvp
execvp
"tapdisk"
argv
argv
_exit(1);
_exit(1)
_exit
_exit
1
{		pid_t got;		do {			got = waitpid(child, NULL, 0);		} while (got != child);	}
pid_t got;
pid_t got;
pid_t
pid_t
got
got
do {			got = waitpid(child, NULL, 0);		} while (got != child);
{			got = waitpid(child, NULL, 0);		}
got = waitpid(child, NULL, 0);
got = waitpid(child, NULL, 0)
got
got
waitpid(child, NULL, 0)
waitpid
waitpid
child
child
NULL
NULL
0
got != child
got
got
child
child
return 0;
0
-----joern-----
(45,17,0)
(25,24,0)
(5,49,0)
(8,32,0)
(57,58,0)
(40,25,0)
(27,3,0)
(33,24,0)
(44,52,0)
(13,60,0)
(9,24,0)
(61,62,0)
(17,45,0)
(52,44,0)
(22,57,0)
(42,49,0)
(51,21,0)
(46,6,0)
(15,39,0)
(0,21,0)
(41,5,0)
(37,58,0)
(63,11,0)
(24,25,0)
(26,0,0)
(55,2,0)
(62,60,0)
(32,61,0)
(14,48,0)
(23,42,0)
(56,49,0)
(28,3,0)
(12,21,0)
(20,32,0)
(47,37,0)
(36,21,0)
(7,11,0)
(32,49,0)
(57,0,0)
(63,49,0)
(39,17,0)
(30,38,0)
(27,43,0)
(4,49,0)
(35,58,0)
(6,17,0)
(59,21,0)
(61,5,0)
(31,39,0)
(54,60,0)
(53,5,0)
(39,25,0)
(2,43,0)
(60,62,0)
(1,58,0)
(48,49,0)
(16,63,0)
(11,63,0)
(62,61,0)
(50,52,0)
(29,38,0)
(44,17,0)
(17,44,0)
(5,61,0)
(18,57,0)
(34,24,0)
(10,17,0)
(60,49,0)
(61,32,0)
(3,21,0)
(25,19,0)
(24,17,0)
(44,52,1)
(28,39,1)
(25,24,1)
(62,61,1)
(40,6,1)
(42,23,1)
(42,49,1)
(43,2,1)
(11,7,1)
(33,40,1)
(14,62,1)
(15,25,1)
(63,11,1)
(8,20,1)
(31,15,1)
(5,53,1)
(39,25,1)
(24,9,1)
(16,49,1)
(6,17,1)
(60,13,1)
(32,49,1)
(57,0,1)
(27,43,1)
(9,34,1)
(10,0,1)
(6,46,1)
(54,63,1)
(23,48,1)
(48,49,1)
(61,32,1)
(16,42,1)
(41,60,1)
(47,57,1)
(39,31,1)
(4,56,1)
(3,28,1)
(55,44,1)
(45,10,1)
(5,49,1)
(7,16,1)
(18,22,1)
(17,45,1)
(56,6,1)
(2,55,1)
(61,5,1)
(32,8,1)
(24,17,1)
(49,4,1)
(57,18,1)
(39,17,1)
(52,50,1)
(53,41,1)
(28,37,1)
(20,5,1)
(23,62,1)
(63,49,1)
(34,33,1)
(60,49,1)
(37,47,1)
(22,63,1)
(40,39,1)
(44,17,1)
(48,14,1)
(13,54,1)
(62,60,1)
(50,17,1)
(46,44,1)
(27,3,1)
(0,26,1)
(8,5,2)
(5,49,2)
(33,6,2)
(62,63,2)
(31,39,2)
(48,49,2)
(6,17,2)
(61,5,2)
(16,6,2)
(4,6,2)
(20,5,2)
(33,39,2)
(24,39,2)
(24,6,2)
(61,60,2)
(40,39,2)
(9,39,2)
(9,6,2)
(42,49,2)
(57,6,2)
(49,6,2)
(34,39,2)
(40,6,2)
(25,6,2)
(39,39,2)
(6,44,2)
(55,44,2)
(7,6,2)
(53,60,2)
(31,6,2)
(32,49,2)
(60,49,2)
(44,17,2)
(15,6,2)
(24,17,2)
(11,63,2)
(43,44,2)
(39,25,2)
(25,24,2)
(13,63,2)
(3,44,2)
(63,63,2)
(25,39,2)
(15,39,2)
(60,63,2)
(48,62,2)
(16,63,2)
(32,5,2)
(61,32,2)
(47,6,2)
(39,6,2)
(46,44,2)
(14,62,2)
(34,6,2)
(18,6,2)
(28,44,2)
(62,61,2)
(63,49,2)
(22,6,2)
(11,6,2)
(2,44,2)
(41,60,2)
(27,43,2)
(39,17,2)
(37,6,2)
(7,63,2)
(5,60,2)
(57,0,2)
(42,63,2)
(23,63,2)
(27,3,2)
(54,63,2)
(63,6,2)
(44,52,2)
(63,11,2)
(56,6,2)
(17,45,2)
(62,60,2)
-----------------------------------
(0,*argv[] = { "tapdisk", write_dev, read_dev, NULL })
(1,i)
(2,-errno)
(3,return 0;)
(4,0)
(5,i != STDOUT_FILENO)
(6,!child)
(7,_SC_OPEN_MAX)
(8,STDERR_FILENO)
(9,0)
(10,child)
(11,sysconf(_SC_OPEN_MAX)
(12,if ((child = fork()
(13,STDIN_FILENO)
(14,i)
(15,got)
(16,i)
(17,child = fork()
(18,argv)
(19,)
(20,i)
(21,)
(22,"tapdisk")
(23,i)
(24,waitpid(child, NULL, 0)
(25,got = waitpid(child, NULL, 0)
(26,argv)
(27,RET)
(28,0)
(29,got)
(30,do)
(31,child)
(32,i != STDERR_FILENO)
(33,child)
(34,NULL)
(35,for (i = 0 ; i < sysconf(_SC_OPEN_MAX)
(36,if (!child)
(37,_exit(1)
(38,)
(39,got != child)
(40,got)
(41,i)
(42,i++)
(43,return -errno;)
(44,(child = fork()
(45,fork()
(46,child)
(47,1)
(48,close(i)
(49,i = 0)
(50,1)
(51,argv)
(52,-1)
(53,STDOUT_FILENO)
(54,i)
(55,errno)
(56,i)
(57,execvp("tapdisk", argv)
(58,)
(59,child)
(60,i != STDIN_FILENO)
(61,i != STDOUT_FILENO &&\n\\n\\t\\t\\t    i != STDERR_FILENO)
(62,i != STDIN_FILENO &&\n\\n\\t\\t\\t    i != STDOUT_FILENO &&\n\\n\\t\\t\\t    i != STDERR_FILENO)
(63,i < sysconf(_SC_OPEN_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^