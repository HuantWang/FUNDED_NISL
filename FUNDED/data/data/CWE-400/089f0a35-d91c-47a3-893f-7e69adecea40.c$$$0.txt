-----label-----
0
-----code-----
static void goodG2B2()
{
    int64_t * data;
    data = NULL;
    if(1)
    {
        /* FIX: Use memory allocated on the stack with ALLOCA */
        data = (int64_t *)ALLOCA(100*sizeof(int64_t));
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(1)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
21,22
21,23
21,24
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
30,31
32,33
32,34
33,34
35,36
35,37
37,38
38,39
38,40
39,40
42,43
43,44
43,45
44,45
44,46
45,46
49,50
50,51
50,52
51,52
53,54
53,55
54,55
57,58
57,59
59,60
-----nextToken-----
2,4,9,11,12,16,18,20,25,29,31,34,36,40,41,46,47,48,52,55,56,58,60
-----computeFrom-----
14,15
14,16
23,24
23,25
35,36
35,37
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
static void goodG2B2(){    int64_t * data;    data = NULL;    if(1)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
static void
goodG2B2()
goodG2B2
{    int64_t * data;    data = NULL;    if(1)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
1
{        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)ALLOCA(100*sizeof(int64_t));
data = (int64_t *)ALLOCA(100*sizeof(int64_t))
data
data
(int64_t *)ALLOCA(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
ALLOCA(100*sizeof(int64_t))
ALLOCA
ALLOCA
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
1
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(4,7,0)
(22,11,0)
(7,5,0)
(20,4,0)
(0,20,0)
(2,17,0)
(8,20,0)
(16,15,0)
(11,15,0)
(1,4,0)
(10,12,0)
(12,10,0)
(17,10,0)
(10,17,0)
(12,7,0)
(7,4,0)
(4,19,0)
(24,11,0)
(3,15,0)
(18,10,0)
(13,15,0)
(9,19,0)
(9,20,0)
(21,19,0)
(20,9,0)
(5,7,0)
(7,12,0)
(11,24,1)
(9,20,1)
(7,5,1)
(8,21,1)
(6,14,1)
(20,4,1)
(12,10,1)
(18,1,1)
(2,18,1)
(4,7,1)
(23,6,1)
(0,8,1)
(17,2,1)
(7,12,1)
(14,11,1)
(1,14,1)
(21,4,1)
(6,9,1)
(20,0,1)
(10,17,1)
(24,22,1)
(9,14,2)
(7,12,2)
(7,14,2)
(18,14,2)
(1,14,2)
(12,10,2)
(4,7,2)
(8,14,2)
(2,14,2)
(12,14,2)
(7,5,2)
(4,14,2)
(17,14,2)
(9,20,2)
(20,14,2)
(20,4,2)
(10,17,2)
(10,14,2)
(0,14,2)
(21,14,2)
-----------------------------------
(0,0)
(1,data)
(2,int64_t)
(3,data)
(4,data = (int64_t *)
(5,int64_t *)
(6,1)
(7,(int64_t *)
(8,data)
(9,printLongLongLine(data[0])
(10,100*sizeof(int64_t)
(11,data = NULL)
(12,ALLOCA(100*sizeof(int64_t)
(13,if(1)
(14,1)
(15,)
(16,if(1)
(17,sizeof(int64_t)
(18,100)
(19,)
(20,data[0])
(21,L)
(22,data)
(23,RET)
(24,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^