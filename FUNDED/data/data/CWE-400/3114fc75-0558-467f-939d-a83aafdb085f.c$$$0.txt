-----label-----
0
-----code-----
static char * goodG2BSource(char * data)
{
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (char *)ALLOCA(100*sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
31,32
31,33
31,34
32,33
34,35
37,38
38,39
38,40
39,40
41,42
43,44
44,45
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,36,40,42,45
-----computeFrom-----
13,14
13,15
24,25
24,26
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static char * goodG2BSource(char * data){    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
static char
* goodG2BSource(char * data)
*
goodG2BSource
char * data
char
* data
*
data
{    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
data = (char *)ALLOCA(100*sizeof(char));
data = (char *)ALLOCA(100*sizeof(char))
data
data
(char *)ALLOCA(100*sizeof(char))
char *
char
*
*
ALLOCA(100*sizeof(char))
ALLOCA
ALLOCA
100*sizeof(char)
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
return data;
data
data
-----joern-----
(7,3,0)
(7,8,0)
(1,3,0)
(3,14,0)
(3,8,0)
(14,11,0)
(13,14,0)
(3,10,0)
(6,9,0)
(16,3,0)
(0,12,0)
(4,1,0)
(9,3,0)
(12,5,0)
(1,10,0)
(18,5,0)
(2,9,0)
(7,10,0)
(11,12,0)
(5,12,0)
(15,1,0)
(12,11,0)
(14,3,0)
(9,10,0)
(11,14,0)
(1,8,0)
(17,7,0)
(9,8,0)
(14,13,0)
(1,3,1)
(9,3,1)
(3,14,1)
(2,7,1)
(1,10,1)
(12,5,1)
(7,3,1)
(18,0,1)
(7,17,1)
(14,13,1)
(7,10,1)
(9,2,1)
(11,12,1)
(3,10,1)
(1,15,1)
(15,4,1)
(0,16,1)
(14,11,1)
(4,3,1)
(6,9,1)
(9,10,1)
(5,18,1)
(17,1,1)
(9,10,2)
(1,10,2)
(6,9,2)
(14,11,2)
(14,13,2)
(3,10,2)
(12,5,2)
(7,3,2)
(11,12,2)
(3,14,2)
(1,3,2)
(7,10,2)
(9,3,2)
-----------------------------------
(0,100)
(1,strcpy(data, "A String")
(2,data)
(3,data = (char *)
(4,data)
(5,sizeof(char)
(6,RET)
(7,printLine(data)
(8,)
(9,return data;)
(10,char * data)
(11,ALLOCA(100*sizeof(char)
(12,100*sizeof(char)
(13,char *)
(14,(char *)
(15,"A String")
(16,data)
(17,data)
(18,char)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^