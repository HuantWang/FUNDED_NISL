-----label-----
0
-----code-----
static void goodB2G()
{
    wchar_t * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goto sink;
sink:
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
54,57
55,56
57,58
60,61
61,62
61,63
62,63
64,65
66,67
68,69
68,70
70,71
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,38,39,43,45,50,52,56,58,59,63,65,67,69,73,75
-----computeFrom-----
13,14
13,15
23,24
23,25
34,35
34,36
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* FIX: Deallocate memory */    free(data);}
static void
goodB2G()
goodB2G
{    wchar_t * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* FIX: Deallocate memory */    free(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));
source
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goto sink;
sink
sink:    /* FIX: Deallocate memory */    free(data);
sink
free(data);
free(data)
free
free
data
data
-----joern-----
(25,15,0)
(11,27,0)
(28,9,0)
(1,30,0)
(11,2,0)
(6,12,0)
(19,29,0)
(14,16,0)
(21,9,0)
(15,25,0)
(16,23,0)
(8,23,0)
(23,16,0)
(0,15,0)
(7,5,0)
(22,30,0)
(5,25,0)
(26,30,0)
(27,11,0)
(10,27,0)
(16,0,0)
(17,30,0)
(12,25,0)
(20,30,0)
(13,12,0)
(3,25,0)
(24,15,0)
(15,24,0)
(15,0,0)
(9,30,0)
(29,30,0)
(5,30,0)
(29,25,0)
(0,16,0)
(18,30,0)
(25,30,0)
(9,28,1)
(27,10,1)
(29,19,1)
(7,18,1)
(23,8,1)
(8,14,1)
(15,0,1)
(12,6,1)
(18,29,1)
(3,17,1)
(15,24,1)
(29,25,1)
(28,21,1)
(0,16,1)
(6,13,1)
(25,15,1)
(17,9,1)
(13,25,1)
(4,5,1)
(12,25,1)
(11,27,1)
(5,7,1)
(10,12,1)
(5,25,1)
(16,23,1)
(14,3,1)
(19,11,1)
(19,12,1)
(25,15,2)
(0,16,2)
(12,25,2)
(16,23,2)
(27,12,2)
(10,12,2)
(11,12,2)
(15,24,2)
(29,25,2)
(5,25,2)
(11,27,2)
(15,0,2)
-----------------------------------
(0,malloc(100*sizeof(wchar_t)
(1,data)
(2,)
(3,data)
(4,RET)
(5,free(data)
(6,NULL)
(7,data)
(8,wchar_t)
(9,data = NULL)
(10,1)
(11,exit(-1)
(12,data == NULL)
(13,data)
(14,100)
(15,(wchar_t *)
(16,100*sizeof(wchar_t)
(17,goto source;)
(18,goto sink;)
(19,data)
(20,if (data == NULL)
(21,data)
(22,source:)
(23,sizeof(wchar_t)
(24,wchar_t *)
(25,data = (wchar_t *)
(26,sink:)
(27,-1)
(28,NULL)
(29,printWLine(data)
(30,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^