-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
47,49
48,49
50,51
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
63,65
64,65
64,66
65,66
70,71
71,72
71,73
72,73
74,75
75,76
75,77
76,77
79,80
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,42,44,49,51,57,58,59,60,66,67,68,69,73,77,78,82,83,87,89
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
53,54
53,55
62,63
62,64
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad()
CWE401_Memory_Leak__twoIntsStruct_malloc_21_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    badStatic = 1; /* true */    badSink(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)malloc(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
malloc(100*sizeof(twoIntsStruct))
malloc
malloc
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(31,22,0)
(24,27,0)
(20,8,0)
(46,22,0)
(4,10,0)
(22,9,0)
(6,21,0)
(3,5,0)
(5,3,0)
(12,27,0)
(11,0,0)
(44,40,0)
(18,27,0)
(45,37,0)
(43,11,0)
(13,21,0)
(21,6,0)
(9,27,0)
(5,16,0)
(30,36,0)
(6,8,0)
(26,9,0)
(16,5,0)
(24,9,0)
(16,36,0)
(36,7,0)
(40,9,0)
(26,28,0)
(2,26,0)
(42,6,0)
(39,24,0)
(0,27,0)
(37,27,0)
(21,9,0)
(34,10,0)
(41,7,0)
(32,26,0)
(22,11,0)
(7,36,0)
(23,21,0)
(17,37,0)
(11,22,0)
(15,40,0)
(34,25,0)
(8,27,0)
(33,27,0)
(36,16,0)
(10,34,0)
(29,9,0)
(28,38,0)
(9,5,0)
(38,28,0)
(28,26,0)
(35,33,0)
(38,27,0)
(1,0,0)
(19,33,0)
(5,9,0)
(35,19,1)
(5,16,1)
(4,40,1)
(31,46,1)
(32,8,1)
(11,43,1)
(26,2,1)
(36,7,1)
(6,21,1)
(19,38,1)
(9,5,1)
(10,4,1)
(24,9,1)
(46,40,1)
(24,39,1)
(15,9,1)
(42,21,1)
(22,31,1)
(28,26,1)
(46,34,1)
(20,6,1)
(14,24,1)
(37,45,1)
(0,1,1)
(40,9,1)
(22,9,1)
(30,29,1)
(7,41,1)
(1,11,1)
(29,37,1)
(6,42,1)
(2,32,1)
(26,9,1)
(45,17,1)
(41,30,1)
(11,22,1)
(38,28,1)
(40,44,1)
(43,22,1)
(44,15,1)
(13,23,1)
(16,36,1)
(33,35,1)
(21,9,1)
(23,0,1)
(8,20,1)
(34,10,1)
(39,33,1)
(21,13,1)
(5,3,1)
(22,9,2)
(11,22,2)
(34,10,2)
(36,7,2)
(5,16,2)
(21,9,2)
(4,40,2)
(34,40,2)
(16,36,2)
(10,40,2)
(38,28,2)
(28,26,2)
(5,3,2)
(6,21,2)
(24,9,2)
(26,9,2)
(9,5,2)
(40,9,2)
-----------------------------------
(0,data[0].intOne = 0)
(1,0)
(2,0)
(3,twoIntsStruct *)
(4,1)
(5,(twoIntsStruct *)
(6,data[0].intTwo)
(7,sizeof(twoIntsStruct)
(8,data[0].intTwo = 0)
(9,data = (twoIntsStruct *)
(10,-1)
(11,data[0].intOne)
(12,data)
(13,0)
(14,RET)
(15,data)
(16,malloc(100*sizeof(twoIntsStruct)
(17,data)
(18,if (data == NULL)
(19,badStatic)
(20,0)
(21,data[0])
(22,data[0])
(23,data)
(24,badSink(data)
(25,)
(26,data[0])
(27,)
(28,&data[0])
(29,data)
(30,100)
(31,0)
(32,data)
(33,badStatic = 1)
(34,exit(-1)
(35,1)
(36,100*sizeof(twoIntsStruct)
(37,data = NULL)
(38,printStructLine(&data[0])
(39,data)
(40,data == NULL)
(41,twoIntsStruct)
(42,intTwo)
(43,intOne)
(44,NULL)
(45,NULL)
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^