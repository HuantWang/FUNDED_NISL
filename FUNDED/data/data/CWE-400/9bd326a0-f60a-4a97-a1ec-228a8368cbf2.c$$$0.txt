-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink(void * countVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int * countPtr = (int *)countVoidPtr;
    /* dereference countPtr into count */
    int count = (*countPtr);
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
25,26
26,27
26,28
28,29
28,30
30,31
31,32
32,33
33,34
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
-----nextToken-----
2,4,6,8,9,13,15,16,20,22,24,27,29,34,38,40,44,45
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink(void * countVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int * countPtr = (int *)countVoidPtr;    /* dereference countPtr into count */    int count = (*countPtr);    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
void
CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink(void * countVoidPtr)
CWE400_Resource_Exhaustion__fscanf_sleep_64b_badSink
void * countVoidPtr
void
* countVoidPtr
*
countVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int * countPtr = (int *)countVoidPtr;    /* dereference countPtr into count */    int count = (*countPtr);    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int * countPtr = (int *)countVoidPtr;
int * countPtr = (int *)countVoidPtr;
int
* countPtr = (int *)countVoidPtr
*
countPtr
= (int *)countVoidPtr
(int *)countVoidPtr
int *
int
*
*
countVoidPtr
countVoidPtr
int count = (*countPtr);
int count = (*countPtr);
int
count = (*countPtr)
count
= (*countPtr)
(*countPtr)
*countPtr
countPtr
countPtr
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(12,11,0)
(0,14,0)
(12,7,0)
(14,10,0)
(17,7,0)
(10,14,0)
(16,7,0)
(11,12,0)
(15,7,0)
(5,11,0)
(11,0,0)
(2,14,0)
(17,12,0)
(1,16,0)
(13,12,0)
(14,0,0)
(3,7,0)
(14,9,0)
(6,0,0)
(0,7,0)
(8,17,0)
(0,14,1)
(13,0,1)
(14,9,1)
(17,12,1)
(14,2,1)
(8,12,1)
(11,0,1)
(17,8,1)
(2,6,1)
(11,5,1)
(12,11,1)
(4,16,1)
(14,10,1)
(16,1,1)
(5,13,1)
(1,17,1)
(17,12,2)
(12,11,2)
(0,14,2)
(11,0,2)
(14,10,2)
(14,9,2)
-----------------------------------
(0,* countPtr = (int *)
(1,"Sleep time possibly too long")
(2,countVoidPtr)
(3,count)
(4,RET)
(5,countPtr)
(6,countPtr)
(7,)
(8,count)
(9,void * countVoidPtr)
(10,int *)
(11,*countPtr)
(12,count = (*countPtr)
(13,count)
(14,(int *)
(15,countPtr)
(16,printLine("Sleep time possibly too long")
(17,SLEEP(count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^