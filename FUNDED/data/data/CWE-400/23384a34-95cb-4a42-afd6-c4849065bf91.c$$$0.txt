-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
39,40
41,42
41,43
41,44
42,43
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
59,62
59,63
60,61
61,62
61,63
62,63
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
86,90
86,91
87,88
89,90
91,92
92,93
92,94
95,96
95,97
96,97
98,99
100,101
102,103
103,104
104,105
104,106
105,106
108,109
108,110
109,110
111,112
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,40,43,45,46,50,52,57,58,63,64,67,71,72,74,77,83,85,88,90,93,94,97,99,101,106,107,110,115,117
-----computeFrom-----
38,39
38,40
48,49
48,50
61,62
61,63
65,66
65,67
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink(int count)
CWE400_Resource_Exhaustion__connect_socket_fwrite_65b_badSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(33,21,0)
(4,38,0)
(17,57,0)
(37,14,0)
(33,13,0)
(23,10,0)
(21,33,0)
(33,53,0)
(14,16,0)
(45,44,0)
(33,26,0)
(12,39,0)
(54,29,0)
(26,48,0)
(18,44,0)
(31,45,0)
(15,51,0)
(35,14,0)
(52,7,0)
(29,14,0)
(28,48,0)
(56,50,0)
(48,26,0)
(47,33,0)
(3,29,0)
(11,26,0)
(43,57,0)
(39,14,0)
(1,10,0)
(38,49,0)
(8,11,0)
(46,39,0)
(34,22,0)
(53,33,0)
(19,14,0)
(55,21,0)
(22,10,0)
(30,55,0)
(50,14,0)
(57,26,0)
(5,53,0)
(10,0,0)
(10,23,0)
(48,50,0)
(24,48,0)
(42,13,0)
(7,36,0)
(25,33,0)
(2,14,0)
(9,14,0)
(13,33,0)
(58,26,0)
(6,14,0)
(21,55,0)
(26,14,0)
(41,44,0)
(10,22,0)
(11,40,0)
(20,50,0)
(22,44,0)
(1,34,1)
(32,11,1)
(29,54,1)
(33,13,1)
(5,25,1)
(56,20,1)
(17,26,1)
(31,21,1)
(34,45,1)
(43,17,1)
(31,7,1)
(21,55,1)
(13,42,1)
(38,4,1)
(11,8,1)
(50,56,1)
(20,29,1)
(33,47,1)
(44,18,1)
(30,22,1)
(10,1,1)
(28,24,1)
(32,27,1)
(57,43,1)
(10,23,1)
(45,31,1)
(57,26,1)
(7,52,1)
(3,39,1)
(21,33,1)
(26,48,1)
(42,53,1)
(46,12,1)
(48,50,1)
(18,41,1)
(52,21,1)
(8,27,1)
(47,13,1)
(34,44,1)
(41,57,1)
(4,57,1)
(22,10,1)
(53,5,1)
(55,30,1)
(10,0,1)
(27,22,1)
(22,44,1)
(39,46,1)
(24,58,1)
(33,53,1)
(54,3,1)
(58,50,1)
(25,55,1)
(11,26,1)
(41,38,1)
(45,44,1)
(33,26,1)
(48,28,1)
(22,10,2)
(57,26,2)
(52,21,2)
(22,22,2)
(33,53,2)
(31,22,2)
(33,26,2)
(26,48,2)
(47,22,2)
(45,44,2)
(10,0,2)
(13,22,2)
(8,27,2)
(10,23,2)
(21,33,2)
(10,22,2)
(45,22,2)
(38,57,2)
(55,22,2)
(34,22,2)
(11,26,2)
(22,44,2)
(7,21,2)
(30,22,2)
(4,57,2)
(11,27,2)
(33,13,2)
(33,22,2)
(53,22,2)
(5,22,2)
(1,22,2)
(25,22,2)
(48,50,2)
(42,22,2)
(21,22,2)
(21,55,2)
-----------------------------------
(0,int count)
(1,count)
(2,i)
(3,pFile)
(4,1)
(5,char)
(6,pFile)
(7,exit(1)
(8,pFile)
(9,filename)
(10,(size_t)
(11,fclose(pFile)
(12,i)
(13,strlen(SENTENCE)
(14,)
(15,if (strlen(SENTENCE)
(16,)
(17,pFile)
(18,0)
(19,if (pFile)
(20,filename)
(21,strlen(SENTENCE)
(22,i < (size_t)
(23,size_t)
(24,filename)
(25,SENTENCE)
(26,pFile = fopen(filename, "w+")
(27,pFile)
(28,"w+")
(29,*pFile = NULL)
(30,SENTENCE)
(31,i)
(32,RET)
(33,fwrite(SENTENCE, sizeof(char)
(34,i)
(35,for (i = 0; i < (size_t)
(36,)
(37,if (pFile == NULL)
(38,exit(1)
(39,i = 0)
(40,)
(41,i)
(42,SENTENCE)
(43,NULL)
(44,i = 0)
(45,i++)
(46,0)
(47,pFile)
(48,fopen(filename, "w+")
(49,)
(50,*filename = "output_bad.txt")
(51,)
(52,1)
(53,sizeof(char)
(54,NULL)
(55,strlen(SENTENCE)
(56,"output_bad.txt")
(57,pFile == NULL)
(58,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^