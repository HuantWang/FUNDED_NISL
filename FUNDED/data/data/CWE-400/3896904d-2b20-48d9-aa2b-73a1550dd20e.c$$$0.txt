-----label-----
1
-----code-----
static void
print_symname (const char *form, const char *name, bfd *abfd)
{
  if (do_demangle && *name)
    {
      char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);

      if (res != NULL)
	{
	  printf (form, res);
	  free (res);
	  return;
	}
    }

  printf (form, name);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
7,8
7,9
10,11
10,12
12,13
12,14
15,16
15,17
16,17
18,19
18,20
21,22
21,23
22,23
22,24
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
31,32
31,33
33,34
33,35
33,36
36,37
37,38
37,39
37,40
37,41
38,39
40,41
42,43
44,45
44,46
45,46
47,48
49,50
49,51
50,51
50,52
51,52
53,54
55,56
55,57
55,58
56,57
57,58
57,59
57,60
58,59
60,61
62,63
64,65
65,66
65,67
66,67
68,69
71,72
72,73
72,74
72,75
73,74
75,76
77,78
-----nextToken-----
2,4,6,8,9,11,13,14,17,19,20,25,28,32,34,35,39,41,43,46,48,52,54,59,61,63,67,69,70,74,76,78
-----computeFrom-----
23,24
23,25
44,45
44,46
50,51
50,52
-----guardedBy-----
28,43
52,69
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static voidprint_symname (const char *form, const char *name, bfd *abfd){  if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }  printf (form, name);}
static void
print_symname (const char *form, const char *name, bfd *abfd)
print_symname
const char *form
const char
*form
*
form
const char *name
const char
*name
*
name
bfd *abfd
bfd
bfd
*abfd
*
abfd
{  if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }  printf (form, name);}
if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }
do_demangle && *name
do_demangle
do_demangle
*name
name
name
{      char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }
char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);
char *res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS);
char
*res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS)
*
res
= bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS)
bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS)
bfd_demangle
bfd_demangle
abfd
abfd
name
name
DMGL_ANSI | DMGL_PARAMS
DMGL_ANSI
DMGL_ANSI
DMGL_PARAMS
DMGL_PARAMS
if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}
res != NULL
res
res
NULL
NULL
{	  printf (form, res);	  free (res);	  return;	}
printf (form, res);
printf (form, res)
printf
printf
form
form
res
res
free (res);
free (res)
free
free
res
res
return;
printf (form, name);
printf (form, name)
printf
printf
form
form
name
name
-----joern-----
(31,22,0)
(26,27,0)
(14,26,0)
(18,10,0)
(22,8,0)
(11,6,0)
(7,32,0)
(17,28,0)
(24,27,0)
(32,11,0)
(26,11,0)
(17,30,0)
(17,8,0)
(5,1,0)
(19,28,0)
(10,0,0)
(1,26,0)
(25,21,0)
(1,0,0)
(25,30,0)
(11,30,0)
(22,26,0)
(33,11,0)
(3,21,0)
(13,25,0)
(9,15,0)
(2,32,0)
(12,17,0)
(11,26,0)
(29,27,0)
(21,25,0)
(15,26,0)
(11,32,0)
(4,11,0)
(20,15,0)
(22,0,0)
(23,22,0)
(16,17,0)
(17,16,1)
(1,26,1)
(9,26,1)
(25,13,1)
(23,15,1)
(16,12,1)
(15,26,1)
(7,2,1)
(5,22,1)
(11,30,1)
(31,23,1)
(2,33,1)
(12,21,1)
(18,10,1)
(20,9,1)
(13,3,1)
(25,30,1)
(1,5,1)
(12,15,1)
(11,6,1)
(21,3,1)
(33,4,1)
(11,32,1)
(22,8,1)
(22,26,1)
(32,7,1)
(15,20,1)
(17,8,1)
(22,31,1)
(26,11,1)
(18,17,1)
(17,30,1)
(4,14,1)
(10,1,1)
(21,25,1)
(14,21,1)
(31,15,2)
(18,10,2)
(33,21,2)
(4,21,2)
(26,11,2)
(12,21,2)
(11,21,2)
(16,21,2)
(21,25,2)
(25,30,2)
(20,21,2)
(5,15,2)
(17,15,2)
(22,26,2)
(13,3,2)
(26,21,2)
(11,6,2)
(10,15,2)
(11,30,2)
(22,8,2)
(7,21,2)
(1,15,2)
(2,21,2)
(9,21,2)
(1,26,2)
(17,8,2)
(17,21,2)
(25,3,2)
(15,26,2)
(15,21,2)
(14,21,2)
(32,21,2)
(16,15,2)
(22,15,2)
(23,15,2)
(11,32,2)
(12,15,2)
(17,30,2)
-----------------------------------
(0,)
(1,free (res)
(2,DMGL_ANSI)
(3,do_demangle)
(4,abfd)
(5,res)
(6,bfd *abfd)
(7,DMGL_PARAMS)
(8,const char *form)
(9,res)
(10,return;)
(11,bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS)
(12,form)
(13,name)
(14,res)
(15,res != NULL)
(16,name)
(17,printf (form, name)
(18,RET)
(19,if (do_demangle && *name)
(20,NULL)
(21,do_demangle && *name)
(22,printf (form, res)
(23,form)
(24,res)
(25,*name)
(26,*res = bfd_demangle (abfd, name, DMGL_ANSI | DMGL_PARAMS)
(27,)
(28,)
(29,if (res != NULL)
(30,const char *name)
(31,res)
(32,DMGL_ANSI | DMGL_PARAMS)
(33,name)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^