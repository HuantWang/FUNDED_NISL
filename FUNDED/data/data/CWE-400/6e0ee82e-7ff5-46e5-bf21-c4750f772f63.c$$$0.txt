-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_16_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    while(1)
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
        break;
    }
    while(1)
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
19,21
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
31,32
31,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,30,32,37,39,43,44,45
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;BreakStatement;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_16_bad(){    int count;    /* Initialize count */    count = -1;    while(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);        break;    }    while(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");        break;    }}
void
CWE400_Resource_Exhaustion__fscanf_sleep_16_bad()
CWE400_Resource_Exhaustion__fscanf_sleep_16_bad
{    int count;    /* Initialize count */    count = -1;    while(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);        break;    }    while(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");        break;    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
while(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);        break;    }
1
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);        break;    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
break;
while(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");        break;    }
1
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");        break;    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
break;
-----joern-----
(15,2,0)
(8,1,0)
(11,22,0)
(4,17,0)
(16,8,0)
(12,11,0)
(23,21,0)
(5,16,0)
(13,1,0)
(21,2,0)
(21,22,0)
(22,11,0)
(19,2,0)
(18,22,0)
(14,8,0)
(10,17,0)
(22,17,0)
(8,16,0)
(7,15,0)
(6,17,0)
(16,22,0)
(0,8,0)
(7,21,1)
(15,7,1)
(13,8,1)
(9,22,1)
(20,9,1)
(21,23,1)
(3,19,1)
(0,14,1)
(22,11,1)
(3,20,1)
(11,12,1)
(16,22,1)
(16,5,1)
(19,15,1)
(21,22,1)
(12,18,1)
(23,20,1)
(14,9,1)
(8,16,1)
(5,0,1)
(20,13,1)
(8,16,2)
(14,9,2)
(0,9,2)
(23,20,2)
(19,20,2)
(22,11,2)
(8,9,2)
(21,22,2)
(16,22,2)
(21,20,2)
(15,20,2)
(7,20,2)
(16,9,2)
(13,9,2)
(5,9,2)
-----------------------------------
(0,"%d")
(1,)
(2,)
(3,RET)
(4,while(1)
(5,count)
(6,while(1)
(7,"Sleep time possibly too long")
(8,fscanf(stdin, "%d", &count)
(9,1)
(10,count)
(11,-1)
(12,1)
(13,break;)
(14,stdin)
(15,printLine("Sleep time possibly too long")
(16,&count)
(17,)
(18,count)
(19,break;)
(20,1)
(21,SLEEP(count)
(22,count = -1)
(23,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^