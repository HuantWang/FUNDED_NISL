-----label-----
0
-----code-----
static void good1()
{
    goto sink;
sink:
    {
        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        int64_t * tmpData;
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
        tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
        /* FIX: Ensure realloc() was successful before assigning data to the memory block
        * allocated with realloc() */
        if (tmpData != NULL)
        {
            data = tmpData;
            /* Reinitialize and make use of data */
            data[0] = 10LL;
            printLongLongLine(data[0]);
        }
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
8,9
8,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
25,27
26,27
28,29
28,30
30,31
31,32
31,33
32,33
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
52,53
52,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
74,76
75,76
75,77
76,77
78,79
80,81
80,82
80,83
81,82
83,84
85,86
85,87
86,87
88,89
89,90
89,91
90,91
93,94
93,95
94,95
94,96
95,96
97,98
99,100
99,101
99,102
100,101
101,102
101,103
102,103
104,105
106,107
107,108
107,109
108,109
108,110
109,110
113,114
114,115
114,116
115,116
117,118
117,119
118,119
121,122
122,123
122,124
123,124
125,126
-----nextToken-----
2,4,7,9,14,16,17,22,24,27,29,33,34,38,40,45,47,51,53,54,59,60,61,65,68,69,73,77,79,82,84,87,91,92,96,98,103,105,110,111,112,116,119,120,124,126
-----computeFrom-----
28,29
28,30
36,37
36,38
56,57
56,58
71,72
71,73
85,86
85,87
94,95
94,96
101,102
101,103
107,108
107,109
-----guardedBy-----
96,105
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;GotoStatement;Name;LabelStatement;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good1(){    goto sink;sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        int64_t * tmpData;        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        /* FIX: Ensure realloc() was successful before assigning data to the memory block        * allocated with realloc() */        if (tmpData != NULL)        {            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }        free(data);    }}
static void
good1()
good1
{    goto sink;sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        int64_t * tmpData;        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        /* FIX: Ensure realloc() was successful before assigning data to the memory block        * allocated with realloc() */        if (tmpData != NULL)        {            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }        free(data);    }}
goto sink;
sink
sink:    {        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        int64_t * tmpData;        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        /* FIX: Ensure realloc() was successful before assigning data to the memory block        * allocated with realloc() */        if (tmpData != NULL)        {            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }        free(data);    }
sink
{        int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        int64_t * tmpData;        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);        tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));        /* FIX: Ensure realloc() was successful before assigning data to the memory block        * allocated with realloc() */        if (tmpData != NULL)        {            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }        free(data);    }
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t * data = (int64_t *)malloc(100*sizeof(int64_t));
int64_t
int64_t
* data = (int64_t *)malloc(100*sizeof(int64_t))
*
data
= (int64_t *)malloc(100*sizeof(int64_t))
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
int64_t * tmpData;
int64_t * tmpData;
int64_t
int64_t
* tmpData
*
tmpData
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t));
tmpData = (int64_t *)realloc(data, (130000)*sizeof(int64_t))
tmpData
tmpData
(int64_t *)realloc(data, (130000)*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, (130000)*sizeof(int64_t))
realloc
realloc
data
data
(130000)*sizeof(int64_t)
(130000)
130000
sizeof(int64_t)
int64_t
int64_t
int64_t

if (tmpData != NULL)        {            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{            data = tmpData;            /* Reinitialize and make use of data */            data[0] = 10LL;            printLongLongLine(data[0]);        }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
data[0] = 10LL;
data[0] = 10LL
data[0]
data
data
0
10LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(40,7,0)
(10,37,0)
(7,40,0)
(1,37,0)
(0,1,0)
(25,49,0)
(35,40,0)
(13,51,0)
(32,11,0)
(37,51,0)
(13,37,0)
(46,11,0)
(15,9,0)
(41,1,0)
(9,49,0)
(32,45,0)
(29,49,0)
(6,44,0)
(42,5,0)
(43,51,0)
(3,7,0)
(13,9,0)
(17,35,0)
(11,46,0)
(44,6,0)
(48,33,0)
(49,33,0)
(34,46,0)
(2,1,0)
(9,38,0)
(49,51,0)
(4,51,0)
(14,34,0)
(51,27,0)
(46,34,0)
(32,37,0)
(50,37,0)
(28,42,0)
(1,2,0)
(22,10,0)
(20,27,0)
(47,40,0)
(6,38,0)
(44,9,0)
(11,32,0)
(40,35,0)
(21,13,0)
(7,37,0)
(45,32,0)
(39,28,0)
(33,49,0)
(42,28,0)
(37,32,0)
(12,10,0)
(8,9,0)
(2,51,0)
(26,44,0)
(18,38,0)
(7,33,0)
(24,27,0)
(53,51,0)
(31,44,0)
(19,25,0)
(16,46,0)
(52,51,0)
(36,25,0)
(33,7,0)
(33,48,0)
(30,51,0)
(35,17,1)
(25,49,1)
(3,29,1)
(7,40,1)
(26,31,1)
(34,14,1)
(22,12,1)
(13,9,1)
(10,37,1)
(46,34,1)
(37,32,1)
(32,45,1)
(47,3,1)
(6,44,1)
(13,37,1)
(23,13,1)
(17,47,1)
(7,37,1)
(30,42,1)
(13,21,1)
(49,33,1)
(28,39,1)
(10,22,1)
(44,26,1)
(9,8,1)
(9,49,1)
(18,9,1)
(1,37,1)
(11,46,1)
(19,49,1)
(44,9,1)
(16,50,1)
(12,37,1)
(33,7,1)
(30,10,1)
(29,2,1)
(36,19,1)
(39,10,1)
(32,11,1)
(1,0,1)
(2,1,1)
(33,48,1)
(25,36,1)
(31,18,1)
(0,41,1)
(41,30,1)
(42,28,1)
(8,15,1)
(14,16,1)
(21,25,1)
(40,35,1)
(15,25,1)
(50,24,1)
(21,6,1)
(7,40,2)
(15,25,2)
(31,25,2)
(1,37,2)
(49,33,2)
(26,25,2)
(2,1,2)
(46,34,2)
(44,9,2)
(39,10,2)
(44,25,2)
(13,9,2)
(9,25,2)
(42,28,2)
(37,32,2)
(6,25,2)
(32,45,2)
(6,44,2)
(18,25,2)
(42,10,2)
(13,37,2)
(8,25,2)
(28,10,2)
(32,11,2)
(33,48,2)
(10,37,2)
(40,35,2)
(25,49,2)
(33,7,2)
(9,49,2)
(11,46,2)
(7,37,2)
-----------------------------------
(0,0)
(1,data[0])
(2,printLongLongLine(data[0])
(3,data)
(4,data)
(5,)
(6,printLongLongLine(data[0])
(7,realloc(data, (130000)
(8,tmpData)
(9,data = tmpData)
(10,data == NULL)
(11,malloc(100*sizeof(int64_t)
(12,data)
(13,free(data)
(14,int64_t)
(15,data)
(16,100)
(17,int64_t)
(18,L)
(19,tmpData)
(20,sink:)
(21,data)
(22,NULL)
(23,RET)
(24,goto sink;)
(25,tmpData != NULL)
(26,0)
(27,)
(28,-1)
(29,tmpData)
(30,L)
(31,data)
(32,(int64_t *)
(33,(int64_t *)
(34,sizeof(int64_t)
(35,sizeof(int64_t)
(36,NULL)
(37,* data = (int64_t *)
(38,)
(39,1)
(40,(130000)
(41,data)
(42,exit(-1)
(43,tmpData)
(44,data[0])
(45,int64_t *)
(46,100*sizeof(int64_t)
(47,130000)
(48,int64_t *)
(49,tmpData = (int64_t *)
(50,data)
(51,)
(52,if (data == NULL)
(53,if (tmpData != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^