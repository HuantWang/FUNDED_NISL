-----label-----
0
-----code-----
static unsigned int fanout_demux_rollover(struct packet_fanout *f,
					  struct sk_buff *skb,
					  unsigned int idx, unsigned int skip,
					  unsigned int num)
{
	unsigned int i, j;

	i = j = min_t(int, f->next[idx], num - 1);
	do {
		if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {
			if (i != j)
				f->next[idx] = i;
			return i;
		}
		if (++i == num)
			i = 0;
	} while (i != j);

	return idx;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
19,20
21,22
21,23
23,24
25,26
25,27
27,28
29,30
29,31
29,32
29,33
30,31
31,32
31,33
31,34
33,34
35,36
37,38
38,39
38,40
39,40
39,41
40,41
40,42
41,42
41,43
42,43
42,44
43,44
45,46
47,48
47,49
47,50
48,49
50,51
50,52
51,52
53,54
53,55
54,55
54,56
55,56
58,59
60,61
62,63
62,64
63,64
63,65
64,65
64,66
65,66
67,68
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
76,77
78,79
80,81
81,82
83,84
83,85
84,85
84,86
85,86
86,87
88,89
90,91
91,92
91,93
92,93
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,7,9,10,13,15,16,18,20,22,24,26,28,32,34,36,44,46,49,52,56,57,59,61,66,68,74,75,77,79,82,87,89,93,94,97,99,102
-----computeFrom-----
41,42
41,43
42,43
42,44
64,65
64,66
70,71
70,72
84,85
84,86
91,92
91,93
95,96
95,97
-----guardedBy-----
56,74
59,82
66,79
87,93
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;ProblemStatement;DoStatement;CompoundStatement;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static unsigned int fanout_demux_rollover(struct packet_fanout *f,					  struct sk_buff *skb,					  unsigned int idx, unsigned int skip,					  unsigned int num){	unsigned int i, j;	i = j = min_t(int, f->next[idx], num - 1);	do {		if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {			if (i != j)				f->next[idx] = i;			return i;		}		if (++i == num)			i = 0;	} while (i != j);	return idx;}
static unsigned int
fanout_demux_rollover(struct packet_fanout *f,					  struct sk_buff *skb,					  unsigned int idx, unsigned int skip,					  unsigned int num)
fanout_demux_rollover
struct packet_fanout *f
struct packet_fanout
packet_fanout
*f
*
f
struct sk_buff *skb
struct sk_buff
sk_buff
*skb
*
skb
unsigned int idx
unsigned int
idx
idx
unsigned int skip
unsigned int
skip
skip
unsigned int num
unsigned int
num
num
{	unsigned int i, j;	i = j = min_t(int, f->next[idx], num - 1);	do {		if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {			if (i != j)				f->next[idx] = i;			return i;		}		if (++i == num)			i = 0;	} while (i != j);	return idx;}
unsigned int i, j;
unsigned int i, j;
unsigned int
i
i
j
j
i = j = min_t(int, f->next[idx], num - 1);
do {		if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {			if (i != j)				f->next[idx] = i;			return i;		}		if (++i == num)			i = 0;	} while (i != j);
{		if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {			if (i != j)				f->next[idx] = i;			return i;		}		if (++i == num)			i = 0;	}
if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)) {			if (i != j)				f->next[idx] = i;			return i;		}
i != skip && packet_rcv_has_room(pkt_sk(f->arr[i]), skb)
i != skip
i
i
skip
skip
packet_rcv_has_room(pkt_sk(f->arr[i]), skb)
packet_rcv_has_room
packet_rcv_has_room
pkt_sk(f->arr[i])
pkt_sk
pkt_sk
f->arr[i]
f->arr
f
f
arr
i
i
skb
skb
{			if (i != j)				f->next[idx] = i;			return i;		}
if (i != j)				f->next[idx] = i;
i != j
i
i
j
j
f->next[idx] = i;
f->next[idx] = i
f->next[idx]
f->next
f
f
next
idx
idx
i
i
return i;
i
i
if (++i == num)			i = 0;
++i == num
++i
i
i
num
num
i = 0;
i = 0
i
i
0
i != j
i
i
j
j
return idx;
idx
idx
-----joern-----
(56,15,0)
(29,17,0)
(4,9,0)
(58,49,0)
(27,54,0)
(11,58,0)
(29,10,0)
(8,10,0)
(61,7,0)
(5,29,0)
(61,14,0)
(48,7,0)
(49,50,0)
(61,28,0)
(45,16,0)
(38,17,0)
(31,17,0)
(2,7,0)
(57,56,0)
(9,4,0)
(54,10,0)
(19,59,0)
(38,14,0)
(21,26,0)
(42,1,0)
(42,22,0)
(37,55,0)
(16,55,0)
(19,38,0)
(47,34,0)
(29,14,0)
(32,17,0)
(7,50,0)
(6,34,0)
(20,26,0)
(14,10,0)
(12,34,0)
(42,46,0)
(38,19,0)
(30,16,0)
(25,12,0)
(24,34,0)
(10,55,0)
(18,14,0)
(33,4,0)
(12,1,0)
(4,64,0)
(55,58,0)
(13,49,0)
(56,14,0)
(16,59,0)
(14,34,0)
(44,12,0)
(43,54,0)
(10,14,0)
(36,38,0)
(22,14,0)
(28,4,0)
(49,58,0)
(58,1,0)
(46,50,0)
(55,16,0)
(53,18,0)
(3,29,0)
(35,46,0)
(52,61,0)
(4,28,0)
(55,10,0)
(18,17,0)
(22,17,0)
(7,61,0)
(40,46,0)
(56,17,0)
(62,49,0)
(18,39,0)
(46,42,0)
(60,42,0)
(61,17,0)
(44,56,0)
(54,17,0)
(9,18,0)
(18,9,0)
(63,14,0)
(51,22,0)
(54,14,0)
(0,19,0)
(23,15,0)
(28,61,0)
(58,55,0)
(41,18,0)
(61,7,1)
(58,1,1)
(49,13,1)
(29,3,1)
(56,14,1)
(33,28,1)
(27,43,1)
(29,17,1)
(22,14,1)
(35,40,1)
(54,17,1)
(56,17,1)
(42,60,1)
(17,31,1)
(25,29,1)
(18,39,1)
(41,29,1)
(55,58,1)
(7,50,1)
(58,49,1)
(3,5,1)
(51,42,1)
(4,33,1)
(7,48,1)
(31,32,1)
(46,35,1)
(52,7,1)
(10,55,1)
(18,14,1)
(57,22,1)
(38,17,1)
(29,14,1)
(60,46,1)
(38,14,1)
(19,59,1)
(54,14,1)
(12,1,1)
(12,25,1)
(29,10,1)
(16,45,1)
(45,30,1)
(5,19,1)
(49,50,1)
(54,10,1)
(0,38,1)
(41,14,1)
(61,17,1)
(46,50,1)
(4,64,1)
(42,46,1)
(4,28,1)
(11,49,1)
(16,59,1)
(53,41,1)
(14,10,1)
(19,38,1)
(57,54,1)
(42,1,1)
(61,52,1)
(5,17,1)
(30,58,1)
(55,16,1)
(62,37,1)
(40,54,1)
(37,8,1)
(32,19,1)
(22,51,1)
(19,0,1)
(56,57,1)
(36,9,1)
(61,14,1)
(38,36,1)
(28,61,1)
(18,53,1)
(58,11,1)
(8,63,1)
(43,9,1)
(18,17,1)
(9,4,1)
(22,17,1)
(2,18,1)
(9,18,1)
(13,62,1)
(48,2,1)
(44,12,1)
(44,56,1)
(54,27,1)
(54,14,2)
(46,54,2)
(54,10,2)
(56,14,2)
(0,9,2)
(2,18,2)
(19,9,2)
(42,46,2)
(29,9,2)
(25,29,2)
(38,17,2)
(16,59,2)
(18,29,2)
(4,18,2)
(9,29,2)
(44,56,2)
(29,17,2)
(7,18,2)
(17,19,2)
(22,17,2)
(46,50,2)
(41,29,2)
(18,39,2)
(38,14,2)
(42,54,2)
(35,54,2)
(7,50,2)
(14,10,2)
(18,17,2)
(10,55,2)
(61,14,2)
(5,9,2)
(48,18,2)
(61,18,2)
(40,54,2)
(28,18,2)
(61,7,2)
(31,19,2)
(9,18,2)
(49,50,2)
(32,19,2)
(9,4,2)
(38,9,2)
(22,14,2)
(29,14,2)
(57,9,2)
(44,12,2)
(55,58,2)
(12,1,2)
(27,9,2)
(53,29,2)
(29,10,2)
(18,14,2)
(55,16,2)
(56,17,2)
(19,59,2)
(52,18,2)
(12,29,2)
(3,9,2)
(28,61,2)
(4,64,2)
(4,28,2)
(51,54,2)
(22,54,2)
(36,9,2)
(61,17,2)
(60,54,2)
(19,38,2)
(42,1,2)
(43,9,2)
(56,9,2)
(33,18,2)
(54,9,2)
(54,17,2)
(58,1,2)
(58,49,2)
-----------------------------------
(0,num)
(1,unsigned int idx)
(2,f)
(3,j)
(4,packet_rcv_has_room(pkt_sk(f->arr[i])
(5,i)
(6,i)
(7,f->arr)
(8,j)
(9,i != skip && packet_rcv_has_room(pkt_sk(f->arr[i])
(10,j = min_t(int, f->next[idx], num - 1)
(11,idx)
(12,return idx;)
(13,next)
(14,i = j = min_t(int, f->next[idx], num - 1)
(15,)
(16,num - 1)
(17,i = 0)
(18,i != skip)
(19,++i == num)
(20,if (i != skip && packet_rcv_has_room(pkt_sk(f->arr[i])
(21,if (++i == num)
(22,f->next[idx] = i)
(23,if (i != j)
(24,j)
(25,idx)
(26,)
(27,j)
(28,pkt_sk(f->arr[i])
(29,i != j)
(30,num)
(31,0)
(32,i)
(33,skb)
(34,)
(35,next)
(36,i)
(37,int)
(38,++i)
(39,unsigned int skip)
(40,f)
(41,i)
(42,f->next[idx])
(43,i)
(44,RET)
(45,1)
(46,f->next)
(47,do)
(48,arr)
(49,f->next)
(50,struct packet_fanout *f)
(51,i)
(52,i)
(53,skip)
(54,i != j)
(55,min_t(int, f->next[idx], num - 1)
(56,return i;)
(57,i)
(58,f->next[idx])
(59,unsigned int num)
(60,idx)
(61,f->arr[i])
(62,f)
(63,i)
(64,struct sk_buff *skb)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^