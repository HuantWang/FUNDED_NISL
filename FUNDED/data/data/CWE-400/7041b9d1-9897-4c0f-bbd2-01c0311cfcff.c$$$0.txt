-----label-----
1
-----code-----
int tcp_accept(int fd)
{
	/* Accept incoming connection. */
	int incoming = accept(fd, 0, 0);

	/* Evaluate connection. */
	if (incoming < 0) {
		int en = errno;
		if (en != EINTR && en != EAGAIN) {
			return KNOT_EBUSY;
		}
		return KNOT_ERROR;
	} else {
		dbg_net("tcp: accepted connection fd=%d\n", incoming);
		/* Set recv() timeout. */
#ifdef SO_RCVTIMEO
		struct timeval tv;
		rcu_read_lock();
		tv.tv_sec = conf()->max_conn_idle;
		rcu_read_unlock();
		tv.tv_usec = 0;
		if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)) < 0) {
			log_warning("TCP, failed to set up watchdog timer"
			            ", fd %d", incoming);
		}
#endif
	}

	return incoming;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
10,11
11,12
11,13
13,14
13,15
15,16
16,17
16,18
16,19
16,20
17,18
19,20
23,24
23,25
23,26
24,25
24,26
25,26
28,29
28,30
28,31
29,30
30,31
30,32
32,33
32,34
34,35
35,36
37,38
37,39
38,39
38,40
39,40
39,41
40,41
42,43
44,45
44,46
45,46
47,48
49,50
50,51
51,52
53,54
54,55
56,57
57,58
58,59
58,60
58,61
59,60
62,63
64,65
65,66
-----nextToken-----
2,4,6,8,12,14,18,20,21,22,26,27,31,33,36,41,43,46,48,52,55,60,61,63,66
-----computeFrom-----
24,25
24,26
38,39
38,40
39,40
39,41
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
26,63
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int tcp_accept(int fd){	/* Accept incoming connection. */	int incoming = accept(fd, 0, 0);	/* Evaluate connection. */	if (incoming < 0) {		int en = errno;		if (en != EINTR && en != EAGAIN) {			return KNOT_EBUSY;		}		return KNOT_ERROR;	} else {		dbg_net("tcp: accepted connection fd=%d\n", incoming);		/* Set recv() timeout. */#ifdef SO_RCVTIMEO		struct timeval tv;		rcu_read_lock();		tv.tv_sec = conf()->max_conn_idle;		rcu_read_unlock();		tv.tv_usec = 0;		if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)) < 0) {			log_warning("TCP, failed to set up watchdog timer"			            ", fd %d", incoming);		}#endif	}	return incoming;}
int
tcp_accept(int fd)
tcp_accept
int fd
int
fd
fd
{	/* Accept incoming connection. */	int incoming = accept(fd, 0, 0);	/* Evaluate connection. */	if (incoming < 0) {		int en = errno;		if (en != EINTR && en != EAGAIN) {			return KNOT_EBUSY;		}		return KNOT_ERROR;	} else {		dbg_net("tcp: accepted connection fd=%d\n", incoming);		/* Set recv() timeout. */#ifdef SO_RCVTIMEO		struct timeval tv;		rcu_read_lock();		tv.tv_sec = conf()->max_conn_idle;		rcu_read_unlock();		tv.tv_usec = 0;		if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)) < 0) {			log_warning("TCP, failed to set up watchdog timer"			            ", fd %d", incoming);		}#endif	}	return incoming;}
int incoming = accept(fd, 0, 0);
int incoming = accept(fd, 0, 0);
int
incoming = accept(fd, 0, 0)
incoming
= accept(fd, 0, 0)
accept(fd, 0, 0)
accept
accept
fd
fd
0
0
if (incoming < 0) {		int en = errno;		if (en != EINTR && en != EAGAIN) {			return KNOT_EBUSY;		}		return KNOT_ERROR;	} else {		dbg_net("tcp: accepted connection fd=%d\n", incoming);		/* Set recv() timeout. */#ifdef SO_RCVTIMEO		struct timeval tv;		rcu_read_lock();		tv.tv_sec = conf()->max_conn_idle;		rcu_read_unlock();		tv.tv_usec = 0;		if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)) < 0) {			log_warning("TCP, failed to set up watchdog timer"			            ", fd %d", incoming);		}#endif	}
incoming < 0
incoming
incoming
0
{		int en = errno;		if (en != EINTR && en != EAGAIN) {			return KNOT_EBUSY;		}		return KNOT_ERROR;	}
int en = errno;
int en = errno;
int
en = errno
en
= errno
errno
errno
if (en != EINTR && en != EAGAIN) {			return KNOT_EBUSY;		}
en != EINTR && en != EAGAIN
en != EINTR
en
en
EINTR
EINTR
en != EAGAIN
en
en
EAGAIN
EAGAIN
{			return KNOT_EBUSY;		}
return KNOT_EBUSY;
KNOT_EBUSY
KNOT_EBUSY
return KNOT_ERROR;
KNOT_ERROR
KNOT_ERROR
{		dbg_net("tcp: accepted connection fd=%d\n", incoming);		/* Set recv() timeout. */#ifdef SO_RCVTIMEO		struct timeval tv;		rcu_read_lock();		tv.tv_sec = conf()->max_conn_idle;		rcu_read_unlock();		tv.tv_usec = 0;		if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)) < 0) {			log_warning("TCP, failed to set up watchdog timer"			            ", fd %d", incoming);		}#endif	}
dbg_net("tcp: accepted connection fd=%d\n", incoming);
dbg_net("tcp: accepted connection fd=%d\n", incoming)
dbg_net
dbg_net
"tcp: accepted connection fd=%d\n"
incoming
incoming
return incoming;
incoming
incoming
-----joern-----
(42,36,0)
(23,0,0)
(12,43,0)
(35,64,0)
(14,32,0)
(40,18,0)
(55,51,0)
(31,64,0)
(58,24,0)
(45,52,0)
(17,12,0)
(43,9,0)
(20,0,0)
(39,46,0)
(15,28,0)
(19,9,0)
(2,12,0)
(48,32,0)
(18,52,0)
(43,12,0)
(13,32,0)
(21,18,0)
(9,47,0)
(57,55,0)
(37,64,0)
(59,46,0)
(51,32,0)
(31,52,0)
(62,14,0)
(23,31,0)
(9,43,0)
(26,18,0)
(34,42,0)
(66,18,0)
(56,21,0)
(46,32,0)
(3,31,0)
(28,18,0)
(52,64,0)
(16,42,0)
(63,24,0)
(27,66,0)
(51,10,0)
(65,1,0)
(8,47,0)
(42,52,0)
(47,1,0)
(61,47,0)
(23,4,0)
(10,41,0)
(7,14,0)
(14,52,0)
(12,47,0)
(29,32,0)
(53,1,0)
(6,32,0)
(30,4,0)
(5,55,0)
(33,10,0)
(0,38,0)
(54,9,0)
(18,66,0)
(24,52,0)
(41,10,0)
(18,21,0)
(49,39,0)
(18,28,0)
(50,18,0)
(22,39,0)
(10,51,0)
(4,1,0)
(10,41,1)
(47,8,1)
(18,28,1)
(23,0,1)
(30,43,1)
(9,19,1)
(15,66,1)
(44,60,1)
(31,3,1)
(23,4,1)
(28,15,1)
(49,22,1)
(31,52,1)
(42,52,1)
(22,48,1)
(46,59,1)
(8,61,1)
(2,9,1)
(19,54,1)
(24,58,1)
(61,24,1)
(54,47,1)
(12,17,1)
(9,47,1)
(56,18,1)
(23,31,1)
(63,52,1)
(34,21,1)
(18,52,1)
(3,21,1)
(21,56,1)
(33,41,1)
(21,18,1)
(43,9,1)
(12,47,1)
(18,66,1)
(62,24,1)
(10,33,1)
(39,49,1)
(14,7,1)
(50,46,1)
(20,43,1)
(25,44,1)
(5,13,1)
(17,2,1)
(16,34,1)
(60,45,1)
(27,40,1)
(3,42,1)
(24,52,1)
(59,39,1)
(48,51,1)
(57,5,1)
(66,27,1)
(40,26,1)
(13,14,1)
(58,63,1)
(55,57,1)
(26,50,1)
(43,12,1)
(42,16,1)
(51,10,1)
(14,52,1)
(41,55,1)
(7,62,1)
(0,20,1)
(4,30,1)
(47,24,2)
(9,24,2)
(39,24,2)
(16,21,2)
(43,9,2)
(23,4,2)
(22,24,2)
(8,24,2)
(23,0,2)
(10,41,2)
(5,24,2)
(62,24,2)
(43,12,2)
(2,9,2)
(20,43,2)
(15,24,2)
(14,24,2)
(21,24,2)
(12,9,2)
(59,24,2)
(43,24,2)
(51,10,2)
(3,24,2)
(18,28,2)
(24,52,2)
(48,24,2)
(31,52,2)
(27,24,2)
(55,24,2)
(18,24,2)
(9,47,2)
(66,24,2)
(30,43,2)
(26,24,2)
(13,24,2)
(57,24,2)
(14,52,2)
(18,66,2)
(19,24,2)
(56,24,2)
(46,24,2)
(50,24,2)
(0,43,2)
(49,24,2)
(7,24,2)
(51,24,2)
(40,24,2)
(28,24,2)
(33,24,2)
(18,52,2)
(17,9,2)
(42,52,2)
(23,31,2)
(12,47,2)
(61,24,2)
(10,24,2)
(42,21,2)
(4,43,2)
(21,18,2)
(31,24,2)
(34,21,2)
(54,24,2)
(41,24,2)
-----------------------------------
(0,return KNOT_EBUSY;)
(1,)
(2,en)
(3,incoming)
(4,return KNOT_ERROR;)
(5,tv)
(6,if (setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)
(7,incoming)
(8,errno)
(9,en != EINTR)
(10,conf()
(11,int fd)
(12,en != EAGAIN)
(13,rcu_read_lock()
(14,dbg_net("tcp: accepted connection fd=%d\\n", incoming)
(15,tv)
(16,incoming)
(17,EAGAIN)
(18,setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)
(19,EINTR)
(20,KNOT_EBUSY)
(21,setsockopt(incoming, SOL_SOCKET, SO_RCVTIMEO, &tv, sizeof(tv)
(22,tv)
(23,RET)
(24,incoming < 0)
(25,0)
(26,SOL_SOCKET)
(27,tv)
(28,sizeof(tv)
(29,tv)
(30,KNOT_ERROR)
(31,return incoming;)
(32,)
(33,max_conn_idle)
(34,"TCP, failed to set up watchdog timer"\n\\n\\t\\t\\t            ", fd %d")
(35,incoming)
(36,)
(37,if (incoming < 0)
(38,)
(39,tv.tv_usec)
(40,SO_RCVTIMEO)
(41,conf()
(42,log_warning("TCP, failed to set up watchdog timer"\n\\n\\t\\t\\t            ", fd %d", incoming)
(43,en != EINTR && en != EAGAIN)
(44,0)
(45,incoming)
(46,tv.tv_usec = 0)
(47,en = errno)
(48,rcu_read_unlock()
(49,tv_usec)
(50,incoming)
(51,tv.tv_sec = conf()
(52,incoming = accept(fd, 0, 0)
(53,en)
(54,en)
(55,tv.tv_sec)
(56,0)
(57,tv_sec)
(58,0)
(59,0)
(60,fd)
(61,en)
(62,"tcp: accepted connection fd=%d\\n")
(63,incoming)
(64,)
(65,if (en != EINTR && en != EAGAIN)
(66,&tv)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^