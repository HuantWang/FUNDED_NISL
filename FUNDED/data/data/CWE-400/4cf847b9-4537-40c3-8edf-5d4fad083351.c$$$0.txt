-----label-----
0
-----code-----
static void goodB2G()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)realloc(data, 100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
61,62
62,63
62,64
63,64
65,66
65,67
66,67
69,70
70,71
70,72
71,72
73,74
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,58,59,60,64,67,68,72,74
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* FIX: Deallocate memory */    free(data);}
static void
goodB2G()
goodB2G
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* FIX: Deallocate memory */    free(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(2,14,0)
(20,7,0)
(29,8,0)
(15,8,0)
(4,8,0)
(13,28,0)
(11,5,0)
(5,10,0)
(4,28,0)
(8,4,0)
(14,7,0)
(28,17,0)
(14,2,0)
(30,22,0)
(8,29,0)
(0,26,0)
(23,5,0)
(22,16,0)
(7,17,0)
(12,29,0)
(10,17,0)
(3,7,0)
(25,28,0)
(26,7,0)
(5,7,0)
(18,17,0)
(16,27,0)
(19,20,0)
(4,14,0)
(7,14,0)
(26,17,0)
(16,22,0)
(21,17,0)
(6,20,0)
(10,5,0)
(24,17,0)
(14,4,0)
(9,4,0)
(9,3,1)
(5,11,1)
(1,26,1)
(3,28,1)
(23,24,1)
(12,15,1)
(4,28,1)
(28,13,1)
(24,20,1)
(24,16,1)
(13,25,1)
(11,23,1)
(8,29,1)
(19,6,1)
(14,2,1)
(16,22,1)
(4,8,1)
(15,9,1)
(20,7,1)
(6,7,1)
(10,5,1)
(20,19,1)
(7,14,1)
(0,10,1)
(14,4,1)
(26,7,1)
(30,20,1)
(5,7,1)
(26,0,1)
(29,12,1)
(22,30,1)
(14,2,2)
(20,7,2)
(7,14,2)
(26,7,2)
(8,29,2)
(4,28,2)
(16,20,2)
(4,8,2)
(10,5,2)
(14,4,2)
(5,7,2)
(30,20,2)
(16,22,2)
(22,20,2)
-----------------------------------
(0,data)
(1,RET)
(2,int64_t *)
(3,data)
(4,realloc(data, 100*sizeof(int64_t)
(5,data[0])
(6,data)
(7,data = (int64_t *)
(8,100*sizeof(int64_t)
(9,data)
(10,printLongLongLine(data[0])
(11,0)
(12,int64_t)
(13,NULL)
(14,(int64_t *)
(15,100)
(16,exit(-1)
(17,)
(18,data)
(19,NULL)
(20,data == NULL)
(21,if (data == NULL)
(22,-1)
(23,data)
(24,L)
(25,data)
(26,free(data)
(27,)
(28,data = NULL)
(29,sizeof(int64_t)
(30,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^