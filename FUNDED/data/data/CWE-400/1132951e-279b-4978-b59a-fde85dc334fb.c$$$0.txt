-----label-----
0
-----code-----
static void goodG2B()
{
    struct _twoIntsStruct * data;
    data = NULL;
    data = goodG2BSource(data);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
26,27
-----nextToken-----
2,4,9,11,12,16,18,22,25,27,28
-----computeFrom-----
14,15
14,16
20,21
20,22
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;NullStatement;
-----ast_node-----
static void goodG2B(){    struct _twoIntsStruct * data;    data = NULL;    data = goodG2BSource(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    struct _twoIntsStruct * data;    data = NULL;    data = goodG2BSource(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = goodG2BSource(data);
data = goodG2BSource(data)
data
data
goodG2BSource(data)
goodG2BSource
goodG2BSource
data
data
;
-----joern-----
(7,3,0)
(4,8,0)
(2,3,0)
(0,9,0)
(8,2,0)
(8,9,0)
(6,2,0)
(5,9,0)
(9,3,0)
(2,8,0)
(2,8,1)
(9,0,1)
(1,2,1)
(4,6,1)
(8,4,1)
(8,9,1)
(6,9,1)
(0,5,1)
(2,8,2)
(8,9,2)
-----------------------------------
(0,NULL)
(1,RET)
(2,data = goodG2BSource(data)
(3,)
(4,data)
(5,data)
(6,data)
(7,data)
(8,goodG2BSource(data)
(9,data = NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^