-----label-----
0
-----code-----
void socket_queue(Socket *socket, SocketBuffer *buffer) {
        if (_c_unlikely_(!socket->lines_done)) {
                assert(socket->in.line_cursor == socket->in.data_start);
                socket->lines_done = true;
                socket->in.pending_message = NULL;
        }

        assert(buffer->message);
        assert(!c_list_is_linked(&buffer->link));

        if (_c_unlikely_(socket->hup_out || socket->shutdown))
                socket_buffer_free(buffer);
        else
                c_list_link_tail(&socket->out.queue, &buffer->link);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
18,20
19,20
19,21
20,21
22,23
23,24
23,25
24,25
27,28
27,29
27,30
28,29
29,30
29,31
30,31
32,33
32,34
33,34
33,35
34,35
34,36
35,36
39,40
39,41
40,41
40,42
41,42
45,46
46,47
46,48
47,48
47,49
48,49
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
60,61
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
71,72
71,73
72,73
74,75
75,76
75,77
76,77
78,79
79,80
79,81
80,81
83,84
83,85
83,86
84,85
84,86
85,86
87,88
87,89
88,89
88,90
89,90
92,93
92,94
93,94
96,97
97,98
97,99
98,99
100,101
102,103
103,104
103,105
103,106
104,105
106,107
107,108
107,109
108,109
108,110
109,110
113,114
114,115
114,116
115,116
-----nextToken-----
2,4,7,9,10,13,15,16,21,25,26,31,36,37,38,42,43,44,49,50,51,57,58,59,61,65,68,69,73,77,81,82,86,90,91,94,95,99,101,105,110,111,112,116,117
-----computeFrom-----
32,33
32,34
46,47
46,48
53,54
53,55
87,88
87,89
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
void socket_queue(Socket *socket, SocketBuffer *buffer) {        if (_c_unlikely_(!socket->lines_done)) {                assert(socket->in.line_cursor == socket->in.data_start);                socket->lines_done = true;                socket->in.pending_message = NULL;        }        assert(buffer->message);        assert(!c_list_is_linked(&buffer->link));        if (_c_unlikely_(socket->hup_out || socket->shutdown))                socket_buffer_free(buffer);        else                c_list_link_tail(&socket->out.queue, &buffer->link);}
void
socket_queue(Socket *socket, SocketBuffer *buffer)
socket_queue
Socket *socket
Socket
Socket
*socket
*
socket
SocketBuffer *buffer
SocketBuffer
SocketBuffer
*buffer
*
buffer
{        if (_c_unlikely_(!socket->lines_done)) {                assert(socket->in.line_cursor == socket->in.data_start);                socket->lines_done = true;                socket->in.pending_message = NULL;        }        assert(buffer->message);        assert(!c_list_is_linked(&buffer->link));        if (_c_unlikely_(socket->hup_out || socket->shutdown))                socket_buffer_free(buffer);        else                c_list_link_tail(&socket->out.queue, &buffer->link);}
if (_c_unlikely_(!socket->lines_done)) {                assert(socket->in.line_cursor == socket->in.data_start);                socket->lines_done = true;                socket->in.pending_message = NULL;        }
_c_unlikely_(!socket->lines_done)
_c_unlikely_
_c_unlikely_
!socket->lines_done
socket->lines_done
socket
socket
lines_done
{                assert(socket->in.line_cursor == socket->in.data_start);                socket->lines_done = true;                socket->in.pending_message = NULL;        }
assert(socket->in.line_cursor == socket->in.data_start);
assert(socket->in.line_cursor == socket->in.data_start)
assert
assert
socket->in.line_cursor == socket->in.data_start
socket->in.line_cursor
socket->in
socket
socket
in
line_cursor
socket->in.data_start
socket->in
socket
socket
in
data_start
socket->lines_done = true;
socket->lines_done = true
socket->lines_done
socket
socket
lines_done
true
socket->in.pending_message = NULL;
socket->in.pending_message = NULL
socket->in.pending_message
socket->in
socket
socket
in
pending_message
NULL
NULL
assert(buffer->message);
assert(buffer->message)
assert
assert
buffer->message
buffer
buffer
message
assert(!c_list_is_linked(&buffer->link));
assert(!c_list_is_linked(&buffer->link))
assert
assert
!c_list_is_linked(&buffer->link)
c_list_is_linked(&buffer->link)
c_list_is_linked
c_list_is_linked
&buffer->link
buffer->link
buffer
buffer
link
if (_c_unlikely_(socket->hup_out || socket->shutdown))                socket_buffer_free(buffer);        else                c_list_link_tail(&socket->out.queue, &buffer->link);
_c_unlikely_(socket->hup_out || socket->shutdown)
_c_unlikely_
_c_unlikely_
socket->hup_out || socket->shutdown
socket->hup_out
socket
socket
hup_out
socket->shutdown
socket
socket
shutdown
socket_buffer_free(buffer);
socket_buffer_free(buffer)
socket_buffer_free
socket_buffer_free
buffer
buffer
c_list_link_tail(&socket->out.queue, &buffer->link);
c_list_link_tail(&socket->out.queue, &buffer->link)
c_list_link_tail
c_list_link_tail
&socket->out.queue
socket->out.queue
socket->out
socket
socket
out
queue
&buffer->link
buffer->link
buffer
buffer
link
-----joern-----
(25,45,0)
(9,14,0)
(56,10,0)
(59,67,0)
(30,22,0)
(45,25,0)
(26,60,0)
(13,3,0)
(1,34,0)
(46,14,0)
(29,18,0)
(5,19,0)
(24,47,0)
(8,15,0)
(63,42,0)
(43,11,0)
(14,10,0)
(41,52,0)
(42,44,0)
(42,60,0)
(17,48,0)
(60,42,0)
(7,15,0)
(44,61,0)
(16,29,0)
(18,57,0)
(56,25,0)
(22,26,0)
(24,10,0)
(25,56,0)
(40,3,0)
(11,61,0)
(60,28,0)
(14,46,0)
(64,24,0)
(32,0,0)
(22,61,0)
(57,18,0)
(23,31,0)
(4,29,0)
(31,52,0)
(11,18,0)
(29,61,0)
(27,36,0)
(58,27,0)
(53,32,0)
(27,32,0)
(12,36,0)
(21,65,0)
(49,56,0)
(38,26,0)
(34,0,0)
(44,42,0)
(20,22,0)
(62,33,0)
(48,31,0)
(52,31,0)
(18,29,0)
(33,62,0)
(39,14,0)
(47,41,0)
(65,5,0)
(66,24,0)
(50,44,0)
(19,5,0)
(65,61,0)
(18,11,0)
(46,3,0)
(2,65,0)
(35,36,0)
(48,61,0)
(47,24,0)
(67,10,0)
(54,44,0)
(36,61,0)
(36,27,0)
(45,62,0)
(28,60,0)
(5,65,0)
(60,26,0)
(15,61,0)
(62,45,0)
(28,0,0)
(51,56,0)
(37,48,0)
(31,48,0)
(15,34,0)
(41,47,0)
(33,3,0)
(26,22,0)
(52,41,0)
(6,11,0)
(23,48,1)
(52,31,1)
(56,51,1)
(27,36,1)
(32,53,1)
(46,14,1)
(36,35,1)
(54,26,1)
(6,43,1)
(33,62,1)
(14,39,1)
(7,28,1)
(67,59,1)
(24,10,1)
(55,67,1)
(14,10,1)
(65,21,1)
(26,38,1)
(30,20,1)
(22,61,1)
(57,18,1)
(9,19,1)
(60,42,1)
(17,37,1)
(9,32,1)
(5,65,1)
(59,57,1)
(53,27,1)
(24,66,1)
(4,16,1)
(45,25,1)
(29,4,1)
(11,61,1)
(21,2,1)
(62,45,1)
(55,41,1)
(56,10,1)
(11,6,1)
(16,11,1)
(48,17,1)
(44,61,1)
(19,5,1)
(44,50,1)
(48,61,1)
(67,10,1)
(25,56,1)
(49,46,1)
(58,36,1)
(31,48,1)
(42,63,1)
(64,52,1)
(42,44,1)
(37,57,1)
(66,64,1)
(65,61,1)
(34,1,1)
(18,11,1)
(29,61,1)
(47,24,1)
(31,23,1)
(20,19,1)
(15,8,1)
(12,34,1)
(38,22,1)
(27,58,1)
(60,26,1)
(39,9,1)
(63,44,1)
(8,7,1)
(18,29,1)
(50,54,1)
(41,47,1)
(26,22,1)
(36,61,1)
(51,49,1)
(1,15,1)
(22,30,1)
(35,12,1)
(43,33,1)
(41,52,1)
(28,60,1)
(15,61,1)
(48,61,2)
(41,47,2)
(22,19,2)
(28,60,2)
(28,19,2)
(16,11,2)
(12,19,2)
(59,57,2)
(24,10,2)
(44,19,2)
(64,57,2)
(56,10,2)
(62,45,2)
(50,19,2)
(20,19,2)
(26,22,2)
(38,19,2)
(32,19,2)
(47,57,2)
(44,61,2)
(8,19,2)
(60,42,2)
(18,29,2)
(19,5,2)
(34,19,2)
(7,19,2)
(54,19,2)
(23,57,2)
(63,19,2)
(46,14,2)
(60,19,2)
(31,48,2)
(15,61,2)
(37,57,2)
(27,19,2)
(36,19,2)
(67,10,2)
(67,57,2)
(26,19,2)
(47,24,2)
(29,11,2)
(42,19,2)
(4,11,2)
(33,62,2)
(41,57,2)
(45,25,2)
(18,11,2)
(11,61,2)
(35,19,2)
(60,26,2)
(52,57,2)
(24,57,2)
(25,56,2)
(29,61,2)
(57,18,2)
(1,19,2)
(5,65,2)
(42,44,2)
(65,61,2)
(48,57,2)
(41,52,2)
(36,61,2)
(52,31,2)
(53,19,2)
(30,19,2)
(27,36,2)
(66,57,2)
(17,57,2)
(14,10,2)
(22,61,2)
(31,57,2)
(58,19,2)
(15,19,2)
-----------------------------------
(0,)
(1,true)
(2,socket)
(3,)
(4,shutdown)
(5,!socket->lines_done)
(6,hup_out)
(7,socket)
(8,lines_done)
(9,buffer)
(10,SocketBuffer *buffer)
(11,socket->hup_out)
(12,socket)
(13,if (_c_unlikely_(!socket->lines_done)
(14,buffer->message)
(15,socket->lines_done)
(16,socket)
(17,out)
(18,socket->hup_out || socket->shutdown)
(19,_c_unlikely_(!socket->lines_done)
(20,socket)
(21,lines_done)
(22,socket->in)
(23,queue)
(24,buffer->link)
(25,&buffer->link)
(26,socket->in.line_cursor)
(27,socket->in.pending_message)
(28,assert(socket->in.line_cursor == socket->in.data_start)
(29,socket->shutdown)
(30,in)
(31,socket->out.queue)
(32,socket->in.pending_message = NULL)
(33,assert(!c_list_is_linked(&buffer->link)
(34,socket->lines_done = true)
(35,in)
(36,socket->in)
(37,socket)
(38,line_cursor)
(39,message)
(40,if (_c_unlikely_(socket->hup_out || socket->shutdown)
(41,c_list_link_tail(&socket->out.queue, &buffer->link)
(42,socket->in.data_start)
(43,socket)
(44,socket->in)
(45,c_list_is_linked(&buffer->link)
(46,assert(buffer->message)
(47,&buffer->link)
(48,socket->out)
(49,buffer)
(50,in)
(51,link)
(52,&socket->out.queue)
(53,NULL)
(54,socket)
(55,RET)
(56,buffer->link)
(57,_c_unlikely_(socket->hup_out || socket->shutdown)
(58,pending_message)
(59,buffer)
(60,socket->in.line_cursor == socket->in.data_start)
(61,Socket *socket)
(62,!c_list_is_linked(&buffer->link)
(63,data_start)
(64,buffer)
(65,socket->lines_done)
(66,link)
(67,socket_buffer_free(buffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^