-----label-----
0
-----code-----
static int driver_send_unicast(Peer *receiver, MatchFilter *filter, Message *message) {
        int r;

        /* for eavesdropping */
        r = bus_broadcast(receiver->bus, NULL, filter, message);
        if (r)
                return error_trace(r);

        r = connection_queue(&receiver->connection, NULL, 0, message);
        if (r)
                return error_fold(r);

        return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
23,26
23,27
23,28
23,29
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
33,34
33,35
33,36
33,37
33,38
34,35
36,37
36,38
37,38
40,41
42,43
44,45
46,47
46,48
47,48
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
59,60
59,61
59,62
59,63
59,64
60,61
62,63
63,64
63,65
64,65
67,68
70,71
72,73
72,74
73,74
75,76
76,77
76,78
77,78
79,80
81,82
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,26,28,32,35,38,39,41,43,45,48,52,54,58,61,65,66,68,69,71,74,78,80,82
-----computeFrom-----
30,31
30,32
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int driver_send_unicast(Peer *receiver, MatchFilter *filter, Message *message) {        int r;        /* for eavesdropping */        r = bus_broadcast(receiver->bus, NULL, filter, message);        if (r)                return error_trace(r);        r = connection_queue(&receiver->connection, NULL, 0, message);        if (r)                return error_fold(r);        return 0;}
static int
driver_send_unicast(Peer *receiver, MatchFilter *filter, Message *message)
driver_send_unicast
Peer *receiver
Peer
Peer
*receiver
*
receiver
MatchFilter *filter
MatchFilter
MatchFilter
*filter
*
filter
Message *message
Message
Message
*message
*
message
{        int r;        /* for eavesdropping */        r = bus_broadcast(receiver->bus, NULL, filter, message);        if (r)                return error_trace(r);        r = connection_queue(&receiver->connection, NULL, 0, message);        if (r)                return error_fold(r);        return 0;}
int r;
int r;
int
r
r
r = bus_broadcast(receiver->bus, NULL, filter, message);
r = bus_broadcast(receiver->bus, NULL, filter, message)
r
r
bus_broadcast(receiver->bus, NULL, filter, message)
bus_broadcast
bus_broadcast
receiver->bus
receiver
receiver
bus
NULL
NULL
filter
filter
message
message
if (r)                return error_trace(r);
r
r
return error_trace(r);
error_trace(r)
error_trace
error_trace
r
r
r = connection_queue(&receiver->connection, NULL, 0, message);
r = connection_queue(&receiver->connection, NULL, 0, message)
r
r
connection_queue(&receiver->connection, NULL, 0, message)
connection_queue
connection_queue
&receiver->connection
receiver->connection
receiver
receiver
connection
NULL
NULL
0
message
message
if (r)                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
return 0;
0
-----joern-----
(33,0,0)
(18,35,0)
(10,32,0)
(20,15,0)
(29,24,0)
(17,24,0)
(21,4,0)
(1,35,0)
(24,30,0)
(34,10,0)
(36,10,0)
(7,25,0)
(14,25,0)
(26,0,0)
(4,35,0)
(0,10,0)
(10,2,0)
(14,13,0)
(19,13,0)
(28,7,0)
(27,35,0)
(25,7,0)
(12,24,0)
(7,32,0)
(5,1,0)
(24,12,0)
(10,0,0)
(12,7,0)
(0,30,0)
(3,25,0)
(15,4,0)
(19,1,0)
(16,7,0)
(11,35,0)
(23,14,0)
(7,12,0)
(10,4,0)
(4,10,0)
(15,8,0)
(19,8,0)
(31,7,0)
(9,10,0)
(25,35,0)
(28,12,1)
(4,10,1)
(10,0,1)
(15,20,1)
(8,15,1)
(7,16,1)
(17,29,1)
(1,5,1)
(15,4,1)
(19,13,1)
(10,32,1)
(10,2,1)
(24,17,1)
(0,30,1)
(0,33,1)
(3,6,1)
(19,1,1)
(9,34,1)
(34,36,1)
(20,6,1)
(36,0,1)
(14,23,1)
(22,25,1)
(10,9,1)
(25,7,1)
(14,25,1)
(12,24,1)
(26,21,1)
(6,4,1)
(16,31,1)
(19,8,1)
(23,22,1)
(24,30,1)
(7,12,1)
(5,22,1)
(7,32,1)
(31,28,1)
(29,3,1)
(13,14,1)
(33,26,1)
(24,6,2)
(10,2,2)
(12,24,2)
(31,6,2)
(3,6,2)
(10,0,2)
(0,30,2)
(19,1,2)
(19,8,2)
(10,32,2)
(12,6,2)
(29,6,2)
(5,22,2)
(20,6,2)
(28,6,2)
(23,22,2)
(8,6,2)
(4,10,2)
(22,6,2)
(1,22,2)
(25,7,2)
(24,30,2)
(19,13,2)
(14,25,2)
(7,6,2)
(17,6,2)
(13,22,2)
(25,6,2)
(15,4,2)
(7,12,2)
(16,6,2)
(14,22,2)
(7,32,2)
(15,6,2)
-----------------------------------
(0,receiver->bus)
(1,return 0;)
(2,MatchFilter *filter)
(3,r)
(4,r = bus_broadcast(receiver->bus, NULL, filter, message)
(5,0)
(6,r)
(7,connection_queue(&receiver->connection, NULL, 0, message)
(8,return error_trace(r)
(9,message)
(10,bus_broadcast(receiver->bus, NULL, filter, message)
(11,if (r)
(12,&receiver->connection)
(13,return error_fold(r)
(14,error_fold(r)
(15,error_trace(r)
(16,message)
(17,connection)
(18,if (r)
(19,RET)
(20,r)
(21,r)
(22,r)
(23,r)
(24,receiver->connection)
(25,r = connection_queue(&receiver->connection, NULL, 0, message)
(26,receiver)
(27,r)
(28,NULL)
(29,receiver)
(30,Peer *receiver)
(31,0)
(32,Message *message)
(33,bus)
(34,filter)
(35,)
(36,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^