-----label-----
0
-----code-----
static void good2()
{
    if(globalReturnsTrue())
    {
        {
            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
            if (data == NULL) {exit(-1);}
            struct _twoIntsStruct * tmpData;
            /* Initialize and make use of data */
            data[0].intOne = 0;
            data[0].intTwo = 0;
            printStructLine((twoIntsStruct *)&data[0]);
            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
            /* FIX: Ensure realloc() was successful before assigning data to the memory block
            * allocated with realloc() */
            if (tmpData != NULL)
            {
                data = tmpData;
                /* Reinitialize and make use of data */
                data[0].intOne = 1;
                data[0].intTwo = 1;
                printStructLine((twoIntsStruct *)&data[0]);
            }
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
8,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
53,55
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
67,69
68,69
68,70
69,70
74,75
75,76
75,77
76,77
78,79
78,80
79,80
79,81
80,81
82,83
84,85
85,86
85,87
86,87
89,90
90,91
90,92
91,92
93,94
93,95
94,95
94,96
95,96
97,98
99,100
99,101
99,102
100,101
102,103
104,105
104,106
105,106
107,108
108,109
108,110
109,110
112,113
112,114
113,114
113,115
114,115
116,117
118,119
118,120
118,121
118,122
119,120
120,121
120,122
121,122
123,124
125,126
126,127
126,128
127,128
127,129
128,129
128,130
129,130
134,135
135,136
135,137
136,137
136,138
137,138
137,139
138,139
143,144
144,145
144,146
145,146
147,148
147,149
148,149
148,150
149,150
151,152
153,154
154,155
154,156
155,156
158,159
159,160
159,161
160,161
162,163
-----nextToken-----
2,4,9,15,17,18,23,25,28,30,34,35,39,41,46,48,52,54,55,61,62,63,64,70,71,72,73,77,81,83,87,88,92,96,98,101,103,106,110,111,115,117,122,124,130,131,132,133,139,140,141,142,146,150,152,156,157,161,163
-----computeFrom-----
29,30
29,31
37,38
37,39
57,58
57,59
66,67
66,68
90,91
90,92
104,105
104,106
113,114
113,115
120,121
120,122
126,127
126,128
135,136
135,137
-----guardedBy-----
115,124
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good2(){    if(globalReturnsTrue())    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            struct _twoIntsStruct * tmpData;            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }            free(data);        }    }}
static void
good2()
good2
{    if(globalReturnsTrue())    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            struct _twoIntsStruct * tmpData;            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }            free(data);        }    }}
if(globalReturnsTrue())    {        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            struct _twoIntsStruct * tmpData;            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }            free(data);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            struct _twoIntsStruct * tmpData;            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }            free(data);        }    }
{            struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));            if (data == NULL) {exit(-1);}            struct _twoIntsStruct * tmpData;            /* Initialize and make use of data */            data[0].intOne = 0;            data[0].intTwo = 0;            printStructLine((twoIntsStruct *)&data[0]);            tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }            free(data);        }
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
struct _twoIntsStruct
_twoIntsStruct
* data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
*
data
= (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
struct _twoIntsStruct * tmpData;
struct _twoIntsStruct * tmpData;
struct _twoIntsStruct
_twoIntsStruct
* tmpData
*
tmpData
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));
tmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
tmpData
tmpData
(struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, (130000)*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
(130000)*sizeof(struct _twoIntsStruct)
(130000)
130000
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{                data = tmpData;                /* Reinitialize and make use of data */                data[0].intOne = 1;                data[0].intTwo = 1;                printStructLine((twoIntsStruct *)&data[0]);            }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
data[0].intOne = 1;
data[0].intOne = 1
data[0].intOne
data[0]
data
data
0
intOne
1
data[0].intTwo = 1;
data[0].intTwo = 1
data[0].intTwo
data[0]
data
data
0
intTwo
1
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(16,86,0)
(52,61,0)
(71,39,0)
(83,29,0)
(10,86,0)
(46,45,0)
(25,24,0)
(69,6,0)
(60,71,0)
(52,39,0)
(72,6,0)
(6,5,0)
(53,25,0)
(29,28,0)
(25,53,0)
(64,72,0)
(75,19,0)
(1,85,0)
(86,6,0)
(16,49,0)
(76,37,0)
(47,32,0)
(19,9,0)
(51,61,0)
(70,6,0)
(59,76,0)
(76,50,0)
(40,82,0)
(24,27,0)
(61,73,0)
(69,82,0)
(3,29,0)
(56,86,0)
(78,71,0)
(0,22,0)
(46,85,0)
(43,33,0)
(22,71,0)
(68,66,0)
(30,39,0)
(48,69,0)
(61,52,0)
(84,27,0)
(34,19,0)
(7,78,0)
(58,49,0)
(42,41,0)
(39,32,0)
(50,62,0)
(55,23,0)
(4,27,0)
(32,47,0)
(31,67,0)
(24,25,0)
(35,29,0)
(12,33,0)
(21,78,0)
(38,5,0)
(79,52,0)
(41,83,0)
(53,29,0)
(8,69,0)
(62,50,0)
(14,7,0)
(9,22,0)
(18,29,0)
(9,29,0)
(26,72,0)
(49,38,0)
(11,36,0)
(27,39,0)
(39,29,0)
(50,76,0)
(54,25,0)
(17,6,0)
(78,7,0)
(30,29,0)
(6,9,0)
(82,69,0)
(37,76,0)
(73,29,0)
(32,37,0)
(67,5,0)
(27,24,0)
(49,16,0)
(85,46,0)
(33,39,0)
(38,49,0)
(82,67,0)
(44,52,0)
(20,73,0)
(66,39,0)
(37,32,0)
(63,9,0)
(57,39,0)
(65,72,0)
(22,9,0)
(72,64,0)
(15,64,0)
(41,33,0)
(49,58,0)
(36,5,0)
(32,39,0)
(30,6,0)
(25,54,0)
(81,66,0)
(22,0,0)
(33,41,0)
(86,16,0)
(71,78,0)
(64,36,0)
(71,22,0)
(77,30,0)
(13,29,0)
(80,83,0)
(7,14,0)
(34,75,1)
(61,52,1)
(51,52,1)
(50,59,1)
(12,43,1)
(65,6,1)
(56,10,1)
(19,9,1)
(31,82,1)
(32,37,1)
(19,34,1)
(27,39,1)
(41,33,1)
(69,6,1)
(33,39,1)
(25,54,1)
(9,22,1)
(60,63,1)
(49,58,1)
(79,46,1)
(72,26,1)
(30,6,1)
(59,57,1)
(50,62,1)
(15,72,1)
(40,69,1)
(39,32,1)
(36,11,1)
(63,53,1)
(32,47,1)
(68,81,1)
(42,33,1)
(81,39,1)
(22,71,1)
(71,39,1)
(25,24,1)
(57,74,1)
(52,39,1)
(16,86,1)
(79,66,1)
(69,8,1)
(75,9,1)
(78,7,1)
(85,1,1)
(10,67,1)
(73,20,1)
(82,69,1)
(84,4,1)
(44,79,1)
(7,21,1)
(72,6,1)
(30,77,1)
(61,51,1)
(6,9,1)
(22,0,1)
(66,39,1)
(27,84,1)
(11,64,1)
(52,44,1)
(83,80,1)
(24,27,1)
(46,85,1)
(38,49,1)
(8,48,1)
(33,12,1)
(77,19,1)
(20,61,1)
(6,70,1)
(2,74,1)
(82,40,1)
(86,56,1)
(80,41,1)
(2,30,1)
(48,36,1)
(41,42,1)
(66,68,1)
(7,14,1)
(53,25,1)
(77,38,1)
(49,16,1)
(4,83,1)
(86,6,1)
(67,31,1)
(64,15,1)
(71,78,1)
(17,19,1)
(76,50,1)
(43,73,1)
(64,72,1)
(21,60,1)
(37,76,1)
(30,39,1)
(1,66,1)
(70,17,1)
(26,65,1)
(9,74,2)
(69,19,2)
(39,32,2)
(27,74,2)
(17,19,2)
(25,74,2)
(38,49,2)
(76,74,2)
(78,7,2)
(20,74,2)
(30,74,2)
(85,66,2)
(34,74,2)
(68,74,2)
(10,19,2)
(56,19,2)
(33,74,2)
(50,62,2)
(39,74,2)
(27,39,2)
(1,66,2)
(73,74,2)
(86,19,2)
(71,74,2)
(41,33,2)
(33,39,2)
(43,74,2)
(25,54,2)
(77,74,2)
(6,19,2)
(51,74,2)
(72,6,2)
(66,74,2)
(36,19,2)
(7,74,2)
(9,22,2)
(24,74,2)
(81,74,2)
(37,76,2)
(70,19,2)
(65,19,2)
(82,19,2)
(52,74,2)
(46,85,2)
(31,19,2)
(71,39,2)
(22,0,2)
(48,19,2)
(78,74,2)
(40,19,2)
(16,19,2)
(42,74,2)
(79,74,2)
(32,74,2)
(60,74,2)
(41,74,2)
(61,74,2)
(12,74,2)
(49,19,2)
(72,19,2)
(15,19,2)
(71,78,2)
(84,74,2)
(64,19,2)
(50,74,2)
(53,74,2)
(59,74,2)
(21,74,2)
(49,58,2)
(83,74,2)
(82,69,2)
(32,47,2)
(80,74,2)
(16,86,2)
(30,39,2)
(26,19,2)
(24,27,2)
(49,16,2)
(22,71,2)
(25,24,2)
(4,74,2)
(63,74,2)
(66,39,2)
(30,6,2)
(32,37,2)
(61,52,2)
(7,14,2)
(86,6,2)
(46,66,2)
(37,74,2)
(69,6,2)
(8,19,2)
(52,39,2)
(64,72,2)
(38,19,2)
(44,74,2)
(19,74,2)
(6,9,2)
(57,74,2)
(67,19,2)
(75,74,2)
(11,19,2)
(22,74,2)
(19,9,2)
(76,50,2)
(53,25,2)
-----------------------------------
(0,struct _twoIntsStruct *)
(1,1)
(2,RET)
(3,if (data == NULL)
(4,data)
(5,)
(6,data = tmpData)
(7,sizeof(struct _twoIntsStruct)
(8,0)
(9,tmpData = (struct _twoIntsStruct *)
(10,data)
(11,1)
(12,0)
(13,if (tmpData != NULL)
(14,struct _twoIntsStruct)
(15,intOne)
(16,&data[0])
(17,data)
(18,data)
(19,tmpData != NULL)
(20,0)
(21,130000)
(22,(struct _twoIntsStruct *)
(23,)
(24,&data[0])
(25,(twoIntsStruct *)
(26,0)
(27,data[0])
(28,)
(29,)
(30,free(data)
(31,1)
(32,(struct _twoIntsStruct *)
(33,data[0])
(34,NULL)
(35,tmpData)
(36,data[0].intOne = 1)
(37,malloc(100*sizeof(struct _twoIntsStruct)
(38,printStructLine((twoIntsStruct *)
(39,* data = (struct _twoIntsStruct *)
(40,intTwo)
(41,data[0].intTwo)
(42,intTwo)
(43,data)
(44,0)
(45,)
(46,exit(-1)
(47,struct _twoIntsStruct *)
(48,data)
(49,(twoIntsStruct *)
(50,sizeof(struct _twoIntsStruct)
(51,intOne)
(52,data[0])
(53,printStructLine((twoIntsStruct *)
(54,twoIntsStruct *)
(55,if(globalReturnsTrue()
(56,0)
(57,data)
(58,twoIntsStruct *)
(59,100)
(60,data)
(61,data[0].intOne)
(62,struct _twoIntsStruct)
(63,tmpData)
(64,data[0].intOne)
(65,data)
(66,data == NULL)
(67,data[0].intTwo = 1)
(68,NULL)
(69,data[0])
(70,tmpData)
(71,realloc(data, (130000)
(72,data[0])
(73,data[0].intOne = 0)
(74,globalReturnsTrue()
(75,tmpData)
(76,100*sizeof(struct _twoIntsStruct)
(77,data)
(78,(130000)
(79,data)
(80,0)
(81,data)
(82,data[0].intTwo)
(83,data[0].intTwo = 0)
(84,0)
(85,-1)
(86,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^