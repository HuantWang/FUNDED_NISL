-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
    /* dereference dataPtr into data */
    int64_t * data = (*dataPtr);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
13,14
15,16
15,17
15,18
15,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
24,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
33,36
36,37
37,38
38,39
39,40
-----nextToken-----
2,4,6,8,9,14,16,17,18,23,25,26,28,32,34,35,40,41
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    int64_t * * dataPtr = (int64_t * *)dataVoidPtr;    /* dereference dataPtr into data */    int64_t * data = (*dataPtr);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int64_t_malloc_64b_badSink(void * dataVoidPtr)
CWE401_Memory_Leak__int64_t_malloc_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    int64_t * * dataPtr = (int64_t * *)dataVoidPtr;    /* dereference dataPtr into data */    int64_t * data = (*dataPtr);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
int64_t
int64_t
* * dataPtr = (int64_t * *)dataVoidPtr
*
*
dataPtr
= (int64_t * *)dataVoidPtr
(int64_t * *)dataVoidPtr
int64_t * *
int64_t
int64_t
* *
*
*
dataVoidPtr
dataVoidPtr
int64_t * data = (*dataPtr);
int64_t * data = (*dataPtr);
int64_t
int64_t
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
;
-----joern-----
(11,13,0)
(10,7,0)
(7,10,0)
(12,6,0)
(9,13,0)
(3,7,0)
(6,9,0)
(9,6,0)
(7,0,0)
(0,7,0)
(7,1,0)
(4,9,0)
(2,0,0)
(8,13,0)
(6,0,0)
(0,13,0)
(7,3,1)
(12,4,1)
(9,6,1)
(4,0,1)
(5,9,1)
(7,10,1)
(6,12,1)
(7,1,1)
(3,2,1)
(0,7,1)
(6,0,1)
(6,0,2)
(0,7,2)
(9,6,2)
(7,1,2)
(7,10,2)
-----------------------------------
(0,* * dataPtr = (int64_t * *)
(1,void * dataVoidPtr)
(2,dataPtr)
(3,dataVoidPtr)
(4,data)
(5,RET)
(6,*dataPtr)
(7,(int64_t * *)
(8,data)
(9,* data = (*dataPtr)
(10,int64_t * *)
(11,dataPtr)
(12,dataPtr)
(13,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^