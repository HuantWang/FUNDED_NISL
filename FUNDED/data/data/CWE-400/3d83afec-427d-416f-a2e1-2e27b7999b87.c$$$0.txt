-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    void (*funcPtr) (char *) = goodG2BSink;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (char *)ALLOCA(100*sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
38,40
40,41
42,43
42,44
43,44
45,46
45,47
47,48
48,49
48,50
51,52
52,53
52,54
52,55
53,54
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
68,69
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,30,32,36,39,41,44,46,49,50,54,56,57,61,63,67,69
-----computeFrom-----
28,29
28,30
34,35
34,36
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    void (*funcPtr) (char *) = goodG2BSink;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    funcPtr(data);}
static void
goodG2B()
goodG2B
{    char * data;    void (*funcPtr) (char *) = goodG2BSink;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = goodG2BSink;
void (*funcPtr) (char *) = goodG2BSink;
void
(*funcPtr) (char *) = goodG2BSink
*funcPtr
*
funcPtr
char *
char
*
*

= goodG2BSink
goodG2BSink
goodG2BSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)ALLOCA(100*sizeof(char));
data = (char *)ALLOCA(100*sizeof(char))
data
data
(char *)ALLOCA(100*sizeof(char))
char *
char
*
*
ALLOCA(100*sizeof(char))
ALLOCA
ALLOCA
100*sizeof(char)
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(7,23,0)
(3,11,0)
(10,11,0)
(6,20,0)
(1,4,0)
(4,1,0)
(23,7,0)
(6,11,0)
(21,6,0)
(15,12,0)
(20,11,0)
(13,17,0)
(7,9,0)
(24,11,0)
(16,24,0)
(22,1,0)
(12,11,0)
(20,7,0)
(8,10,0)
(14,17,0)
(1,9,0)
(17,11,0)
(9,1,0)
(19,20,0)
(7,20,0)
(0,6,0)
(24,20,0)
(9,7,0)
(12,20,0)
(25,10,0)
(5,4,0)
(18,11,0)
(6,20,1)
(1,4,1)
(10,25,1)
(22,19,1)
(2,24,1)
(12,15,1)
(7,9,1)
(8,17,1)
(9,1,1)
(5,22,1)
(4,5,1)
(24,16,1)
(21,20,1)
(19,10,1)
(0,21,1)
(12,20,1)
(24,20,1)
(20,7,1)
(15,6,1)
(16,12,1)
(17,14,1)
(14,13,1)
(6,0,1)
(7,23,1)
(25,8,1)
(12,20,2)
(1,4,2)
(7,23,2)
(9,1,2)
(20,7,2)
(24,20,2)
(6,20,2)
(7,9,2)
-----------------------------------
(0,"A String")
(1,100*sizeof(char)
(2,RET)
(3,data)
(4,sizeof(char)
(5,char)
(6,strcpy(data, "A String")
(7,(char *)
(8,data)
(9,ALLOCA(100*sizeof(char)
(10,data = NULL)
(11,)
(12,printLine(data)
(13,funcPtr)
(14,goodG2BSink)
(15,data)
(16,data)
(17,(*funcPtr)
(18,funcPtr)
(19,data)
(20,data = (char *)
(21,data)
(22,100)
(23,char *)
(24,funcPtr(data)
(25,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^