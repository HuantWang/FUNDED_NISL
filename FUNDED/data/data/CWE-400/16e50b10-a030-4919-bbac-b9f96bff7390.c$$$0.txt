-----label-----
0
-----code-----
static void goodB2G1()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goodB2G1Static = 0; /* false */
    goodB2G1Sink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
50,51
52,53
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,51,53,54,58,60,64,65,69,71
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goodB2G1Static = 0; /* false */    goodB2G1Sink(data);}
static void
goodB2G1()
goodB2G1
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goodB2G1Static = 0; /* false */    goodB2G1Sink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)calloc(100, sizeof(wchar_t));
data = (wchar_t *)calloc(100, sizeof(wchar_t))
data
data
(wchar_t *)calloc(100, sizeof(wchar_t))
wchar_t *
wchar_t
*
*
calloc(100, sizeof(wchar_t))
calloc
calloc
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goodB2G1Static = 0;
goodB2G1Static = 0
goodB2G1Static
goodB2G1Static
0
goodB2G1Sink(data);
goodB2G1Sink(data)
goodB2G1Sink
goodB2G1Sink
data
data
-----joern-----
(4,18,0)
(10,21,0)
(4,21,0)
(15,19,0)
(5,7,0)
(2,18,0)
(20,11,0)
(9,21,0)
(26,16,0)
(23,10,0)
(7,18,0)
(16,21,0)
(6,4,0)
(3,11,0)
(28,13,0)
(10,18,0)
(28,22,0)
(24,16,0)
(17,7,0)
(13,27,0)
(12,15,0)
(14,22,0)
(15,12,0)
(8,12,0)
(13,28,0)
(22,28,0)
(27,13,0)
(21,18,0)
(29,18,0)
(11,18,0)
(25,28,0)
(13,21,0)
(21,13,0)
(28,22,1)
(16,24,1)
(4,21,1)
(23,15,1)
(6,7,1)
(8,16,1)
(16,21,1)
(5,17,1)
(11,3,1)
(3,20,1)
(9,11,1)
(23,16,1)
(4,6,1)
(1,4,1)
(10,23,1)
(7,5,1)
(12,8,1)
(24,26,1)
(13,27,1)
(10,21,1)
(21,13,1)
(13,28,1)
(26,21,1)
(15,12,1)
(25,9,1)
(14,25,1)
(17,10,1)
(22,14,1)
(8,16,2)
(15,16,2)
(21,13,2)
(12,16,2)
(13,28,2)
(10,21,2)
(16,21,2)
(4,21,2)
(13,27,2)
(28,22,2)
(15,12,2)
-----------------------------------
(0, sizeof(wchar_t)
(1,RET)
(2,data)
(3,NULL)
(4,goodB2G1Sink(data)
(5,0)
(6,data)
(7,goodB2G1Static = 0)
(8,1)
(9,data)
(10,printWLine(data)
(11,data = NULL)
(12,-1)
(13,(wchar_t *)
(14,wchar_t)
(15,exit(-1)
(16,data == NULL)
(17,goodB2G1Static)
(18,)
(19,)
(20,data)
(21,data = (wchar_t *)
(22,sizeof(wchar_t)
(23,data)
(24,NULL)
(25,100)
(26,data)
(27,wchar_t *)
(28,calloc(100, sizeof(wchar_t)
(29,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^