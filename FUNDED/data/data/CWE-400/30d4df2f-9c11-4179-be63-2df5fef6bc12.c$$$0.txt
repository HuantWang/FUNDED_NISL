-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count);
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
26,32
26,33
27,28
28,29
28,30
29,30
31,32
31,33
33,34
35,36
36,37
36,38
37,38
39,40
39,41
39,42
42,43
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
53,54
54,55
54,56
55,56
57,58
57,59
57,60
58,59
60,61
63,64
63,65
64,65
64,66
65,66
67,68
69,70
70,71
71,72
71,73
72,73
75,76
75,77
75,78
75,79
76,77
77,78
77,79
78,79
81,82
81,83
82,83
84,85
84,86
85,86
85,87
86,87
89,90
91,92
92,93
94,95
95,96
95,97
96,97
96,98
97,98
97,99
98,99
100,101
102,103
102,104
102,105
102,106
102,107
103,104
105,106
107,108
108,109
108,110
111,112
111,113
112,113
114,115
116,117
118,119
119,120
120,121
120,122
121,122
124,125
124,126
125,126
127,128
128,129
129,130
129,131
130,131
132,133
-----nextToken-----
2,4,8,10,14,16,20,23,25,30,32,34,38,40,41,44,47,49,50,52,56,59,61,62,66,68,73,74,79,80,83,87,88,90,93,99,101,104,106,109,110,113,115,117,122,123,126,131,133
-----computeFrom-----
12,13
12,14
18,19
18,20
54,55
54,56
64,65
64,66
77,78
77,79
81,82
81,83
96,97
96,98
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad(){    int count;    /* Initialize count */    count = -1;    count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count);    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad()
CWE400_Resource_Exhaustion__fscanf_fwrite_61_bad
{    int count;    /* Initialize count */    count = -1;    count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count);    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count);
count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count)
count
count
CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count)
CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource
CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource
count
count
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(32,63,0)
(39,32,0)
(17,8,0)
(10,56,0)
(31,65,0)
(47,24,0)
(24,33,0)
(60,14,0)
(44,55,0)
(22,13,0)
(26,65,0)
(25,58,0)
(3,60,0)
(37,65,0)
(57,1,0)
(19,8,0)
(27,43,0)
(34,14,0)
(16,53,0)
(33,63,0)
(11,41,0)
(20,43,0)
(45,58,0)
(7,32,0)
(56,0,0)
(1,57,0)
(12,17,0)
(42,63,0)
(59,55,0)
(43,33,0)
(14,5,0)
(66,61,0)
(12,45,0)
(9,63,0)
(15,41,0)
(48,37,0)
(58,45,0)
(13,22,0)
(23,50,0)
(40,63,0)
(33,24,0)
(18,63,0)
(14,13,0)
(5,14,0)
(38,1,0)
(62,17,0)
(21,38,0)
(28,1,0)
(49,24,0)
(14,60,0)
(56,33,0)
(46,63,0)
(52,33,0)
(45,8,0)
(1,17,0)
(53,29,0)
(51,45,0)
(36,5,0)
(30,12,0)
(63,8,0)
(17,12,0)
(64,14,0)
(55,63,0)
(41,63,0)
(6,22,0)
(61,54,0)
(13,14,0)
(38,65,0)
(1,38,0)
(14,33,0)
(24,41,0)
(4,63,0)
(53,16,1)
(64,60,1)
(31,26,1)
(5,36,1)
(41,15,1)
(39,7,1)
(59,44,1)
(21,65,1)
(56,10,1)
(66,43,1)
(60,3,1)
(17,12,1)
(27,20,1)
(13,22,1)
(3,5,1)
(12,45,1)
(14,60,1)
(24,41,1)
(55,59,1)
(16,13,1)
(10,2,1)
(48,53,1)
(56,33,1)
(26,43,1)
(37,65,1)
(22,6,1)
(7,17,1)
(6,38,1)
(1,28,1)
(14,5,1)
(35,56,1)
(48,13,1)
(49,47,1)
(43,27,1)
(20,33,1)
(13,14,1)
(33,24,1)
(45,58,1)
(35,2,1)
(32,39,1)
(28,21,1)
(47,52,1)
(14,64,1)
(62,45,1)
(38,65,1)
(34,22,1)
(65,31,1)
(44,32,1)
(14,33,1)
(30,62,1)
(11,55,1)
(24,49,1)
(52,41,1)
(43,33,1)
(36,34,1)
(1,17,1)
(21,37,1)
(38,1,1)
(58,25,1)
(37,48,1)
(2,38,1)
(61,66,1)
(15,11,1)
(25,51,1)
(1,57,1)
(26,61,1)
(12,30,1)
(37,38,2)
(3,38,2)
(16,13,2)
(64,38,2)
(45,58,2)
(21,38,2)
(12,45,2)
(14,38,2)
(14,5,2)
(1,38,2)
(13,14,2)
(17,12,2)
(37,65,2)
(56,2,2)
(1,17,2)
(38,1,2)
(38,38,2)
(66,43,2)
(33,24,2)
(36,38,2)
(60,38,2)
(14,60,2)
(48,38,2)
(14,33,2)
(10,2,2)
(13,38,2)
(22,38,2)
(53,13,2)
(5,38,2)
(24,41,2)
(13,22,2)
(61,43,2)
(38,65,2)
(28,38,2)
(34,38,2)
(1,57,2)
(43,33,2)
(56,33,2)
(6,38,2)
-----------------------------------
(0,)
(1,(size_t)
(2,pFile)
(3,SENTENCE)
(4,i)
(5,sizeof(char)
(6,SENTENCE)
(7,i)
(8,)
(9,filename)
(10,pFile)
(11,filename)
(12,CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count)
(13,strlen(SENTENCE)
(14,fwrite(SENTENCE, sizeof(char)
(15,"output_bad.txt")
(16,1)
(17,count = CWE400_Resource_Exhaustion__fscanf_fwrite_61b_badSource(count)
(18,if (pFile)
(19,count)
(20,pFile)
(21,i)
(22,strlen(SENTENCE)
(23,if (strlen(SENTENCE)
(24,fopen(filename, "w+")
(25,1)
(26,i)
(27,NULL)
(28,count)
(29,)
(30,count)
(31,0)
(32,i = 0)
(33,pFile = fopen(filename, "w+")
(34,SENTENCE)
(35,RET)
(36,char)
(37,i++)
(38,i < (size_t)
(39,0)
(40,if (pFile == NULL)
(41,*filename = "output_bad.txt")
(42,pFile)
(43,pFile == NULL)
(44,pFile)
(45,count = -1)
(46,for (i = 0; i < (size_t)
(47,filename)
(48,i)
(49,"w+")
(50,)
(51,count)
(52,pFile)
(53,exit(1)
(54,)
(55,*pFile = NULL)
(56,fclose(pFile)
(57,size_t)
(58,-1)
(59,NULL)
(60,strlen(SENTENCE)
(61,exit(1)
(62,count)
(63,)
(64,pFile)
(65,i = 0)
(66,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^