-----label-----
0
-----code-----
static int device_notifier(struct notifier_block *nb,
				  unsigned long action, void *data)
{
	struct device *dev = data;
	struct pci_dev *pdev = to_pci_dev(dev);
	struct dmar_domain *domain;

	if (iommu_no_mapping(dev))
		return 0;

	domain = find_domain(pdev);
	if (!domain)
		return 0;

	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
		domain_remove_one_dev_info(domain, pdev);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
17,19
20,21
20,22
20,23
20,24
20,25
20,26
20,27
20,28
21,22
22,23
22,24
23,24
25,26
25,27
25,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
35,37
35,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
52,54
53,54
55,56
57,58
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
70,71
72,73
74,75
74,76
75,76
75,77
76,77
76,78
77,78
79,80
81,82
82,83
84,85
85,86
85,87
85,88
86,87
88,89
90,91
92,93
-----nextToken-----
2,4,7,9,10,12,14,16,18,19,24,26,27,30,34,36,37,41,43,47,49,50,54,56,58,62,65,67,71,73,78,80,83,87,89,91,93
-----computeFrom-----
60,61
60,62
75,76
75,77
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int device_notifier(struct notifier_block *nb,				  unsigned long action, void *data){	struct device *dev = data;	struct pci_dev *pdev = to_pci_dev(dev);	struct dmar_domain *domain;	if (iommu_no_mapping(dev))		return 0;	domain = find_domain(pdev);	if (!domain)		return 0;	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);	return 0;}
static int
device_notifier(struct notifier_block *nb,				  unsigned long action, void *data)
device_notifier
struct notifier_block *nb
struct notifier_block
notifier_block
*nb
*
nb
unsigned long action
unsigned long
action
action
void *data
void
*data
*
data
{	struct device *dev = data;	struct pci_dev *pdev = to_pci_dev(dev);	struct dmar_domain *domain;	if (iommu_no_mapping(dev))		return 0;	domain = find_domain(pdev);	if (!domain)		return 0;	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);	return 0;}
struct device *dev = data;
struct device *dev = data;
struct device
device
*dev = data
*
dev
= data
data
data
struct pci_dev *pdev = to_pci_dev(dev);
struct pci_dev *pdev = to_pci_dev(dev);
struct pci_dev
pci_dev
*pdev = to_pci_dev(dev)
*
pdev
= to_pci_dev(dev)
to_pci_dev(dev)
to_pci_dev
to_pci_dev
dev
dev
struct dmar_domain *domain;
struct dmar_domain *domain;
struct dmar_domain
dmar_domain
*domain
*
domain
if (iommu_no_mapping(dev))		return 0;
iommu_no_mapping(dev)
iommu_no_mapping
iommu_no_mapping
dev
dev
return 0;
0
domain = find_domain(pdev);
domain = find_domain(pdev)
domain
domain
find_domain(pdev)
find_domain
find_domain
pdev
pdev
if (!domain)		return 0;
!domain
domain
domain
return 0;
0
if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);
action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through
action == BUS_NOTIFY_UNBOUND_DRIVER
action
action
BUS_NOTIFY_UNBOUND_DRIVER
BUS_NOTIFY_UNBOUND_DRIVER
!iommu_pass_through
iommu_pass_through
iommu_pass_through
domain_remove_one_dev_info(domain, pdev);
domain_remove_one_dev_info(domain, pdev)
domain_remove_one_dev_info
domain_remove_one_dev_info
domain
domain
pdev
pdev
return 0;
0
-----joern-----
(35,22,0)
(1,2,0)
(11,20,0)
(17,23,0)
(33,1,0)
(18,0,0)
(5,20,0)
(9,23,0)
(28,23,0)
(12,23,0)
(38,15,0)
(22,2,0)
(34,19,0)
(24,15,0)
(2,23,0)
(28,31,0)
(36,23,0)
(10,26,0)
(21,23,0)
(27,16,0)
(31,33,0)
(33,23,0)
(32,1,0)
(15,28,0)
(14,28,0)
(5,0,0)
(7,10,0)
(29,16,0)
(16,6,0)
(37,28,0)
(1,33,0)
(3,23,0)
(0,23,0)
(26,16,0)
(39,33,0)
(13,2,0)
(26,10,0)
(2,8,0)
(4,31,0)
(16,26,0)
(5,19,0)
(30,14,0)
(25,2,0)
(15,33,0)
(31,28,0)
(1,2,1)
(7,16,1)
(29,14,1)
(11,14,1)
(15,24,1)
(10,7,1)
(39,2,1)
(33,1,1)
(16,6,1)
(24,38,1)
(1,32,1)
(37,22,1)
(20,11,1)
(31,33,1)
(4,37,1)
(38,26,1)
(2,8,1)
(5,19,1)
(15,33,1)
(31,4,1)
(30,28,1)
(27,29,1)
(28,31,1)
(14,30,1)
(19,34,1)
(34,22,1)
(0,18,1)
(26,10,1)
(22,2,1)
(18,15,1)
(14,28,1)
(25,13,1)
(26,16,1)
(15,28,1)
(5,0,1)
(35,33,1)
(22,35,1)
(16,27,1)
(32,39,1)
(2,25,1)
(18,26,1)
(5,20,1)
(15,26,2)
(28,31,2)
(31,33,2)
(29,14,2)
(5,0,2)
(5,20,2)
(10,16,2)
(11,14,2)
(30,22,2)
(7,16,2)
(37,22,2)
(5,19,2)
(14,22,2)
(33,1,2)
(34,22,2)
(38,26,2)
(15,33,2)
(26,14,2)
(24,26,2)
(16,6,2)
(26,10,2)
(18,14,2)
(19,22,2)
(28,22,2)
(16,14,2)
(2,8,2)
(4,22,2)
(20,14,2)
(0,14,2)
(1,2,2)
(26,16,2)
(31,22,2)
(22,2,2)
(15,28,2)
(14,28,2)
(27,14,2)
-----------------------------------
(0,return 0;)
(1,to_pci_dev(dev)
(2,*dev = data)
(3,if (iommu_no_mapping(dev)
(4,pdev)
(5,RET)
(6,unsigned long action)
(7,iommu_pass_through)
(8,void *data)
(9,pdev)
(10,!iommu_pass_through)
(11,0)
(12,dev)
(13,dev)
(14,!domain)
(15,domain_remove_one_dev_info(domain, pdev)
(16,action == BUS_NOTIFY_UNBOUND_DRIVER)
(17,if (!domain)
(18,0)
(19,return 0;)
(20,return 0;)
(21,domain)
(22,iommu_no_mapping(dev)
(23,)
(24,pdev)
(25,data)
(26,action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
(27,BUS_NOTIFY_UNBOUND_DRIVER)
(28,domain = find_domain(pdev)
(29,action)
(30,domain)
(31,find_domain(pdev)
(32,dev)
(33,*pdev = to_pci_dev(dev)
(34,0)
(35,dev)
(36,if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
(37,domain)
(38,domain)
(39,pdev)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^