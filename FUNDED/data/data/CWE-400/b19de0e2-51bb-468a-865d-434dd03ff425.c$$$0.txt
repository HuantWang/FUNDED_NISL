-----label-----
0
-----code-----
void
tapdisk_channel_close(tapdisk_channel_t *channel)
{
	if (channel->tapdisk_pid != -1) {
		DPRINTF("%s: waiting for child %d to exit\n", 
			channel->path, channel->tapdisk_pid);
		return;
	}

	if (channel->channel_id)
		DPRINTF("%s: closing channel %d:%d\n",
			channel->path, channel->channel_id, channel->cookie);

	if (channel->open)
		tapdisk_channel_send_shutdown_request(channel);

	if (channel->pause_watch.node) {
		unregister_xenbus_watch(channel->xsh, &channel->pause_watch);
		channel->pause_watch.node = NULL;
	}

	if (channel->shutdown_watch.node) {
		unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);
		channel->shutdown_watch.node = NULL;
	}

	tapdisk_daemon_close_channel(channel);

	free(channel->params);
	free(channel->frontpath);
	free(channel->shutdown_str);
	free(channel->pause_done_str);
	free(channel->pause_str);
	free(channel->uuid_str);
	free(channel->path);
	free(channel);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
12,13
12,14
13,14
13,15
14,15
14,16
15,16
18,19
20,21
20,22
21,22
22,23
22,24
22,25
22,26
23,24
26,27
26,28
27,28
30,31
30,32
31,32
35,36
35,37
36,37
36,38
37,38
40,41
41,42
41,43
41,44
41,45
41,46
42,43
45,46
45,47
46,47
49,50
49,51
50,51
53,54
53,55
54,55
57,58
57,59
58,59
58,60
59,60
62,63
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
70,72
71,72
75,76
75,77
76,77
77,78
77,79
77,80
78,79
80,81
80,82
81,82
84,85
85,86
85,87
86,87
89,90
90,91
90,92
91,92
91,93
92,93
92,94
93,94
97,98
99,100
99,101
100,101
100,102
101,102
101,103
102,103
106,107
106,108
107,108
108,109
108,110
108,111
109,110
111,112
111,113
112,113
115,116
116,117
116,118
117,118
120,121
121,122
121,123
122,123
122,124
123,124
123,125
124,125
128,129
130,131
131,132
131,133
132,133
134,135
136,137
137,138
137,139
138,139
140,141
140,142
141,142
144,145
145,146
145,147
146,147
148,149
148,150
149,150
152,153
153,154
153,155
154,155
156,157
156,158
157,158
160,161
161,162
161,163
162,163
164,165
164,166
165,166
168,169
169,170
169,171
170,171
172,173
172,174
173,174
176,177
177,178
177,179
178,179
180,181
180,182
181,182
184,185
185,186
185,187
186,187
188,189
188,190
189,190
192,193
193,194
193,195
194,195
196,197
-----nextToken-----
2,4,7,9,10,16,17,19,24,25,28,29,32,33,34,38,39,43,44,47,48,51,52,55,56,60,61,65,67,72,73,74,79,82,83,87,88,94,95,96,98,103,104,105,110,113,114,118,119,125,126,127,129,133,135,139,142,143,147,150,151,155,158,159,163,166,167,171,174,175,179,182,183,187,190,191,195,197
-----computeFrom-----
13,14
13,15
90,91
90,92
121,122
121,123
-----guardedBy-----
16,32
17,33
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ReturnStatement;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
voidtapdisk_channel_close(tapdisk_channel_t *channel){	if (channel->tapdisk_pid != -1) {		DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid);		return;	}	if (channel->channel_id)		DPRINTF("%s: closing channel %d:%d\n",			channel->path, channel->channel_id, channel->cookie);	if (channel->open)		tapdisk_channel_send_shutdown_request(channel);	if (channel->pause_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->pause_watch);		channel->pause_watch.node = NULL;	}	if (channel->shutdown_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);		channel->shutdown_watch.node = NULL;	}	tapdisk_daemon_close_channel(channel);	free(channel->params);	free(channel->frontpath);	free(channel->shutdown_str);	free(channel->pause_done_str);	free(channel->pause_str);	free(channel->uuid_str);	free(channel->path);	free(channel);}
void
tapdisk_channel_close(tapdisk_channel_t *channel)
tapdisk_channel_close
tapdisk_channel_t *channel
tapdisk_channel_t
tapdisk_channel_t
*channel
*
channel
{	if (channel->tapdisk_pid != -1) {		DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid);		return;	}	if (channel->channel_id)		DPRINTF("%s: closing channel %d:%d\n",			channel->path, channel->channel_id, channel->cookie);	if (channel->open)		tapdisk_channel_send_shutdown_request(channel);	if (channel->pause_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->pause_watch);		channel->pause_watch.node = NULL;	}	if (channel->shutdown_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);		channel->shutdown_watch.node = NULL;	}	tapdisk_daemon_close_channel(channel);	free(channel->params);	free(channel->frontpath);	free(channel->shutdown_str);	free(channel->pause_done_str);	free(channel->pause_str);	free(channel->uuid_str);	free(channel->path);	free(channel);}
if (channel->tapdisk_pid != -1) {		DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid);		return;	}
channel->tapdisk_pid != -1
channel->tapdisk_pid
channel
channel
tapdisk_pid
-1
1
{		DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid);		return;	}
DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid);
DPRINTF("%s: waiting for child %d to exit\n", 			channel->path, channel->tapdisk_pid)
DPRINTF
DPRINTF
"%s: waiting for child %d to exit\n"
channel->path
channel
channel
path
channel->tapdisk_pid
channel
channel
tapdisk_pid
return;
if (channel->channel_id)		DPRINTF("%s: closing channel %d:%d\n",			channel->path, channel->channel_id, channel->cookie);
channel->channel_id
channel
channel
channel_id
DPRINTF("%s: closing channel %d:%d\n",			channel->path, channel->channel_id, channel->cookie);
DPRINTF("%s: closing channel %d:%d\n",			channel->path, channel->channel_id, channel->cookie)
DPRINTF
DPRINTF
"%s: closing channel %d:%d\n"
channel->path
channel
channel
path
channel->channel_id
channel
channel
channel_id
channel->cookie
channel
channel
cookie
if (channel->open)		tapdisk_channel_send_shutdown_request(channel);
channel->open
channel
channel
open
tapdisk_channel_send_shutdown_request(channel);
tapdisk_channel_send_shutdown_request(channel)
tapdisk_channel_send_shutdown_request
tapdisk_channel_send_shutdown_request
channel
channel
if (channel->pause_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->pause_watch);		channel->pause_watch.node = NULL;	}
channel->pause_watch.node
channel->pause_watch
channel
channel
pause_watch
node
{		unregister_xenbus_watch(channel->xsh, &channel->pause_watch);		channel->pause_watch.node = NULL;	}
unregister_xenbus_watch(channel->xsh, &channel->pause_watch);
unregister_xenbus_watch(channel->xsh, &channel->pause_watch)
unregister_xenbus_watch
unregister_xenbus_watch
channel->xsh
channel
channel
xsh
&channel->pause_watch
channel->pause_watch
channel
channel
pause_watch
channel->pause_watch.node = NULL;
channel->pause_watch.node = NULL
channel->pause_watch.node
channel->pause_watch
channel
channel
pause_watch
node
NULL
NULL
if (channel->shutdown_watch.node) {		unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);		channel->shutdown_watch.node = NULL;	}
channel->shutdown_watch.node
channel->shutdown_watch
channel
channel
shutdown_watch
node
{		unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);		channel->shutdown_watch.node = NULL;	}
unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch);
unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch)
unregister_xenbus_watch
unregister_xenbus_watch
channel->xsh
channel
channel
xsh
&channel->shutdown_watch
channel->shutdown_watch
channel
channel
shutdown_watch
channel->shutdown_watch.node = NULL;
channel->shutdown_watch.node = NULL
channel->shutdown_watch.node
channel->shutdown_watch
channel
channel
shutdown_watch
node
NULL
NULL
tapdisk_daemon_close_channel(channel);
tapdisk_daemon_close_channel(channel)
tapdisk_daemon_close_channel
tapdisk_daemon_close_channel
channel
channel
free(channel->params);
free(channel->params)
free
free
channel->params
channel
channel
params
free(channel->frontpath);
free(channel->frontpath)
free
free
channel->frontpath
channel
channel
frontpath
free(channel->shutdown_str);
free(channel->shutdown_str)
free
free
channel->shutdown_str
channel
channel
shutdown_str
free(channel->pause_done_str);
free(channel->pause_done_str)
free
free
channel->pause_done_str
channel
channel
pause_done_str
free(channel->pause_str);
free(channel->pause_str)
free
free
channel->pause_str
channel
channel
pause_str
free(channel->uuid_str);
free(channel->uuid_str)
free
free
channel->uuid_str
channel
channel
uuid_str
free(channel->path);
free(channel->path)
free
free
channel->path
channel
channel
path
free(channel);
free(channel)
free
free
channel
channel
-----joern-----
(46,78,0)
(103,112,0)
(59,69,0)
(67,3,0)
(72,22,0)
(27,33,0)
(83,112,0)
(26,49,0)
(46,69,0)
(45,75,0)
(78,46,0)
(113,9,0)
(16,66,0)
(104,18,0)
(93,69,0)
(13,69,0)
(89,112,0)
(8,91,0)
(29,82,0)
(52,20,0)
(64,93,0)
(97,65,0)
(33,69,0)
(7,22,0)
(82,112,0)
(0,112,0)
(116,36,0)
(63,88,0)
(91,69,0)
(42,59,0)
(10,69,0)
(70,112,0)
(81,75,0)
(81,105,0)
(33,76,0)
(11,9,0)
(18,104,0)
(25,10,0)
(99,13,0)
(3,39,0)
(78,112,0)
(58,112,0)
(23,55,0)
(57,51,0)
(54,65,0)
(87,17,0)
(37,18,0)
(61,102,0)
(2,112,0)
(2,69,0)
(93,84,0)
(108,5,0)
(36,69,0)
(102,69,0)
(100,87,0)
(40,19,0)
(41,45,0)
(53,69,0)
(96,20,0)
(76,33,0)
(39,3,0)
(85,33,0)
(12,53,0)
(55,69,0)
(83,53,0)
(95,93,0)
(38,104,0)
(56,55,0)
(82,69,0)
(19,40,0)
(40,55,0)
(9,69,0)
(106,39,0)
(55,40,0)
(47,36,0)
(114,5,0)
(24,10,0)
(62,107,0)
(44,102,0)
(9,11,0)
(103,49,0)
(51,69,0)
(48,91,0)
(107,1,0)
(84,87,0)
(49,69,0)
(68,66,0)
(92,52,0)
(104,69,0)
(86,46,0)
(66,69,0)
(100,69,0)
(34,112,0)
(88,69,0)
(77,105,0)
(48,112,0)
(19,69,0)
(70,65,0)
(76,112,0)
(91,48,0)
(21,2,0)
(43,31,0)
(98,112,0)
(73,91,0)
(89,22,0)
(36,116,0)
(45,69,0)
(5,114,0)
(6,36,0)
(75,81,0)
(101,49,0)
(87,100,0)
(114,10,0)
(90,31,0)
(65,70,0)
(51,81,0)
(30,19,0)
(52,88,0)
(32,112,0)
(88,52,0)
(66,18,0)
(81,51,0)
(22,89,0)
(4,116,0)
(94,3,0)
(74,13,0)
(80,11,0)
(40,1,0)
(109,19,0)
(79,46,0)
(60,53,0)
(15,40,0)
(18,102,0)
(22,69,0)
(65,69,0)
(49,103,0)
(71,51,0)
(102,18,0)
(18,66,0)
(110,88,0)
(10,114,0)
(53,83,0)
(31,69,0)
(20,17,0)
(84,93,0)
(115,77,0)
(28,104,0)
(35,100,0)
(3,69,0)
(111,9,0)
(39,77,0)
(14,45,0)
(75,45,0)
(87,84,0)
(50,100,0)
(40,19,1)
(72,7,1)
(87,100,1)
(9,69,1)
(100,69,1)
(36,6,1)
(88,69,1)
(61,44,1)
(57,71,1)
(10,69,1)
(49,101,1)
(52,92,1)
(74,99,1)
(87,84,1)
(55,69,1)
(59,69,1)
(51,69,1)
(42,31,1)
(73,70,1)
(82,29,1)
(30,109,1)
(22,69,1)
(103,49,1)
(62,107,1)
(114,5,1)
(19,69,1)
(47,31,1)
(63,87,1)
(7,82,1)
(86,79,1)
(3,69,1)
(13,74,1)
(97,54,1)
(54,103,1)
(47,59,1)
(64,100,1)
(11,80,1)
(43,18,1)
(14,41,1)
(60,12,1)
(53,60,1)
(93,95,1)
(13,69,1)
(48,91,1)
(56,19,1)
(49,69,1)
(33,69,1)
(46,69,1)
(31,69,1)
(113,116,1)
(10,25,1)
(36,69,1)
(94,67,1)
(102,61,1)
(99,114,1)
(46,86,1)
(8,73,1)
(106,3,1)
(88,110,1)
(83,53,1)
(116,4,1)
(104,69,1)
(81,75,1)
(4,36,1)
(31,90,1)
(75,45,1)
(18,66,1)
(40,55,1)
(51,57,1)
(53,69,1)
(65,97,1)
(77,115,1)
(33,27,1)
(43,13,1)
(12,89,1)
(41,51,1)
(104,28,1)
(52,88,1)
(113,20,1)
(107,40,1)
(19,30,1)
(95,64,1)
(79,48,1)
(84,93,1)
(39,3,1)
(81,51,1)
(11,9,1)
(20,96,1)
(3,94,1)
(28,38,1)
(62,2,1)
(18,102,1)
(114,10,1)
(116,36,1)
(37,13,1)
(16,102,1)
(29,77,1)
(21,78,1)
(22,72,1)
(76,33,1)
(66,69,1)
(45,69,1)
(110,63,1)
(2,69,1)
(45,14,1)
(6,47,1)
(92,88,1)
(26,76,1)
(91,8,1)
(25,24,1)
(91,69,1)
(68,16,1)
(38,37,1)
(18,104,1)
(15,114,1)
(100,50,1)
(67,81,1)
(5,108,1)
(80,9,1)
(65,69,1)
(66,68,1)
(29,11,1)
(96,52,1)
(108,10,1)
(109,15,1)
(78,46,1)
(115,39,1)
(85,83,1)
(90,43,1)
(89,22,1)
(9,111,1)
(82,69,1)
(35,116,1)
(39,106,1)
(59,42,1)
(71,11,1)
(102,69,1)
(101,26,1)
(27,85,1)
(44,104,1)
(111,113,1)
(55,23,1)
(93,69,1)
(2,21,1)
(23,56,1)
(70,65,1)
(50,35,1)
(93,116,2)
(76,33,2)
(89,114,2)
(14,11,2)
(19,69,2)
(54,114,2)
(45,11,2)
(116,114,2)
(26,114,2)
(8,114,2)
(20,116,2)
(18,104,2)
(99,114,2)
(80,114,2)
(77,11,2)
(88,116,2)
(113,114,2)
(48,91,2)
(2,114,2)
(71,11,2)
(50,116,2)
(104,69,2)
(106,11,2)
(46,69,2)
(46,114,2)
(111,114,2)
(36,69,2)
(13,114,2)
(92,116,2)
(62,107,2)
(9,114,2)
(87,116,2)
(78,114,2)
(7,114,2)
(30,114,2)
(70,65,2)
(19,114,2)
(104,13,2)
(60,114,2)
(72,114,2)
(91,69,2)
(31,69,2)
(15,114,2)
(102,13,2)
(11,114,2)
(61,13,2)
(84,116,2)
(57,11,2)
(65,114,2)
(85,114,2)
(28,13,2)
(82,114,2)
(87,100,2)
(40,19,2)
(97,114,2)
(84,93,2)
(81,51,2)
(55,114,2)
(83,114,2)
(27,114,2)
(52,88,2)
(44,13,2)
(74,114,2)
(109,114,2)
(39,11,2)
(116,36,2)
(22,69,2)
(95,116,2)
(35,116,2)
(115,11,2)
(87,84,2)
(68,13,2)
(45,69,2)
(79,114,2)
(100,116,2)
(39,3,2)
(51,69,2)
(51,11,2)
(40,55,2)
(49,114,2)
(33,69,2)
(6,114,2)
(66,69,2)
(23,114,2)
(41,11,2)
(89,22,2)
(100,69,2)
(114,10,2)
(81,75,2)
(37,13,2)
(83,53,2)
(75,45,2)
(66,13,2)
(96,116,2)
(59,31,2)
(63,116,2)
(22,114,2)
(94,11,2)
(49,69,2)
(42,31,2)
(110,116,2)
(21,114,2)
(103,114,2)
(12,114,2)
(4,114,2)
(3,11,2)
(9,69,2)
(64,116,2)
(33,114,2)
(78,46,2)
(76,114,2)
(70,114,2)
(53,69,2)
(2,69,2)
(56,114,2)
(73,114,2)
(18,13,2)
(86,114,2)
(11,9,2)
(47,114,2)
(40,114,2)
(16,13,2)
(107,114,2)
(102,69,2)
(3,69,2)
(88,69,2)
(75,11,2)
(101,114,2)
(43,114,2)
(82,69,2)
(10,69,2)
(114,5,2)
(93,69,2)
(55,69,2)
(48,114,2)
(59,69,2)
(18,102,2)
(91,114,2)
(103,49,2)
(53,114,2)
(36,114,2)
(81,11,2)
(65,69,2)
(29,114,2)
(67,11,2)
(13,69,2)
(38,13,2)
(52,116,2)
(90,114,2)
(31,114,2)
(18,66,2)
-----------------------------------
(0,if (channel->open)
(1,)
(2,free(channel)
(3,channel->shutdown_watch)
(4,node)
(5,-1)
(6,pause_watch)
(7,channel)
(8,uuid_str)
(9,channel->shutdown_watch)
(10,channel->tapdisk_pid)
(11,channel->shutdown_watch.node)
(12,channel)
(13,channel->channel_id)
(14,shutdown_watch)
(15,"%s: waiting for child %d to exit\\n")
(16,channel)
(17,)
(18,DPRINTF("%s: closing channel %d:%d\\n",\n\\n\\t\\t\\tchannel->path, channel->channel_id, channel->cookie)
(19,channel->path)
(20,channel->pause_watch.node = NULL)
(21,channel)
(22,channel->params)
(23,tapdisk_pid)
(24,channel)
(25,tapdisk_pid)
(26,channel)
(27,shutdown_str)
(28,path)
(29,channel)
(30,path)
(31,channel->open)
(32,if (channel->pause_watch.node)
(33,channel->shutdown_str)
(34,if (channel->channel_id)
(35,channel)
(36,channel->pause_watch)
(37,"%s: closing channel %d:%d\\n")
(38,channel)
(39,channel->shutdown_watch.node)
(40,DPRINTF("%s: waiting for child %d to exit\\n", \n\\n\\t\\t\\tchannel->path, channel->tapdisk_pid)
(41,channel)
(42,channel)
(43,channel)
(44,channel)
(45,channel->shutdown_watch)
(46,channel->path)
(47,channel)
(48,free(channel->uuid_str)
(49,channel->pause_done_str)
(50,xsh)
(51,channel->xsh)
(52,channel->pause_watch.node)
(53,channel->frontpath)
(54,channel)
(55,channel->tapdisk_pid)
(56,channel)
(57,xsh)
(58,if (channel->shutdown_watch.node)
(59,tapdisk_channel_send_shutdown_request(channel)
(60,frontpath)
(61,channel_id)
(62,RET)
(63,channel)
(64,channel)
(65,channel->pause_str)
(66,channel->cookie)
(67,channel)
(68,cookie)
(69,tapdisk_channel_t *channel)
(70,free(channel->pause_str)
(71,channel)
(72,params)
(73,channel)
(74,channel_id)
(75,&channel->shutdown_watch)
(76,free(channel->shutdown_str)
(77,channel->shutdown_watch.node = NULL)
(78,free(channel->path)
(79,channel)
(80,node)
(81,unregister_xenbus_watch(channel->xsh, &channel->shutdown_watch)
(82,tapdisk_daemon_close_channel(channel)
(83,free(channel->frontpath)
(84,&channel->pause_watch)
(85,channel)
(86,path)
(87,unregister_xenbus_watch(channel->xsh, &channel->pause_watch)
(88,channel->pause_watch)
(89,free(channel->params)
(90,open)
(91,channel->uuid_str)
(92,node)
(93,channel->pause_watch)
(94,shutdown_watch)
(95,pause_watch)
(96,NULL)
(97,pause_str)
(98,if (channel->tapdisk_pid != -1)
(99,channel)
(100,channel->xsh)
(101,pause_done_str)
(102,channel->channel_id)
(103,free(channel->pause_done_str)
(104,channel->path)
(105,)
(106,node)
(107,return;)
(108,1)
(109,channel)
(110,pause_watch)
(111,shutdown_watch)
(112,)
(113,channel)
(114,channel->tapdisk_pid != -1)
(115,NULL)
(116,channel->pause_watch.node)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^