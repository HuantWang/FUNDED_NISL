-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_05_bad()
{
    int64_t * data;
    data = NULL;
    if(staticTrue)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)malloc(100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(staticTrue)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
58,60
59,60
63,64
64,65
64,66
65,66
67,68
67,69
68,69
71,72
71,73
72,73
74,75
-----nextToken-----
2,4,9,11,12,16,18,21,26,30,32,35,37,41,42,46,48,53,55,60,61,62,66,69,70,73,75
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_05_bad(){    int64_t * data;    data = NULL;    if(staticTrue)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(staticTrue)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_05_bad()
CWE401_Memory_Leak__int64_t_malloc_05_bad
{    int64_t * data;    data = NULL;    if(staticTrue)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(staticTrue)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(staticTrue)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)malloc(100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(staticTrue)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
staticTrue
staticTrue
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(21,19,0)
(15,10,0)
(18,25,0)
(22,32,0)
(26,1,0)
(10,15,0)
(14,27,0)
(32,10,0)
(27,20,0)
(9,19,0)
(8,12,0)
(0,12,0)
(19,23,0)
(16,12,0)
(13,12,0)
(32,18,0)
(28,15,0)
(2,23,0)
(19,9,0)
(15,9,0)
(29,25,0)
(30,1,0)
(4,32,0)
(17,14,0)
(27,14,0)
(10,25,0)
(11,13,0)
(23,19,0)
(5,25,0)
(18,32,0)
(3,13,0)
(9,15,0)
(1,10,0)
(24,10,0)
(15,28,0)
(14,17,1)
(5,1,1)
(17,1,1)
(2,21,1)
(15,28,1)
(23,2,1)
(6,7,1)
(7,31,1)
(1,26,1)
(27,14,1)
(15,9,1)
(31,13,1)
(32,22,1)
(4,5,1)
(5,27,1)
(22,4,1)
(11,3,1)
(32,10,1)
(19,23,1)
(10,15,1)
(21,24,1)
(30,10,1)
(1,10,1)
(9,19,1)
(13,11,1)
(26,30,1)
(18,32,1)
(24,31,1)
(7,18,1)
(19,31,2)
(10,31,2)
(15,31,2)
(15,28,2)
(10,15,2)
(18,32,2)
(24,31,2)
(4,31,2)
(14,1,2)
(32,31,2)
(5,31,2)
(26,31,2)
(17,1,2)
(9,31,2)
(2,31,2)
(22,31,2)
(9,19,2)
(32,10,2)
(30,31,2)
(1,10,2)
(19,23,2)
(18,31,2)
(27,1,2)
(15,9,2)
(1,31,2)
(27,14,2)
(21,31,2)
(23,31,2)
-----------------------------------
(0,if(staticTrue)
(1,data == NULL)
(2,int64_t)
(3,data)
(4,data)
(5,L)
(6,RET)
(7,staticTrue)
(8,if(staticTrue)
(9,malloc(100*sizeof(int64_t)
(10,data = (int64_t *)
(11,NULL)
(12,)
(13,data = NULL)
(14,-1)
(15,(int64_t *)
(16,data)
(17,1)
(18,printLongLongLine(data[0])
(19,100*sizeof(int64_t)
(20,)
(21,100)
(22,0)
(23,sizeof(int64_t)
(24,data)
(25,)
(26,NULL)
(27,exit(-1)
(28,int64_t *)
(29,if (data == NULL)
(30,data)
(31,staticTrue)
(32,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^