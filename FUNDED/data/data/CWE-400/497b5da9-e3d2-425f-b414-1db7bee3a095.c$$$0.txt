-----label-----
0
-----code-----
static void goodB2G2()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    switch(6)
    {
    case 6:
        /* FIX: Close the file from the source before reassigning data to a new file descriptor */
        if (data != -1)
        {
            CLOSE(data);
        }
        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        /* avoid incidental for not closing the file */
        if (data != -1)
        {
            CLOSE(data);
        }
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
37,38
37,39
37,40
37,41
37,42
37,43
37,44
37,45
38,39
40,41
40,42
41,42
41,43
42,43
44,45
46,47
47,48
48,49
48,50
49,50
51,52
53,54
54,55
54,56
55,56
57,58
57,59
57,60
57,61
58,59
61,62
61,63
62,63
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
73,74
75,76
77,78
78,79
79,80
79,81
80,81
82,83
86,87
87,88
87,89
88,89
-----nextToken-----
2,4,8,10,14,16,20,23,24,27,29,32,34,36,39,43,45,50,52,56,59,60,63,65,68,70,74,76,81,83,84,85,89,90,91
-----computeFrom-----
12,13
12,14
18,19
18,20
25,26
25,27
30,31
30,32
41,42
41,43
54,55
54,56
61,62
61,63
66,67
66,68
72,73
72,74
-----guardedBy-----
43,52
74,83
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
static void goodB2G2(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    switch(6)    {    case 6:        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
static void
goodB2G2()
goodB2G2
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Create a file descriptor using open() that may not be closed properly */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    switch(6)    {    case 6:        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
switch(6)    {    case 6:        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"GoodSink_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(20,19,0)
(39,29,0)
(48,17,0)
(35,49,0)
(19,24,0)
(47,21,0)
(34,13,0)
(37,24,0)
(32,8,0)
(45,37,0)
(41,1,0)
(14,23,0)
(1,39,0)
(26,49,0)
(10,21,0)
(12,48,0)
(7,29,0)
(18,19,0)
(43,29,0)
(27,48,0)
(38,35,0)
(36,13,0)
(42,34,0)
(17,48,0)
(15,29,0)
(34,42,0)
(5,23,0)
(31,29,0)
(33,46,0)
(24,13,0)
(21,17,0)
(0,29,0)
(24,19,0)
(16,17,0)
(22,29,0)
(6,31,0)
(51,37,0)
(33,13,0)
(11,8,0)
(30,42,0)
(25,32,0)
(44,34,0)
(24,37,0)
(35,23,0)
(1,4,0)
(13,23,0)
(2,24,0)
(3,39,0)
(9,33,0)
(13,24,0)
(17,21,0)
(49,35,0)
(39,17,0)
(17,39,0)
(50,29,0)
(8,32,0)
(32,39,0)
(49,26,1)
(2,36,1)
(37,45,1)
(9,34,1)
(1,41,1)
(51,2,1)
(27,12,1)
(40,0,1)
(25,39,1)
(15,1,1)
(41,32,1)
(26,38,1)
(32,39,1)
(10,47,1)
(17,21,1)
(6,28,1)
(24,19,1)
(17,48,1)
(45,51,1)
(33,9,1)
(20,18,1)
(32,8,1)
(3,33,1)
(33,13,1)
(40,15,1)
(21,10,1)
(42,30,1)
(15,32,1)
(24,37,1)
(36,35,1)
(1,39,1)
(16,3,1)
(47,16,1)
(30,44,1)
(12,21,1)
(19,20,1)
(8,11,1)
(28,13,1)
(13,24,1)
(39,17,1)
(18,37,1)
(31,6,1)
(35,49,1)
(48,27,1)
(11,25,1)
(34,13,1)
(44,28,1)
(0,31,1)
(3,34,1)
(34,42,1)
(42,28,2)
(3,28,2)
(8,28,2)
(10,28,2)
(24,19,2)
(34,13,2)
(27,28,2)
(35,49,2)
(17,48,2)
(31,28,2)
(44,28,2)
(47,28,2)
(11,28,2)
(32,8,2)
(17,28,2)
(34,28,2)
(12,28,2)
(33,34,2)
(33,13,2)
(0,28,2)
(32,39,2)
(9,34,2)
(1,32,2)
(6,28,2)
(24,37,2)
(39,17,2)
(25,28,2)
(1,39,2)
(48,28,2)
(34,42,2)
(41,32,2)
(17,21,2)
(16,28,2)
(30,28,2)
(21,28,2)
(32,28,2)
(15,28,2)
(39,28,2)
(13,24,2)
-----------------------------------
(0,break;)
(1,CLOSE(data)
(2,"BadSource_open.txt")
(3,data)
(4,)
(5,switch(6)
(6,"Benign, fixed string")
(7,if (data != -1)
(8,-1)
(9,data)
(10,O_CREAT)
(11,1)
(12,S_IREAD)
(13,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(14,data)
(15,break;)
(16,"GoodSink_open.txt")
(17,OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(18,S_IREAD)
(19,S_IREAD|S_IWRITE)
(20,S_IWRITE)
(21,O_RDWR|O_CREAT)
(22,case 6:)
(23,)
(24,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(25,data)
(26,1)
(27,S_IWRITE)
(28,6)
(29,)
(30,1)
(31,printLine("Benign, fixed string")
(32,data != -1)
(33,CLOSE(data)
(34,data != -1)
(35,data = -1)
(36,data)
(37,O_RDWR|O_CREAT)
(38,data)
(39,data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(40,RET)
(41,data)
(42,-1)
(43,if (data != -1)
(44,data)
(45,O_CREAT)
(46,)
(47,O_RDWR)
(48,S_IREAD|S_IWRITE)
(49,-1)
(50,default:)
(51,O_RDWR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^