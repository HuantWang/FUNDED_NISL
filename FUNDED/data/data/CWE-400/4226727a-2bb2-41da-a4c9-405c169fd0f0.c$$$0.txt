-----label-----
0
-----code-----
static void goodB2G2()
{
    wchar_t * data;
    data = NULL;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        wcscpy(data, L"A String");
        printWLine(data);
    }
    if(globalReturnsTrue())
    {
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
20,21
22,23
22,24
22,25
22,26
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
30,31
32,33
32,34
32,35
33,34
35,36
37,38
37,39
39,40
40,41
40,42
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
57,60
58,59
60,61
63,64
64,65
64,66
65,66
67,68
69,70
69,71
70,71
71,72
73,74
74,75
75,76
75,77
76,77
78,79
-----nextToken-----
2,4,8,10,11,15,17,21,26,29,31,34,36,38,41,42,46,48,53,55,59,61,62,66,68,72,77,79
-----computeFrom-----
13,14
13,15
24,25
24,26
37,38
37,39
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }    if(globalReturnsTrue())    {        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G2()
goodB2G2
{    wchar_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }    if(globalReturnsTrue())    {        /* FIX: Deallocate memory */        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        wcscpy(data, L"A String");        printWLine(data);    }
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
if(globalReturnsTrue())    {        /* FIX: Deallocate memory */        free(data);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FIX: Deallocate memory */        free(data);    }
free(data);
free(data)
free
free
data
data
-----joern-----
(25,9,0)
(5,3,0)
(4,20,0)
(0,23,0)
(10,24,0)
(17,20,0)
(29,7,0)
(5,15,0)
(27,20,0)
(15,20,0)
(3,5,0)
(31,6,0)
(23,10,0)
(22,28,0)
(23,21,0)
(8,9,0)
(31,28,0)
(33,3,0)
(10,5,0)
(5,10,0)
(19,0,0)
(10,23,0)
(30,23,0)
(2,15,0)
(3,33,0)
(12,33,0)
(0,21,0)
(18,5,0)
(24,10,0)
(28,31,0)
(26,15,0)
(13,29,0)
(29,15,0)
(9,23,0)
(29,23,0)
(32,21,0)
(14,3,0)
(16,0,1)
(15,26,1)
(22,9,1)
(11,15,1)
(5,3,1)
(3,33,1)
(29,13,1)
(18,30,1)
(29,15,1)
(5,15,1)
(30,11,1)
(8,25,1)
(19,9,1)
(14,18,1)
(25,23,1)
(23,10,1)
(10,5,1)
(29,23,1)
(16,11,1)
(0,23,1)
(10,24,1)
(9,8,1)
(31,28,1)
(12,14,1)
(33,12,1)
(0,19,1)
(1,29,1)
(13,16,1)
(26,2,1)
(19,31,1)
(28,22,1)
(9,23,1)
(1,16,1)
(23,10,2)
(31,9,2)
(5,3,2)
(5,11,2)
(12,11,2)
(8,11,2)
(13,16,2)
(31,28,2)
(0,23,2)
(30,11,2)
(23,11,2)
(10,24,2)
(3,11,2)
(10,5,2)
(22,9,2)
(3,33,2)
(33,11,2)
(14,11,2)
(29,23,2)
(9,11,2)
(18,11,2)
(28,9,2)
(25,11,2)
(29,16,2)
(19,11,2)
(9,23,2)
(0,11,2)
(5,15,2)
(29,15,2)
(10,11,2)
-----------------------------------
(0,printWLine(data)
(1,RET)
(2,data)
(3,100*sizeof(wchar_t)
(4,data)
(5,realloc(data, 100*sizeof(wchar_t)
(6,)
(7,)
(8,NULL)
(9,data == NULL)
(10,(wchar_t *)
(11,globalReturnsTrue()
(12,wchar_t)
(13,data)
(14,100)
(15,data = NULL)
(16,globalReturnsTrue()
(17,if(globalReturnsTrue()
(18,data)
(19,data)
(20,)
(21,)
(22,1)
(23,data = (wchar_t *)
(24,wchar_t *)
(25,data)
(26,NULL)
(27,if(globalReturnsTrue()
(28,-1)
(29,free(data)
(30,data)
(31,exit(-1)
(32,if (data == NULL)
(33,sizeof(wchar_t)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^