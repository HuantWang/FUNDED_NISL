-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad()
{
    twoIntsStruct * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine(&data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
20,22
21,22
24,25
24,26
24,27
24,28
24,29
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
87,89
88,89
88,90
89,90
92,93
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,90,91,93
-----computeFrom-----
14,15
14,16
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad(){    twoIntsStruct * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_06_bad
{    twoIntsStruct * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine(&data[0]);    }
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(34,30,0)
(9,4,0)
(23,40,0)
(14,41,0)
(28,51,0)
(21,35,0)
(12,7,0)
(50,25,0)
(27,33,0)
(37,41,0)
(4,9,0)
(35,8,0)
(22,10,0)
(35,28,0)
(9,41,0)
(5,8,0)
(38,51,0)
(45,33,0)
(36,30,0)
(51,20,0)
(2,35,0)
(39,20,0)
(32,13,0)
(16,7,0)
(31,1,0)
(42,14,0)
(16,26,0)
(39,48,0)
(48,0,0)
(10,20,0)
(33,30,0)
(44,0,0)
(47,40,0)
(29,5,0)
(48,39,0)
(28,35,0)
(19,20,0)
(9,8,0)
(14,42,0)
(24,30,0)
(5,13,0)
(18,8,0)
(43,42,0)
(3,1,0)
(0,8,0)
(7,16,0)
(49,14,0)
(8,20,0)
(13,5,0)
(41,33,0)
(46,25,0)
(0,48,0)
(6,28,0)
(41,9,0)
(25,8,0)
(41,14,0)
(13,10,0)
(15,5,0)
(17,0,0)
(8,9,0)
(2,21,1)
(3,33,1)
(17,44,1)
(25,46,1)
(6,35,1)
(8,9,1)
(49,37,1)
(5,8,1)
(0,17,1)
(11,40,1)
(33,45,1)
(10,22,1)
(21,25,1)
(38,28,1)
(47,23,1)
(40,47,1)
(28,6,1)
(13,32,1)
(50,8,1)
(46,50,1)
(35,8,1)
(7,12,1)
(0,8,1)
(44,10,1)
(9,4,1)
(23,1,1)
(5,15,1)
(16,7,1)
(45,27,1)
(43,49,1)
(12,25,1)
(41,14,1)
(21,16,1)
(37,18,1)
(29,51,1)
(23,39,1)
(28,35,1)
(42,43,1)
(13,5,1)
(32,5,1)
(39,48,1)
(18,1,1)
(14,42,1)
(15,29,1)
(1,31,1)
(31,3,1)
(51,38,1)
(48,0,1)
(22,13,1)
(41,33,1)
(35,2,1)
(9,41,1)
(25,8,1)
(37,1,2)
(39,48,2)
(16,7,2)
(18,1,2)
(42,1,2)
(51,1,2)
(49,1,2)
(7,25,2)
(43,1,2)
(9,41,2)
(25,1,2)
(22,1,2)
(9,4,2)
(10,1,2)
(38,1,2)
(0,8,2)
(48,1,2)
(46,1,2)
(21,1,2)
(15,1,2)
(12,25,2)
(41,1,2)
(28,35,2)
(16,25,2)
(14,1,2)
(35,8,2)
(32,1,2)
(25,8,2)
(5,1,2)
(48,0,2)
(6,1,2)
(41,14,2)
(5,8,2)
(9,1,2)
(50,1,2)
(13,5,2)
(8,1,2)
(41,33,2)
(29,1,2)
(28,1,2)
(13,1,2)
(0,1,2)
(35,1,2)
(2,1,2)
(14,42,2)
(44,1,2)
(8,9,2)
(17,1,2)
(39,1,2)
-----------------------------------
(0,data[0])
(1,STATIC_CONST_FIVE==5)
(2,0)
(3,STATIC_CONST_FIVE)
(4,twoIntsStruct *)
(5,data[0])
(6,intOne)
(7,-1)
(8,data = (twoIntsStruct *)
(9,(twoIntsStruct *)
(10,data[0].intTwo = 0)
(11,RET)
(12,1)
(13,data[0].intTwo)
(14,100*sizeof(twoIntsStruct)
(15,0)
(16,exit(-1)
(17,0)
(18,data)
(19,if (data == NULL)
(20,)
(21,data)
(22,0)
(23,STATIC_CONST_FIVE)
(24,data)
(25,data == NULL)
(26,)
(27,data)
(28,data[0].intOne)
(29,data)
(30,)
(31,5)
(32,intTwo)
(33,data = NULL)
(34,if(STATIC_CONST_FIVE==5)
(35,data[0])
(36,if(STATIC_CONST_FIVE==5)
(37,data)
(38,0)
(39,printStructLine(&data[0])
(40,STATIC_CONST_FIVE==5)
(41,realloc(data, 100*sizeof(twoIntsStruct)
(42,sizeof(twoIntsStruct)
(43,twoIntsStruct)
(44,data)
(45,NULL)
(46,NULL)
(47,5)
(48,&data[0])
(49,100)
(50,data)
(51,data[0].intOne = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^