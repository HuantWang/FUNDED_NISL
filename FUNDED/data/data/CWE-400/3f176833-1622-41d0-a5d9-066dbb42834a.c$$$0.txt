-----label-----
0
-----code-----
static void goodB2G()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,69,71
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* FIX: Deallocate memory */    free(data);}
static void
goodB2G()
goodB2G
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    /* FIX: Deallocate memory */    free(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(8,9,0)
(7,6,0)
(0,9,0)
(2,26,0)
(2,18,0)
(10,18,0)
(22,20,0)
(22,6,0)
(17,24,0)
(20,26,0)
(20,6,0)
(19,6,0)
(3,26,0)
(26,2,0)
(25,19,0)
(4,19,0)
(26,20,0)
(1,6,0)
(9,29,0)
(12,24,0)
(21,14,0)
(27,14,0)
(29,6,0)
(13,20,0)
(14,27,0)
(27,16,0)
(28,6,0)
(18,2,0)
(29,9,0)
(24,20,0)
(9,20,0)
(5,2,0)
(26,3,0)
(23,22,0)
(24,12,1)
(22,20,1)
(1,27,1)
(29,9,1)
(10,5,1)
(24,20,1)
(19,25,1)
(11,22,1)
(2,18,1)
(14,21,1)
(5,13,1)
(9,20,1)
(17,20,1)
(20,26,1)
(23,29,1)
(21,24,1)
(1,24,1)
(8,1,1)
(18,10,1)
(9,0,1)
(22,23,1)
(12,17,1)
(0,8,1)
(25,4,1)
(13,19,1)
(26,2,1)
(27,14,1)
(26,3,1)
(29,9,2)
(27,24,2)
(14,24,2)
(26,2,2)
(27,14,2)
(20,26,2)
(9,20,2)
(26,3,2)
(22,20,2)
(2,18,2)
(21,24,2)
(24,20,2)
-----------------------------------
(0,0)
(1,L)
(2,calloc(100, sizeof(int64_t)
(3,int64_t *)
(4,data)
(5,100)
(6,)
(7,if (data == NULL)
(8,data)
(9,data[0])
(10,int64_t)
(11,RET)
(12,NULL)
(13,data)
(14,-1)
(15, sizeof(int64_t)
(16,)
(17,data)
(18,sizeof(int64_t)
(19,data = NULL)
(20,data = (int64_t *)
(21,1)
(22,free(data)
(23,data)
(24,data == NULL)
(25,NULL)
(26,(int64_t *)
(27,exit(-1)
(28,data)
(29,printLongLongLine(data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^