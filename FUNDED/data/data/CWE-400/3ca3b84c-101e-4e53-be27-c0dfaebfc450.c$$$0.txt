-----label-----
0
-----code-----
static void goodB2G()
{
    twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    goto sink;
sink:
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
61,63
62,63
67,68
68,69
68,70
69,70
69,71
70,71
70,72
71,72
76,77
77,78
77,79
78,79
80,81
81,82
81,83
82,83
85,86
87,88
87,89
89,90
90,91
90,92
91,92
93,94
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,39,43,44,48,50,55,57,63,64,65,66,72,73,74,75,79,83,84,86,88,92,94
-----computeFrom-----
14,15
14,16
24,25
24,26
38,39
38,40
46,47
46,48
59,60
59,61
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* FIX: Deallocate memory */    free(data);}
static void
goodB2G()
goodB2G
{    twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    goto sink;sink:    /* FIX: Deallocate memory */    free(data);}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
source
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* FIX: Deallocate memory */    free(data);
sink
free(data);
free(data)
free
free
data
data
-----joern-----
(41,24,0)
(8,12,0)
(20,14,0)
(17,20,0)
(34,26,0)
(10,34,0)
(46,12,0)
(11,5,0)
(13,23,0)
(47,15,0)
(31,15,0)
(45,37,0)
(36,23,0)
(37,45,0)
(14,20,0)
(3,23,0)
(22,23,0)
(12,17,0)
(38,12,0)
(44,5,0)
(30,23,0)
(32,37,0)
(12,38,0)
(44,24,0)
(18,17,0)
(21,37,0)
(39,44,0)
(2,43,0)
(9,33,0)
(38,1,0)
(28,45,0)
(35,13,0)
(24,17,0)
(48,27,0)
(4,23,0)
(34,47,0)
(1,38,0)
(15,23,0)
(26,34,0)
(6,24,0)
(24,44,0)
(4,17,0)
(45,13,0)
(47,34,0)
(25,43,0)
(19,4,0)
(16,26,0)
(1,23,0)
(37,17,0)
(0,15,0)
(43,17,0)
(5,23,0)
(9,27,0)
(29,47,0)
(17,23,0)
(27,9,0)
(20,47,0)
(20,17,0)
(40,23,0)
(42,23,0)
(47,20,0)
(47,15,1)
(24,41,1)
(6,43,1)
(4,17,1)
(19,42,1)
(28,37,1)
(18,36,1)
(44,39,1)
(29,18,1)
(45,28,1)
(16,10,1)
(6,9,1)
(41,6,1)
(21,32,1)
(9,27,1)
(20,47,1)
(1,38,1)
(45,37,1)
(38,12,1)
(12,17,1)
(27,48,1)
(24,17,1)
(15,31,1)
(34,26,1)
(46,8,1)
(37,21,1)
(26,16,1)
(4,19,1)
(32,5,1)
(8,13,1)
(35,45,1)
(42,1,1)
(10,29,1)
(5,11,1)
(48,43,1)
(17,20,1)
(31,0,1)
(39,24,1)
(36,15,1)
(44,24,1)
(11,44,1)
(7,4,1)
(43,25,1)
(2,17,1)
(43,17,1)
(47,34,1)
(20,14,1)
(12,46,1)
(37,17,1)
(13,35,1)
(25,2,1)
(48,43,2)
(9,43,2)
(24,17,2)
(1,38,2)
(34,26,2)
(20,47,2)
(12,17,2)
(20,14,2)
(4,17,2)
(37,17,2)
(43,17,2)
(47,15,2)
(44,24,2)
(38,12,2)
(47,34,2)
(17,20,2)
(9,27,2)
(45,37,2)
(27,43,2)
-----------------------------------
(0,data)
(1,printStructLine(&data[0])
(2,data)
(3,if (data == NULL)
(4,free(data)
(5,data[0].intOne = 0)
(6,data)
(7,RET)
(8,data)
(9,exit(-1)
(10,100)
(11,0)
(12,data[0])
(13,data[0].intTwo = 0)
(14,twoIntsStruct *)
(15,data = NULL)
(16,twoIntsStruct)
(17,data = (twoIntsStruct *)
(18,data)
(19,data)
(20,(twoIntsStruct *)
(21,0)
(22,data)
(23,)
(24,data[0])
(25,NULL)
(26,sizeof(twoIntsStruct)
(27,-1)
(28,intTwo)
(29,data)
(30,source:)
(31,NULL)
(32,data)
(33,)
(34,100*sizeof(twoIntsStruct)
(35,0)
(36,goto source;)
(37,data[0])
(38,&data[0])
(39,intOne)
(40,sink:)
(41,0)
(42,goto sink;)
(43,data == NULL)
(44,data[0].intOne)
(45,data[0].intTwo)
(46,0)
(47,realloc(data, 100*sizeof(twoIntsStruct)
(48,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^