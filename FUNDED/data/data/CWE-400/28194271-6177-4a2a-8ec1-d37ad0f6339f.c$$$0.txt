-----label-----
0
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_64b_goodB2GSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
    /* dereference dataPtr into data */
    twoIntsStruct * data = (*dataPtr);
    /* FIX: Deallocate memory */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
13,14
15,16
15,17
15,18
15,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
24,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
33,36
36,37
37,38
38,39
39,40
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,6,8,9,14,16,17,18,23,25,26,28,32,34,35,40,44,46
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_64b_goodB2GSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;    /* dereference dataPtr into data */    twoIntsStruct * data = (*dataPtr);    /* FIX: Deallocate memory */    free(data);}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_64b_goodB2GSink(void * dataVoidPtr)
CWE401_Memory_Leak__twoIntsStruct_realloc_64b_goodB2GSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;    /* dereference dataPtr into data */    twoIntsStruct * data = (*dataPtr);    /* FIX: Deallocate memory */    free(data);}
twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
twoIntsStruct
twoIntsStruct
* * dataPtr = (twoIntsStruct * *)dataVoidPtr
*
*
dataPtr
= (twoIntsStruct * *)dataVoidPtr
(twoIntsStruct * *)dataVoidPtr
twoIntsStruct * *
twoIntsStruct
twoIntsStruct
* *
*
*
dataVoidPtr
dataVoidPtr
twoIntsStruct * data = (*dataPtr);
twoIntsStruct * data = (*dataPtr);
twoIntsStruct
twoIntsStruct
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
free(data);
free(data)
free
free
data
data
-----joern-----
(13,12,0)
(13,10,0)
(8,10,0)
(7,11,0)
(11,10,0)
(12,9,0)
(5,2,0)
(15,10,0)
(11,2,0)
(2,5,0)
(14,5,0)
(12,13,0)
(12,4,0)
(3,2,0)
(4,12,0)
(0,12,0)
(6,13,0)
(5,13,0)
(2,10,0)
(1,11,1)
(2,5,1)
(13,12,1)
(11,2,1)
(5,14,1)
(14,3,1)
(12,4,1)
(3,13,1)
(5,13,1)
(12,0,1)
(7,2,1)
(0,6,1)
(11,7,1)
(12,9,1)
(13,12,2)
(12,9,2)
(11,2,2)
(5,13,2)
(2,5,2)
(12,4,2)
-----------------------------------
(0,dataVoidPtr)
(1,RET)
(2,* data = (*dataPtr)
(3,data)
(4,twoIntsStruct * *)
(5,*dataPtr)
(6,dataPtr)
(7,data)
(8,data)
(9,void * dataVoidPtr)
(10,)
(11,free(data)
(12,(twoIntsStruct * *)
(13,* * dataPtr = (twoIntsStruct * *)
(14,dataPtr)
(15,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^