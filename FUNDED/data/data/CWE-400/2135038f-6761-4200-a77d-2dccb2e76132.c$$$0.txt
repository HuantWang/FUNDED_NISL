-----label-----
0
-----code-----
static void goodB2G()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    /* FIX: If the file is still opened, close it */
    if (data != -1)
    {
        CLOSE(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,16,20,23,24,27,29,32,34,38,40,45,47
-----computeFrom-----
12,13
12,14
18,19
18,20
25,26
25,27
30,31
30,32
36,37
36,38
-----guardedBy-----
38,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    /* FIX: If the file is still opened, close it */    if (data != -1)    {        CLOSE(data);    }}
static void
goodB2G()
goodB2G
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    /* FIX: If the file is still opened, close it */    if (data != -1)    {        CLOSE(data);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)    {        CLOSE(data);    }
data != -1
data
data
-1
1
{        CLOSE(data);    }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(11,7,0)
(16,0,0)
(13,4,0)
(2,24,0)
(3,19,0)
(24,14,0)
(3,23,0)
(4,3,0)
(5,23,0)
(19,7,0)
(14,24,0)
(18,4,0)
(12,13,0)
(9,3,0)
(20,23,0)
(1,19,0)
(21,14,0)
(7,19,0)
(17,1,0)
(19,3,0)
(10,19,0)
(16,3,0)
(6,16,0)
(22,1,0)
(4,13,0)
(14,23,0)
(19,1,0)
(8,7,0)
(1,22,1)
(4,3,1)
(6,4,1)
(4,13,1)
(3,19,1)
(24,2,1)
(12,18,1)
(17,7,1)
(22,17,1)
(15,16,1)
(19,1,1)
(13,12,1)
(7,8,1)
(16,3,1)
(8,11,1)
(19,7,1)
(18,3,1)
(9,14,1)
(11,10,1)
(2,21,1)
(14,24,1)
(16,6,1)
(15,4,1)
(10,9,1)
(19,7,2)
(16,4,2)
(16,3,2)
(4,3,2)
(6,4,2)
(19,1,2)
(4,13,2)
(14,24,2)
(3,19,2)
-----------------------------------
(0,)
(1,S_IREAD|S_IWRITE)
(2,1)
(3,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(4,data != -1)
(5,if (data != -1)
(6,data)
(7,O_RDWR|O_CREAT)
(8,O_CREAT)
(9,data)
(10,"BadSource_open.txt")
(11,O_RDWR)
(12,1)
(13,-1)
(14,data = -1)
(15,RET)
(16,CLOSE(data)
(17,S_IREAD)
(18,data)
(19,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(20,data)
(21,data)
(22,S_IWRITE)
(23,)
(24,-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^