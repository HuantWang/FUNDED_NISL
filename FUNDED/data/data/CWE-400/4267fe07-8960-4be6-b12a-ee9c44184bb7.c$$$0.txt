-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_good.txt";
        /* FIX: Validate count before using it as the for loop variant to write to a file */
        if (count > 0 && count <= 20)
        {
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
37,39
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
47,48
47,49
47,50
47,51
48,49
49,50
49,51
50,51
52,53
52,54
52,55
53,54
55,56
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
67,68
70,71
70,72
70,73
70,74
71,72
72,73
72,74
73,74
76,77
76,78
77,78
79,80
79,81
80,81
80,82
81,82
84,85
86,87
87,88
89,90
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
97,98
97,99
97,100
97,101
97,102
98,99
100,101
102,103
103,104
103,105
106,107
106,108
107,108
109,110
111,112
113,114
114,115
114,116
115,116
118,119
118,120
119,120
121,122
122,123
123,124
123,125
124,125
126,127
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,41,42,45,46,51,54,56,57,61,63,68,69,74,75,78,82,83,85,88,94,96,99,101,104,105,108,110,112,116,117,120,125,127
-----computeFrom-----
38,39
38,40
39,40
39,41
43,44
43,45
49,50
49,51
59,60
59,61
72,73
72,74
76,77
76,78
91,92
91,93
-----guardedBy-----
45,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink(int count)
CWE400_Resource_Exhaustion__listen_socket_fwrite_51b_goodB2GSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(37,18,0)
(39,56,0)
(6,31,0)
(20,9,0)
(66,46,0)
(8,41,0)
(63,33,0)
(40,41,0)
(21,46,0)
(24,56,0)
(46,21,0)
(0,34,0)
(64,60,0)
(41,21,0)
(10,35,0)
(59,29,0)
(51,7,0)
(64,42,0)
(44,34,0)
(41,9,0)
(38,65,0)
(57,16,0)
(32,56,0)
(7,21,0)
(1,7,0)
(4,32,0)
(49,15,0)
(31,6,0)
(41,22,0)
(55,46,0)
(12,30,0)
(61,30,0)
(54,18,0)
(62,17,0)
(64,16,0)
(43,56,0)
(17,56,0)
(11,32,0)
(3,50,0)
(45,6,0)
(53,21,0)
(16,64,0)
(31,30,0)
(60,64,0)
(41,15,0)
(52,17,0)
(33,56,0)
(47,38,0)
(22,41,0)
(36,25,0)
(15,41,0)
(21,34,0)
(29,22,0)
(23,56,0)
(2,33,0)
(22,29,0)
(30,31,0)
(9,41,0)
(5,27,0)
(25,13,0)
(38,21,0)
(6,42,0)
(16,18,0)
(56,19,0)
(30,42,0)
(28,34,0)
(50,18,0)
(58,64,0)
(14,6,0)
(46,17,0)
(48,16,1)
(20,15,1)
(4,11,1)
(38,21,1)
(50,3,1)
(51,21,1)
(47,48,1)
(31,6,1)
(59,16,1)
(31,30,1)
(57,50,1)
(12,61,1)
(63,32,1)
(54,37,1)
(30,42,1)
(16,64,1)
(45,14,1)
(32,4,1)
(26,48,1)
(25,36,1)
(46,17,1)
(40,9,1)
(26,31,1)
(1,51,1)
(64,60,1)
(53,31,1)
(29,59,1)
(21,46,1)
(7,21,1)
(49,8,1)
(41,21,1)
(52,33,1)
(6,42,1)
(22,41,1)
(16,18,1)
(41,9,1)
(18,54,1)
(64,58,1)
(58,57,1)
(6,45,1)
(8,29,1)
(7,1,1)
(2,63,1)
(62,52,1)
(14,30,1)
(41,15,1)
(36,7,1)
(27,5,1)
(61,17,1)
(30,12,1)
(22,29,1)
(46,66,1)
(37,7,1)
(26,38,1)
(33,2,1)
(64,42,1)
(55,53,1)
(57,18,1)
(15,49,1)
(5,22,1)
(9,20,1)
(38,47,1)
(37,25,1)
(41,40,1)
(50,18,1)
(3,27,1)
(3,22,1)
(17,62,1)
(66,55,1)
(54,31,2)
(41,15,2)
(37,31,2)
(45,30,2)
(6,30,2)
(58,16,2)
(15,16,2)
(20,16,2)
(31,6,2)
(53,31,2)
(57,16,2)
(48,31,2)
(64,60,2)
(55,31,2)
(21,31,2)
(46,31,2)
(49,16,2)
(50,18,2)
(30,42,2)
(7,21,2)
(64,31,2)
(16,64,2)
(50,16,2)
(41,16,2)
(38,48,2)
(3,16,2)
(66,31,2)
(22,29,2)
(9,16,2)
(46,17,2)
(36,7,2)
(22,41,2)
(64,16,2)
(64,42,2)
(18,31,2)
(40,16,2)
(16,16,2)
(41,21,2)
(6,42,2)
(41,9,2)
(57,31,2)
(58,31,2)
(5,22,2)
(38,21,2)
(25,7,2)
(47,48,2)
(7,31,2)
(16,18,2)
(27,22,2)
(29,16,2)
(1,31,2)
(31,30,2)
(8,16,2)
(16,31,2)
(14,30,2)
(59,16,2)
(21,46,2)
(22,16,2)
(51,31,2)
-----------------------------------
(0,if (pFile)
(1,NULL)
(2,NULL)
(3,i)
(4,0)
(5,1)
(6,count <= 20)
(7,pFile == NULL)
(8,SENTENCE)
(9,strlen(SENTENCE)
(10,if (strlen(SENTENCE)
(11,i)
(12,0)
(13,)
(14,count)
(15,sizeof(char)
(16,i < (size_t)
(17,*filename = "output_good.txt")
(18,i = 0)
(19,)
(20,SENTENCE)
(21,pFile = fopen(filename, "w+")
(22,strlen(SENTENCE)
(23,pFile)
(24,filename)
(25,exit(1)
(26,RET)
(27,exit(1)
(28,if (pFile == NULL)
(29,strlen(SENTENCE)
(30,count > 0)
(31,count > 0 && count <= 20)
(32,i = 0)
(33,*pFile = NULL)
(34,)
(35,)
(36,1)
(37,i)
(38,fclose(pFile)
(39,if (count > 0 && count <= 20)
(40,pFile)
(41,fwrite(SENTENCE, sizeof(char)
(42,int count)
(43,i)
(44,for (i = 0; i < (size_t)
(45,20)
(46,fopen(filename, "w+")
(47,pFile)
(48,pFile)
(49,char)
(50,i++)
(51,pFile)
(52,filename)
(53,pFile)
(54,0)
(55,filename)
(56,)
(57,i)
(58,count)
(59,SENTENCE)
(60,size_t)
(61,count)
(62,"output_good.txt")
(63,pFile)
(64,(size_t)
(65,)
(66,"w+")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^