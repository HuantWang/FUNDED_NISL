-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_21_bad()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,55,56,57,61,64,65,69,70,74,76
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_21_bad(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__int_realloc_21_bad()
CWE401_Memory_Leak__int_realloc_21_bad
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(19,0,0)
(12,9,0)
(29,2,0)
(12,0,0)
(3,0,0)
(1,27,0)
(37,13,0)
(32,2,0)
(13,9,0)
(25,0,0)
(27,1,0)
(21,0,0)
(17,9,0)
(1,31,0)
(15,9,0)
(35,9,0)
(19,13,0)
(10,8,0)
(8,10,0)
(36,15,0)
(18,19,0)
(26,29,0)
(8,6,0)
(1,0,0)
(14,7,0)
(3,13,0)
(24,7,0)
(3,20,0)
(31,1,0)
(27,29,0)
(29,27,0)
(16,3,0)
(7,9,0)
(0,9,0)
(20,9,0)
(20,3,0)
(27,15,0)
(0,1,0)
(4,19,0)
(22,12,0)
(33,25,0)
(11,27,0)
(30,15,0)
(23,10,0)
(28,25,0)
(34,3,0)
(2,29,0)
(24,14,1)
(1,31,1)
(27,15,1)
(4,25,1)
(26,11,1)
(7,24,1)
(19,0,1)
(29,2,1)
(13,37,1)
(4,8,1)
(28,33,1)
(12,22,1)
(3,13,1)
(11,21,1)
(25,28,1)
(32,26,1)
(18,4,1)
(19,18,1)
(2,32,1)
(8,10,1)
(34,13,1)
(15,36,1)
(20,3,1)
(37,19,1)
(16,34,1)
(10,23,1)
(27,29,1)
(12,0,1)
(5,12,1)
(3,0,1)
(23,25,1)
(3,16,1)
(0,1,1)
(21,15,1)
(33,0,1)
(22,7,1)
(14,20,1)
(1,27,1)
(36,30,1)
(25,0,1)
(1,27,2)
(27,15,2)
(10,25,2)
(23,25,2)
(1,31,2)
(8,25,2)
(25,0,2)
(29,2,2)
(8,10,2)
(12,0,2)
(19,0,2)
(3,0,2)
(20,3,2)
(0,1,2)
(27,29,2)
(3,13,2)
-----------------------------------
(0,data = (int *)
(1,(int *)
(2,sizeof(int)
(3,data[0])
(4,data)
(5,RET)
(6,)
(7,badStatic = 1)
(8,exit(-1)
(9,)
(10,-1)
(11,data)
(12,badSink(data)
(13,data[0] = 5)
(14,badStatic)
(15,data = NULL)
(16,0)
(17,if (data == NULL)
(18,0)
(19,data[0])
(20,printIntLine(data[0])
(21,data)
(22,data)
(23,1)
(24,1)
(25,data == NULL)
(26,100)
(27,realloc(data, 100*sizeof(int)
(28,NULL)
(29,100*sizeof(int)
(30,data)
(31,int *)
(32,int)
(33,data)
(34,data)
(35,data)
(36,NULL)
(37,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^