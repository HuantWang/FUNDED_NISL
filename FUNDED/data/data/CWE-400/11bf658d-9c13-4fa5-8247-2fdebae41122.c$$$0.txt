-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = fopen("BadSource_fopen.txt", "w+");
    switch(6)
    {
    case 6:
        /* FIX: If the file is still opened, close it */
        if (data != NULL)
        {
            fclose(data);
        }
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
48,49
49,50
49,51
50,51
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,29,32,36,38,43,45,46,47,51,52,53
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
-----guardedBy-----
36,45
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;
-----ast_node-----
static void goodB2G2(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    switch(6)    {    case 6:        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    switch(6)    {    case 6:        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
switch(6)    {    case 6:        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
-----joern-----
(1,20,0)
(26,16,0)
(19,2,0)
(10,8,0)
(3,24,0)
(23,16,0)
(11,24,0)
(12,15,0)
(8,2,0)
(15,6,0)
(14,2,0)
(0,8,0)
(25,24,0)
(7,24,0)
(4,24,0)
(8,20,0)
(15,8,0)
(20,8,0)
(22,7,0)
(21,0,0)
(5,24,0)
(17,0,0)
(13,20,0)
(16,2,0)
(9,3,1)
(10,16,1)
(0,17,1)
(1,13,1)
(25,15,1)
(26,23,1)
(18,8,1)
(3,7,1)
(16,26,1)
(15,12,1)
(17,21,1)
(25,0,1)
(15,8,1)
(13,10,1)
(22,18,1)
(21,18,1)
(12,0,1)
(20,1,1)
(8,20,1)
(9,25,1)
(7,22,1)
(0,8,1)
(8,20,2)
(3,18,2)
(15,8,2)
(7,18,2)
(0,18,2)
(25,18,2)
(15,0,2)
(21,18,2)
(17,18,2)
(12,0,2)
(0,8,2)
(22,18,2)
-----------------------------------
(0,data != NULL)
(1,"w+")
(2,)
(3,break;)
(4,case 6:)
(5,if (data != NULL)
(6,)
(7,printLine("Benign, fixed string")
(8,data = fopen("BadSource_fopen.txt", "w+")
(9,RET)
(10,data)
(11,default:)
(12,data)
(13,"BadSource_fopen.txt")
(14,switch(6)
(15,fclose(data)
(16,data = NULL)
(17,NULL)
(18,6)
(19,data)
(20,fopen("BadSource_fopen.txt", "w+")
(21,data)
(22,"Benign, fixed string")
(23,data)
(24,)
(25,break;)
(26,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^