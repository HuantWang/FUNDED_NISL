-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink(int * countPtr)
{
    int count = *countPtr;
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
16,17
17,18
18,19
20,21
21,22
21,23
22,23
24,25
26,27
27,28
27,29
28,29
-----nextToken-----
2,4,6,8,9,13,15,19,23,25,29,30
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink(int * countPtr){    int count = *countPtr;    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
void
CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink(int * countPtr)
CWE400_Resource_Exhaustion__fscanf_sleep_63b_goodG2BSink
int * countPtr
int
* countPtr
*
countPtr
{    int count = *countPtr;    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int count = *countPtr;
int count = *countPtr;
int
count = *countPtr
count
= *countPtr
*countPtr
countPtr
countPtr
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(11,1,0)
(9,7,0)
(0,9,0)
(1,7,0)
(6,8,0)
(1,8,0)
(8,1,0)
(3,7,0)
(5,11,0)
(11,7,0)
(8,2,0)
(4,1,0)
(10,9,1)
(6,4,1)
(0,11,1)
(11,1,1)
(1,8,1)
(9,0,1)
(11,5,1)
(5,1,1)
(8,2,1)
(8,6,1)
(11,1,2)
(8,2,2)
(1,8,2)
-----------------------------------
(0,"Sleep time possibly too long")
(1,count = *countPtr)
(2,int * countPtr)
(3,count)
(4,count)
(5,count)
(6,countPtr)
(7,)
(8,*countPtr)
(9,printLine("Sleep time possibly too long")
(10,RET)
(11,SLEEP(count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^