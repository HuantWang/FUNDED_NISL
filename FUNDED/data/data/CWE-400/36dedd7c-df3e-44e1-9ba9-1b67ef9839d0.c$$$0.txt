-----label-----
0
-----code-----
static void goodG2B()
{
    struct _twoIntsStruct * data;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
30,31
32,33
32,34
34,35
35,36
35,37
36,37
39,40
40,41
40,42
41,42
41,43
42,43
42,44
43,44
48,49
49,50
49,51
50,51
50,52
51,52
51,53
52,53
57,58
58,59
58,60
59,60
61,62
61,63
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,37,38,44,45,46,47,53,54,55,56,60,64,66,70,71,72
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
40,41
40,42
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
static void goodG2B(){    struct _twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    struct _twoIntsStruct * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
ALLOCA(100*sizeof(struct _twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
;
-----joern-----
(18,7,0)
(32,10,0)
(15,12,0)
(24,27,0)
(9,15,0)
(32,34,0)
(23,27,0)
(27,7,0)
(17,27,0)
(4,21,0)
(0,7,0)
(34,13,0)
(21,20,0)
(13,34,0)
(21,7,0)
(5,31,0)
(15,8,0)
(6,2,0)
(15,9,0)
(3,20,0)
(14,18,0)
(28,11,0)
(30,21,0)
(7,18,0)
(10,18,0)
(18,10,0)
(7,11,0)
(25,11,0)
(12,11,0)
(26,28,0)
(34,32,0)
(31,11,0)
(18,14,0)
(8,35,0)
(10,32,0)
(27,24,0)
(19,32,0)
(8,15,0)
(12,15,0)
(1,35,0)
(33,2,0)
(20,31,0)
(35,8,0)
(22,24,0)
(24,28,0)
(29,35,0)
(2,11,0)
(35,7,0)
(20,21,0)
(27,7,1)
(30,4,1)
(15,8,1)
(17,7,1)
(10,32,1)
(23,17,1)
(1,31,1)
(21,7,1)
(5,20,1)
(20,21,1)
(24,27,1)
(21,30,1)
(32,34,1)
(15,9,1)
(19,0,1)
(27,23,1)
(6,33,1)
(18,14,1)
(8,35,1)
(28,26,1)
(2,6,1)
(7,18,1)
(31,5,1)
(34,19,1)
(35,29,1)
(22,27,1)
(26,24,1)
(4,28,1)
(34,13,1)
(12,15,1)
(29,1,1)
(24,22,1)
(35,7,1)
(3,21,1)
(0,2,1)
(16,12,1)
(18,10,1)
(20,3,1)
(27,7,2)
(10,32,2)
(21,7,2)
(34,13,2)
(8,35,2)
(15,8,2)
(20,21,2)
(12,15,2)
(32,34,2)
(24,27,2)
(35,7,2)
(7,18,2)
(18,10,2)
(18,14,2)
(15,9,2)
-----------------------------------
(0,data)
(1,data)
(2,data = NULL)
(3,intTwo)
(4,data)
(5,0)
(6,NULL)
(7,data = (struct _twoIntsStruct *)
(8,&data[0])
(9,twoIntsStruct *)
(10,ALLOCA(100*sizeof(struct _twoIntsStruct)
(11,)
(12,printStructLine((twoIntsStruct *)
(13,struct _twoIntsStruct)
(14,struct _twoIntsStruct *)
(15,(twoIntsStruct *)
(16,RET)
(17,data)
(18,(struct _twoIntsStruct *)
(19,100)
(20,data[0].intTwo)
(21,data[0])
(22,intOne)
(23,0)
(24,data[0].intOne)
(25,data)
(26,0)
(27,data[0])
(28,data[0].intOne = 0)
(29,0)
(30,0)
(31,data[0].intTwo = 0)
(32,100*sizeof(struct _twoIntsStruct)
(33,data)
(34,sizeof(struct _twoIntsStruct)
(35,data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^