-----label-----
0
-----code-----
static void goodB2G()
{
    int data;
    CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType myUnion;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    myUnion.unionFirst = data;
    {
        int data = myUnion.unionSecond;
        /* FIX: If the file is still opened, close it */
        if (data != -1)
        {
            CLOSE(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
27,31
28,29
31,32
31,33
32,33
34,35
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
55,56
56,57
56,58
57,58
60,61
60,62
61,62
61,63
62,63
64,65
66,67
67,68
68,69
68,70
69,70
71,72
-----nextToken-----
2,4,8,10,14,16,20,22,26,29,30,33,35,38,40,45,46,48,52,54,58,59,63,65,70,72
-----computeFrom-----
18,19
18,20
24,25
24,26
31,32
31,33
36,37
36,38
42,43
42,44
61,62
61,63
-----guardedBy-----
63,72
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int data;    CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }}
static void
goodB2G()
goodB2G
{    int data;    CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType myUnion;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file without closing it */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    myUnion.unionFirst = data;    {        int data = myUnion.unionSecond;        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }}
int data;
int data;
int
data
data
CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType myUnion;
CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType myUnion;
CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType
CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_34_unionType
myUnion
myUnion
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int data = myUnion.unionSecond;        /* FIX: If the file is still opened, close it */        if (data != -1)        {            CLOSE(data);        }    }
int data = myUnion.unionSecond;
int data = myUnion.unionSecond;
int
data = myUnion.unionSecond
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(35,25,0)
(6,4,0)
(37,17,0)
(31,36,0)
(30,28,0)
(23,14,0)
(17,9,0)
(10,28,0)
(29,36,0)
(25,35,0)
(19,21,0)
(35,28,0)
(15,22,0)
(18,14,0)
(17,35,0)
(11,4,0)
(5,8,0)
(16,21,0)
(34,35,0)
(31,4,0)
(19,14,0)
(22,7,0)
(14,19,0)
(21,19,0)
(0,8,0)
(12,31,0)
(36,31,0)
(20,21,0)
(1,11,0)
(28,4,0)
(33,26,0)
(26,19,0)
(7,22,0)
(19,26,0)
(22,35,0)
(27,7,0)
(24,4,0)
(26,4,0)
(2,25,0)
(8,11,0)
(3,25,0)
(32,19,0)
(11,26,0)
(11,26,1)
(11,1,1)
(19,14,1)
(20,16,1)
(14,18,1)
(33,31,1)
(25,3,1)
(26,19,1)
(5,26,1)
(2,34,1)
(22,35,1)
(7,27,1)
(1,8,1)
(0,5,1)
(19,21,1)
(15,35,1)
(31,36,1)
(29,12,1)
(37,22,1)
(27,15,1)
(3,2,1)
(32,33,1)
(17,35,1)
(35,25,1)
(13,17,1)
(17,37,1)
(13,22,1)
(34,11,1)
(18,23,1)
(16,32,1)
(8,0,1)
(21,20,1)
(23,21,1)
(36,29,1)
(22,7,1)
(35,25,2)
(19,14,2)
(11,26,2)
(17,35,2)
(22,7,2)
(37,22,2)
(31,36,2)
(26,19,2)
(17,22,2)
(19,21,2)
(22,35,2)
-----------------------------------
(0,unionFirst)
(1,data)
(2,myUnion)
(3,unionSecond)
(4,)
(5,myUnion)
(6,data)
(7,-1)
(8,myUnion.unionFirst)
(9,)
(10,data)
(11,myUnion.unionFirst = data)
(12,data)
(13,RET)
(14,S_IREAD|S_IWRITE)
(15,data)
(16,O_RDWR)
(17,CLOSE(data)
(18,S_IWRITE)
(19,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(20,O_CREAT)
(21,O_RDWR|O_CREAT)
(22,data != -1)
(23,S_IREAD)
(24,myUnion)
(25,myUnion.unionSecond)
(26,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(27,1)
(28,)
(29,1)
(30,if (data != -1)
(31,data = -1)
(32,"BadSource_open.txt")
(33,data)
(34,data)
(35,data = myUnion.unionSecond)
(36,-1)
(37,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^