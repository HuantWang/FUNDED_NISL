-----label-----
0
-----code-----
static void goodB2G2()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)calloc(100, sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    goodB2G2Static = 1; /* true */
    goodB2G2Sink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
55,56
56,57
56,58
57,58
59,60
59,61
60,61
63,64
64,65
64,66
65,66
68,69
69,70
69,71
70,71
72,73
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,52,53,54,58,61,62,66,67,71,73
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
49,50
49,51
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goodB2G2Static = 1; /* true */    goodB2G2Sink(data);}
static void
goodB2G2()
goodB2G2
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)calloc(100, sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goodB2G2Static = 1; /* true */    goodB2G2Sink(data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)calloc(100, sizeof(int));
data = (int *)calloc(100, sizeof(int))
data
data
(int *)calloc(100, sizeof(int))
int *
int
*
*
calloc(100, sizeof(int))
calloc
calloc
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
goodB2G2Static = 1;
goodB2G2Static = 1
goodB2G2Static
goodB2G2Static
1
goodB2G2Sink(data);
goodB2G2Sink(data)
goodB2G2Sink
goodB2G2Sink
data
data
-----joern-----
(22,26,0)
(9,0,0)
(7,20,0)
(3,32,0)
(32,31,0)
(29,20,0)
(19,11,0)
(35,17,0)
(19,27,0)
(2,0,0)
(27,19,0)
(13,22,0)
(18,32,0)
(30,17,0)
(5,0,0)
(20,29,0)
(33,27,0)
(8,30,0)
(32,22,0)
(10,20,0)
(6,2,0)
(29,0,0)
(31,0,0)
(24,9,0)
(26,36,0)
(15,22,0)
(26,22,0)
(14,13,0)
(12,9,0)
(34,2,0)
(17,26,0)
(20,22,0)
(4,13,0)
(22,0,0)
(16,15,0)
(1,31,0)
(17,30,0)
(20,31,0)
(26,17,0)
(15,0,0)
(23,22,0)
(36,26,0)
(21,0,0)
(29,20,1)
(15,16,1)
(1,32,1)
(17,30,1)
(23,9,1)
(35,23,1)
(18,3,1)
(20,10,1)
(3,13,1)
(30,8,1)
(32,18,1)
(34,6,1)
(22,26,1)
(20,31,1)
(13,22,1)
(28,15,1)
(4,22,1)
(16,2,1)
(26,36,1)
(9,12,1)
(12,24,1)
(27,33,1)
(26,17,1)
(7,31,1)
(20,22,1)
(19,27,1)
(32,22,1)
(8,35,1)
(6,29,1)
(33,13,1)
(2,34,1)
(3,19,1)
(10,7,1)
(13,14,1)
(31,1,1)
(15,22,1)
(14,4,1)
(19,27,2)
(29,20,2)
(20,22,2)
(33,13,2)
(22,26,2)
(27,13,2)
(32,22,2)
(13,22,2)
(15,22,2)
(26,36,2)
(17,30,2)
(26,17,2)
(20,31,2)
(19,13,2)
-----------------------------------
(0,)
(1,5)
(2,goodB2G2Static = 1)
(3,data)
(4,data)
(5,if (data == NULL)
(6,goodB2G2Static)
(7,data)
(8,int)
(9,data = NULL)
(10,0)
(11,)
(12,NULL)
(13,data == NULL)
(14,NULL)
(15,goodB2G2Sink(data)
(16,data)
(17,calloc(100, sizeof(int)
(18,0)
(19,exit(-1)
(20,data[0])
(21,data)
(22,data = (int *)
(23,data)
(24,data)
(25, sizeof(int)
(26,(int *)
(27,-1)
(28,RET)
(29,printIntLine(data[0])
(30,sizeof(int)
(31,data[0] = 5)
(32,data[0])
(33,1)
(34,1)
(35,100)
(36,int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^