-----label-----
1
-----code-----
static int
tapdisk_channel_start_process(tapdisk_channel_t *channel,
			      char *write_dev, char *read_dev)
{
	pid_t child;
	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };
	int i;

	if ((child = fork()) == -1)
		return -errno;

	if (child)
		return child;

	for (i = 0; i < sysconf(_SC_OPEN_MAX) ; i++)
		if (i != STDIN_FILENO &&
		    i != STDOUT_FILENO &&
		    i != STDERR_FILENO)
			close(i);

	execvp("tapdisk", argv);

	PERROR("execvp");
	_exit(1);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
18,19
18,20
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
21,30
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
31,32
31,33
31,34
31,35
35,36
36,37
36,38
36,39
36,40
38,39
40,41
42,43
44,45
45,46
45,47
47,48
49,50
49,51
50,51
50,52
51,52
52,53
52,54
53,54
55,56
56,57
58,59
60,61
61,62
62,63
64,65
64,66
65,66
67,68
68,69
70,71
70,72
70,73
70,74
71,72
72,73
72,74
73,74
76,77
76,78
77,78
79,80
79,81
80,81
82,83
84,85
85,86
87,88
87,89
88,89
88,90
89,90
89,91
90,91
90,92
91,92
93,94
95,96
95,97
96,97
98,99
100,101
100,102
101,102
103,104
105,106
106,107
106,108
107,108
109,110
111,112
112,113
112,114
112,115
113,114
116,117
118,119
119,120
119,121
120,121
123,124
124,125
124,126
125,126
-----nextToken-----
2,4,7,9,10,12,14,15,17,19,20,25,27,30,32,33,34,37,39,41,43,46,48,54,57,59,63,66,69,74,75,78,81,83,86,92,94,97,99,102,104,108,110,114,115,117,121,122,126,127
-----computeFrom-----
50,51
50,52
52,53
52,54
72,73
72,74
76,77
76,78
88,89
88,90
89,90
89,91
90,91
90,92
95,96
95,97
100,101
100,102
-----guardedBy-----
102,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ReturnStatement;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static inttapdisk_channel_start_process(tapdisk_channel_t *channel,			      char *write_dev, char *read_dev){	pid_t child;	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };	int i;	if ((child = fork()) == -1)		return -errno;	if (child)		return child;	for (i = 0; i < sysconf(_SC_OPEN_MAX) ; i++)		if (i != STDIN_FILENO &&		    i != STDOUT_FILENO &&		    i != STDERR_FILENO)			close(i);	execvp("tapdisk", argv);	PERROR("execvp");	_exit(1);}
static int
tapdisk_channel_start_process(tapdisk_channel_t *channel,			      char *write_dev, char *read_dev)
tapdisk_channel_start_process
tapdisk_channel_t *channel
tapdisk_channel_t
tapdisk_channel_t
*channel
*
channel
char *write_dev
char
*write_dev
*
write_dev
char *read_dev
char
*read_dev
*
read_dev
{	pid_t child;	char *argv[] = { "tapdisk", write_dev, read_dev, NULL };	int i;	if ((child = fork()) == -1)		return -errno;	if (child)		return child;	for (i = 0; i < sysconf(_SC_OPEN_MAX) ; i++)		if (i != STDIN_FILENO &&		    i != STDOUT_FILENO &&		    i != STDERR_FILENO)			close(i);	execvp("tapdisk", argv);	PERROR("execvp");	_exit(1);}
pid_t child;
pid_t child;
pid_t
pid_t
child
child
char *argv[] = { "tapdisk", write_dev, read_dev, NULL };
char *argv[] = { "tapdisk", write_dev, read_dev, NULL };
char
*argv[] = { "tapdisk", write_dev, read_dev, NULL }
*
argv
[]
= { "tapdisk", write_dev, read_dev, NULL }
{ "tapdisk", write_dev, read_dev, NULL }
"tapdisk"
write_dev
write_dev
read_dev
read_dev
NULL
NULL
int i;
int i;
int
i
i
if ((child = fork()) == -1)		return -errno;
(child = fork()) == -1
(child = fork())
child = fork()
child
child
fork()
fork
fork
-1
1
return -errno;
-errno
errno
errno
if (child)		return child;
child
child
return child;
child
child
for (i = 0; i < sysconf(_SC_OPEN_MAX) ; i++)		if (i != STDIN_FILENO &&		    i != STDOUT_FILENO &&		    i != STDERR_FILENO)			close(i);
i = 0;
i = 0
i
i
0
i < sysconf(_SC_OPEN_MAX)
i
i
sysconf(_SC_OPEN_MAX)
sysconf
sysconf
_SC_OPEN_MAX
_SC_OPEN_MAX
i++
i
i
if (i != STDIN_FILENO &&		    i != STDOUT_FILENO &&		    i != STDERR_FILENO)			close(i);
i != STDIN_FILENO &&		    i != STDOUT_FILENO &&		    i != STDERR_FILENO
i != STDIN_FILENO &&		    i != STDOUT_FILENO
i != STDIN_FILENO
i
i
STDIN_FILENO
STDIN_FILENO
i != STDOUT_FILENO
i
i
STDOUT_FILENO
STDOUT_FILENO
i != STDERR_FILENO
i
i
STDERR_FILENO
STDERR_FILENO
close(i);
close(i)
close
close
i
i
execvp("tapdisk", argv);
execvp("tapdisk", argv)
execvp
execvp
"tapdisk"
argv
argv
PERROR("execvp");
PERROR("execvp")
PERROR
PERROR
"execvp"
_exit(1);
_exit(1)
_exit
_exit
1
-----joern-----
(40,25,0)
(1,27,0)
(31,30,0)
(17,15,0)
(34,14,0)
(37,0,0)
(36,16,0)
(15,17,0)
(41,45,0)
(28,45,0)
(33,10,0)
(23,27,0)
(5,16,0)
(9,14,0)
(12,22,0)
(19,3,0)
(11,7,0)
(39,2,0)
(0,14,0)
(30,31,0)
(16,36,0)
(25,27,0)
(24,4,0)
(0,37,0)
(7,27,0)
(2,27,0)
(14,21,0)
(16,21,0)
(29,27,0)
(43,27,0)
(37,21,0)
(12,21,0)
(18,12,0)
(20,27,0)
(17,31,0)
(32,42,0)
(22,12,0)
(28,50,0)
(47,21,0)
(10,27,0)
(13,37,0)
(7,25,0)
(35,21,0)
(42,21,0)
(36,0,0)
(44,16,0)
(0,36,0)
(38,22,0)
(49,27,0)
(48,7,0)
(3,50,0)
(26,37,0)
(46,15,0)
(6,31,0)
(14,0,0)
(4,21,0)
(45,31,0)
(31,17,0)
(28,50,1)
(8,17,1)
(48,12,1)
(6,25,1)
(9,34,1)
(10,33,1)
(46,31,1)
(14,21,1)
(30,6,1)
(2,39,1)
(35,8,1)
(12,22,1)
(5,44,1)
(15,46,1)
(34,37,1)
(42,21,1)
(16,21,1)
(19,17,1)
(32,36,1)
(12,21,1)
(25,40,1)
(4,24,1)
(11,48,1)
(18,4,1)
(4,21,1)
(28,45,1)
(7,25,1)
(7,11,1)
(36,16,1)
(24,36,1)
(45,41,1)
(0,14,1)
(3,19,1)
(36,0,1)
(50,3,1)
(22,38,1)
(24,42,1)
(16,5,1)
(41,8,1)
(44,12,1)
(42,32,1)
(37,13,1)
(39,7,1)
(26,16,1)
(38,18,1)
(31,30,1)
(18,21,1)
(28,10,1)
(13,26,1)
(17,31,1)
(37,21,1)
(21,47,1)
(17,15,1)
(14,9,1)
(47,35,1)
(33,2,1)
(0,37,1)
(45,31,1)
(9,37,2)
(10,8,2)
(18,12,2)
(18,8,2)
(22,8,2)
(35,8,2)
(36,12,2)
(37,16,2)
(7,8,2)
(8,17,2)
(17,15,2)
(47,8,2)
(14,21,2)
(14,37,2)
(13,16,2)
(12,21,2)
(50,17,2)
(0,16,2)
(39,8,2)
(44,12,2)
(16,12,2)
(26,16,2)
(11,8,2)
(37,21,2)
(38,8,2)
(32,36,2)
(16,21,2)
(2,8,2)
(38,12,2)
(31,30,2)
(21,8,2)
(0,14,2)
(7,25,2)
(24,12,2)
(28,45,2)
(33,8,2)
(34,37,2)
(42,36,2)
(0,37,2)
(12,12,2)
(48,8,2)
(41,8,2)
(36,16,2)
(5,12,2)
(3,17,2)
(4,21,2)
(17,31,2)
(28,50,2)
(42,21,2)
(22,12,2)
(19,17,2)
(45,31,2)
(36,0,2)
(45,8,2)
(4,12,2)
(12,22,2)
(12,8,2)
-----------------------------------
(0,i != STDOUT_FILENO &&\n\\n\\t\\t    i != STDERR_FILENO)
(1,if ((child = fork()
(2,PERROR("execvp")
(3,-errno)
(4,i++)
(5,STDIN_FILENO)
(6,child)
(7,execvp("tapdisk", argv)
(8,child)
(9,STDERR_FILENO)
(10,_exit(1)
(11,argv)
(12,i < sysconf(_SC_OPEN_MAX)
(13,STDOUT_FILENO)
(14,i != STDERR_FILENO)
(15,-1)
(16,i != STDIN_FILENO)
(17,(child = fork()
(18,i)
(19,errno)
(20,i)
(21,i = 0)
(22,sysconf(_SC_OPEN_MAX)
(23,child)
(24,i)
(25,*argv[] = { "tapdisk", write_dev, read_dev, NULL })
(26,i)
(27,)
(28,RET)
(29,argv)
(30,fork()
(31,child = fork()
(32,i)
(33,1)
(34,i)
(35,i)
(36,i != STDIN_FILENO &&\n\\n\\t\\t    i != STDOUT_FILENO &&\n\\n\\t\\t    i != STDERR_FILENO)
(37,i != STDOUT_FILENO)
(38,_SC_OPEN_MAX)
(39,"execvp")
(40,argv)
(41,child)
(42,close(i)
(43,if (child)
(44,i)
(45,return child;)
(46,1)
(47,0)
(48,"tapdisk")
(49,for (i = 0; i < sysconf(_SC_OPEN_MAX)
(50,return -errno;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^