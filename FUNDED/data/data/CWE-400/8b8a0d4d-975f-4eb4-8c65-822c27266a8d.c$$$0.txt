-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_sleep_11_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Set count to a random value */
        count = RAND32();
    }
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
31,32
33,34
33,35
34,35
35,36
35,37
36,37
38,39
40,41
41,42
41,43
42,43
-----nextToken-----
2,4,8,10,14,16,20,25,28,32,37,39,43,44
-----computeFrom-----
12,13
12,14
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_sleep_11_bad(){    int count;    /* Initialize count */    count = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__rand_sleep_11_bad()
CWE400_Resource_Exhaustion__rand_sleep_11_bad
{    int count;    /* Initialize count */    count = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(13,6,0)
(5,10,0)
(13,16,0)
(10,5,0)
(16,9,0)
(13,10,0)
(8,16,0)
(7,16,0)
(11,4,0)
(1,10,0)
(16,7,0)
(14,4,0)
(17,5,0)
(3,19,0)
(2,13,0)
(19,6,0)
(10,4,0)
(15,4,0)
(16,7,1)
(8,18,1)
(0,18,1)
(12,0,1)
(10,5,1)
(13,10,1)
(5,17,1)
(18,10,1)
(13,16,1)
(19,3,1)
(7,8,1)
(3,13,1)
(2,0,1)
(17,1,1)
(12,19,1)
(13,2,1)
(0,16,1)
(7,18,2)
(19,0,2)
(13,16,2)
(16,7,2)
(13,10,2)
(16,18,2)
(8,18,2)
(13,0,2)
(3,0,2)
(10,5,2)
(2,0,2)
-----------------------------------
(0,globalReturnsTrue()
(1,count)
(2,count)
(3,"Sleep time possibly too long")
(4,)
(5,-1)
(6,)
(7,RAND32()
(8,count)
(9,)
(10,count = -1)
(11,if(globalReturnsTrue()
(12,RET)
(13,SLEEP(count)
(14,if(globalReturnsTrue()
(15,count)
(16,count = RAND32()
(17,1)
(18,globalReturnsTrue()
(19,printLine("Sleep time possibly too long")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^