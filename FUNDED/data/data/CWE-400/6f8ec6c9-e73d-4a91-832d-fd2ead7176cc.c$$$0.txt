-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_realloc_34_bad()
{
    wchar_t * data;
    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
33,36
34,35
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
59,60
61,62
64,65
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
72,74
73,74
76,77
78,79
78,80
79,80
80,81
80,82
82,83
82,84
82,85
85,86
86,87
86,88
87,88
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,39,42,43,47,49,54,56,60,62,63,67,69,74,75,77,81,83,84,88,89,90
-----computeFrom-----
19,20
19,21
25,26
25,27
38,39
38,40
45,46
45,47
71,72
71,73
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_realloc_34_bad(){    wchar_t * data;    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__wchar_t_realloc_34_bad()
CWE401_Memory_Leak__wchar_t_realloc_34_bad
{    wchar_t * data;    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
CWE401_Memory_Leak__wchar_t_realloc_34_unionType
CWE401_Memory_Leak__wchar_t_realloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(28,37,0)
(2,30,0)
(5,15,0)
(32,37,0)
(26,12,0)
(21,37,0)
(4,12,0)
(29,17,0)
(25,28,0)
(1,21,0)
(21,28,0)
(17,29,0)
(7,37,0)
(18,31,0)
(27,4,0)
(33,8,0)
(15,8,0)
(23,20,0)
(10,36,0)
(31,18,0)
(2,28,0)
(32,28,0)
(35,37,0)
(17,15,0)
(0,8,0)
(11,17,0)
(38,31,0)
(6,29,0)
(4,35,0)
(19,12,0)
(20,28,0)
(22,37,0)
(30,2,0)
(15,2,0)
(2,15,0)
(24,20,0)
(15,17,0)
(36,32,0)
(12,4,0)
(16,37,0)
(28,2,0)
(14,35,0)
(13,32,0)
(8,37,0)
(3,36,0)
(18,9,0)
(23,28,1)
(13,36,1)
(1,18,1)
(19,27,1)
(31,38,1)
(28,2,1)
(1,20,1)
(11,5,1)
(25,8,1)
(27,32,1)
(29,6,1)
(8,0,1)
(10,3,1)
(5,25,1)
(20,28,1)
(6,11,1)
(34,4,1)
(15,17,1)
(17,29,1)
(4,12,1)
(3,21,1)
(32,13,1)
(36,10,1)
(38,20,1)
(21,28,1)
(20,24,1)
(12,26,1)
(24,23,1)
(2,30,1)
(32,28,1)
(26,19,1)
(2,15,1)
(18,31,1)
(15,8,1)
(0,33,1)
(21,1,1)
(17,29,2)
(2,30,2)
(32,28,2)
(15,8,2)
(21,28,2)
(31,20,2)
(4,12,2)
(28,2,2)
(18,20,2)
(2,15,2)
(18,31,2)
(38,20,2)
(20,28,2)
(15,17,2)
-----------------------------------
(0,NULL)
(1,data)
(2,(wchar_t *)
(3,myUnion)
(4,* data = myUnion.unionSecond)
(5,data)
(6,wchar_t)
(7,myUnion)
(8,data = NULL)
(9,)
(10,unionFirst)
(11,100)
(12,myUnion.unionSecond)
(13,data)
(14,data)
(15,realloc(data, 100*sizeof(wchar_t)
(16,data)
(17,100*sizeof(wchar_t)
(18,exit(-1)
(19,myUnion)
(20,data == NULL)
(21,printWLine(data)
(22,if (data == NULL)
(23,data)
(24,NULL)
(25,data)
(26,unionSecond)
(27,data)
(28,data = (wchar_t *)
(29,sizeof(wchar_t)
(30,wchar_t *)
(31,-1)
(32,myUnion.unionFirst = data)
(33,data)
(34,RET)
(35,)
(36,myUnion.unionFirst)
(37,)
(38,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^