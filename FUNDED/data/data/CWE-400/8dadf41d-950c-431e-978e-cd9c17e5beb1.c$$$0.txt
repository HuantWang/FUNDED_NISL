-----label-----
1
-----code-----
static void
print_symname (const char *form, const char *name, bfd *abfd)
{
  if (do_demangle && *name)
    {
      char *res = bfd_demangle (abfd, name, demangle_flags);

      if (res != NULL)
	{
	  printf (form, res);
	  free (res);
	  return;
	}
    }

  printf (form, name);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
7,8
7,9
10,11
10,12
12,13
12,14
15,16
15,17
16,17
18,19
18,20
21,22
21,23
22,23
22,24
23,24
23,25
24,25
26,27
27,28
29,30
29,31
30,31
31,32
31,33
33,34
33,35
33,36
36,37
37,38
37,39
37,40
37,41
38,39
40,41
42,43
44,45
46,47
46,48
47,48
47,49
48,49
50,51
52,53
52,54
52,55
53,54
54,55
54,56
54,57
55,56
57,58
59,60
61,62
62,63
62,64
63,64
65,66
68,69
69,70
69,71
69,72
70,71
72,73
74,75
-----nextToken-----
2,4,6,8,9,11,13,14,17,19,20,25,28,32,34,35,39,41,43,45,49,51,56,58,60,64,66,67,71,73,75
-----computeFrom-----
23,24
23,25
47,48
47,49
-----guardedBy-----
28,43
49,66
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static voidprint_symname (const char *form, const char *name, bfd *abfd){  if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, demangle_flags);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }  printf (form, name);}
static void
print_symname (const char *form, const char *name, bfd *abfd)
print_symname
const char *form
const char
*form
*
form
const char *name
const char
*name
*
name
bfd *abfd
bfd
bfd
*abfd
*
abfd
{  if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, demangle_flags);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }  printf (form, name);}
if (do_demangle && *name)    {      char *res = bfd_demangle (abfd, name, demangle_flags);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }
do_demangle && *name
do_demangle
do_demangle
*name
name
name
{      char *res = bfd_demangle (abfd, name, demangle_flags);      if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}    }
char *res = bfd_demangle (abfd, name, demangle_flags);
char *res = bfd_demangle (abfd, name, demangle_flags);
char
*res = bfd_demangle (abfd, name, demangle_flags)
*
res
= bfd_demangle (abfd, name, demangle_flags)
bfd_demangle (abfd, name, demangle_flags)
bfd_demangle
bfd_demangle
abfd
abfd
name
name
demangle_flags
demangle_flags
if (res != NULL)	{	  printf (form, res);	  free (res);	  return;	}
res != NULL
res
res
NULL
NULL
{	  printf (form, res);	  free (res);	  return;	}
printf (form, res);
printf (form, res)
printf
printf
form
form
res
res
free (res);
free (res)
free
free
res
res
return;
printf (form, name);
printf (form, name)
printf
printf
form
form
name
name
-----joern-----
(15,12,0)
(7,14,0)
(11,0,0)
(6,28,0)
(14,28,0)
(25,22,0)
(13,22,0)
(5,28,0)
(29,5,0)
(14,26,0)
(24,3,0)
(18,6,0)
(19,31,0)
(21,6,0)
(28,5,0)
(30,8,0)
(16,24,0)
(12,23,0)
(24,20,0)
(5,2,0)
(24,23,0)
(0,26,0)
(9,24,0)
(4,28,0)
(31,28,0)
(8,12,0)
(5,23,0)
(6,26,0)
(10,20,0)
(27,31,0)
(6,3,0)
(17,5,0)
(12,8,0)
(28,22,0)
(1,5,0)
(24,23,1)
(0,14,1)
(16,8,1)
(11,0,1)
(5,2,1)
(21,18,1)
(16,31,1)
(14,7,1)
(27,19,1)
(17,29,1)
(6,21,1)
(11,24,1)
(15,30,1)
(9,16,1)
(24,3,1)
(18,31,1)
(8,30,1)
(5,23,1)
(6,28,1)
(24,9,1)
(4,8,1)
(7,6,1)
(12,15,1)
(5,1,1)
(14,28,1)
(19,28,1)
(12,23,1)
(6,3,1)
(31,27,1)
(29,4,1)
(31,28,1)
(8,12,1)
(28,5,1)
(1,17,1)
(31,8,2)
(18,31,2)
(28,8,2)
(28,5,2)
(5,8,2)
(27,8,2)
(1,8,2)
(0,31,2)
(24,23,2)
(17,8,2)
(24,31,2)
(12,30,2)
(6,3,2)
(4,8,2)
(24,8,2)
(11,0,2)
(16,31,2)
(15,30,2)
(31,28,2)
(5,2,2)
(6,31,2)
(5,23,2)
(19,8,2)
(8,12,2)
(6,28,2)
(12,23,2)
(9,31,2)
(9,8,2)
(14,31,2)
(7,31,2)
(21,31,2)
(16,8,2)
(29,8,2)
(24,3,2)
(14,28,2)
-----------------------------------
(0,return;)
(1,demangle_flags)
(2,bfd *abfd)
(3,const char *form)
(4,res)
(5,bfd_demangle (abfd, name, demangle_flags)
(6,printf (form, res)
(7,res)
(8,do_demangle && *name)
(9,name)
(10,if (do_demangle && *name)
(11,RET)
(12,*name)
(13,if (res != NULL)
(14,free (res)
(15,name)
(16,form)
(17,name)
(18,form)
(19,res)
(20,)
(21,res)
(22,)
(23,const char *name)
(24,printf (form, name)
(25,res)
(26,)
(27,NULL)
(28,*res = bfd_demangle (abfd, name, demangle_flags)
(29,abfd)
(30,do_demangle)
(31,res != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^