-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad()
{
    twoIntsStruct * data;
    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    myUnion.unionFirst = data;
    {
        twoIntsStruct * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
35,38
36,37
38,39
40,41
40,42
42,43
43,44
43,45
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
62,63
62,64
63,64
63,65
64,65
69,70
70,71
70,72
71,72
71,73
72,73
72,74
73,74
78,79
79,80
79,81
80,81
82,83
83,84
83,85
84,85
87,88
88,89
88,90
89,90
89,91
90,91
93,94
95,96
95,97
96,97
97,98
97,99
98,99
100,101
100,102
100,103
103,104
104,105
104,106
105,106
-----nextToken-----
2,4,9,11,12,16,18,22,24,28,32,34,37,39,41,45,46,50,52,57,59,65,66,67,68,74,75,76,77,81,85,86,91,92,94,99,101,102,106,107,108
-----computeFrom-----
20,21
20,22
26,27
26,28
40,41
40,42
48,49
48,50
61,62
61,63
70,71
70,72
88,89
88,90
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad(){    twoIntsStruct * data;    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    myUnion.unionFirst = data;    {        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_34_bad
{    twoIntsStruct * data;    CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    myUnion.unionFirst = data;    {        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType myUnion;
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType
CWE401_Memory_Leak__twoIntsStruct_realloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        twoIntsStruct * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
twoIntsStruct * data = myUnion.unionSecond;
twoIntsStruct * data = myUnion.unionSecond;
twoIntsStruct
twoIntsStruct
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(25,21,0)
(10,5,0)
(51,46,0)
(42,39,0)
(35,5,0)
(36,44,0)
(44,34,0)
(5,34,0)
(30,23,0)
(19,17,0)
(37,51,0)
(25,39,0)
(33,48,0)
(40,34,0)
(22,27,0)
(32,28,0)
(28,44,0)
(0,34,0)
(7,37,0)
(53,25,0)
(47,21,0)
(22,34,0)
(5,32,0)
(43,49,0)
(38,41,0)
(17,8,0)
(32,31,0)
(48,23,0)
(55,48,0)
(9,54,0)
(41,27,0)
(23,34,0)
(23,5,0)
(31,32,0)
(20,13,0)
(28,54,0)
(8,40,0)
(15,34,0)
(12,49,0)
(27,41,0)
(52,10,0)
(13,34,0)
(49,5,0)
(50,6,0)
(14,44,0)
(6,13,0)
(54,45,0)
(11,10,0)
(8,17,0)
(39,25,0)
(27,22,0)
(28,32,0)
(6,10,0)
(26,8,0)
(32,5,0)
(45,54,0)
(21,34,0)
(16,34,0)
(54,28,0)
(18,17,0)
(4,45,0)
(41,5,0)
(10,6,0)
(29,40,0)
(51,37,0)
(1,41,0)
(39,5,0)
(2,28,0)
(24,39,0)
(24,42,1)
(42,13,1)
(28,44,1)
(55,33,1)
(37,7,1)
(19,18,1)
(39,5,1)
(45,4,1)
(48,55,1)
(5,32,1)
(54,45,1)
(26,23,1)
(53,39,1)
(22,27,1)
(52,51,1)
(47,25,1)
(10,11,1)
(52,49,1)
(6,50,1)
(18,26,1)
(41,5,1)
(3,8,1)
(44,36,1)
(1,21,1)
(2,35,1)
(49,5,1)
(23,5,1)
(20,6,1)
(38,1,1)
(8,17,1)
(49,43,1)
(50,10,1)
(7,49,1)
(32,28,1)
(32,31,1)
(6,10,1)
(17,19,1)
(27,41,1)
(35,44,1)
(21,47,1)
(13,20,1)
(43,12,1)
(28,54,1)
(4,9,1)
(39,24,1)
(9,2,1)
(10,5,1)
(33,22,1)
(11,52,1)
(51,37,1)
(23,30,1)
(30,48,1)
(41,38,1)
(12,5,1)
(36,14,1)
(25,53,1)
(25,39,1)
(6,10,2)
(51,37,2)
(25,39,2)
(41,5,2)
(32,31,2)
(54,45,2)
(28,44,2)
(37,49,2)
(51,49,2)
(49,5,2)
(39,5,2)
(23,5,2)
(32,28,2)
(8,17,2)
(22,27,2)
(5,32,2)
(10,5,2)
(7,49,2)
(27,41,2)
(28,54,2)
-----------------------------------
(0,if (data == NULL)
(1,data)
(2,data)
(3,RET)
(4,twoIntsStruct)
(5,data = (twoIntsStruct *)
(6,data[0].intOne)
(7,1)
(8,* data = myUnion.unionSecond)
(9,100)
(10,data[0])
(11,0)
(12,data)
(13,data[0].intOne = 0)
(14,data)
(15,myUnion)
(16,data)
(17,myUnion.unionSecond)
(18,myUnion)
(19,unionSecond)
(20,0)
(21,data[0].intTwo = 0)
(22,printStructLine(&data[0])
(23,myUnion.unionFirst = data)
(24,0)
(25,data[0].intTwo)
(26,data)
(27,&data[0])
(28,realloc(data, 100*sizeof(twoIntsStruct)
(29,data)
(30,data)
(31,twoIntsStruct *)
(32,(twoIntsStruct *)
(33,myUnion)
(34,)
(35,data)
(36,NULL)
(37,-1)
(38,0)
(39,data[0])
(40,)
(41,data[0])
(42,data)
(43,NULL)
(44,data = NULL)
(45,sizeof(twoIntsStruct)
(46,)
(47,0)
(48,myUnion.unionFirst)
(49,data == NULL)
(50,intOne)
(51,exit(-1)
(52,data)
(53,intTwo)
(54,100*sizeof(twoIntsStruct)
(55,unionFirst)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^