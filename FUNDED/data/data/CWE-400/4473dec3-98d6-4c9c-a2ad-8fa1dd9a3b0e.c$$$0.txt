-----label-----
0
-----code-----
static void goodB2G()
{
    wchar_t * data;
    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        /* FIX: Deallocate memory */
        free(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
33,36
34,35
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
58,61
59,60
61,62
64,65
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
72,74
73,74
76,77
78,79
78,80
79,80
80,81
80,82
82,83
82,84
82,85
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
94,95
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,39,42,43,47,49,54,56,60,62,63,67,69,74,75,77,81,83,84,88,89,93,95
-----computeFrom-----
19,20
19,21
25,26
25,27
38,39
38,40
45,46
45,47
71,72
71,73
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    wchar_t * data;    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* FIX: Deallocate memory */        free(data);    }}
static void
goodB2G()
goodB2G
{    wchar_t * data;    CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* FIX: Deallocate memory */        free(data);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
CWE401_Memory_Leak__wchar_t_realloc_34_unionType myUnion;
CWE401_Memory_Leak__wchar_t_realloc_34_unionType
CWE401_Memory_Leak__wchar_t_realloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        /* FIX: Deallocate memory */        free(data);    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
free(data);
free(data)
free
free
data
data
-----joern-----
(6,33,0)
(21,31,0)
(16,18,0)
(40,31,0)
(11,18,0)
(10,26,0)
(7,18,0)
(40,35,0)
(39,13,0)
(10,28,0)
(31,40,0)
(32,40,0)
(3,8,0)
(30,22,0)
(17,34,0)
(24,35,0)
(13,33,0)
(31,21,0)
(5,33,0)
(14,34,0)
(38,31,0)
(0,14,0)
(37,22,0)
(27,13,0)
(16,34,0)
(29,33,0)
(35,40,0)
(14,16,0)
(2,35,0)
(36,8,0)
(35,33,0)
(21,9,0)
(9,21,0)
(26,10,0)
(29,35,0)
(25,29,0)
(34,33,0)
(20,16,0)
(1,33,0)
(8,29,0)
(24,33,0)
(12,21,0)
(19,24,0)
(23,26,0)
(22,35,0)
(18,16,0)
(31,13,0)
(4,9,0)
(40,32,0)
(10,26,1)
(27,39,1)
(18,7,1)
(26,23,1)
(21,9,1)
(22,37,1)
(35,40,1)
(19,10,1)
(38,2,1)
(11,20,1)
(3,24,1)
(2,13,1)
(40,32,1)
(0,16,1)
(30,35,1)
(12,38,1)
(4,12,1)
(8,36,1)
(13,27,1)
(36,3,1)
(19,22,1)
(24,19,1)
(31,13,1)
(31,21,1)
(25,8,1)
(24,35,1)
(16,18,1)
(40,31,1)
(29,35,1)
(29,25,1)
(23,22,1)
(7,11,1)
(37,30,1)
(14,16,1)
(20,29,1)
(14,0,1)
(15,14,1)
(9,4,1)
(22,35,1)
(23,22,2)
(21,9,2)
(10,26,2)
(40,31,2)
(14,16,2)
(22,35,2)
(31,21,2)
(35,40,2)
(10,22,2)
(16,18,2)
(40,32,2)
(31,13,2)
(26,22,2)
(24,35,2)
(29,35,2)
-----------------------------------
(0,data)
(1,myUnion)
(2,data)
(3,myUnion)
(4,wchar_t)
(5,data)
(6,if (data == NULL)
(7,unionSecond)
(8,myUnion.unionFirst)
(9,sizeof(wchar_t)
(10,exit(-1)
(11,myUnion)
(12,100)
(13,data = NULL)
(14,free(data)
(15,RET)
(16,* data = myUnion.unionSecond)
(17,data)
(18,myUnion.unionSecond)
(19,data)
(20,data)
(21,100*sizeof(wchar_t)
(22,data == NULL)
(23,1)
(24,printWLine(data)
(25,data)
(26,-1)
(27,NULL)
(28,)
(29,myUnion.unionFirst = data)
(30,data)
(31,realloc(data, 100*sizeof(wchar_t)
(32,wchar_t *)
(33,)
(34,)
(35,data = (wchar_t *)
(36,unionFirst)
(37,NULL)
(38,data)
(39,data)
(40,(wchar_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^