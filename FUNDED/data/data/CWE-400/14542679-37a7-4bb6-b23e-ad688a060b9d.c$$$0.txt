-----label-----
0
-----code-----
static void goodB2G()
{
    int i,k;
    int count;
    /* Initialize count */
    count = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
    }
    for(k = 0; k < 1; k++)
    {
        {
            size_t i = 0;
            /* FIX: Validate count before using it as the for loop variant */
            if (count > 0 && count <= 20)
            {
                for (i = 0; i < (size_t)count; i++)
                {
                    printLine("Hello");
                }
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
39,42
39,43
40,41
42,43
45,46
46,47
48,49
48,50
48,51
48,52
49,50
50,51
50,52
51,52
54,55
54,56
55,56
58,59
59,60
61,62
62,63
62,64
63,64
64,65
64,66
65,66
67,68
67,69
69,70
71,72
71,73
72,73
72,74
73,74
73,75
74,75
77,78
77,79
78,79
81,82
82,83
82,84
82,85
82,86
83,84
84,85
84,86
85,86
88,89
88,90
89,90
91,92
91,93
92,93
92,94
93,94
96,97
98,99
99,100
101,102
102,103
103,104
103,105
104,105
-----nextToken-----
2,4,8,10,12,15,17,21,23,28,29,32,33,36,41,43,44,47,52,53,56,57,60,66,68,70,75,76,79,80,86,87,90,94,95,97,100,105,106
-----computeFrom-----
19,20
19,21
26,27
26,28
30,31
30,32
50,51
50,52
54,55
54,56
72,73
72,74
73,74
73,75
77,78
77,79
84,85
84,86
88,89
88,90
-----guardedBy-----
79,97
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodB2G(){    int i,k;    int count;    /* Initialize count */    count = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    for(k = 0; k < 1; k++)    {        {            size_t i = 0;            /* FIX: Validate count before using it as the for loop variant */            if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }        }    }}
static void
goodB2G()
goodB2G
{    int i,k;    int count;    /* Initialize count */    count = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    for(k = 0; k < 1; k++)    {        {            size_t i = 0;            /* FIX: Validate count before using it as the for loop variant */            if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }        }    }}
int i,k;
int i,k;
int
i
i
k
k
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
for(k = 0; k < 1; k++)    {        {            size_t i = 0;            /* FIX: Validate count before using it as the for loop variant */            if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }        }    }
k = 0;
k = 0
k
k
0
k < 1
k
k
1
k++
k
k
{        {            size_t i = 0;            /* FIX: Validate count before using it as the for loop variant */            if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }        }    }
{            size_t i = 0;            /* FIX: Validate count before using it as the for loop variant */            if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
if (count > 0 && count <= 20)            {                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{                for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }            }
for (i = 0; i < (size_t)count; i++)                {                    printLine("Hello");                }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                    printLine("Hello");                }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(5,17,0)
(42,58,0)
(8,16,0)
(20,14,0)
(46,7,0)
(4,46,0)
(34,49,0)
(24,59,0)
(18,33,0)
(9,49,0)
(39,5,0)
(29,5,0)
(14,7,0)
(13,42,0)
(7,14,0)
(53,42,0)
(24,52,0)
(6,43,0)
(11,13,0)
(24,45,0)
(2,46,0)
(32,41,0)
(61,16,0)
(23,56,0)
(45,49,0)
(28,40,0)
(19,45,0)
(17,5,0)
(50,52,0)
(17,52,0)
(52,37,0)
(25,32,0)
(40,22,0)
(44,16,0)
(10,41,0)
(1,24,0)
(46,52,0)
(57,40,0)
(37,52,0)
(27,14,0)
(21,41,0)
(12,48,0)
(5,36,0)
(26,17,0)
(59,24,0)
(56,22,0)
(52,16,0)
(31,48,0)
(15,22,0)
(51,18,0)
(54,22,0)
(43,49,0)
(0,16,0)
(48,41,0)
(45,24,0)
(14,52,0)
(7,46,0)
(30,16,0)
(47,55,0)
(3,13,0)
(38,37,0)
(35,42,0)
(31,32,1)
(5,17,1)
(21,10,1)
(1,19,1)
(45,24,1)
(7,14,1)
(48,12,1)
(54,52,1)
(26,39,1)
(15,54,1)
(28,57,1)
(13,3,1)
(11,48,1)
(6,18,1)
(24,1,1)
(40,28,1)
(19,43,1)
(56,22,1)
(48,41,1)
(43,6,1)
(52,37,1)
(2,13,1)
(41,21,1)
(25,7,1)
(40,22,1)
(19,49,1)
(46,52,1)
(60,48,1)
(38,50,1)
(9,7,1)
(34,9,1)
(17,52,1)
(24,59,1)
(7,46,1)
(24,52,1)
(32,41,1)
(46,4,1)
(49,34,1)
(27,46,1)
(23,5,1)
(56,23,1)
(31,41,1)
(57,22,1)
(37,38,1)
(32,25,1)
(17,26,1)
(39,29,1)
(51,45,1)
(18,51,1)
(57,56,1)
(10,40,1)
(12,31,1)
(43,49,1)
(25,45,1)
(22,15,1)
(20,27,1)
(14,52,1)
(29,40,1)
(3,11,1)
(45,49,1)
(4,2,1)
(14,20,1)
(31,48,2)
(48,48,2)
(51,45,2)
(24,45,2)
(45,45,2)
(46,52,2)
(17,52,2)
(17,40,2)
(52,37,2)
(14,46,2)
(27,46,2)
(28,40,2)
(32,41,2)
(45,7,2)
(26,40,2)
(14,52,2)
(46,48,2)
(6,45,2)
(19,7,2)
(48,41,2)
(5,40,2)
(2,48,2)
(1,7,2)
(32,48,2)
(25,48,2)
(5,17,2)
(29,40,2)
(24,7,2)
(18,45,2)
(56,22,2)
(43,45,2)
(20,46,2)
(11,48,2)
(24,52,2)
(1,45,2)
(7,46,2)
(34,7,2)
(45,24,2)
(49,7,2)
(40,22,2)
(13,48,2)
(43,49,2)
(56,40,2)
(23,40,2)
(39,40,2)
(40,40,2)
(57,40,2)
(12,48,2)
(9,7,2)
(19,45,2)
(45,49,2)
(3,48,2)
(4,48,2)
(24,59,2)
(7,48,2)
(7,14,2)
-----------------------------------
(0,for(i = 0; i < 1; i++)
(1,count)
(2,count)
(3,0)
(4,0)
(5,fscanf(stdin, "%d", &count)
(6,i)
(7,count > 0 && count <= 20)
(8,for(k = 0; k < 1; k++)
(9,i)
(10,k)
(11,i)
(12,1)
(13,i = 0)
(14,count <= 20)
(15,0)
(16,)
(17,&count)
(18,printLine("Hello")
(19,i)
(20,20)
(21,0)
(22,i = 0)
(23,i)
(24,(size_t)
(25,k)
(26,count)
(27,count)
(28,1)
(29,stdin)
(30,k)
(31,k)
(32,k++)
(33,)
(34,0)
(35,i)
(36,)
(37,-1)
(38,1)
(39,"%d")
(40,i < 1)
(41,k = 0)
(42,)
(43,i++)
(44,i)
(45,i < (size_t)
(46,count > 0)
(47,for (i = 0; i < (size_t)
(48,k < 1)
(49,i = 0)
(50,count)
(51,"Hello")
(52,count = -1)
(53,if (count > 0 && count <= 20)
(54,i)
(55,)
(56,i++)
(57,i)
(58,)
(59,size_t)
(60,RET)
(61,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^