-----label-----
0
-----code-----
void
winimgs_clear(void)
{
  // clear parser state
  sixel_parser_deinit(term.imgs.parser_state);
  //printf("winimgs_clear free state %p\n", term.imgs.parser_state);
  free(term.imgs.parser_state);
  term.imgs.parser_state = NULL;

  imglist *img, *prev;

  // clear images in current screen
  for (img = term.imgs.first; img; ) {
    prev = img;
    img = img->next;
    winimg_destroy(prev);
  }

  // clear images in alternate screen
  for (img = term.imgs.altfirst; img; ) {
    prev = img;
    img = img->next;
    winimg_destroy(prev);
  }

  term.imgs.first = NULL;
  term.imgs.last = NULL;
  term.imgs.altfirst = NULL;
  term.imgs.altlast = NULL;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
9,17
9,18
9,19
10,11
11,12
11,13
12,13
14,15
14,16
15,16
15,17
16,17
20,21
21,22
21,23
22,23
24,25
24,26
25,26
25,27
26,27
30,31
31,32
31,33
32,33
32,34
33,34
33,35
34,35
38,39
40,41
41,42
41,43
41,44
42,43
44,45
44,46
47,48
47,49
50,51
50,52
50,53
51,52
52,53
52,54
53,54
55,56
55,57
56,57
56,58
57,58
61,62
63,64
63,65
63,66
64,65
65,66
65,67
66,67
68,69
70,71
71,72
71,73
72,73
74,75
74,76
75,76
78,79
79,80
79,81
80,81
82,83
84,85
84,86
84,87
85,86
86,87
86,88
87,88
89,90
89,91
90,91
90,92
91,92
95,96
97,98
97,99
97,100
98,99
99,100
99,101
100,101
102,103
104,105
105,106
105,107
106,107
108,109
108,110
109,110
112,113
113,114
113,115
114,115
116,117
118,119
119,120
119,121
120,121
120,122
121,122
121,123
122,123
126,127
128,129
129,130
129,131
130,131
130,132
131,132
131,133
132,133
136,137
138,139
139,140
139,141
140,141
140,142
141,142
141,143
142,143
146,147
148,149
149,150
149,151
150,151
150,152
151,152
151,153
152,153
156,157
-----nextToken-----
2,4,6,8,13,17,18,19,23,27,28,29,35,36,37,39,43,45,46,48,49,54,58,59,60,62,67,69,73,76,77,81,83,88,92,93,94,96,101,103,107,110,111,115,117,123,124,125,127,133,134,135,137,143,144,145,147,153,154,155,157
-----computeFrom-----
31,32
31,33
52,53
52,54
65,66
65,67
71,72
71,73
86,87
86,88
99,100
99,101
105,106
105,107
119,120
119,121
129,130
129,131
139,140
139,141
149,150
149,151
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;Declarator;Pointer;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;
-----ast_node-----
voidwinimgs_clear(void){  // clear parser state  sixel_parser_deinit(term.imgs.parser_state);  //printf("winimgs_clear free state %p\n", term.imgs.parser_state);  free(term.imgs.parser_state);  term.imgs.parser_state = NULL;  imglist *img, *prev;  // clear images in current screen  for (img = term.imgs.first; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }  // clear images in alternate screen  for (img = term.imgs.altfirst; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }  term.imgs.first = NULL;  term.imgs.last = NULL;  term.imgs.altfirst = NULL;  term.imgs.altlast = NULL;}
void
winimgs_clear(void)
winimgs_clear
void
void


{  // clear parser state  sixel_parser_deinit(term.imgs.parser_state);  //printf("winimgs_clear free state %p\n", term.imgs.parser_state);  free(term.imgs.parser_state);  term.imgs.parser_state = NULL;  imglist *img, *prev;  // clear images in current screen  for (img = term.imgs.first; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }  // clear images in alternate screen  for (img = term.imgs.altfirst; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }  term.imgs.first = NULL;  term.imgs.last = NULL;  term.imgs.altfirst = NULL;  term.imgs.altlast = NULL;}
sixel_parser_deinit(term.imgs.parser_state);
sixel_parser_deinit(term.imgs.parser_state)
sixel_parser_deinit
sixel_parser_deinit
term.imgs.parser_state
term.imgs
term
term
imgs
parser_state
free(term.imgs.parser_state);
free(term.imgs.parser_state)
free
free
term.imgs.parser_state
term.imgs
term
term
imgs
parser_state
term.imgs.parser_state = NULL;
term.imgs.parser_state = NULL
term.imgs.parser_state
term.imgs
term
term
imgs
parser_state
NULL
NULL
imglist *img, *prev;
imglist *img, *prev;
imglist
imglist
*img
*
img
*prev
*
prev
for (img = term.imgs.first; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }
img = term.imgs.first;
img = term.imgs.first
img
img
term.imgs.first
term.imgs
term
term
imgs
first
img
img
{    prev = img;    img = img->next;    winimg_destroy(prev);  }
prev = img;
prev = img
prev
prev
img
img
img = img->next;
img = img->next
img
img
img->next
img
img
next
winimg_destroy(prev);
winimg_destroy(prev)
winimg_destroy
winimg_destroy
prev
prev
for (img = term.imgs.altfirst; img; ) {    prev = img;    img = img->next;    winimg_destroy(prev);  }
img = term.imgs.altfirst;
img = term.imgs.altfirst
img
img
term.imgs.altfirst
term.imgs
term
term
imgs
altfirst
img
img
{    prev = img;    img = img->next;    winimg_destroy(prev);  }
prev = img;
prev = img
prev
prev
img
img
img = img->next;
img = img->next
img
img
img->next
img
img
next
winimg_destroy(prev);
winimg_destroy(prev)
winimg_destroy
winimg_destroy
prev
prev
term.imgs.first = NULL;
term.imgs.first = NULL
term.imgs.first
term.imgs
term
term
imgs
first
NULL
NULL
term.imgs.last = NULL;
term.imgs.last = NULL
term.imgs.last
term.imgs
term
term
imgs
last
NULL
NULL
term.imgs.altfirst = NULL;
term.imgs.altfirst = NULL
term.imgs.altfirst
term.imgs
term
term
imgs
altfirst
NULL
NULL
term.imgs.altlast = NULL;
term.imgs.altlast = NULL
term.imgs.altlast
term.imgs
term
term
imgs
altlast
NULL
NULL
-----joern-----
(72,53,0)
(85,65,0)
(87,23,0)
(20,87,0)
(30,4,0)
(7,4,0)
(11,19,0)
(80,3,0)
(55,70,0)
(81,5,0)
(49,22,0)
(32,33,0)
(41,4,0)
(63,39,0)
(37,21,0)
(74,43,0)
(54,56,0)
(43,74,0)
(29,4,0)
(39,18,0)
(50,19,0)
(0,39,0)
(79,67,0)
(18,39,0)
(59,23,0)
(33,32,0)
(67,65,0)
(9,43,0)
(40,4,0)
(90,3,0)
(66,74,0)
(10,6,0)
(76,6,0)
(32,5,0)
(16,80,0)
(53,72,0)
(27,37,0)
(11,26,0)
(38,57,0)
(8,21,0)
(28,51,0)
(17,29,0)
(57,55,0)
(84,24,0)
(62,19,0)
(82,61,0)
(14,46,0)
(3,41,0)
(5,32,0)
(69,82,0)
(51,29,0)
(75,80,0)
(1,28,0)
(71,11,0)
(65,5,0)
(26,4,0)
(68,51,0)
(74,73,0)
(23,22,0)
(18,61,0)
(58,4,0)
(67,73,0)
(72,40,0)
(51,28,0)
(25,53,0)
(22,4,0)
(39,24,0)
(24,21,0)
(89,46,0)
(6,10,0)
(65,73,0)
(88,6,0)
(70,4,0)
(47,33,0)
(46,61,0)
(56,4,0)
(46,24,0)
(86,4,0)
(65,74,0)
(31,37,0)
(2,53,0)
(19,11,0)
(12,43,0)
(82,46,0)
(52,55,0)
(46,18,0)
(44,57,0)
(45,65,0)
(10,56,0)
(23,87,0)
(34,72,0)
(77,18,0)
(70,55,0)
(36,40,0)
(21,24,0)
(42,87,0)
(83,10,0)
(26,11,0)
(35,33,0)
(43,5,0)
(60,32,0)
(78,41,0)
(3,80,0)
(15,28,0)
(21,37,0)
(55,57,0)
(39,18,1)
(14,89,1)
(82,69,1)
(10,83,1)
(84,40,1)
(26,11,1)
(48,67,1)
(72,34,1)
(59,87,1)
(87,42,1)
(88,22,1)
(43,9,1)
(64,24,1)
(21,8,1)
(69,18,1)
(82,46,1)
(43,74,1)
(39,24,1)
(2,70,1)
(89,64,1)
(5,32,1)
(27,84,1)
(17,51,1)
(16,75,1)
(38,26,1)
(49,23,1)
(36,72,1)
(67,79,1)
(46,24,1)
(67,65,1)
(72,53,1)
(68,28,1)
(57,44,1)
(79,74,1)
(9,12,1)
(6,76,1)
(85,45,1)
(81,64,1)
(46,18,1)
(32,33,1)
(39,63,1)
(70,55,1)
(24,21,1)
(32,60,1)
(60,33,1)
(44,38,1)
(10,6,1)
(34,53,1)
(15,1,1)
(75,48,1)
(29,17,1)
(43,5,1)
(65,5,1)
(28,15,1)
(48,5,1)
(52,57,1)
(62,50,1)
(45,48,1)
(33,47,1)
(3,90,1)
(19,62,1)
(22,49,1)
(78,3,1)
(66,65,1)
(64,82,1)
(80,16,1)
(83,6,1)
(42,20,1)
(11,71,1)
(51,68,1)
(1,41,1)
(23,59,1)
(47,35,1)
(13,56,1)
(37,31,1)
(12,66,1)
(23,87,1)
(56,54,1)
(0,77,1)
(35,81,1)
(54,10,1)
(46,14,1)
(63,0,1)
(3,80,1)
(77,46,1)
(31,27,1)
(55,52,1)
(51,28,1)
(74,43,1)
(18,39,1)
(53,25,1)
(76,88,1)
(90,80,1)
(8,37,1)
(40,36,1)
(55,57,1)
(11,19,1)
(71,19,1)
(65,74,1)
(25,2,1)
(20,29,1)
(21,37,1)
(41,78,1)
(65,85,1)
(14,64,2)
(18,39,2)
(82,64,2)
(66,48,2)
(67,48,2)
(12,48,2)
(10,6,2)
(39,24,2)
(51,28,2)
(72,53,2)
(43,74,2)
(63,64,2)
(11,19,2)
(65,48,2)
(18,64,2)
(46,64,2)
(43,48,2)
(69,64,2)
(74,43,2)
(70,55,2)
(82,46,2)
(21,37,2)
(55,57,2)
(5,32,2)
(24,21,2)
(39,18,2)
(65,74,2)
(64,64,2)
(23,87,2)
(39,64,2)
(9,48,2)
(46,24,2)
(0,64,2)
(85,48,2)
(48,48,2)
(45,48,2)
(67,65,2)
(89,64,2)
(26,11,2)
(65,5,2)
(46,18,2)
(74,48,2)
(79,48,2)
(32,33,2)
(43,5,2)
(3,80,2)
(77,64,2)
-----------------------------------
(0,img)
(1,term)
(2,term)
(3,term.imgs.first)
(4,)
(5,img = term.imgs.altfirst)
(6,term.imgs)
(7,prev)
(8,first)
(9,next)
(10,term.imgs.altlast)
(11,term.imgs.parser_state)
(12,img)
(13,RET)
(14,img)
(15,imgs)
(16,imgs)
(17,NULL)
(18,img = img->next)
(19,term.imgs)
(20,term)
(21,term.imgs.first)
(22,term.imgs.altfirst = NULL)
(23,term.imgs.altfirst)
(24,img = term.imgs.first)
(25,imgs)
(26,sixel_parser_deinit(term.imgs.parser_state)
(27,term)
(28,term.imgs)
(29,term.imgs.last = NULL)
(30,img)
(31,imgs)
(32,term.imgs.altfirst)
(33,term.imgs)
(34,parser_state)
(35,term)
(36,NULL)
(37,term.imgs)
(38,term)
(39,img->next)
(40,term.imgs.parser_state = NULL)
(41,term.imgs.first = NULL)
(42,imgs)
(43,img->next)
(44,imgs)
(45,prev)
(46,prev = img)
(47,imgs)
(48,img)
(49,NULL)
(50,term)
(51,term.imgs.last)
(52,parser_state)
(53,term.imgs)
(54,NULL)
(55,term.imgs.parser_state)
(56,term.imgs.altlast = NULL)
(57,term.imgs)
(58,for (img = term.imgs.altfirst; img; )
(59,altfirst)
(60,altfirst)
(61,)
(62,imgs)
(63,next)
(64,img)
(65,prev = img)
(66,img)
(67,winimg_destroy(prev)
(68,last)
(69,prev)
(70,free(term.imgs.parser_state)
(71,parser_state)
(72,term.imgs.parser_state)
(73,)
(74,img = img->next)
(75,term)
(76,imgs)
(77,img)
(78,NULL)
(79,prev)
(80,term.imgs)
(81,img)
(82,winimg_destroy(prev)
(83,altlast)
(84,img)
(85,img)
(86,for (img = term.imgs.first; img; )
(87,term.imgs)
(88,term)
(89,prev)
(90,first)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^