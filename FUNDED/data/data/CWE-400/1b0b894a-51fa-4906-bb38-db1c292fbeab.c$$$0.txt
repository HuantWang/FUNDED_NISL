-----label-----
1
-----code-----
static char *get_page(size_t sz, void **ptr) {
  void *d;
  long pagesz = get_pagesz(), p;

  d = malloc(sz + (pagesz-1));
  if (d == NULL) {
    pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),
      MOD_SFTP_VERSION ": Out of memory!");
    exit(1);
  }

  *ptr = d;

  p = ((long) d + (pagesz-1)) &~ (pagesz-1);

  return ((char *) p);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
6,7
6,8
7,8
9,10
11,12
11,13
13,14
13,15
13,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
18,19
19,20
19,21
21,22
21,23
24,25
25,26
25,27
25,28
27,28
27,29
29,30
30,31
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
42,43
42,44
43,44
45,46
46,47
46,48
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
66,67
68,69
70,71
71,72
71,73
72,73
74,75
74,76
75,76
76,77
76,78
77,78
77,79
78,79
78,80
81,82
83,84
84,85
84,86
85,86
88,89
89,90
90,91
90,92
91,92
94,95
95,96
96,97
96,98
97,98
97,99
99,100
101,102
-----nextToken-----
2,4,5,8,10,12,14,15,16,20,22,23,26,28,32,34,38,41,44,48,49,53,55,61,62,67,69,73,79,80,82,86,87,92,93,98,100,102
-----computeFrom-----
36,37
36,38
42,43
42,44
46,47
46,48
51,52
51,53
64,65
64,66
71,72
71,73
74,75
74,76
76,77
76,78
84,85
84,86
90,91
90,92
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;IdExpression;Name;
-----ast_node-----
static char *get_page(size_t sz, void **ptr) {  void *d;  long pagesz = get_pagesz(), p;  d = malloc(sz + (pagesz-1));  if (d == NULL) {    pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),      MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }  *ptr = d;  p = ((long) d + (pagesz-1)) &~ (pagesz-1);  return ((char *) p);}
static char
*get_page(size_t sz, void **ptr)
*
get_page
size_t sz
size_t
size_t
sz
sz
void **ptr
void
**ptr
*
*
ptr
{  void *d;  long pagesz = get_pagesz(), p;  d = malloc(sz + (pagesz-1));  if (d == NULL) {    pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),      MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }  *ptr = d;  p = ((long) d + (pagesz-1)) &~ (pagesz-1);  return ((char *) p);}
void *d;
void *d;
void
*d
*
d
long pagesz = get_pagesz(), p;
long pagesz = get_pagesz(), p;
long
pagesz = get_pagesz()
pagesz
= get_pagesz()
get_pagesz()
get_pagesz
get_pagesz
p
p
d = malloc(sz + (pagesz-1));
d = malloc(sz + (pagesz-1))
d
d
malloc(sz + (pagesz-1))
malloc
malloc
sz + (pagesz-1)
sz
sz
(pagesz-1)
pagesz-1
pagesz
pagesz
1
if (d == NULL) {    pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),      MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }
d == NULL
d
d
NULL
NULL
{    pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),      MOD_SFTP_VERSION ": Out of memory!");    exit(1);  }
pr_log_pri(pr_log_level_exhausted_rsrc(PR_LOG_RSRC_MEM, 0),      MOD_SFTP_VERSION ": Out of memory!");
exit(1);
exit(1)
exit
exit
1
*ptr = d;
*ptr = d
*ptr
ptr
ptr
d
d
p = ((long) d + (pagesz-1)) &~ (pagesz-1);
p = ((long) d + (pagesz-1)) &~ (pagesz-1)
p
p
((long) d + (pagesz-1)) &~ (pagesz-1)
((long) d + (pagesz-1))
(long) d + (pagesz-1)
(long) d
long
long

d
d
(pagesz-1)
pagesz-1
pagesz
pagesz
1
~ (pagesz-1)
(pagesz-1)
pagesz-1
pagesz
pagesz
1
return ((char *) p);
((char *) p)
(char *) p
char *
char
*
*
p
p
-----joern-----
(36,18,0)
(43,37,0)
(45,39,0)
(2,14,0)
(0,24,0)
(33,45,0)
(19,24,0)
(22,15,0)
(7,35,0)
(41,23,0)
(2,44,0)
(25,8,0)
(4,25,0)
(6,39,0)
(40,25,0)
(6,18,0)
(13,40,0)
(1,14,0)
(31,39,0)
(29,42,0)
(11,41,0)
(37,43,0)
(10,39,0)
(37,44,0)
(37,18,0)
(24,39,0)
(2,23,0)
(28,18,0)
(44,19,0)
(28,25,0)
(41,24,0)
(9,19,0)
(32,42,0)
(44,2,0)
(21,40,0)
(42,32,0)
(19,44,0)
(25,40,0)
(40,24,0)
(14,39,0)
(42,14,0)
(15,18,0)
(26,39,0)
(27,19,0)
(42,45,0)
(20,7,0)
(30,12,0)
(44,37,0)
(38,41,0)
(30,6,0)
(16,6,0)
(45,30,0)
(34,30,0)
(3,15,0)
(46,39,0)
(14,2,0)
(25,28,0)
(23,2,0)
(18,39,0)
(24,5,0)
(18,28,0)
(23,41,0)
(5,24,0)
(17,37,0)
(30,12,1)
(37,43,1)
(6,16,1)
(14,2,1)
(9,27,1)
(42,32,1)
(37,18,1)
(42,14,1)
(37,17,1)
(6,18,1)
(3,18,1)
(30,34,1)
(21,13,1)
(45,30,1)
(42,29,1)
(13,4,1)
(4,36,1)
(24,5,1)
(20,15,1)
(38,44,1)
(25,40,1)
(2,23,1)
(44,37,1)
(19,9,1)
(5,0,1)
(22,3,1)
(15,18,1)
(45,42,1)
(33,45,1)
(40,24,1)
(25,8,1)
(11,38,1)
(23,41,1)
(41,24,1)
(41,11,1)
(27,37,1)
(36,24,1)
(40,21,1)
(2,44,1)
(15,22,1)
(17,1,1)
(16,30,1)
(34,15,1)
(1,6,1)
(29,14,1)
(7,20,1)
(34,7,1)
(19,24,1)
(18,28,1)
(44,19,1)
(28,25,1)
(40,24,2)
(15,18,2)
(7,15,2)
(18,28,2)
(19,24,2)
(14,2,2)
(24,5,2)
(20,15,2)
(42,32,2)
(45,30,2)
(6,18,2)
(44,19,2)
(30,12,2)
(33,45,2)
(23,41,2)
(2,23,2)
(2,44,2)
(25,40,2)
(37,43,2)
(44,37,2)
(28,25,2)
(37,18,2)
(42,14,2)
(25,8,2)
(41,24,2)
-----------------------------------
(0,pagesz)
(1,p)
(2,((long)
(3,d)
(4,sz)
(5,get_pagesz()
(6,*ptr = d)
(7,exit(1)
(8,size_t sz)
(9,1)
(10,d)
(11,1)
(12,void **ptr)
(13,pagesz)
(14,p = ((long)
(15,d == NULL)
(16,d)
(17,d)
(18,d = malloc(sz + (pagesz-1)
(19,pagesz-1)
(20,1)
(21,1)
(22,NULL)
(23,~ (pagesz-1)
(24,pagesz = get_pagesz()
(25,sz + (pagesz-1)
(26,p)
(27,pagesz)
(28,malloc(sz + (pagesz-1)
(29,p)
(30,*ptr)
(31,if (d == NULL)
(32,char *)
(33,RET)
(34,ptr)
(35,)
(36,d)
(37,(long)
(38,pagesz)
(39,)
(40,pagesz-1)
(41,pagesz-1)
(42,(char *)
(43,long)
(44,(long)
(45,return ((char *)
(46,pagesz)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^