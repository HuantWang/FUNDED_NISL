-----label-----
0
-----code-----
static int update_registry(struct sockaddr_in *sin, int callno, char *devtype, int fd, unsigned short refresh)
{
	/* Called from IAX thread only, with proper iaxsl lock */
	struct iax_ie_data ied = {
		.pos = 0,
	}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
17,19
20,21
20,22
22,23
24,25
24,26
26,27
28,29
-----nextToken-----
2,4,7,9,10,12,14,16,18,19,21,23,25,27
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ProblemStatement;
-----ast_node-----
static int update_registry(struct sockaddr_in *sin, int callno, char *devtype, int fd, unsigned short refresh){	/* Called from IAX thread only, with proper iaxsl lock */	struct iax_ie_data ied = {		.pos = 0,	}
static int
update_registry(struct sockaddr_in *sin, int callno, char *devtype, int fd, unsigned short refresh)
update_registry
struct sockaddr_in *sin
struct sockaddr_in
sockaddr_in
*sin
*
sin
int callno
int
callno
callno
char *devtype
char
*devtype
*
devtype
int fd
int
fd
fd
unsigned short refresh
unsigned short
refresh
refresh
{	/* Called from IAX thread only, with proper iaxsl lock */	struct iax_ie_data ied = {		.pos = 0,	}
struct iax_ie_data ied = {		.pos = 0,
-----joern-----
(24,28,0)
(2,11,0)
(11,2,0)
(28,24,1)
(26,18,1)
(2,11,1)
(2,11,2)
(26,18,2)
-----------------------------------
(0,if (p->expire > -1)
(1,expiry)
(2,&p->addr)
(3,expiry)
(4,mailbox)
(5,-1)
(6,"ChannelType: IAX2\\r\\nPeer: IAX2/%s\\r\\nPeerStatus: Registered\\r\\nAddress: %s\\r\\nPort: %d\\r\\n")
(7,p)
(8,ied)
(9,callno)
(10,p->name)
(11,p->addr)
(12,p)
(13,p)
(14,iaxs)
(15,AST_EVENT_IE_NEWMSGS)
(16,1)
(17,res = -1)
(18,res)
(19,ast_event_get_cached(AST_EVENT_MWI,\n\\n\\t\\t\\t\\tAST_EVENT_IE_MAILBOX, AST_EVENT_IE_PLTYPE_STR, mailbox,\n\\n\\t\\t\\t\\tAST_EVENT_IE_CONTEXT, AST_EVENT_IE_PLTYPE_STR, context,\n\\n\\t\\t\\t\\tAST_EVENT_IE_END)
(20,ast_test_flag(&iaxs[callno]->state, IAX_STATE_AUTHENTICATED)
(21,sin->sin_addr)
(22,ast_inet_ntoa(sin->sin_addr)
(23,ast_test_flag64(p, IAX_TEMPONLY|IAX_RTCACHEFRIENDS)
(24,peer_addr)
(25,ied)
(26,iaxs)
(27,ied)
(28,&peer_addr)
(29,ast_devstate_changed(AST_DEVICE_UNAVAILABLE, AST_DEVSTATE_CACHABLE, "IAX2/%s", p->name)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^