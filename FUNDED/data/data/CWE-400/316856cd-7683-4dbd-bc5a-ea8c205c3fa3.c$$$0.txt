-----label-----
1
-----code-----
static const char *driver_error_to_string(int r) {
        static const char *error_strings[_DRIVER_E_MAX] = {
                [DRIVER_E_INVALID_MESSAGE]                      = "Invalid message body",
                [DRIVER_E_PEER_NOT_REGISTERED]                  = "Message forwarding attempted without calling Hello()",
                [DRIVER_E_PEER_NOT_YET_REGISTERED]              = "Hello() was not yet called",
                [DRIVER_E_PEER_ALREADY_REGISTERED]              = "Hello() already called",
                [DRIVER_E_PEER_NOT_PRIVILEGED]                  = "The caller does not have the necessary privileged to call this method",
                [DRIVER_E_UNEXPECTED_FDS]                       = "Peer does not support file descriptor passing.",
                [DRIVER_E_UNEXPECTED_MESSAGE_TYPE]              = "Unexpected message type",
                [DRIVER_E_UNEXPECTED_PATH]                      = "Invalid object path",
                [DRIVER_E_UNEXPECTED_INTERFACE]                 = "Invalid interface",
                [DRIVER_E_UNEXPECTED_METHOD]                    = "Invalid method call",
                [DRIVER_E_UNEXPECTED_PROPERTY]                  = "Invalid property",
                [DRIVER_E_READONLY_PROPERTY]                    = "Cannot set read-only property",
                [DRIVER_E_UNEXPECTED_SIGNATURE]                 = "Invalid signature for method",
                [DRIVER_E_UNEXPECTED_REPLY]                     = "No pending reply with that serial",
                [DRIVER_E_FORWARD_FAILED]                       = "Request could not be forwarded to the parent process",
                [DRIVER_E_QUOTA]                                = "Sending user's quota exceeded",
                [DRIVER_E_UNEXPECTED_FLAGS]                     = "Invalid flags",
                [DRIVER_E_UNEXPECTED_ENVIRONMENT_UPDATE]        = "User is not authorized to update environment variables",
                [DRIVER_E_SEND_DENIED]                          = "Sender is not authorized to send message",
                [DRIVER_E_RECEIVE_DENIED]                       = "Receiver is not authorized to receive message",
                [DRIVER_E_EXPECTED_REPLY_EXISTS]                = "Pending reply with that serial already exists",
                [DRIVER_E_NAME_RESERVED]                        = "org.freedesktop.DBus is a reserved name",
                [DRIVER_E_NAME_UNIQUE]                          = "The name is a unique name",
                [DRIVER_E_NAME_INVALID]                         = "The name is not a valid well-known name",
                [DRIVER_E_NAME_REFUSED]                         = "Request to own name refused by policy",
                [DRIVER_E_NAME_NOT_FOUND]                       = "The name does not exist",
                [DRIVER_E_NAME_NOT_ACTIVATABLE]                 = "The name is not activatable",
                [DRIVER_E_NAME_OWNER_NOT_FOUND]                 = "The name does not have an owner",
                [DRIVER_E_PEER_NOT_FOUND]                       = "The connection does not exist",
                [DRIVER_E_DESTINATION_NOT_FOUND]                = "Destination does not exist",
                [DRIVER_E_MATCH_INVALID]                        = "Invalid match rule",
                [DRIVER_E_MATCH_NOT_FOUND]                      = "The match does not exist",
                [DRIVER_E_ADT_NOT_SUPPORTED]                    = "Solaris ADT is not supported",
                [DRIVER_E_SELINUX_NOT_SUPPORTED]                = "SELinux is not supported",
        }
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
10,11
-----nextToken-----
2,4,5,7,9
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ProblemStatement;
-----ast_node-----
static const char *driver_error_to_string(int r) {        static const char *error_strings[_DRIVER_E_MAX] = {                [DRIVER_E_INVALID_MESSAGE]                      = "Invalid message body",                [DRIVER_E_PEER_NOT_REGISTERED]                  = "Message forwarding attempted without calling Hello()",                [DRIVER_E_PEER_NOT_YET_REGISTERED]              = "Hello() was not yet called",                [DRIVER_E_PEER_ALREADY_REGISTERED]              = "Hello() already called",                [DRIVER_E_PEER_NOT_PRIVILEGED]                  = "The caller does not have the necessary privileged to call this method",                [DRIVER_E_UNEXPECTED_FDS]                       = "Peer does not support file descriptor passing.",                [DRIVER_E_UNEXPECTED_MESSAGE_TYPE]              = "Unexpected message type",                [DRIVER_E_UNEXPECTED_PATH]                      = "Invalid object path",                [DRIVER_E_UNEXPECTED_INTERFACE]                 = "Invalid interface",                [DRIVER_E_UNEXPECTED_METHOD]                    = "Invalid method call",                [DRIVER_E_UNEXPECTED_PROPERTY]                  = "Invalid property",                [DRIVER_E_READONLY_PROPERTY]                    = "Cannot set read-only property",                [DRIVER_E_UNEXPECTED_SIGNATURE]                 = "Invalid signature for method",                [DRIVER_E_UNEXPECTED_REPLY]                     = "No pending reply with that serial",                [DRIVER_E_FORWARD_FAILED]                       = "Request could not be forwarded to the parent process",                [DRIVER_E_QUOTA]                                = "Sending user's quota exceeded",                [DRIVER_E_UNEXPECTED_FLAGS]                     = "Invalid flags",                [DRIVER_E_UNEXPECTED_ENVIRONMENT_UPDATE]        = "User is not authorized to update environment variables",                [DRIVER_E_SEND_DENIED]                          = "Sender is not authorized to send message",                [DRIVER_E_RECEIVE_DENIED]                       = "Receiver is not authorized to receive message",                [DRIVER_E_EXPECTED_REPLY_EXISTS]                = "Pending reply with that serial already exists",                [DRIVER_E_NAME_RESERVED]                        = "org.freedesktop.DBus is a reserved name",                [DRIVER_E_NAME_UNIQUE]                          = "The name is a unique name",                [DRIVER_E_NAME_INVALID]                         = "The name is not a valid well-known name",                [DRIVER_E_NAME_REFUSED]                         = "Request to own name refused by policy",                [DRIVER_E_NAME_NOT_FOUND]                       = "The name does not exist",                [DRIVER_E_NAME_NOT_ACTIVATABLE]                 = "The name is not activatable",                [DRIVER_E_NAME_OWNER_NOT_FOUND]                 = "The name does not have an owner",                [DRIVER_E_PEER_NOT_FOUND]                       = "The connection does not exist",                [DRIVER_E_DESTINATION_NOT_FOUND]                = "Destination does not exist",                [DRIVER_E_MATCH_INVALID]                        = "Invalid match rule",                [DRIVER_E_MATCH_NOT_FOUND]                      = "The match does not exist",                [DRIVER_E_ADT_NOT_SUPPORTED]                    = "Solaris ADT is not supported",                [DRIVER_E_SELINUX_NOT_SUPPORTED]                = "SELinux is not supported",        }
static const char
*driver_error_to_string(int r)
*
driver_error_to_string
int r
int
r
r
{        static const char *error_strings[_DRIVER_E_MAX] = {                [DRIVER_E_INVALID_MESSAGE]                      = "Invalid message body",                [DRIVER_E_PEER_NOT_REGISTERED]                  = "Message forwarding attempted without calling Hello()",                [DRIVER_E_PEER_NOT_YET_REGISTERED]              = "Hello() was not yet called",                [DRIVER_E_PEER_ALREADY_REGISTERED]              = "Hello() already called",                [DRIVER_E_PEER_NOT_PRIVILEGED]                  = "The caller does not have the necessary privileged to call this method",                [DRIVER_E_UNEXPECTED_FDS]                       = "Peer does not support file descriptor passing.",                [DRIVER_E_UNEXPECTED_MESSAGE_TYPE]              = "Unexpected message type",                [DRIVER_E_UNEXPECTED_PATH]                      = "Invalid object path",                [DRIVER_E_UNEXPECTED_INTERFACE]                 = "Invalid interface",                [DRIVER_E_UNEXPECTED_METHOD]                    = "Invalid method call",                [DRIVER_E_UNEXPECTED_PROPERTY]                  = "Invalid property",                [DRIVER_E_READONLY_PROPERTY]                    = "Cannot set read-only property",                [DRIVER_E_UNEXPECTED_SIGNATURE]                 = "Invalid signature for method",                [DRIVER_E_UNEXPECTED_REPLY]                     = "No pending reply with that serial",                [DRIVER_E_FORWARD_FAILED]                       = "Request could not be forwarded to the parent process",                [DRIVER_E_QUOTA]                                = "Sending user's quota exceeded",                [DRIVER_E_UNEXPECTED_FLAGS]                     = "Invalid flags",                [DRIVER_E_UNEXPECTED_ENVIRONMENT_UPDATE]        = "User is not authorized to update environment variables",                [DRIVER_E_SEND_DENIED]                          = "Sender is not authorized to send message",                [DRIVER_E_RECEIVE_DENIED]                       = "Receiver is not authorized to receive message",                [DRIVER_E_EXPECTED_REPLY_EXISTS]                = "Pending reply with that serial already exists",                [DRIVER_E_NAME_RESERVED]                        = "org.freedesktop.DBus is a reserved name",                [DRIVER_E_NAME_UNIQUE]                          = "The name is a unique name",                [DRIVER_E_NAME_INVALID]                         = "The name is not a valid well-known name",                [DRIVER_E_NAME_REFUSED]                         = "Request to own name refused by policy",                [DRIVER_E_NAME_NOT_FOUND]                       = "The name does not exist",                [DRIVER_E_NAME_NOT_ACTIVATABLE]                 = "The name is not activatable",                [DRIVER_E_NAME_OWNER_NOT_FOUND]                 = "The name does not have an owner",                [DRIVER_E_PEER_NOT_FOUND]                       = "The connection does not exist",                [DRIVER_E_DESTINATION_NOT_FOUND]                = "Destination does not exist",                [DRIVER_E_MATCH_INVALID]                        = "Invalid match rule",                [DRIVER_E_MATCH_NOT_FOUND]                      = "The match does not exist",                [DRIVER_E_ADT_NOT_SUPPORTED]                    = "Solaris ADT is not supported",                [DRIVER_E_SELINUX_NOT_SUPPORTED]                = "SELinux is not supported",        }
static const char *error_strings[_DRIVER_E_MAX] = {                [DRIVER_E_INVALID_MESSAGE]                      = "Invalid message body",                [DRIVER_E_PEER_NOT_REGISTERED]                  = "Message forwarding attempted without calling Hello()",                [DRIVER_E_PEER_NOT_YET_REGISTERED]              = "Hello() was not yet called",                [DRIVER_E_PEER_ALREADY_REGISTERED]              = "Hello() already called",                [DRIVER_E_PEER_NOT_PRIVILEGED]                  = "The caller does not have the necessary privileged to call this method",                [DRIVER_E_UNEXPECTED_FDS]                       = "Peer does not support file descriptor passing.",                [DRIVER_E_UNEXPECTED_MESSAGE_TYPE]              = "Unexpected message type",                [DRIVER_E_UNEXPECTED_PATH]                      = "Invalid object path",                [DRIVER_E_UNEXPECTED_INTERFACE]                 = "Invalid interface",                [DRIVER_E_UNEXPECTED_METHOD]                    = "Invalid method call",                [DRIVER_E_UNEXPECTED_PROPERTY]                  = "Invalid property",                [DRIVER_E_READONLY_PROPERTY]                    = "Cannot set read-only property",                [DRIVER_E_UNEXPECTED_SIGNATURE]                 = "Invalid signature for method",                [DRIVER_E_UNEXPECTED_REPLY]                     = "No pending reply with that serial",                [DRIVER_E_FORWARD_FAILED]                       = "Request could not be forwarded to the parent process",                [DRIVER_E_QUOTA]                                = "Sending user's quota exceeded",                [DRIVER_E_UNEXPECTED_FLAGS]                     = "Invalid flags",                [DRIVER_E_UNEXPECTED_ENVIRONMENT_UPDATE]        = "User is not authorized to update environment variables",                [DRIVER_E_SEND_DENIED]                          = "Sender is not authorized to send message",                [DRIVER_E_RECEIVE_DENIED]                       = "Receiver is not authorized to receive message",                [DRIVER_E_EXPECTED_REPLY_EXISTS]                = "Pending reply with that serial already exists",                [DRIVER_E_NAME_RESERVED]                        = "org.freedesktop.DBus is a reserved name",                [DRIVER_E_NAME_UNIQUE]                          = "The name is a unique name",                [DRIVER_E_NAME_INVALID]                         = "The name is not a valid well-known name",                [DRIVER_E_NAME_REFUSED]                         = "Request to own name refused by policy",                [DRIVER_E_NAME_NOT_FOUND]                       = "The name does not exist",                [DRIVER_E_NAME_NOT_ACTIVATABLE]                 = "The name is not activatable",                [DRIVER_E_NAME_OWNER_NOT_FOUND]                 = "The name does not have an owner",                [DRIVER_E_PEER_NOT_FOUND]                       = "The connection does not exist",                [DRIVER_E_DESTINATION_NOT_FOUND]                = "Destination does not exist",                [DRIVER_E_MATCH_INVALID]                        = "Invalid match rule",                [DRIVER_E_MATCH_NOT_FOUND]                      = "The match does not exist",                [DRIVER_E_ADT_NOT_SUPPORTED]                    = "Solaris ADT is not supported",                [DRIVER_E_SELINUX_NOT_SUPPORTED]                = "SELinux is not supported",
-----joern-----
(2,0,0)
(3,0,0)
(7,8,0)
(9,8,0)
(6,10,0)
(5,4,0)
(1,11,0)
(1,4,1)
(8,7,1)
(2,3,1)
(0,2,1)
(7,9,1)
(9,6,1)
(3,11,1)
(3,11,2)
(2,11,2)
(11,4,2)
(1,4,2)
(0,11,2)
-----------------------------------
(0,error_strings[r])
(1,r)
(2,r)
(3,error_strings)
(4,r >= 0)
(5,r)
(6,assert(r >= 0 && r < _DRIVER_E_MAX && error_strings[r])
(7,r)
(8,error_strings[r])
(9,error_strings)
(10,)
(11,r < _DRIVER_E_MAX)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^