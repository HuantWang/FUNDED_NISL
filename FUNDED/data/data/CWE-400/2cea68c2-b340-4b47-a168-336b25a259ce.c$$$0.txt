-----label-----
0
-----code-----
static void goodB2G()
{
    size_t data;
    void (*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink;
    /* Initialize data */
    data = 0;
    {
        char inputBuffer[CHAR_ARRAY_SIZE] = "";
        /* POTENTIAL FLAW: Read data from the console using fgets() */
        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)
        {
            /* Convert to unsigned int */
            data = strtoul(inputBuffer, NULL, 0);
        }
        else
        {
            printLine("fgets() failed.");
        }
    }
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
32,33
32,34
33,34
34,35
34,36
36,37
36,38
36,39
38,39
39,40
41,42
43,44
43,45
43,46
44,45
44,46
45,46
45,47
45,48
45,49
46,47
48,49
50,51
52,53
54,55
56,57
57,58
58,59
58,60
59,60
61,62
61,63
61,64
61,65
62,63
64,65
66,67
69,70
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
79,80
-----nextToken-----
2,4,9,11,14,17,18,21,23,26,30,31,35,37,40,42,47,49,51,53,55,60,63,65,67,68,73,74,78,80
-----computeFrom-----
28,29
28,30
44,45
44,46
58,59
58,60
-----guardedBy-----
49,65
55,67
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    size_t data;    void (*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    funcPtr(data);}
static void
goodB2G()
goodB2G
{    size_t data;    void (*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink;    /* Initialize data */    data = 0;    {        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }    funcPtr(data);}
size_t data;
size_t data;
size_t
size_t
data
data
void (*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink;
void (*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink;
void
(*funcPtr) (size_t) = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink
*funcPtr
*
funcPtr
size_t
size_t
size_t


= CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink
CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink
data = 0;
data = 0
data
data
0
{        char inputBuffer[CHAR_ARRAY_SIZE] = "";        /* POTENTIAL FLAW: Read data from the console using fgets() */        if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }    }
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char inputBuffer[CHAR_ARRAY_SIZE] = "";
char
inputBuffer[CHAR_ARRAY_SIZE] = ""
inputBuffer
[CHAR_ARRAY_SIZE]
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
= ""
""
if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL)        {            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }        else        {            printLine("fgets() failed.");        }
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin) != NULL
fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
fgets
fgets
inputBuffer
inputBuffer
CHAR_ARRAY_SIZE
CHAR_ARRAY_SIZE
stdin
stdin
NULL
NULL
{            /* Convert to unsigned int */            data = strtoul(inputBuffer, NULL, 0);        }
data = strtoul(inputBuffer, NULL, 0);
data = strtoul(inputBuffer, NULL, 0)
data
data
strtoul(inputBuffer, NULL, 0)
strtoul
strtoul
inputBuffer
inputBuffer
NULL
NULL
0
{            printLine("fgets() failed.");        }
printLine("fgets() failed.");
printLine("fgets() failed.")
printLine
printLine
"fgets() failed."
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(6,21,0)
(24,31,0)
(14,16,0)
(17,19,0)
(33,13,0)
(26,19,0)
(30,4,0)
(7,13,0)
(27,9,0)
(5,7,0)
(18,31,0)
(0,13,0)
(22,13,0)
(31,19,0)
(9,16,0)
(9,19,0)
(15,31,0)
(31,15,0)
(23,9,0)
(11,4,0)
(8,15,0)
(4,13,0)
(16,29,0)
(19,4,0)
(25,6,0)
(20,13,0)
(1,7,0)
(12,31,0)
(20,7,0)
(10,9,0)
(32,33,0)
(16,9,0)
(20,16,0)
(3,20,0)
(28,33,0)
(33,32,1)
(23,14,1)
(14,15,1)
(9,19,1)
(3,6,1)
(24,12,1)
(16,9,1)
(26,7,1)
(20,16,1)
(8,31,1)
(15,31,1)
(20,3,1)
(1,5,1)
(3,16,1)
(2,20,1)
(25,15,1)
(31,24,1)
(15,8,1)
(6,25,1)
(5,33,1)
(9,27,1)
(27,10,1)
(20,7,1)
(7,1,1)
(19,17,1)
(10,23,1)
(12,18,1)
(17,26,1)
(18,19,1)
(31,19,1)
(32,28,1)
(20,7,2)
(20,16,2)
(14,15,2)
(27,15,2)
(16,9,2)
(9,19,2)
(15,31,2)
(9,15,2)
(6,15,2)
(16,15,2)
(23,15,2)
(31,19,2)
(25,15,2)
(10,15,2)
-----------------------------------
(0,data)
(1,0)
(2,RET)
(3,data)
(4,)
(5,data)
(6,printLine("fgets()
(7,data = 0)
(8,NULL)
(9,strtoul(inputBuffer, NULL, 0)
(10,NULL)
(11,if (fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(12,CHAR_ARRAY_SIZE)
(13,)
(14,data)
(15,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(16,data = strtoul(inputBuffer, NULL, 0)
(17,"")
(18,inputBuffer)
(19,inputBuffer[CHAR_ARRAY_SIZE] = "")
(20,funcPtr(data)
(21,)
(22,funcPtr)
(23,inputBuffer)
(24,stdin)
(25,"fgets()
(26,inputBuffer)
(27,0)
(28,funcPtr)
(29,)
(30,inputBuffer)
(31,fgets(inputBuffer, CHAR_ARRAY_SIZE, stdin)
(32,CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_65b_goodB2GSink)
(33,(*funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^