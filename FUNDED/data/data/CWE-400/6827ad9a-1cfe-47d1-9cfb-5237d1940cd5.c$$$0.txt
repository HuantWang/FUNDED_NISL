-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
5,15
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
43,45
44,45
44,46
45,46
47,48
49,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
58,59
58,60
59,60
59,61
60,61
65,66
66,67
66,68
67,68
67,69
68,69
68,70
69,70
74,75
75,76
75,77
76,77
78,79
78,80
79,80
79,81
80,81
82,83
84,85
85,86
85,87
86,87
89,90
91,92
91,93
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,46,48,53,55,61,62,63,64,70,71,72,73,77,81,83,87,88,90,92,93
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
57,58
57,59
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18_bad(){    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18_bad
{    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
source
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
malloc(100*sizeof(struct _twoIntsStruct))
malloc
malloc
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(18,21,0)
(24,14,0)
(19,30,0)
(6,45,0)
(42,4,0)
(12,34,0)
(43,14,0)
(36,21,0)
(34,5,0)
(42,30,0)
(29,11,0)
(5,34,0)
(32,21,0)
(6,8,0)
(9,14,0)
(14,6,0)
(10,14,0)
(37,17,0)
(18,17,0)
(31,36,0)
(45,30,0)
(15,32,0)
(8,6,0)
(35,10,0)
(38,21,0)
(13,21,0)
(47,24,0)
(11,29,0)
(28,36,0)
(23,24,0)
(5,17,0)
(15,24,0)
(40,9,0)
(34,14,0)
(33,21,0)
(30,45,0)
(0,10,0)
(41,34,0)
(11,1,0)
(26,13,0)
(14,21,0)
(9,28,0)
(3,28,0)
(45,6,0)
(20,21,0)
(17,37,0)
(30,42,0)
(2,15,0)
(24,15,0)
(16,21,0)
(17,18,0)
(17,5,0)
(44,32,0)
(6,14,0)
(46,21,0)
(4,42,0)
(28,9,0)
(22,29,0)
(7,9,0)
(39,21,0)
(27,13,0)
(22,10,1)
(6,8,1)
(43,38,1)
(0,35,1)
(5,34,1)
(38,13,1)
(17,5,1)
(32,44,1)
(10,0,1)
(3,9,1)
(17,37,1)
(11,29,1)
(14,6,1)
(40,7,1)
(24,14,1)
(41,12,1)
(39,18,1)
(36,31,1)
(25,39,1)
(29,22,1)
(28,3,1)
(31,28,1)
(6,45,1)
(10,14,1)
(13,26,1)
(7,11,1)
(45,30,1)
(34,14,1)
(47,23,1)
(42,19,1)
(18,17,1)
(15,2,1)
(26,27,1)
(2,24,1)
(12,32,1)
(35,14,1)
(23,36,1)
(30,42,1)
(42,4,1)
(28,9,1)
(7,10,1)
(15,24,1)
(19,43,1)
(9,40,1)
(34,41,1)
(24,47,1)
(9,14,1)
(44,15,1)
(29,10,2)
(11,29,2)
(30,42,2)
(15,24,2)
(9,14,2)
(6,8,2)
(45,30,2)
(24,14,2)
(42,4,2)
(34,14,2)
(17,37,2)
(11,10,2)
(14,6,2)
(17,5,2)
(5,34,2)
(10,14,2)
(22,10,2)
(18,17,2)
(6,45,2)
(28,9,2)
-----------------------------------
(0,NULL)
(1,)
(2,intTwo)
(3,intOne)
(4,struct _twoIntsStruct)
(5,&data[0])
(6,(struct _twoIntsStruct *)
(7,data)
(8,struct _twoIntsStruct *)
(9,data[0])
(10,data == NULL)
(11,exit(-1)
(12,data)
(13,data = NULL)
(14,data = (struct _twoIntsStruct *)
(15,data[0].intTwo)
(16,source:)
(17,(twoIntsStruct *)
(18,printStructLine((twoIntsStruct *)
(19,100)
(20,if (data == NULL)
(21,)
(22,1)
(23,data)
(24,data[0])
(25,RET)
(26,NULL)
(27,data)
(28,data[0].intOne)
(29,-1)
(30,100*sizeof(struct _twoIntsStruct)
(31,0)
(32,data[0].intTwo = 0)
(33,data)
(34,data[0])
(35,data)
(36,data[0].intOne = 0)
(37,twoIntsStruct *)
(38,goto source;)
(39,goto sink;)
(40,0)
(41,0)
(42,sizeof(struct _twoIntsStruct)
(43,data)
(44,0)
(45,malloc(100*sizeof(struct _twoIntsStruct)
(46,sink:)
(47,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^