-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_fwrite_68b_badSink()
{
    int count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_fwrite_68b_badSink(){    int count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__rand_fwrite_68b_badSink()
CWE400_Resource_Exhaustion__rand_fwrite_68b_badSink
{    int count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData;
int count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData;
int
count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData
count
= CWE400_Resource_Exhaustion__rand_fwrite_68_badData
CWE400_Resource_Exhaustion__rand_fwrite_68_badData
CWE400_Resource_Exhaustion__rand_fwrite_68_badData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(31,20,0)
(54,35,0)
(34,26,0)
(37,20,0)
(42,6,0)
(12,16,0)
(43,36,0)
(49,19,0)
(22,11,0)
(16,35,0)
(19,27,0)
(25,38,0)
(15,28,0)
(40,46,0)
(4,26,0)
(26,27,0)
(29,23,0)
(24,19,0)
(53,40,0)
(42,25,0)
(23,29,0)
(9,20,0)
(14,35,0)
(23,1,0)
(51,31,0)
(23,27,0)
(32,23,0)
(27,26,0)
(48,15,0)
(50,20,0)
(20,38,0)
(6,35,0)
(8,32,0)
(47,31,0)
(11,27,0)
(3,20,0)
(30,37,0)
(57,20,0)
(7,42,0)
(6,42,0)
(11,10,0)
(59,42,0)
(17,38,0)
(33,20,0)
(26,31,0)
(60,23,0)
(23,32,0)
(41,29,0)
(29,41,0)
(61,23,0)
(58,27,0)
(44,20,0)
(56,41,0)
(13,55,0)
(27,20,0)
(39,55,0)
(1,23,0)
(52,25,0)
(55,20,0)
(42,59,0)
(5,37,0)
(45,25,0)
(18,6,0)
(2,1,0)
(31,51,1)
(1,2,1)
(58,31,1)
(16,35,1)
(18,35,1)
(8,1,1)
(12,40,1)
(27,26,1)
(23,27,1)
(24,49,1)
(53,29,1)
(37,30,1)
(13,25,1)
(0,11,1)
(25,45,1)
(47,37,1)
(45,52,1)
(14,54,1)
(48,19,1)
(23,61,1)
(21,6,1)
(19,24,1)
(26,4,1)
(54,15,1)
(23,1,1)
(42,7,1)
(56,6,1)
(51,47,1)
(40,53,1)
(15,48,1)
(26,31,1)
(2,60,1)
(11,22,1)
(61,32,1)
(18,16,1)
(7,18,1)
(4,34,1)
(30,5,1)
(29,23,1)
(54,19,1)
(55,39,1)
(5,55,1)
(35,14,1)
(22,21,1)
(12,29,1)
(23,32,1)
(11,27,1)
(29,41,1)
(49,27,1)
(39,13,1)
(0,21,1)
(34,58,1)
(32,8,1)
(19,27,1)
(41,56,1)
(42,59,1)
(42,25,1)
(60,41,1)
(6,35,1)
(16,12,1)
(6,42,1)
(2,6,2)
(7,6,2)
(29,41,2)
(16,6,2)
(42,25,2)
(19,27,2)
(23,6,2)
(11,27,2)
(8,6,2)
(6,35,2)
(15,19,2)
(40,29,2)
(26,31,2)
(41,6,2)
(48,19,2)
(23,1,2)
(29,6,2)
(42,59,2)
(1,6,2)
(61,6,2)
(6,42,2)
(42,6,2)
(6,6,2)
(23,32,2)
(27,26,2)
(12,6,2)
(53,29,2)
(16,35,2)
(23,27,2)
(60,6,2)
(56,6,2)
(22,21,2)
(11,21,2)
(32,6,2)
(18,6,2)
(29,23,2)
-----------------------------------
(0,RET)
(1,sizeof(char)
(2,char)
(3,pFile)
(4,"w+")
(5,pFile)
(6,i < (size_t)
(7,count)
(8,SENTENCE)
(9,i)
(10,)
(11,fclose(pFile)
(12,i)
(13,i)
(14,0)
(15,exit(1)
(16,i++)
(17,count)
(18,i)
(19,pFile == NULL)
(20,)
(21,pFile)
(22,pFile)
(23,fwrite(SENTENCE, sizeof(char)
(24,NULL)
(25,count = CWE400_Resource_Exhaustion__rand_fwrite_68_badData)
(26,fopen(filename, "w+")
(27,pFile = fopen(filename, "w+")
(28,)
(29,strlen(SENTENCE)
(30,NULL)
(31,*filename = "output_bad.txt")
(32,strlen(SENTENCE)
(33,if (pFile == NULL)
(34,filename)
(35,i = 0)
(36,)
(37,*pFile = NULL)
(38,)
(39,0)
(40,exit(1)
(41,strlen(SENTENCE)
(42,(size_t)
(43,if (strlen(SENTENCE)
(44,filename)
(45,CWE400_Resource_Exhaustion__rand_fwrite_68_badData)
(46,)
(47,filename)
(48,1)
(49,pFile)
(50,for (i = 0; i < (size_t)
(51,"output_bad.txt")
(52,count)
(53,1)
(54,i)
(55,i = 0)
(56,SENTENCE)
(57,if (pFile)
(58,pFile)
(59,size_t)
(60,SENTENCE)
(61,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^