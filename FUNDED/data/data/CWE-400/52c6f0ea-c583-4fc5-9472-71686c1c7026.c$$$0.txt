-----label-----
0
-----code-----
static void goodB2G()
{
    int * data;
    CWE401_Memory_Leak__int_malloc_67_structType myStruct;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)malloc(100*sizeof(int));
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    myStruct.structFirst = data;
    CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
42,43
43,44
43,45
44,45
44,46
45,46
49,50
50,51
50,52
51,52
53,54
53,55
54,55
57,58
58,59
58,60
59,60
59,61
60,61
63,64
65,66
66,67
66,68
67,68
69,70
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,30,32,35,37,40,41,46,47,48,52,55,56,61,62,64,68,70
-----computeFrom-----
19,20
19,21
25,26
25,27
36,37
36,38
43,44
43,45
58,59
58,60
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int * data;    CWE401_Memory_Leak__int_malloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    myStruct.structFirst = data;    CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct);}
static void
goodB2G()
goodB2G
{    int * data;    CWE401_Memory_Leak__int_malloc_67_structType myStruct;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    myStruct.structFirst = data;    CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct);}
int * data;
int * data;
int
* data
*
data
CWE401_Memory_Leak__int_malloc_67_structType myStruct;
CWE401_Memory_Leak__int_malloc_67_structType myStruct;
CWE401_Memory_Leak__int_malloc_67_structType
CWE401_Memory_Leak__int_malloc_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct);
CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct)
CWE401_Memory_Leak__int_malloc_67b_goodB2GSink
CWE401_Memory_Leak__int_malloc_67b_goodB2GSink
myStruct
myStruct
-----joern-----
(16,14,0)
(19,25,0)
(21,23,0)
(18,27,0)
(22,30,0)
(10,6,0)
(6,21,0)
(8,27,0)
(16,0,0)
(25,9,0)
(24,16,0)
(9,27,0)
(7,11,0)
(17,27,0)
(14,16,0)
(10,0,0)
(28,18,0)
(23,21,0)
(0,10,0)
(6,10,0)
(3,21,0)
(4,18,0)
(9,0,0)
(15,23,0)
(0,27,0)
(16,11,0)
(14,27,0)
(13,10,0)
(11,27,0)
(10,13,0)
(12,9,0)
(2,0,0)
(29,11,0)
(1,29,0)
(30,27,0)
(29,0,0)
(21,6,0)
(20,29,0)
(26,16,0)
(31,25,0)
(14,16,1)
(11,7,1)
(22,9,1)
(7,29,1)
(12,25,1)
(19,31,1)
(16,26,1)
(23,15,1)
(9,12,1)
(20,0,1)
(31,14,1)
(3,2,1)
(26,24,1)
(10,6,1)
(15,3,1)
(18,4,1)
(6,21,1)
(25,19,1)
(9,0,1)
(16,11,1)
(2,18,1)
(30,22,1)
(16,0,1)
(21,23,1)
(0,10,1)
(1,20,1)
(5,30,1)
(24,11,1)
(29,0,1)
(10,13,1)
(29,1,1)
(4,28,1)
(9,0,2)
(29,0,2)
(16,0,2)
(6,21,2)
(0,10,2)
(21,23,2)
(10,13,2)
(14,16,2)
(16,11,2)
(10,6,2)
-----------------------------------
(0,data = (int *)
(1,0)
(2,data)
(3,100)
(4,NULL)
(5,RET)
(6,malloc(100*sizeof(int)
(7,5)
(8,myStruct)
(9,myStruct.structFirst = data)
(10,(int *)
(11,data[0] = 5)
(12,data)
(13,int *)
(14,printIntLine(data[0])
(15,int)
(16,data[0])
(17,data)
(18,data = NULL)
(19,structFirst)
(20,data)
(21,100*sizeof(int)
(22,myStruct)
(23,sizeof(int)
(24,data)
(25,myStruct.structFirst)
(26,0)
(27,)
(28,data)
(29,data[0])
(30,CWE401_Memory_Leak__int_malloc_67b_goodB2GSink(myStruct)
(31,myStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^