-----label-----
0
-----code-----
int
peer_delete(uint16_t conn_handle)
{
    struct peer_svc *svc;
    struct peer *peer;
    int rc;

    peer = peer_find(conn_handle);
    if (peer == NULL) {
        return BLE_HS_ENOTCONN;
    }

    SLIST_REMOVE(&peers, peer, peer, next);

    while ((svc = SLIST_FIRST(&peer->svcs)) != NULL) {
        SLIST_REMOVE_HEAD(&peer->svcs, next);
        peer_svc_delete(svc);
    }

    rc = os_memblock_put(&peer_pool, peer);
    if (rc != 0) {
        return BLE_HS_EOS;
    }

    return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
10,19
10,20
11,12
12,13
12,14
13,14
15,16
15,17
18,19
19,20
19,21
20,21
22,23
22,24
25,26
26,27
26,28
28,29
30,31
31,32
31,33
32,33
34,35
34,36
35,36
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
46,47
47,48
49,50
50,51
50,52
50,53
50,54
50,55
51,52
53,54
54,55
56,57
58,59
60,61
62,63
62,64
63,64
63,65
64,65
65,66
65,67
66,67
68,69
68,70
69,70
71,72
72,73
72,74
73,74
76,77
78,79
78,80
79,80
80,81
80,82
80,83
81,82
83,84
84,85
84,86
85,86
88,89
90,91
91,92
91,93
92,93
94,95
96,97
97,98
97,99
98,99
100,101
100,102
100,103
101,102
103,104
104,105
106,107
108,109
108,110
109,110
109,111
110,111
113,114
114,115
115,116
117,118
-----nextToken-----
2,4,7,9,14,16,17,21,23,24,27,29,33,36,38,42,44,48,52,55,57,59,61,67,70,74,75,77,82,86,87,89,93,95,99,102,105,107,111,112,116,118
-----computeFrom-----
31,32
31,33
40,41
40,42
63,64
63,65
65,66
65,67
97,98
97,99
109,110
109,111
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;WhileStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
intpeer_delete(uint16_t conn_handle){    struct peer_svc *svc;    struct peer *peer;    int rc;    peer = peer_find(conn_handle);    if (peer == NULL) {        return BLE_HS_ENOTCONN;    }    SLIST_REMOVE(&peers, peer, peer, next);    while ((svc = SLIST_FIRST(&peer->svcs)) != NULL) {        SLIST_REMOVE_HEAD(&peer->svcs, next);        peer_svc_delete(svc);    }    rc = os_memblock_put(&peer_pool, peer);    if (rc != 0) {        return BLE_HS_EOS;    }    return 0;}
int
peer_delete(uint16_t conn_handle)
peer_delete
uint16_t conn_handle
uint16_t
uint16_t
conn_handle
conn_handle
{    struct peer_svc *svc;    struct peer *peer;    int rc;    peer = peer_find(conn_handle);    if (peer == NULL) {        return BLE_HS_ENOTCONN;    }    SLIST_REMOVE(&peers, peer, peer, next);    while ((svc = SLIST_FIRST(&peer->svcs)) != NULL) {        SLIST_REMOVE_HEAD(&peer->svcs, next);        peer_svc_delete(svc);    }    rc = os_memblock_put(&peer_pool, peer);    if (rc != 0) {        return BLE_HS_EOS;    }    return 0;}
struct peer_svc *svc;
struct peer_svc *svc;
struct peer_svc
peer_svc
*svc
*
svc
struct peer *peer;
struct peer *peer;
struct peer
peer
*peer
*
peer
int rc;
int rc;
int
rc
rc
peer = peer_find(conn_handle);
peer = peer_find(conn_handle)
peer
peer
peer_find(conn_handle)
peer_find
peer_find
conn_handle
conn_handle
if (peer == NULL) {        return BLE_HS_ENOTCONN;    }
peer == NULL
peer
peer
NULL
NULL
{        return BLE_HS_ENOTCONN;    }
return BLE_HS_ENOTCONN;
BLE_HS_ENOTCONN
BLE_HS_ENOTCONN
SLIST_REMOVE(&peers, peer, peer, next);
SLIST_REMOVE(&peers, peer, peer, next)
SLIST_REMOVE
SLIST_REMOVE
&peers
peers
peers
peer
peer
peer
peer
next
next
while ((svc = SLIST_FIRST(&peer->svcs)) != NULL) {        SLIST_REMOVE_HEAD(&peer->svcs, next);        peer_svc_delete(svc);    }
(svc = SLIST_FIRST(&peer->svcs)) != NULL
(svc = SLIST_FIRST(&peer->svcs))
svc = SLIST_FIRST(&peer->svcs)
svc
svc
SLIST_FIRST(&peer->svcs)
SLIST_FIRST
SLIST_FIRST
&peer->svcs
peer->svcs
peer
peer
svcs
NULL
NULL
{        SLIST_REMOVE_HEAD(&peer->svcs, next);        peer_svc_delete(svc);    }
SLIST_REMOVE_HEAD(&peer->svcs, next);
SLIST_REMOVE_HEAD(&peer->svcs, next)
SLIST_REMOVE_HEAD
SLIST_REMOVE_HEAD
&peer->svcs
peer->svcs
peer
peer
svcs
next
next
peer_svc_delete(svc);
peer_svc_delete(svc)
peer_svc_delete
peer_svc_delete
svc
svc
rc = os_memblock_put(&peer_pool, peer);
rc = os_memblock_put(&peer_pool, peer)
rc
rc
os_memblock_put(&peer_pool, peer)
os_memblock_put
os_memblock_put
&peer_pool
peer_pool
peer_pool
peer
peer
if (rc != 0) {        return BLE_HS_EOS;    }
rc != 0
rc
rc
0
{        return BLE_HS_EOS;    }
return BLE_HS_EOS;
BLE_HS_EOS
BLE_HS_EOS
return 0;
0
-----joern-----
(56,3,0)
(13,6,0)
(17,55,0)
(54,49,0)
(24,40,0)
(18,29,0)
(55,31,0)
(39,43,0)
(14,21,0)
(34,39,0)
(42,43,0)
(28,54,0)
(50,15,0)
(8,40,0)
(36,5,0)
(53,13,0)
(16,31,0)
(5,23,0)
(20,14,0)
(13,31,0)
(30,48,0)
(9,20,0)
(23,41,0)
(3,41,0)
(21,14,0)
(19,31,0)
(25,32,0)
(15,23,0)
(54,41,0)
(44,14,0)
(12,14,0)
(47,29,0)
(10,6,0)
(40,15,0)
(41,3,0)
(51,31,0)
(23,15,0)
(18,55,0)
(3,37,0)
(6,13,0)
(32,41,0)
(45,54,0)
(20,27,0)
(0,39,0)
(7,41,0)
(15,31,0)
(49,54,0)
(35,42,0)
(42,27,0)
(1,13,0)
(43,39,0)
(23,5,0)
(33,13,0)
(2,32,0)
(22,23,0)
(29,4,0)
(11,31,0)
(14,12,0)
(43,42,0)
(49,12,0)
(41,31,0)
(12,49,0)
(26,31,0)
(13,41,0)
(52,21,0)
(38,30,0)
(18,30,0)
(39,41,0)
(46,31,0)
(13,6,1)
(20,9,1)
(39,41,1)
(47,32,1)
(18,29,1)
(50,21,1)
(21,52,1)
(44,13,1)
(39,0,1)
(23,41,1)
(15,23,1)
(35,43,1)
(56,7,1)
(13,53,1)
(53,33,1)
(49,54,1)
(13,41,1)
(32,41,1)
(17,40,1)
(44,20,1)
(29,47,1)
(32,2,1)
(54,41,1)
(14,12,1)
(54,28,1)
(41,3,1)
(22,5,1)
(42,35,1)
(24,15,1)
(42,43,1)
(21,14,1)
(36,50,1)
(6,10,1)
(18,55,1)
(3,56,1)
(2,25,1)
(43,39,1)
(9,42,1)
(38,40,1)
(8,24,1)
(12,49,1)
(0,34,1)
(20,14,1)
(45,44,1)
(23,5,1)
(28,45,1)
(5,36,1)
(33,1,1)
(18,30,1)
(1,6,1)
(25,41,1)
(3,37,1)
(23,22,1)
(40,8,1)
(52,14,1)
(30,38,1)
(40,15,1)
(10,32,1)
(55,17,1)
(34,21,1)
(21,14,2)
(22,32,2)
(54,41,2)
(23,41,2)
(52,32,2)
(30,40,2)
(44,21,2)
(12,32,2)
(12,21,2)
(21,21,2)
(13,41,2)
(20,21,2)
(40,32,2)
(45,32,2)
(9,21,2)
(29,32,2)
(18,55,2)
(43,21,2)
(40,15,2)
(3,37,2)
(13,32,2)
(49,54,2)
(54,32,2)
(23,5,2)
(50,32,2)
(39,41,2)
(33,32,2)
(44,32,2)
(43,39,2)
(18,29,2)
(15,32,2)
(6,32,2)
(35,21,2)
(24,32,2)
(55,40,2)
(49,21,2)
(38,40,2)
(23,32,2)
(42,21,2)
(10,32,2)
(12,49,2)
(14,32,2)
(18,30,2)
(8,32,2)
(32,41,2)
(21,32,2)
(53,32,2)
(36,32,2)
(47,32,2)
(45,21,2)
(14,12,2)
(39,21,2)
(17,40,2)
(20,14,2)
(42,43,2)
(28,32,2)
(1,32,2)
(49,32,2)
(13,6,2)
(0,21,2)
(15,23,2)
(14,21,2)
(54,21,2)
(34,21,2)
(5,32,2)
(52,21,2)
(28,21,2)
(41,3,2)
-----------------------------------
(0,svcs)
(1,peer)
(2,NULL)
(3,peer_find(conn_handle)
(4,)
(5,&peer_pool)
(6,&peers)
(7,peer)
(8,0)
(9,svc)
(10,peers)
(11,peer)
(12,SLIST_FIRST(&peer->svcs)
(13,SLIST_REMOVE(&peers, peer, peer, next)
(14,svc = SLIST_FIRST(&peer->svcs)
(15,rc = os_memblock_put(&peer_pool, peer)
(16,if (rc != 0)
(17,0)
(18,RET)
(19,if (peer == NULL)
(20,peer_svc_delete(svc)
(21,(svc = SLIST_FIRST(&peer->svcs)
(22,peer)
(23,os_memblock_put(&peer_pool, peer)
(24,rc)
(25,peer)
(26,rc)
(27,)
(28,svcs)
(29,return BLE_HS_ENOTCONN;)
(30,return BLE_HS_EOS;)
(31,)
(32,peer == NULL)
(33,peer)
(34,peer)
(35,next)
(36,peer_pool)
(37,uint16_t conn_handle)
(38,BLE_HS_EOS)
(39,peer->svcs)
(40,rc != 0)
(41,peer = peer_find(conn_handle)
(42,SLIST_REMOVE_HEAD(&peer->svcs, next)
(43,&peer->svcs)
(44,svc)
(45,peer)
(46,svc)
(47,BLE_HS_ENOTCONN)
(48,)
(49,&peer->svcs)
(50,rc)
(51,while ((svc = SLIST_FIRST(&peer->svcs)
(52,NULL)
(53,next)
(54,peer->svcs)
(55,return 0;)
(56,conn_handle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^