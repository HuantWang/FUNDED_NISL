-----label-----
0
-----code-----
static bool packet_rcv_has_room(struct packet_sock *po, struct sk_buff *skb)
{
	struct sock *sk = &po->sk;
	bool has_room;

	if (po->prot_hook.func != tpacket_rcv)
		return (atomic_read(&sk->sk_rmem_alloc) + skb->truesize)
			<= sk->sk_rcvbuf;

	spin_lock(&sk->sk_receive_queue.lock);
	if (po->tp_version == TPACKET_V3)
		has_room = prb_lookup_block(po, &po->rx_ring,
					    po->rx_ring.prb_bdqc.kactive_blk_num,
					    TP_STATUS_KERNEL);
	else
		has_room = packet_lookup_frame(po, &po->rx_ring,
					       po->rx_ring.head,
					       TP_STATUS_KERNEL);
	spin_unlock(&sk->sk_receive_queue.lock);

	return has_room;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
18,19
19,20
19,21
20,21
22,23
22,24
22,25
25,26
26,27
27,28
27,29
28,29
31,32
32,33
32,34
34,35
36,37
36,38
37,38
37,39
38,39
38,40
39,40
39,41
40,41
44,45
46,47
47,48
47,49
48,49
49,50
49,51
50,51
50,52
51,52
53,54
54,55
54,56
55,56
58,59
58,60
59,60
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
71,72
71,73
72,73
72,74
73,74
77,78
77,79
77,80
78,79
78,80
79,80
79,81
80,81
83,84
85,86
86,87
86,88
87,88
89,90
89,91
89,92
89,93
89,94
90,91
92,93
94,95
95,96
95,97
96,97
99,100
99,101
100,101
100,102
101,102
101,103
102,103
107,108
109,110
110,111
110,112
111,112
113,114
113,115
113,116
113,117
113,118
114,115
116,117
118,119
119,120
119,121
120,121
123,124
123,125
124,125
124,126
125,126
129,130
131,132
132,133
132,134
133,134
135,136
136,137
136,138
137,138
137,139
138,139
142,143
143,144
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,24,29,30,33,35,41,42,43,45,52,56,57,60,61,64,65,69,74,75,76,81,82,84,88,91,93,97,98,103,104,105,106,108,112,115,117,121,122,126,127,128,130,134,139,140,141,144
-----computeFrom-----
37,38
37,39
47,48
47,49
49,50
49,51
78,79
78,80
86,87
86,88
110,111
110,112
-----guardedBy-----
81,103
-----guardedByNegation-----
81,126
-----lastLexicalUse-----
81,126
-----jump-----
81,126
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ReturnStatement;BinaryExpression;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static bool packet_rcv_has_room(struct packet_sock *po, struct sk_buff *skb){	struct sock *sk = &po->sk;	bool has_room;	if (po->prot_hook.func != tpacket_rcv)		return (atomic_read(&sk->sk_rmem_alloc) + skb->truesize)			<= sk->sk_rcvbuf;	spin_lock(&sk->sk_receive_queue.lock);	if (po->tp_version == TPACKET_V3)		has_room = prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL);	else		has_room = packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL);	spin_unlock(&sk->sk_receive_queue.lock);	return has_room;}
static bool
packet_rcv_has_room(struct packet_sock *po, struct sk_buff *skb)
packet_rcv_has_room
struct packet_sock *po
struct packet_sock
packet_sock
*po
*
po
struct sk_buff *skb
struct sk_buff
sk_buff
*skb
*
skb
{	struct sock *sk = &po->sk;	bool has_room;	if (po->prot_hook.func != tpacket_rcv)		return (atomic_read(&sk->sk_rmem_alloc) + skb->truesize)			<= sk->sk_rcvbuf;	spin_lock(&sk->sk_receive_queue.lock);	if (po->tp_version == TPACKET_V3)		has_room = prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL);	else		has_room = packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL);	spin_unlock(&sk->sk_receive_queue.lock);	return has_room;}
struct sock *sk = &po->sk;
struct sock *sk = &po->sk;
struct sock
sock
*sk = &po->sk
*
sk
= &po->sk
&po->sk
po->sk
po
po
sk
bool has_room;
bool has_room;
bool
has_room
has_room
if (po->prot_hook.func != tpacket_rcv)		return (atomic_read(&sk->sk_rmem_alloc) + skb->truesize)			<= sk->sk_rcvbuf;
po->prot_hook.func != tpacket_rcv
po->prot_hook.func
po->prot_hook
po
po
prot_hook
func
tpacket_rcv
tpacket_rcv
return (atomic_read(&sk->sk_rmem_alloc) + skb->truesize)			<= sk->sk_rcvbuf;
(atomic_read(&sk->sk_rmem_alloc) + skb->truesize)			<= sk->sk_rcvbuf
(atomic_read(&sk->sk_rmem_alloc) + skb->truesize)
atomic_read(&sk->sk_rmem_alloc) + skb->truesize
atomic_read(&sk->sk_rmem_alloc)
atomic_read
atomic_read
&sk->sk_rmem_alloc
sk->sk_rmem_alloc
sk
sk
sk_rmem_alloc
skb->truesize
skb
skb
truesize
sk->sk_rcvbuf
sk
sk
sk_rcvbuf
spin_lock(&sk->sk_receive_queue.lock);
spin_lock(&sk->sk_receive_queue.lock)
spin_lock
spin_lock
&sk->sk_receive_queue.lock
sk->sk_receive_queue.lock
sk->sk_receive_queue
sk
sk
sk_receive_queue
lock
if (po->tp_version == TPACKET_V3)		has_room = prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL);	else		has_room = packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL);
po->tp_version == TPACKET_V3
po->tp_version
po
po
tp_version
TPACKET_V3
TPACKET_V3
has_room = prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL);
has_room = prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL)
has_room
has_room
prb_lookup_block(po, &po->rx_ring,					    po->rx_ring.prb_bdqc.kactive_blk_num,					    TP_STATUS_KERNEL)
prb_lookup_block
prb_lookup_block
po
po
&po->rx_ring
po->rx_ring
po
po
rx_ring
po->rx_ring.prb_bdqc.kactive_blk_num
po->rx_ring.prb_bdqc
po->rx_ring
po
po
rx_ring
prb_bdqc
kactive_blk_num
TP_STATUS_KERNEL
TP_STATUS_KERNEL
has_room = packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL);
has_room = packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL)
has_room
has_room
packet_lookup_frame(po, &po->rx_ring,					       po->rx_ring.head,					       TP_STATUS_KERNEL)
packet_lookup_frame
packet_lookup_frame
po
po
&po->rx_ring
po->rx_ring
po
po
rx_ring
po->rx_ring.head
po->rx_ring
po
po
rx_ring
head
TP_STATUS_KERNEL
TP_STATUS_KERNEL
spin_unlock(&sk->sk_receive_queue.lock);
spin_unlock(&sk->sk_receive_queue.lock)
spin_unlock
spin_unlock
&sk->sk_receive_queue.lock
sk->sk_receive_queue.lock
sk->sk_receive_queue
sk
sk
sk_receive_queue
lock
return has_room;
has_room
has_room
-----joern-----
(1,23,0)
(41,0,0)
(84,38,0)
(48,56,0)
(0,13,0)
(56,39,0)
(45,67,0)
(9,66,0)
(43,29,0)
(79,64,0)
(20,72,0)
(10,64,0)
(32,58,0)
(0,44,0)
(26,39,0)
(4,80,0)
(23,1,0)
(43,3,0)
(74,8,0)
(38,13,0)
(30,26,0)
(59,42,0)
(7,56,0)
(21,13,0)
(69,13,0)
(21,52,0)
(78,69,0)
(63,85,0)
(50,14,0)
(80,22,0)
(36,85,0)
(71,52,0)
(42,45,0)
(58,13,0)
(58,44,0)
(28,9,0)
(39,26,0)
(59,39,0)
(17,63,0)
(33,46,0)
(5,56,0)
(22,69,0)
(42,59,0)
(42,3,0)
(24,38,0)
(12,21,0)
(8,58,0)
(20,84,0)
(56,48,0)
(16,9,0)
(58,8,0)
(22,80,0)
(40,22,0)
(15,20,0)
(44,0,0)
(30,13,0)
(73,30,0)
(39,64,0)
(6,16,0)
(47,85,0)
(31,65,0)
(45,81,0)
(66,62,0)
(66,9,0)
(72,65,0)
(55,0,0)
(27,21,0)
(67,45,0)
(85,13,0)
(75,29,0)
(29,64,0)
(58,17,0)
(26,30,0)
(61,38,0)
(14,39,0)
(62,66,0)
(35,16,0)
(62,64,0)
(67,70,0)
(46,20,0)
(60,59,0)
(85,63,0)
(82,67,0)
(69,22,0)
(14,1,0)
(77,23,0)
(2,17,0)
(68,59,0)
(84,20,0)
(20,13,0)
(38,84,0)
(17,58,0)
(76,72,0)
(20,46,0)
(57,1,0)
(18,67,0)
(53,64,0)
(25,69,0)
(44,58,0)
(29,8,0)
(63,17,0)
(49,20,0)
(1,14,0)
(52,21,0)
(77,64,0)
(72,20,0)
(81,45,0)
(51,65,0)
(65,13,0)
(65,72,0)
(83,64,0)
(29,46,0)
(16,39,0)
(37,63,0)
(9,16,0)
(48,81,0)
(19,30,0)
(54,58,0)
(23,77,0)
(11,14,0)
(81,48,0)
(34,39,0)
(45,42,0)
(85,47,1)
(4,22,1)
(67,18,1)
(5,80,1)
(14,39,1)
(55,41,1)
(56,39,1)
(72,65,1)
(22,40,1)
(3,42,1)
(29,75,1)
(84,38,1)
(58,17,1)
(2,63,1)
(56,7,1)
(44,0,1)
(85,13,1)
(21,27,1)
(42,59,1)
(33,52,1)
(59,60,1)
(58,44,1)
(0,13,1)
(8,58,1)
(80,22,1)
(40,69,1)
(65,31,1)
(39,26,1)
(11,50,1)
(41,32,1)
(20,84,1)
(26,30,1)
(31,51,1)
(78,39,1)
(21,13,1)
(58,54,1)
(23,1,1)
(22,69,1)
(52,21,1)
(57,14,1)
(28,16,1)
(30,73,1)
(17,2,1)
(82,81,1)
(25,78,1)
(6,35,1)
(54,17,1)
(65,13,1)
(18,82,1)
(24,61,1)
(47,36,1)
(76,65,1)
(72,76,1)
(20,15,1)
(62,66,1)
(51,84,1)
(0,55,1)
(69,25,1)
(38,24,1)
(48,56,1)
(19,34,1)
(9,16,1)
(59,39,1)
(7,5,1)
(58,13,1)
(15,72,1)
(9,28,1)
(68,45,1)
(50,80,1)
(45,67,1)
(81,48,1)
(1,14,1)
(37,85,1)
(66,9,1)
(35,8,1)
(45,81,1)
(73,19,1)
(30,13,1)
(71,21,1)
(46,20,1)
(43,29,1)
(49,33,1)
(38,13,1)
(42,45,1)
(36,44,1)
(12,77,1)
(20,13,1)
(20,72,1)
(61,49,1)
(60,68,1)
(27,12,1)
(14,11,1)
(52,71,1)
(43,3,1)
(29,8,1)
(80,4,1)
(69,13,1)
(29,46,1)
(16,39,1)
(74,52,1)
(67,70,1)
(75,62,1)
(1,57,1)
(63,85,1)
(35,46,1)
(63,37,1)
(32,74,1)
(77,23,1)
(16,6,1)
(17,63,1)
(58,13,2)
(80,22,2)
(17,63,2)
(58,17,2)
(85,13,2)
(62,80,2)
(48,80,2)
(85,52,2)
(6,80,2)
(49,52,2)
(45,80,2)
(47,52,2)
(9,16,2)
(26,30,2)
(16,39,2)
(74,52,2)
(9,80,2)
(18,80,2)
(69,13,2)
(11,80,2)
(81,48,2)
(63,85,2)
(42,59,2)
(59,39,2)
(3,80,2)
(23,80,2)
(51,52,2)
(43,3,2)
(38,52,2)
(43,29,2)
(29,46,2)
(65,13,2)
(21,80,2)
(44,52,2)
(58,44,2)
(46,20,2)
(68,80,2)
(5,80,2)
(71,80,2)
(72,65,2)
(12,80,2)
(56,80,2)
(33,52,2)
(37,52,2)
(84,38,2)
(63,52,2)
(54,52,2)
(41,52,2)
(58,52,2)
(67,80,2)
(0,13,2)
(52,21,2)
(35,80,2)
(20,72,2)
(20,13,2)
(52,80,2)
(23,1,2)
(17,52,2)
(56,39,2)
(72,52,2)
(55,52,2)
(2,52,2)
(1,80,2)
(36,52,2)
(48,56,2)
(8,58,2)
(29,80,2)
(82,80,2)
(61,52,2)
(50,80,2)
(24,52,2)
(14,80,2)
(7,80,2)
(39,26,2)
(0,52,2)
(81,80,2)
(8,52,2)
(67,70,2)
(84,52,2)
(44,0,2)
(22,69,2)
(38,13,2)
(16,80,2)
(46,52,2)
(77,80,2)
(20,52,2)
(29,8,2)
(62,66,2)
(15,52,2)
(45,81,2)
(31,52,2)
(28,80,2)
(30,13,2)
(1,14,2)
(76,52,2)
(65,52,2)
(42,45,2)
(60,80,2)
(14,39,2)
(66,9,2)
(45,67,2)
(77,23,2)
(75,80,2)
(57,80,2)
(32,52,2)
(20,84,2)
(27,80,2)
(21,13,2)
(59,80,2)
(66,80,2)
(42,80,2)
-----------------------------------
(0,po->rx_ring)
(1,sk->sk_receive_queue.lock)
(2,kactive_blk_num)
(3,return (atomic_read(&sk->sk_rmem_alloc)
(4,tpacket_rcv)
(5,sk)
(6,sk_receive_queue)
(7,sk_rmem_alloc)
(8,has_room = prb_lookup_block(po, &po->rx_ring,\n\\n\\t\\t\\t\\t\\t    po->rx_ring.prb_bdqc.kactive_blk_num,\n\\n\\t\\t\\t\\t\\t    TP_STATUS_KERNEL)
(9,sk->sk_receive_queue.lock)
(10,if (po->prot_hook.func != tpacket_rcv)
(11,sk_receive_queue)
(12,po)
(13,struct packet_sock *po)
(14,sk->sk_receive_queue)
(15,TP_STATUS_KERNEL)
(16,sk->sk_receive_queue)
(17,po->rx_ring.prb_bdqc.kactive_blk_num)
(18,truesize)
(19,po)
(20,packet_lookup_frame(po, &po->rx_ring,\n\\n\\t\\t\\t\\t\\t       po->rx_ring.head,\n\\n\\t\\t\\t\\t\\t       TP_STATUS_KERNEL)
(21,po->tp_version)
(22,po->prot_hook.func)
(23,&sk->sk_receive_queue.lock)
(24,rx_ring)
(25,prot_hook)
(26,&po->sk)
(27,tp_version)
(28,lock)
(29,return has_room;)
(30,po->sk)
(31,rx_ring)
(32,po)
(33,has_room)
(34,sk)
(35,sk)
(36,po)
(37,prb_bdqc)
(38,po->rx_ring)
(39,*sk = &po->sk)
(40,func)
(41,po)
(42,(atomic_read(&sk->sk_rmem_alloc)
(43,RET)
(44,&po->rx_ring)
(45,atomic_read(&sk->sk_rmem_alloc)
(46,has_room = packet_lookup_frame(po, &po->rx_ring,\n\\n\\t\\t\\t\\t\\t       po->rx_ring.head,\n\\n\\t\\t\\t\\t\\t       TP_STATUS_KERNEL)
(47,rx_ring)
(48,&sk->sk_rmem_alloc)
(49,po)
(50,sk)
(51,po)
(52,po->tp_version == TPACKET_V3)
(53,has_room)
(54,TP_STATUS_KERNEL)
(55,rx_ring)
(56,sk->sk_rmem_alloc)
(57,lock)
(58,prb_lookup_block(po, &po->rx_ring,\n\\n\\t\\t\\t\\t\\t    po->rx_ring.prb_bdqc.kactive_blk_num,\n\\n\\t\\t\\t\\t\\t    TP_STATUS_KERNEL)
(59,sk->sk_rcvbuf)
(60,sk_rcvbuf)
(61,po)
(62,spin_unlock(&sk->sk_receive_queue.lock)
(63,po->rx_ring.prb_bdqc)
(64,)
(65,po->rx_ring)
(66,&sk->sk_receive_queue.lock)
(67,skb->truesize)
(68,sk)
(69,po->prot_hook)
(70,struct sk_buff *skb)
(71,TPACKET_V3)
(72,po->rx_ring.head)
(73,sk)
(74,has_room)
(75,has_room)
(76,head)
(77,spin_lock(&sk->sk_receive_queue.lock)
(78,po)
(79,sk)
(80,po->prot_hook.func != tpacket_rcv)
(81,atomic_read(&sk->sk_rmem_alloc)
(82,skb)
(83,if (po->tp_version == TPACKET_V3)
(84,&po->rx_ring)
(85,po->rx_ring)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^