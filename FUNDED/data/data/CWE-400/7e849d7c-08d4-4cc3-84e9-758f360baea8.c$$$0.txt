-----label-----
1
-----code-----
void CWE401_Memory_Leak__strdup_char_67_bad()
{
    char * data;
    CWE401_Memory_Leak__strdup_char_67_structType myStruct;
    data = NULL;
    {
        char myString[] = "myString";
        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */
        data = strdup(myString);
        /* Use data */
        printLine(data);
    }
    myStruct.structFirst = data;
    CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
26,27
26,28
28,29
28,30
28,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
50,51
50,52
51,52
54,55
56,57
57,58
57,59
58,59
60,61
-----nextToken-----
2,4,8,10,11,15,17,21,23,27,29,30,32,36,39,41,45,47,52,53,55,59,61
-----computeFrom-----
19,20
19,21
34,35
34,36
49,50
49,51
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__strdup_char_67_bad(){    char * data;    CWE401_Memory_Leak__strdup_char_67_structType myStruct;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    myStruct.structFirst = data;    CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct);}
void
CWE401_Memory_Leak__strdup_char_67_bad()
CWE401_Memory_Leak__strdup_char_67_bad
{    char * data;    CWE401_Memory_Leak__strdup_char_67_structType myStruct;    data = NULL;    {        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }    myStruct.structFirst = data;    CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct);}
char * data;
char * data;
char
* data
*
data
CWE401_Memory_Leak__strdup_char_67_structType myStruct;
CWE401_Memory_Leak__strdup_char_67_structType myStruct;
CWE401_Memory_Leak__strdup_char_67_structType
CWE401_Memory_Leak__strdup_char_67_structType
myStruct
myStruct
data = NULL;
data = NULL
data
data
NULL
NULL
{        char myString[] = "myString";        /* POTENTIAL FLAW: Allocate memory from the heap using a function that requires free() for deallocation */        data = strdup(myString);        /* Use data */        printLine(data);    }
char myString[] = "myString";
char myString[] = "myString";
char
myString[] = "myString"
myString
[]
= "myString"
"myString"
data = strdup(myString);
data = strdup(myString)
data
data
strdup(myString)
strdup
strdup
myString
myString
printLine(data);
printLine(data)
printLine
printLine
data
data
myStruct.structFirst = data;
myStruct.structFirst = data
myStruct.structFirst
myStruct
myStruct
structFirst
data
data
CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct);
CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct)
CWE401_Memory_Leak__strdup_char_67b_badSink
CWE401_Memory_Leak__strdup_char_67b_badSink
myStruct
myStruct
-----joern-----
(16,10,0)
(2,16,0)
(11,10,0)
(6,1,0)
(5,0,0)
(19,0,0)
(16,21,0)
(10,16,0)
(14,4,0)
(15,8,0)
(18,4,0)
(8,1,0)
(12,21,0)
(0,1,0)
(23,1,0)
(21,1,0)
(24,1,0)
(9,21,0)
(20,12,0)
(22,21,0)
(10,12,0)
(17,22,0)
(13,6,0)
(3,12,0)
(22,16,0)
(4,8,0)
(8,16,0)
(22,17,1)
(10,11,1)
(4,14,1)
(17,16,1)
(20,0,1)
(10,12,1)
(0,5,1)
(18,22,1)
(22,16,1)
(11,2,1)
(15,4,1)
(6,13,1)
(12,3,1)
(13,8,1)
(7,6,1)
(8,15,1)
(3,20,1)
(5,19,1)
(8,16,1)
(16,10,1)
(14,18,1)
(2,12,1)
(8,16,2)
(22,16,2)
(16,10,2)
(10,12,2)
-----------------------------------
(0,data = NULL)
(1,)
(2,data)
(3,"myString")
(4,myStruct.structFirst)
(5,NULL)
(6,CWE401_Memory_Leak__strdup_char_67b_badSink(myStruct)
(7,RET)
(8,myStruct.structFirst = data)
(9,myString)
(10,strdup(myString)
(11,myString)
(12,myString[] = "myString")
(13,myStruct)
(14,structFirst)
(15,data)
(16,data = strdup(myString)
(17,data)
(18,myStruct)
(19,data)
(20,myString)
(21,)
(22,printLine(data)
(23,myStruct)
(24,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^