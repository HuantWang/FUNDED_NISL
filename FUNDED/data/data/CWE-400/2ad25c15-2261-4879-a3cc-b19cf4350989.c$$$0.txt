-----label-----
1
-----code-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_04_bad()
{
    if(STATIC_CONST_TRUE)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            /* FLAW: If realloc() fails, the initial memory block will not be freed() */
            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            if (data != NULL)
            {
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
                free(data);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
46,49
47,48
49,50
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
62,63
62,64
63,64
63,65
65,66
67,68
67,69
67,70
68,69
70,71
72,73
72,74
73,74
75,76
76,77
76,78
79,80
79,81
80,81
80,82
81,82
83,84
85,86
85,87
85,88
86,87
87,88
87,89
87,90
88,89
90,91
93,94
94,95
94,96
95,96
97,98
99,100
100,101
100,102
101,102
103,104
-----nextToken-----
2,4,8,13,15,16,20,22,25,27,30,31,35,37,42,44,48,50,51,55,57,61,64,66,69,71,74,77,78,82,84,89,91,92,96,98,102,104
-----computeFrom-----
26,27
26,28
33,34
33,35
59,60
59,61
72,73
72,74
80,81
80,82
-----guardedBy-----
82,104
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__malloc_realloc_wchar_t_04_bad(){    if(STATIC_CONST_TRUE)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
void
CWE401_Memory_Leak__malloc_realloc_wchar_t_04_bad()
CWE401_Memory_Leak__malloc_realloc_wchar_t_04_bad
{    if(STATIC_CONST_TRUE)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }}
if(STATIC_CONST_TRUE)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            /* FLAW: If realloc() fails, the initial memory block will not be freed() */            data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
data = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (data != NULL)            {                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
data != NULL
data
data
NULL
NULL
{                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);                free(data);            }
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(6,20,0)
(33,12,0)
(31,15,0)
(17,21,0)
(8,32,0)
(22,12,0)
(42,22,0)
(0,36,0)
(20,21,0)
(27,0,0)
(39,21,0)
(32,34,0)
(36,0,0)
(42,37,0)
(24,22,0)
(26,0,0)
(2,25,0)
(42,38,0)
(31,21,0)
(35,5,0)
(9,23,0)
(43,22,0)
(44,36,0)
(38,42,0)
(28,24,0)
(7,22,0)
(36,17,0)
(23,25,0)
(16,12,0)
(22,42,0)
(32,8,0)
(37,23,0)
(19,21,0)
(17,36,0)
(29,8,0)
(21,12,0)
(3,17,0)
(21,17,0)
(41,24,0)
(10,27,0)
(30,20,0)
(12,13,0)
(23,37,0)
(18,12,0)
(36,22,0)
(39,15,0)
(0,27,0)
(1,7,0)
(14,31,0)
(7,12,0)
(11,39,0)
(37,42,0)
(25,23,0)
(17,3,0)
(4,40,1)
(24,28,1)
(11,20,1)
(41,22,1)
(4,20,1)
(39,11,1)
(22,42,1)
(42,37,1)
(32,8,1)
(7,1,1)
(39,21,1)
(29,24,1)
(6,30,1)
(36,0,1)
(37,23,1)
(24,22,1)
(21,17,1)
(10,26,1)
(28,41,1)
(42,38,1)
(25,2,1)
(7,22,1)
(4,31,1)
(19,7,1)
(44,19,1)
(26,44,1)
(0,27,1)
(20,6,1)
(31,21,1)
(9,43,1)
(17,36,1)
(1,32,1)
(2,9,1)
(31,14,1)
(14,39,1)
(27,10,1)
(1,24,1)
(8,29,1)
(30,21,1)
(20,21,1)
(43,40,1)
(23,25,1)
(17,3,1)
(36,22,1)
(37,23,2)
(42,37,2)
(7,40,2)
(10,40,2)
(32,24,2)
(28,40,2)
(21,40,2)
(36,22,2)
(22,42,2)
(22,40,2)
(23,25,2)
(14,20,2)
(21,17,2)
(7,22,2)
(25,40,2)
(44,40,2)
(17,36,2)
(27,40,2)
(26,40,2)
(42,40,2)
(1,40,2)
(6,40,2)
(0,27,2)
(8,24,2)
(31,21,2)
(0,40,2)
(43,40,2)
(37,40,2)
(39,21,2)
(17,40,2)
(29,24,2)
(30,40,2)
(36,0,2)
(32,8,2)
(20,21,2)
(31,20,2)
(2,40,2)
(41,40,2)
(17,3,2)
(24,40,2)
(9,40,2)
(24,22,2)
(36,40,2)
(42,38,2)
(19,40,2)
(23,40,2)
(11,20,2)
(20,40,2)
(39,20,2)
-----------------------------------
(0,(130000)
(1,data)
(2,wchar_t)
(3,wchar_t *)
(4,RET)
(5,)
(6,NULL)
(7,printWLine(data)
(8,-1)
(9,100)
(10,wchar_t)
(11,data)
(12,)
(13,)
(14,data)
(15,)
(16,if (data == NULL)
(17,(wchar_t *)
(18,if (data != NULL)
(19,data)
(20,data != NULL)
(21,data = (wchar_t *)
(22,* data = (wchar_t *)
(23,100*sizeof(wchar_t)
(24,data == NULL)
(25,sizeof(wchar_t)
(26,130000)
(27,sizeof(wchar_t)
(28,NULL)
(29,1)
(30,data)
(31,free(data)
(32,exit(-1)
(33,data)
(34,)
(35,if(STATIC_CONST_TRUE)
(36,realloc(data, (130000)
(37,malloc(100*sizeof(wchar_t)
(38,wchar_t *)
(39,printWLine(data)
(40,STATIC_CONST_TRUE)
(41,data)
(42,(wchar_t *)
(43,data)
(44,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^