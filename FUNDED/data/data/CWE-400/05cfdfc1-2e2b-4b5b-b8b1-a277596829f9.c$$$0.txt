-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_sleep_67b_badSink(CWE400_Resource_Exhaustion__rand_sleep_67_structType myStruct)
{
    int count = myStruct.structFirst;
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
10,13
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
27,28
28,29
28,30
29,30
-----nextToken-----
2,4,7,9,13,15,19,20,24,26,30,31
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_sleep_67b_badSink(CWE400_Resource_Exhaustion__rand_sleep_67_structType myStruct){    int count = myStruct.structFirst;    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
void
CWE400_Resource_Exhaustion__rand_sleep_67b_badSink(CWE400_Resource_Exhaustion__rand_sleep_67_structType myStruct)
CWE400_Resource_Exhaustion__rand_sleep_67b_badSink
CWE400_Resource_Exhaustion__rand_sleep_67_structType myStruct
CWE400_Resource_Exhaustion__rand_sleep_67_structType
CWE400_Resource_Exhaustion__rand_sleep_67_structType
myStruct
myStruct
{    int count = myStruct.structFirst;    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int count = myStruct.structFirst;
int count = myStruct.structFirst;
int
count = myStruct.structFirst
count
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(9,7,0)
(1,3,0)
(0,9,0)
(9,0,0)
(0,3,0)
(11,3,0)
(8,11,0)
(12,9,0)
(11,0,0)
(4,3,0)
(6,9,0)
(5,0,0)
(10,4,0)
(9,6,1)
(2,4,1)
(9,7,1)
(11,8,1)
(4,10,1)
(6,12,1)
(10,11,1)
(0,9,1)
(12,5,1)
(8,0,1)
(11,0,1)
(9,7,2)
(0,9,2)
(11,0,2)
-----------------------------------
(0,count = myStruct.structFirst)
(1,count)
(2,RET)
(3,)
(4,printLine("Sleep time possibly too long")
(5,count)
(6,structFirst)
(7,CWE400_Resource_Exhaustion__rand_sleep_67_structType myStruct)
(8,count)
(9,myStruct.structFirst)
(10,"Sleep time possibly too long")
(11,SLEEP(count)
(12,myStruct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^