-----label-----
1
-----code-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    FILE * * dataPtr = (FILE * *)dataVoidPtr;
    /* dereference dataPtr into data */
    FILE * data = (*dataPtr);
    /* FLAW: Point data to another file handle without closing the handle from the source */
    data = fopen("BadSink_fopen.txt", "w+");
    /* avoid incidental for not closing the file handle */
    if (data != NULL)
    {
        fclose(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
11,12
12,13
12,14
13,14
15,16
15,17
15,18
15,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
24,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
33,36
36,37
37,38
38,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
50,51
50,52
51,52
51,53
52,53
54,55
56,57
57,58
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,6,8,9,14,16,17,18,23,25,26,28,32,34,35,40,44,47,48,49,53,55,60,62
-----computeFrom-----
42,43
42,44
51,52
51,53
-----guardedBy-----
53,62
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    FILE * * dataPtr = (FILE * *)dataVoidPtr;    /* dereference dataPtr into data */    FILE * data = (*dataPtr);    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
void
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_badSink(void * dataVoidPtr)
CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    FILE * * dataPtr = (FILE * *)dataVoidPtr;    /* dereference dataPtr into data */    FILE * data = (*dataPtr);    /* FLAW: Point data to another file handle without closing the handle from the source */    data = fopen("BadSink_fopen.txt", "w+");    /* avoid incidental for not closing the file handle */    if (data != NULL)    {        fclose(data);    }}
FILE * * dataPtr = (FILE * *)dataVoidPtr;
FILE * * dataPtr = (FILE * *)dataVoidPtr;
FILE
FILE
* * dataPtr = (FILE * *)dataVoidPtr
*
*
dataPtr
= (FILE * *)dataVoidPtr
(FILE * *)dataVoidPtr
FILE * *
FILE
FILE
* *
*
*
dataVoidPtr
dataVoidPtr
FILE * data = (*dataPtr);
FILE * data = (*dataPtr);
FILE
FILE
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
data = fopen("BadSink_fopen.txt", "w+");
data = fopen("BadSink_fopen.txt", "w+")
data
data
fopen("BadSink_fopen.txt", "w+")
fopen
fopen
"BadSink_fopen.txt"
"w+"
if (data != NULL)    {        fclose(data);    }
data != NULL
data
data
NULL
NULL
{        fclose(data);    }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(11,10,0)
(7,16,0)
(12,16,0)
(18,7,0)
(16,7,0)
(10,11,0)
(9,12,0)
(23,11,0)
(21,1,0)
(6,25,0)
(19,17,0)
(14,16,0)
(12,5,0)
(4,10,0)
(15,11,0)
(5,17,0)
(13,17,0)
(8,5,0)
(7,2,0)
(16,17,0)
(10,17,0)
(22,1,0)
(6,10,0)
(0,7,0)
(5,12,0)
(3,6,0)
(7,0,0)
(20,17,0)
(1,10,0)
(7,0,1)
(4,5,1)
(6,10,1)
(16,7,1)
(12,16,1)
(24,6,1)
(24,1,1)
(23,4,1)
(21,10,1)
(15,23,1)
(1,10,1)
(10,11,1)
(5,12,1)
(6,3,1)
(22,21,1)
(1,22,1)
(18,14,1)
(12,9,1)
(9,8,1)
(11,15,1)
(3,1,1)
(7,2,1)
(7,18,1)
(8,16,1)
(6,1,2)
(6,10,2)
(12,16,2)
(3,1,2)
(7,2,2)
(10,11,2)
(7,0,2)
(5,12,2)
(1,10,2)
(16,7,2)
-----------------------------------
(0,FILE * *)
(1,data != NULL)
(2,void * dataVoidPtr)
(3,data)
(4,data)
(5,* data = (*dataPtr)
(6,fclose(data)
(7,(FILE * *)
(8,data)
(9,dataPtr)
(10,data = fopen("BadSink_fopen.txt", "w+")
(11,fopen("BadSink_fopen.txt", "w+")
(12,*dataPtr)
(13,dataPtr)
(14,dataPtr)
(15,"w+")
(16,* * dataPtr = (FILE * *)
(17,)
(18,dataVoidPtr)
(19,if (data != NULL)
(20,data)
(21,data)
(22,NULL)
(23,"BadSink_fopen.txt")
(24,RET)
(25,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^