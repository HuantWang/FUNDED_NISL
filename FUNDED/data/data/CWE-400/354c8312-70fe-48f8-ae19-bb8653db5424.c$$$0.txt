-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_06_bad()
{
    int * data;
    data = NULL;
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int *)realloc(data, 100*sizeof(int));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5;
        printIntLine(data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
31,32
33,34
33,35
33,36
34,35
36,37
38,39
38,40
40,41
41,42
41,43
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
64,65
65,66
65,67
66,67
68,69
68,70
69,70
72,73
72,74
73,74
73,75
74,75
77,78
-----nextToken-----
2,4,8,10,11,15,17,21,22,27,30,32,35,37,39,42,43,47,49,54,56,61,62,63,67,70,71,75,76,78
-----computeFrom-----
13,14
13,15
19,20
19,21
25,26
25,27
38,39
38,40
45,46
45,47
58,59
58,60
73,74
73,75
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_06_bad(){    int * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int_realloc_06_bad()
CWE401_Memory_Leak__int_realloc_06_bad
{    int * data;    data = NULL;    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int *)realloc(data, 100*sizeof(int));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5;        printIntLine(data[0]);    }
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(14,27,0)
(7,25,0)
(38,41,0)
(17,0,0)
(23,14,0)
(40,30,0)
(15,13,0)
(1,2,0)
(30,40,0)
(9,25,0)
(21,32,0)
(3,14,0)
(17,14,0)
(11,29,0)
(30,29,0)
(37,5,0)
(13,5,0)
(41,38,0)
(24,19,0)
(2,39,0)
(8,5,0)
(27,41,0)
(36,0,0)
(22,1,0)
(19,27,0)
(20,0,0)
(29,13,0)
(33,30,0)
(35,20,0)
(28,27,0)
(18,32,0)
(26,40,0)
(14,20,0)
(27,0,0)
(2,1,0)
(14,17,0)
(41,27,0)
(25,27,0)
(29,41,0)
(6,31,0)
(19,20,0)
(12,5,0)
(4,13,0)
(41,29,0)
(10,19,0)
(16,31,0)
(29,30,0)
(28,32,1)
(23,3,1)
(4,15,1)
(6,32,1)
(20,35,1)
(41,29,1)
(30,40,1)
(19,10,1)
(29,13,1)
(7,27,1)
(34,31,1)
(27,41,1)
(14,27,1)
(26,33,1)
(16,6,1)
(14,23,1)
(24,25,1)
(13,4,1)
(11,28,1)
(35,19,1)
(41,38,1)
(32,21,1)
(22,25,1)
(9,7,1)
(29,30,1)
(2,1,1)
(25,9,1)
(21,18,1)
(25,27,1)
(17,14,1)
(19,27,1)
(40,26,1)
(3,20,1)
(10,24,1)
(31,16,1)
(18,13,1)
(1,22,1)
(24,2,1)
(33,11,1)
(14,20,1)
(6,17,1)
(24,32,2)
(7,32,2)
(14,20,2)
(14,32,2)
(29,13,2)
(25,27,2)
(30,40,2)
(17,14,2)
(1,25,2)
(3,32,2)
(10,32,2)
(40,32,2)
(27,41,2)
(11,32,2)
(20,32,2)
(19,27,2)
(30,32,2)
(25,32,2)
(35,32,2)
(19,32,2)
(27,32,2)
(41,29,2)
(23,32,2)
(28,32,2)
(26,32,2)
(33,32,2)
(41,32,2)
(9,32,2)
(41,38,2)
(14,27,2)
(2,1,2)
(29,32,2)
(2,25,2)
(17,32,2)
(22,25,2)
(29,30,2)
-----------------------------------
(0,)
(1,-1)
(2,exit(-1)
(3,data)
(4,NULL)
(5,)
(6,STATIC_CONST_FIVE)
(7,data)
(8,data)
(9,NULL)
(10,0)
(11,data)
(12,if(STATIC_CONST_FIVE==5)
(13,data = NULL)
(14,data[0])
(15,data)
(16,5)
(17,printIntLine(data[0])
(18,STATIC_CONST_FIVE)
(19,data[0])
(20,data[0] = 5)
(21,5)
(22,1)
(23,0)
(24,data)
(25,data == NULL)
(26,int)
(27,data = (int *)
(28,data)
(29,realloc(data, 100*sizeof(int)
(30,100*sizeof(int)
(31,STATIC_CONST_FIVE==5)
(32,STATIC_CONST_FIVE==5)
(33,100)
(34,RET)
(35,5)
(36,if (data == NULL)
(37,if(STATIC_CONST_FIVE==5)
(38,int *)
(39,)
(40,sizeof(int)
(41,(int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^