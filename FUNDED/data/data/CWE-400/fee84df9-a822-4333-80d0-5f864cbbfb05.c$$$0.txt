-----label-----
0
-----code-----
static void
tapdisk_daemon_reap_channels(void)
{
	do {
		tapdisk_channel_t *channel, *next;
		pid_t pid;
		int status;

		pid = tapdisk_daemon_wait(&status);
		if (pid < 0)
			break;

		if (!pid)
			/* ignorable child state. */
			continue;
		
		tapdisk_daemon_for_each_channel(channel, next)
			if (channel->tapdisk_pid == pid)
				tapdisk_channel_reap(channel, status);
	} while (1);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
12,13
13,14
13,15
13,16
14,15
16,17
16,18
19,20
19,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
31,32
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
41,42
43,44
43,45
44,45
44,46
45,46
49,50
49,51
50,51
51,52
54,55
55,56
55,57
55,58
56,57
58,59
60,61
62,63
63,64
63,65
64,65
64,66
65,66
65,67
66,67
69,70
71,72
72,73
72,74
72,75
73,74
75,76
77,78
-----nextToken-----
2,4,6,8,15,17,18,20,21,25,27,30,32,36,39,42,46,47,48,52,53,57,59,61,67,68,70,74,76,78,79
-----computeFrom-----
34,35
34,36
44,45
44,46
64,65
64,66
-----guardedBy-----
67,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DoStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;UnaryExpression;IdExpression;Name;ContinueStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ProblemStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;
-----ast_node-----
static voidtapdisk_daemon_reap_channels(void){	do {		tapdisk_channel_t *channel, *next;		pid_t pid;		int status;		pid = tapdisk_daemon_wait(&status);		if (pid < 0)			break;		if (!pid)			/* ignorable child state. */			continue;				tapdisk_daemon_for_each_channel(channel, next)			if (channel->tapdisk_pid == pid)				tapdisk_channel_reap(channel, status);	} while (1);}
static void
tapdisk_daemon_reap_channels(void)
tapdisk_daemon_reap_channels
void
void


{	do {		tapdisk_channel_t *channel, *next;		pid_t pid;		int status;		pid = tapdisk_daemon_wait(&status);		if (pid < 0)			break;		if (!pid)			/* ignorable child state. */			continue;				tapdisk_daemon_for_each_channel(channel, next)			if (channel->tapdisk_pid == pid)				tapdisk_channel_reap(channel, status);	} while (1);}
do {		tapdisk_channel_t *channel, *next;		pid_t pid;		int status;		pid = tapdisk_daemon_wait(&status);		if (pid < 0)			break;		if (!pid)			/* ignorable child state. */			continue;				tapdisk_daemon_for_each_channel(channel, next)			if (channel->tapdisk_pid == pid)				tapdisk_channel_reap(channel, status);	} while (1);
{		tapdisk_channel_t *channel, *next;		pid_t pid;		int status;		pid = tapdisk_daemon_wait(&status);		if (pid < 0)			break;		if (!pid)			/* ignorable child state. */			continue;				tapdisk_daemon_for_each_channel(channel, next)			if (channel->tapdisk_pid == pid)				tapdisk_channel_reap(channel, status);	}
tapdisk_channel_t *channel, *next;
tapdisk_channel_t *channel, *next;
tapdisk_channel_t
tapdisk_channel_t
*channel
*
channel
*next
*
next
pid_t pid;
pid_t pid;
pid_t
pid_t
pid
pid
int status;
int status;
int
status
status
pid = tapdisk_daemon_wait(&status);
pid = tapdisk_daemon_wait(&status)
pid
pid
tapdisk_daemon_wait(&status)
tapdisk_daemon_wait
tapdisk_daemon_wait
&status
status
status
if (pid < 0)			break;
pid < 0
pid
pid
0
break;
if (!pid)			/* ignorable child state. */			continue;
!pid
pid
pid
continue;
tapdisk_daemon_for_each_channel(channel, next)
tapdisk_daemon_for_each_channel(channel, next)
tapdisk_daemon_for_each_channel
tapdisk_daemon_for_each_channel
channel
channel
next
next
)
if (channel->tapdisk_pid == pid)				tapdisk_channel_reap(channel, status);
channel->tapdisk_pid == pid
channel->tapdisk_pid
channel
channel
tapdisk_pid
pid
pid
tapdisk_channel_reap(channel, status);
tapdisk_channel_reap(channel, status)
tapdisk_channel_reap
tapdisk_channel_reap
channel
channel
status
status
1
-----joern-----
(18,30,0)
(30,24,0)
(14,30,0)
(13,18,0)
(28,18,0)
(29,16,0)
(10,30,0)
(14,7,0)
(30,14,0)
(20,24,0)
(18,13,0)
(2,10,0)
(17,7,0)
(4,13,0)
(27,13,0)
(7,14,0)
(15,11,0)
(6,24,0)
(11,30,0)
(31,24,0)
(1,16,0)
(19,11,0)
(23,24,0)
(12,30,0)
(0,24,0)
(8,21,0)
(26,24,0)
(25,24,0)
(5,3,1)
(18,13,1)
(3,10,1)
(5,16,1)
(30,14,1)
(10,30,1)
(1,29,1)
(2,11,1)
(7,17,1)
(29,18,1)
(15,30,1)
(12,5,1)
(28,13,1)
(17,12,1)
(19,15,1)
(5,18,1)
(10,2,1)
(27,10,1)
(16,1,1)
(9,11,1)
(22,9,1)
(4,27,1)
(11,19,1)
(22,5,1)
(18,28,1)
(14,7,1)
(13,4,1)
(11,30,1)
(18,30,1)
(4,10,2)
(7,5,2)
(17,5,2)
(3,10,2)
(30,5,2)
(12,5,2)
(16,18,2)
(15,5,2)
(1,18,2)
(28,10,2)
(5,11,2)
(2,11,2)
(14,7,2)
(18,30,2)
(11,5,2)
(30,14,2)
(14,5,2)
(10,30,2)
(10,11,2)
(18,13,2)
(13,10,2)
(29,18,2)
(9,11,2)
(11,30,2)
(27,10,2)
(19,5,2)
(18,10,2)
-----------------------------------
(0,if (pid < 0)
(1,status)
(2,pid)
(3,continue;)
(4,tapdisk_pid)
(5,1)
(6,if (!pid)
(7,&status)
(8,do)
(9,break;)
(10,!pid)
(11,pid < 0)
(12,pid)
(13,channel->tapdisk_pid)
(14,tapdisk_daemon_wait(&status)
(15,pid)
(16,tapdisk_channel_reap(channel, status)
(17,status)
(18,channel->tapdisk_pid == pid)
(19,0)
(20,status)
(21,)
(22,RET)
(23,pid)
(24,)
(25,channel)
(26,if (channel->tapdisk_pid == pid)
(27,channel)
(28,pid)
(29,channel)
(30,pid = tapdisk_daemon_wait(&status)
(31,next)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^