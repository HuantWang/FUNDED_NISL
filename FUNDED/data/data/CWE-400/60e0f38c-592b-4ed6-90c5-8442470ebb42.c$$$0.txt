-----label-----
1
-----code-----
static int
peer_svc_disced(uint16_t conn_handle, const struct ble_gatt_error *error,
                const struct ble_gatt_svc *service, void *arg)
{
    struct peer *peer;
    int rc;

    peer = arg;
    assert(peer->conn_handle == conn_handle);

    switch (error->status) {
    case 0:
        rc = peer_svc_add(peer, service);
        break;

    case BLE_HS_EDONE:
        /* All services discovered; start discovering characteristics. */
        if (peer->disc_prev_chr_val > 0) {
            peer_disc_chrs(peer);
        }
        rc = 0;
        break;

    default:
        rc = error->status;
        break;
    }

    if (rc != 0) {
        /* Error; abort discovery. */
        peer_disc_complete(peer, rc);
    }

    return rc;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
10,11
10,12
11,12
13,14
13,15
16,17
16,18
17,18
19,20
19,21
22,23
22,24
24,25
24,26
27,28
27,29
27,30
27,31
27,32
27,33
27,34
28,29
29,30
29,31
30,31
32,33
32,34
35,36
36,37
36,38
38,39
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
50,51
50,52
51,52
51,53
52,53
55,56
57,58
57,59
58,59
58,60
59,60
62,63
62,64
62,65
62,66
62,67
62,68
62,69
62,70
62,71
62,72
63,64
65,66
66,67
66,68
67,68
69,70
69,71
69,72
70,71
72,73
74,75
77,78
78,79
80,81
80,82
81,82
81,83
82,83
82,84
83,84
87,88
88,89
89,90
89,91
90,91
92,93
94,95
95,96
95,97
96,97
101,102
102,103
102,104
103,104
105,106
105,107
106,107
110,111
110,112
111,112
111,113
112,113
115,116
116,117
117,118
117,119
117,120
118,119
120,121
122,123
124,125
125,126
-----nextToken-----
2,4,7,9,12,14,15,18,20,21,23,25,26,31,33,34,37,39,43,45,49,53,54,56,60,61,64,68,71,73,75,76,79,84,85,86,91,93,97,98,99,100,104,107,108,109,113,114,119,121,123,126
-----computeFrom-----
41,42
41,43
50,51
50,52
66,67
66,68
81,82
81,83
95,96
95,97
102,103
102,104
111,112
111,113
-----guardedBy-----
84,93
113,123
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;SwitchStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;BreakStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static intpeer_svc_disced(uint16_t conn_handle, const struct ble_gatt_error *error,                const struct ble_gatt_svc *service, void *arg){    struct peer *peer;    int rc;    peer = arg;    assert(peer->conn_handle == conn_handle);    switch (error->status) {    case 0:        rc = peer_svc_add(peer, service);        break;    case BLE_HS_EDONE:        /* All services discovered; start discovering characteristics. */        if (peer->disc_prev_chr_val > 0) {            peer_disc_chrs(peer);        }        rc = 0;        break;    default:        rc = error->status;        break;    }    if (rc != 0) {        /* Error; abort discovery. */        peer_disc_complete(peer, rc);    }    return rc;}
static int
peer_svc_disced(uint16_t conn_handle, const struct ble_gatt_error *error,                const struct ble_gatt_svc *service, void *arg)
peer_svc_disced
uint16_t conn_handle
uint16_t
uint16_t
conn_handle
conn_handle
const struct ble_gatt_error *error
const struct ble_gatt_error
ble_gatt_error
*error
*
error
const struct ble_gatt_svc *service
const struct ble_gatt_svc
ble_gatt_svc
*service
*
service
void *arg
void
*arg
*
arg
{    struct peer *peer;    int rc;    peer = arg;    assert(peer->conn_handle == conn_handle);    switch (error->status) {    case 0:        rc = peer_svc_add(peer, service);        break;    case BLE_HS_EDONE:        /* All services discovered; start discovering characteristics. */        if (peer->disc_prev_chr_val > 0) {            peer_disc_chrs(peer);        }        rc = 0;        break;    default:        rc = error->status;        break;    }    if (rc != 0) {        /* Error; abort discovery. */        peer_disc_complete(peer, rc);    }    return rc;}
struct peer *peer;
struct peer *peer;
struct peer
peer
*peer
*
peer
int rc;
int rc;
int
rc
rc
peer = arg;
peer = arg
peer
peer
arg
arg
assert(peer->conn_handle == conn_handle);
assert(peer->conn_handle == conn_handle)
assert
assert
peer->conn_handle == conn_handle
peer->conn_handle
peer
peer
conn_handle
conn_handle
conn_handle
switch (error->status) {    case 0:        rc = peer_svc_add(peer, service);        break;    case BLE_HS_EDONE:        /* All services discovered; start discovering characteristics. */        if (peer->disc_prev_chr_val > 0) {            peer_disc_chrs(peer);        }        rc = 0;        break;    default:        rc = error->status;        break;    }
error->status
error
error
status
{    case 0:        rc = peer_svc_add(peer, service);        break;    case BLE_HS_EDONE:        /* All services discovered; start discovering characteristics. */        if (peer->disc_prev_chr_val > 0) {            peer_disc_chrs(peer);        }        rc = 0;        break;    default:        rc = error->status;        break;    }
case 0:
0
rc = peer_svc_add(peer, service);
rc = peer_svc_add(peer, service)
rc
rc
peer_svc_add(peer, service)
peer_svc_add
peer_svc_add
peer
peer
service
service
break;
case BLE_HS_EDONE:
BLE_HS_EDONE
BLE_HS_EDONE
if (peer->disc_prev_chr_val > 0) {            peer_disc_chrs(peer);        }
peer->disc_prev_chr_val > 0
peer->disc_prev_chr_val
peer
peer
disc_prev_chr_val
0
{            peer_disc_chrs(peer);        }
peer_disc_chrs(peer);
peer_disc_chrs(peer)
peer_disc_chrs
peer_disc_chrs
peer
peer
rc = 0;
rc = 0
rc
rc
0
break;
default:
rc = error->status;
rc = error->status
rc
rc
error->status
error
error
status
break;
if (rc != 0) {        /* Error; abort discovery. */        peer_disc_complete(peer, rc);    }
rc != 0
rc
rc
0
{        /* Error; abort discovery. */        peer_disc_complete(peer, rc);    }
peer_disc_complete(peer, rc);
peer_disc_complete(peer, rc)
peer_disc_complete
peer_disc_complete
peer
peer
rc
rc
return rc;
rc
rc
-----joern-----
(58,1,0)
(46,44,0)
(26,50,0)
(58,22,0)
(40,13,0)
(44,33,0)
(59,32,0)
(25,50,0)
(18,51,0)
(28,49,0)
(47,40,0)
(32,50,0)
(24,51,0)
(33,19,0)
(53,50,0)
(57,13,0)
(59,13,0)
(48,32,0)
(14,58,0)
(56,23,0)
(11,50,0)
(17,5,0)
(3,22,0)
(13,50,0)
(7,59,0)
(5,32,0)
(30,23,0)
(32,5,0)
(40,33,0)
(59,22,0)
(54,40,0)
(10,50,0)
(15,44,0)
(33,23,0)
(8,4,0)
(27,5,0)
(39,59,0)
(2,50,0)
(44,28,0)
(12,37,0)
(37,9,0)
(37,33,0)
(45,23,0)
(4,35,0)
(42,33,0)
(5,55,0)
(31,28,0)
(40,22,0)
(40,32,0)
(20,50,0)
(28,21,0)
(22,58,0)
(21,28,0)
(51,1,0)
(22,50,0)
(4,33,0)
(36,45,0)
(45,32,0)
(41,4,0)
(6,23,0)
(34,35,0)
(5,33,0)
(35,4,0)
(28,44,0)
(0,23,0)
(40,16,0)
(29,45,0)
(45,22,0)
(45,13,0)
(52,58,0)
(38,33,0)
(21,23,0)
(43,13,0)
(58,52,1)
(40,13,1)
(31,44,1)
(39,7,1)
(33,38,1)
(59,13,1)
(59,39,1)
(7,53,1)
(38,42,1)
(40,22,1)
(59,22,1)
(28,44,1)
(57,37,1)
(27,48,1)
(4,33,1)
(51,1,1)
(51,18,1)
(33,19,1)
(21,28,1)
(7,11,1)
(46,33,1)
(32,5,1)
(15,46,1)
(29,45,1)
(18,24,1)
(5,17,1)
(44,15,1)
(17,27,1)
(58,1,1)
(45,22,1)
(4,8,1)
(45,36,1)
(36,40,1)
(36,59,1)
(3,51,1)
(28,49,1)
(12,35,1)
(35,4,1)
(28,31,1)
(54,59,1)
(45,13,1)
(41,51,1)
(40,33,1)
(24,21,1)
(34,4,1)
(43,57,1)
(40,47,1)
(7,2,1)
(40,32,1)
(37,33,1)
(35,34,1)
(37,12,1)
(44,33,1)
(47,54,1)
(57,35,1)
(52,14,1)
(14,3,1)
(2,22,1)
(22,58,1)
(59,32,1)
(5,55,1)
(45,32,1)
(11,13,1)
(13,43,1)
(48,51,1)
(8,41,1)
(5,33,1)
(53,32,1)
(5,51,2)
(34,51,2)
(35,4,2)
(37,33,2)
(43,51,2)
(59,32,2)
(54,59,2)
(28,44,2)
(2,51,2)
(51,1,2)
(32,5,2)
(59,22,2)
(12,35,2)
(21,28,2)
(57,51,2)
(17,51,2)
(33,19,2)
(5,55,2)
(40,32,2)
(47,59,2)
(45,32,2)
(14,51,2)
(45,13,2)
(41,51,2)
(48,51,2)
(13,51,2)
(37,35,2)
(32,51,2)
(22,51,2)
(40,13,2)
(29,45,2)
(22,58,2)
(40,59,2)
(8,51,2)
(40,33,2)
(45,22,2)
(44,33,2)
(5,33,2)
(27,51,2)
(59,13,2)
(40,22,2)
(52,51,2)
(4,33,2)
(58,1,2)
(28,49,2)
(3,51,2)
(35,51,2)
(58,51,2)
(53,51,2)
(4,51,2)
(11,51,2)
-----------------------------------
(0,peer)
(1,const struct ble_gatt_error *error)
(2,break;)
(3,rc)
(4,peer->disc_prev_chr_val)
(5,peer_svc_add(peer, service)
(6,rc)
(7,rc)
(8,disc_prev_chr_val)
(9,)
(10,case 0:)
(11,break;)
(12,peer)
(13,rc = 0)
(14,error)
(15,conn_handle)
(16,)
(17,service)
(18,status)
(19,void *arg)
(20,if (peer->disc_prev_chr_val > 0)
(21,assert(peer->conn_handle == conn_handle)
(22,rc = error->status)
(23,)
(24,error)
(25,case BLE_HS_EDONE:)
(26,default:)
(27,peer)
(28,peer->conn_handle == conn_handle)
(29,RET)
(30,switch (error->status)
(31,conn_handle)
(32,rc = peer_svc_add(peer, service)
(33,peer = arg)
(34,0)
(35,peer->disc_prev_chr_val > 0)
(36,rc)
(37,peer_disc_chrs(peer)
(38,arg)
(39,0)
(40,peer_disc_complete(peer, rc)
(41,peer)
(42,peer)
(43,0)
(44,peer->conn_handle)
(45,return rc;)
(46,peer)
(47,rc)
(48,rc)
(49,uint16_t conn_handle)
(50,)
(51,error->status)
(52,status)
(53,break;)
(54,peer)
(55,const struct ble_gatt_svc *service)
(56,if (rc != 0)
(57,rc)
(58,error->status)
(59,rc != 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^