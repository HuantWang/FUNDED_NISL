-----label-----
0
-----code-----
char * CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(char * data)
{
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (char *)ALLOCA(100*sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
31,32
31,33
31,34
32,33
34,35
37,38
38,39
38,40
39,40
41,42
43,44
44,45
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,36,40,42,45
-----computeFrom-----
13,14
13,15
24,25
24,26
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(char * data){    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
char
* CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(char * data)
*
CWE401_Memory_Leak__char_malloc_61b_goodG2BSource
char * data
char
* data
*
data
{    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (char *)ALLOCA(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
data = (char *)ALLOCA(100*sizeof(char));
data = (char *)ALLOCA(100*sizeof(char))
data
data
(char *)ALLOCA(100*sizeof(char))
char *
char
*
*
ALLOCA(100*sizeof(char))
ALLOCA
ALLOCA
100*sizeof(char)
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
return data;
data
data
-----joern-----
(9,12,0)
(14,5,0)
(17,11,0)
(14,11,0)
(10,14,0)
(17,5,0)
(15,5,0)
(3,5,0)
(18,9,0)
(12,1,0)
(9,18,0)
(1,12,0)
(3,15,0)
(16,15,0)
(8,17,0)
(15,18,0)
(18,13,0)
(2,3,0)
(17,15,0)
(7,3,0)
(0,1,0)
(13,18,0)
(3,11,0)
(4,17,0)
(12,9,0)
(18,15,0)
(15,11,0)
(6,12,0)
(14,15,0)
(0,6,1)
(17,15,1)
(3,5,1)
(4,17,1)
(17,5,1)
(3,2,1)
(6,16,1)
(2,7,1)
(12,1,1)
(18,13,1)
(18,9,1)
(14,10,1)
(7,15,1)
(15,18,1)
(3,15,1)
(9,12,1)
(8,14,1)
(10,3,1)
(1,0,1)
(14,5,1)
(14,15,1)
(17,8,1)
(15,5,1)
(14,5,2)
(14,15,2)
(4,17,2)
(9,12,2)
(18,9,2)
(12,1,2)
(3,5,2)
(17,15,2)
(3,15,2)
(18,13,2)
(17,5,2)
(15,18,2)
(15,5,2)
-----------------------------------
(0,char)
(1,sizeof(char)
(2,"A String")
(3,strcpy(data, "A String")
(4,RET)
(5,char * data)
(6,100)
(7,data)
(8,data)
(9,ALLOCA(100*sizeof(char)
(10,data)
(11,)
(12,100*sizeof(char)
(13,char *)
(14,printLine(data)
(15,data = (char *)
(16,data)
(17,return data;)
(18,(char *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^