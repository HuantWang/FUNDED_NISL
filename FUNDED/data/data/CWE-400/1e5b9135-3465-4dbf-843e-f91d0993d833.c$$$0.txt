-----label-----
0
-----code-----
static void good2()
{
    if(staticTrue)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            wchar_t * tmpData;
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            /* FIX: Ensure realloc() was successful before assigning data to the memory block
            * allocated with realloc() */
            if (tmpData != NULL)
            {
                data = tmpData;
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
            }
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
10,18
11,12
12,13
12,14
14,15
14,16
14,17
17,18
18,19
18,20
19,20
19,21
21,22
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
51,52
52,53
52,54
52,55
53,54
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
71,72
73,74
73,75
73,76
74,75
76,77
78,79
78,80
79,80
81,82
82,83
82,84
85,86
85,87
86,87
86,88
87,88
89,90
91,92
91,93
91,94
92,93
93,94
93,95
94,95
96,97
98,99
99,100
99,101
99,102
100,101
102,103
105,106
106,107
106,108
107,108
109,110
111,112
112,113
112,114
113,114
115,116
-----nextToken-----
2,4,8,13,15,16,20,22,25,27,30,31,35,37,42,44,47,49,50,54,56,57,61,63,67,70,72,75,77,80,83,84,88,90,95,97,101,103,104,108,110,114,116
-----computeFrom-----
26,27
26,28
33,34
33,35
65,66
65,67
78,79
78,80
86,87
86,88
93,94
93,95
-----guardedBy-----
88,97
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good2(){    if(staticTrue)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
static void
good2()
good2
{    if(staticTrue)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
if(staticTrue)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
staticTrue
staticTrue
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wchar_t * tmpData;
wchar_t * tmpData;
wchar_t
* tmpData
*
tmpData
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
tmpData
tmpData
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(3,30,0)
(6,23,0)
(45,35,0)
(23,6,0)
(17,31,0)
(9,5,0)
(15,39,0)
(9,4,0)
(34,17,0)
(40,31,0)
(29,1,0)
(42,7,0)
(10,1,0)
(11,26,0)
(37,41,0)
(48,6,0)
(47,35,0)
(15,7,0)
(0,47,0)
(20,1,0)
(40,24,0)
(5,9,0)
(8,16,0)
(9,24,0)
(40,15,0)
(22,23,0)
(15,40,0)
(27,40,0)
(6,5,0)
(31,40,0)
(1,36,0)
(28,1,0)
(18,35,0)
(19,41,0)
(12,24,0)
(38,24,0)
(24,1,0)
(26,35,0)
(13,38,0)
(47,1,0)
(41,7,0)
(26,44,0)
(39,15,0)
(16,8,0)
(8,2,0)
(32,31,0)
(43,16,0)
(31,17,0)
(24,9,0)
(29,24,0)
(7,1,0)
(35,7,0)
(21,38,0)
(35,44,0)
(25,29,0)
(4,9,0)
(5,6,0)
(33,1,0)
(7,15,0)
(47,24,0)
(31,17,1)
(22,48,1)
(29,24,1)
(37,7,1)
(16,43,1)
(26,11,1)
(35,45,1)
(29,25,1)
(45,18,1)
(40,31,1)
(40,24,1)
(5,6,1)
(42,29,1)
(47,0,1)
(27,42,1)
(38,24,1)
(25,38,1)
(9,5,1)
(43,38,1)
(26,35,1)
(17,34,1)
(18,41,1)
(41,19,1)
(47,24,1)
(24,9,1)
(46,47,1)
(15,40,1)
(34,32,1)
(7,15,1)
(35,7,1)
(6,23,1)
(15,39,1)
(9,4,1)
(48,12,1)
(0,41,1)
(8,16,1)
(23,22,1)
(25,8,1)
(11,35,1)
(41,7,1)
(38,13,1)
(0,26,1)
(12,14,1)
(13,21,1)
(47,35,1)
(32,27,1)
(19,37,1)
(21,24,1)
(46,14,1)
(23,14,2)
(12,14,2)
(19,14,2)
(41,14,2)
(5,6,2)
(41,7,2)
(9,14,2)
(48,14,2)
(37,14,2)
(8,38,2)
(47,14,2)
(34,14,2)
(22,14,2)
(8,16,2)
(7,14,2)
(38,24,2)
(21,14,2)
(47,24,2)
(16,38,2)
(40,31,2)
(15,40,2)
(45,41,2)
(40,14,2)
(11,41,2)
(15,14,2)
(29,24,2)
(43,38,2)
(38,14,2)
(9,4,2)
(35,7,2)
(27,14,2)
(31,14,2)
(18,41,2)
(13,14,2)
(35,41,2)
(42,14,2)
(6,23,2)
(0,14,2)
(40,24,2)
(26,41,2)
(5,14,2)
(17,14,2)
(7,15,2)
(25,14,2)
(31,17,2)
(24,14,2)
(32,14,2)
(15,39,2)
(29,14,2)
(47,35,2)
(26,35,2)
(6,14,2)
(24,9,2)
(9,5,2)
-----------------------------------
(0,data)
(1,)
(2,)
(3,if(staticTrue)
(4,wchar_t *)
(5,malloc(100*sizeof(wchar_t)
(6,100*sizeof(wchar_t)
(7,tmpData = (wchar_t *)
(8,exit(-1)
(9,(wchar_t *)
(10,if (data == NULL)
(11,data)
(12,data)
(13,NULL)
(14,staticTrue)
(15,(wchar_t *)
(16,-1)
(17,sizeof(wchar_t)
(18,data)
(19,NULL)
(20,data)
(21,data)
(22,wchar_t)
(23,sizeof(wchar_t)
(24,* data = (wchar_t *)
(25,data)
(26,printWLine(data)
(27,data)
(28,if (tmpData != NULL)
(29,printWLine(data)
(30,)
(31,(130000)
(32,130000)
(33,tmpData)
(34,wchar_t)
(35,data = tmpData)
(36,)
(37,tmpData)
(38,data == NULL)
(39,wchar_t *)
(40,realloc(data, (130000)
(41,tmpData != NULL)
(42,tmpData)
(43,1)
(44,)
(45,tmpData)
(46,RET)
(47,free(data)
(48,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^