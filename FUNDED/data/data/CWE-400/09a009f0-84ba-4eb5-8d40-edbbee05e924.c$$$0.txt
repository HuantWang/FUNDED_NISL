-----label-----
1
-----code-----
int socket(int domain, int type, int protocol)
{
	int s = socketcall(socket, domain, type, protocol, 0, 0, 0);
	if (s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK))) {
		s = socketcall(socket, domain,
			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),
			protocol, 0, 0, 0);
		if (s < 0) return s;
		if (type & SOCK_CLOEXEC)
			fcntl(s, F_SETFD, FD_CLOEXEC);
		if (type & SOCK_NONBLOCK)
			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);
	}
	return s;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
7,8
9,10
9,11
11,12
13,14
13,15
15,16
17,18
17,19
17,20
18,19
19,20
19,21
21,22
21,23
23,24
24,25
24,26
24,27
24,28
24,29
24,30
24,31
24,32
25,26
27,28
29,30
31,32
33,34
38,39
38,40
39,40
39,41
40,41
40,42
41,42
41,43
42,43
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
54,55
55,56
55,57
56,57
58,59
60,61
60,62
60,63
60,64
61,62
62,63
62,64
63,64
65,66
65,67
65,68
65,69
65,70
65,71
65,72
65,73
66,67
68,69
70,71
72,73
72,74
73,74
75,76
76,77
77,78
77,79
78,79
80,81
82,83
87,88
87,89
88,89
88,90
89,90
92,93
93,94
95,96
95,97
96,97
96,98
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
111,112
111,113
112,113
112,114
113,114
115,116
117,118
118,119
118,120
118,121
118,122
119,120
121,122
123,124
125,126
125,127
126,127
126,128
126,129
127,128
129,130
131,132
133,134
135,136
136,137
-----nextToken-----
2,4,6,8,10,12,14,16,20,22,26,28,30,32,34,35,36,37,43,44,47,49,53,57,59,64,67,69,71,74,79,81,83,84,85,86,90,91,94,98,100,104,106,108,110,114,116,120,122,124,128,130,132,134,137
-----computeFrom-----
39,40
39,41
40,41
40,42
41,42
41,43
45,46
45,47
51,52
51,53
55,56
55,57
62,63
62,64
72,73
72,74
77,78
77,79
88,89
88,90
96,97
96,98
112,113
112,114
125,126
125,127
-----guardedBy-----
57,100
59,116
43,130
53,114
90,94
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int socket(int domain, int type, int protocol){	int s = socketcall(socket, domain, type, protocol, 0, 0, 0);	if (s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK))) {		s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0);		if (s < 0) return s;		if (type & SOCK_CLOEXEC)			fcntl(s, F_SETFD, FD_CLOEXEC);		if (type & SOCK_NONBLOCK)			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);	}	return s;}
int
socket(int domain, int type, int protocol)
socket
int domain
int
domain
domain
int type
int
type
type
int protocol
int
protocol
protocol
{	int s = socketcall(socket, domain, type, protocol, 0, 0, 0);	if (s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK))) {		s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0);		if (s < 0) return s;		if (type & SOCK_CLOEXEC)			fcntl(s, F_SETFD, FD_CLOEXEC);		if (type & SOCK_NONBLOCK)			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);	}	return s;}
int s = socketcall(socket, domain, type, protocol, 0, 0, 0);
int s = socketcall(socket, domain, type, protocol, 0, 0, 0);
int
s = socketcall(socket, domain, type, protocol, 0, 0, 0)
s
= socketcall(socket, domain, type, protocol, 0, 0, 0)
socketcall(socket, domain, type, protocol, 0, 0, 0)
socketcall
socketcall
socket
socket
domain
domain
type
type
protocol
protocol
0
0
0
if (s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK))) {		s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0);		if (s < 0) return s;		if (type & SOCK_CLOEXEC)			fcntl(s, F_SETFD, FD_CLOEXEC);		if (type & SOCK_NONBLOCK)			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);	}
s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK))
s<0 && errno==EINVAL
s<0
s
s
0
errno==EINVAL
errno
errno
EINVAL
EINVAL
(type&(SOCK_CLOEXEC|SOCK_NONBLOCK))
type&(SOCK_CLOEXEC|SOCK_NONBLOCK)
type
type
(SOCK_CLOEXEC|SOCK_NONBLOCK)
SOCK_CLOEXEC|SOCK_NONBLOCK
SOCK_CLOEXEC
SOCK_CLOEXEC
SOCK_NONBLOCK
SOCK_NONBLOCK
{		s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0);		if (s < 0) return s;		if (type & SOCK_CLOEXEC)			fcntl(s, F_SETFD, FD_CLOEXEC);		if (type & SOCK_NONBLOCK)			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);	}
s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0);
s = socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0)
s
s
socketcall(socket, domain,			type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK),			protocol, 0, 0, 0)
socketcall
socketcall
socket
socket
domain
domain
type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK)
type
type
~(SOCK_CLOEXEC|SOCK_NONBLOCK)
(SOCK_CLOEXEC|SOCK_NONBLOCK)
SOCK_CLOEXEC|SOCK_NONBLOCK
SOCK_CLOEXEC
SOCK_CLOEXEC
SOCK_NONBLOCK
SOCK_NONBLOCK
protocol
protocol
0
0
0
if (s < 0) return s;
s < 0
s
s
0
return s;
s
s
if (type & SOCK_CLOEXEC)			fcntl(s, F_SETFD, FD_CLOEXEC);
type & SOCK_CLOEXEC
type
type
SOCK_CLOEXEC
SOCK_CLOEXEC
fcntl(s, F_SETFD, FD_CLOEXEC);
fcntl(s, F_SETFD, FD_CLOEXEC)
fcntl
fcntl
s
s
F_SETFD
F_SETFD
FD_CLOEXEC
FD_CLOEXEC
if (type & SOCK_NONBLOCK)			fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);
type & SOCK_NONBLOCK
type
type
SOCK_NONBLOCK
SOCK_NONBLOCK
fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK);
fcntl(s, F_SETFL, fcntl(s, F_GETFL) | O_NONBLOCK)
fcntl
fcntl
s
s
F_SETFL
F_SETFL
fcntl(s, F_GETFL) | O_NONBLOCK
fcntl(s, F_GETFL)
fcntl
fcntl
s
s
F_GETFL
F_GETFL
O_NONBLOCK
O_NONBLOCK
return s;
s
s
-----joern-----
(36,13,0)
(70,59,0)
(31,19,0)
(51,55,0)
(22,51,0)
(36,47,0)
(28,49,0)
(65,34,0)
(72,51,0)
(73,3,0)
(13,36,0)
(2,43,0)
(15,1,0)
(4,42,0)
(42,13,0)
(64,47,0)
(63,70,0)
(34,55,0)
(43,1,0)
(60,49,0)
(62,55,0)
(26,35,0)
(49,28,0)
(1,43,0)
(1,35,0)
(38,1,0)
(41,51,0)
(1,46,0)
(13,42,0)
(27,16,0)
(53,51,0)
(9,48,0)
(37,16,0)
(70,63,0)
(33,1,0)
(48,55,0)
(23,47,0)
(11,26,0)
(18,45,0)
(69,48,0)
(57,16,0)
(61,1,0)
(57,55,0)
(57,43,0)
(62,49,0)
(51,59,0)
(52,19,0)
(29,1,0)
(58,26,0)
(56,54,0)
(44,34,0)
(51,71,0)
(21,42,0)
(5,51,0)
(47,36,0)
(3,35,0)
(59,51,0)
(12,36,0)
(36,12,0)
(6,62,0)
(9,57,0)
(1,71,0)
(28,55,0)
(43,16,0)
(66,57,0)
(68,19,0)
(24,28,0)
(45,55,0)
(0,13,0)
(55,19,0)
(55,51,0)
(39,28,0)
(40,45,0)
(8,51,0)
(49,62,0)
(54,12,0)
(20,54,0)
(51,46,0)
(67,62,0)
(12,54,0)
(54,43,0)
(59,70,0)
(10,3,0)
(30,63,0)
(32,1,0)
(14,63,0)
(50,1,0)
(59,35,0)
(17,59,0)
(7,34,0)
(13,35,0)
(25,55,0)
(1,71,1)
(66,26,1)
(17,5,1)
(9,48,1)
(42,21,1)
(45,55,1)
(63,30,1)
(1,46,1)
(3,35,1)
(21,4,1)
(54,56,1)
(33,29,1)
(60,62,1)
(62,55,1)
(65,44,1)
(38,2,1)
(45,18,1)
(15,32,1)
(56,20,1)
(36,13,1)
(30,14,1)
(20,43,1)
(58,34,1)
(51,71,1)
(69,45,1)
(57,66,1)
(64,54,1)
(67,6,1)
(48,69,1)
(57,43,1)
(61,50,1)
(28,49,1)
(12,54,1)
(59,70,1)
(25,12,1)
(28,55,1)
(40,55,1)
(11,58,1)
(23,64,1)
(29,38,1)
(9,57,1)
(66,28,1)
(26,35,1)
(4,0,1)
(1,15,1)
(57,55,1)
(7,65,1)
(54,43,1)
(41,25,1)
(18,40,1)
(12,36,1)
(73,10,1)
(44,3,1)
(58,3,1)
(49,62,1)
(14,17,1)
(1,35,1)
(48,55,1)
(5,41,1)
(59,35,1)
(49,60,1)
(8,53,1)
(13,35,1)
(72,59,1)
(55,51,1)
(22,8,1)
(34,55,1)
(26,11,1)
(53,72,1)
(62,67,1)
(32,61,1)
(47,23,1)
(24,26,1)
(70,63,1)
(3,73,1)
(51,46,1)
(51,59,1)
(10,45,1)
(50,33,1)
(66,12,1)
(34,7,1)
(0,47,1)
(39,24,1)
(43,1,1)
(51,22,1)
(36,47,1)
(6,39,1)
(13,42,1)
(69,45,2)
(36,47,2)
(51,59,2)
(3,45,2)
(28,55,2)
(73,45,2)
(11,45,2)
(51,12,2)
(57,12,2)
(49,62,2)
(10,45,2)
(44,3,2)
(14,12,2)
(45,55,2)
(13,35,2)
(51,71,2)
(30,12,2)
(70,63,2)
(5,12,2)
(59,12,2)
(13,47,2)
(47,54,2)
(41,12,2)
(26,35,2)
(59,70,2)
(57,45,2)
(65,3,2)
(51,46,2)
(70,12,2)
(43,1,2)
(67,26,2)
(1,35,2)
(55,12,2)
(1,71,2)
(26,45,2)
(23,54,2)
(55,51,2)
(34,3,2)
(64,54,2)
(17,12,2)
(62,26,2)
(60,26,2)
(54,43,2)
(39,26,2)
(12,36,2)
(45,12,2)
(48,45,2)
(22,12,2)
(63,12,2)
(6,26,2)
(8,12,2)
(36,13,2)
(13,42,2)
(3,35,2)
(66,45,2)
(36,54,2)
(28,26,2)
(59,35,2)
(28,49,2)
(12,54,2)
(58,45,2)
(1,46,2)
(25,12,2)
(4,47,2)
(49,26,2)
(18,12,2)
(0,47,2)
(40,12,2)
(72,12,2)
(9,57,2)
(34,55,2)
(53,12,2)
(62,55,2)
(9,48,2)
(7,3,2)
(57,55,2)
(57,43,2)
(42,47,2)
(21,47,2)
(66,12,2)
(48,55,2)
(24,26,2)
-----------------------------------
(0,type)
(1,socketcall(socket, domain, type, protocol, 0, 0, 0)
(2,s)
(3,type & SOCK_CLOEXEC)
(4,SOCK_CLOEXEC)
(5,domain)
(6,s)
(7,FD_CLOEXEC)
(8,0)
(9,RET)
(10,type)
(11,SOCK_NONBLOCK)
(12,s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK)
(13,type&(SOCK_CLOEXEC|SOCK_NONBLOCK)
(14,SOCK_CLOEXEC)
(15,0)
(16,)
(17,type)
(18,0)
(19,)
(20,s)
(21,SOCK_NONBLOCK)
(22,0)
(23,EINVAL)
(24,s)
(25,s)
(26,type & SOCK_NONBLOCK)
(27,if (s<0 && errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK)
(28,fcntl(s, F_SETFL, fcntl(s, F_GETFL)
(29,domain)
(30,SOCK_NONBLOCK)
(31,if (type & SOCK_NONBLOCK)
(32,0)
(33,type)
(34,fcntl(s, F_SETFD, FD_CLOEXEC)
(35,int type)
(36,errno==EINVAL && (type&(SOCK_CLOEXEC|SOCK_NONBLOCK)
(37,s)
(38,socket)
(39,F_SETFL)
(40,s)
(41,socket)
(42,SOCK_CLOEXEC|SOCK_NONBLOCK)
(43,s = socketcall(socket, domain, type, protocol, 0, 0, 0)
(44,s)
(45,s < 0)
(46,int domain)
(47,errno==EINVAL)
(48,return s;)
(49,fcntl(s, F_GETFL)
(50,protocol)
(51,socketcall(socket, domain,\n\\n\\t\\t\\ttype & ~(SOCK_CLOEXEC|SOCK_NONBLOCK)
(52,if (type & SOCK_CLOEXEC)
(53,0)
(54,s<0)
(55,s = socketcall(socket, domain,\n\\n\\t\\t\\ttype & ~(SOCK_CLOEXEC|SOCK_NONBLOCK)
(56,0)
(57,return s;)
(58,type)
(59,type & ~(SOCK_CLOEXEC|SOCK_NONBLOCK)
(60,O_NONBLOCK)
(61,0)
(62,fcntl(s, F_GETFL)
(63,SOCK_CLOEXEC|SOCK_NONBLOCK)
(64,errno)
(65,F_SETFD)
(66,s)
(67,F_GETFL)
(68,if (s < 0)
(69,s)
(70,~(SOCK_CLOEXEC|SOCK_NONBLOCK)
(71,int protocol)
(72,protocol)
(73,SOCK_CLOEXEC)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^