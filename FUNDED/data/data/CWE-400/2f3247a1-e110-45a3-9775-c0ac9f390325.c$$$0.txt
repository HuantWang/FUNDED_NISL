-----label-----
0
-----code-----
static void goodG2B1()
{
    int64_t * data;
    data = NULL;
    if(STATIC_CONST_FIVE!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Use memory allocated on the stack with ALLOCA */
        data = (int64_t *)ALLOCA(100*sizeof(int64_t));
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(STATIC_CONST_FIVE==5)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
19,22
20,21
20,22
21,22
24,25
25,26
26,27
26,28
27,28
30,31
30,32
30,33
31,32
32,33
32,34
33,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
41,43
42,43
44,45
44,46
46,47
47,48
47,49
48,49
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
66,68
67,68
67,69
68,69
71,72
-----nextToken-----
2,4,9,11,12,16,18,22,23,28,29,34,38,40,43,45,49,50,55,56,57,61,64,65,69,70,72
-----computeFrom-----
14,15
14,16
20,21
20,22
32,33
32,34
44,45
44,46
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
static void goodG2B1(){    int64_t * data;    data = NULL;    if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
static void
goodG2B1()
goodG2B1
{    int64_t * data;    data = NULL;    if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(STATIC_CONST_FIVE!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
STATIC_CONST_FIVE!=5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)ALLOCA(100*sizeof(int64_t));
data = (int64_t *)ALLOCA(100*sizeof(int64_t))
data
data
(int64_t *)ALLOCA(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
ALLOCA(100*sizeof(int64_t))
ALLOCA
ALLOCA
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(STATIC_CONST_FIVE==5)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(24,26,0)
(31,4,0)
(3,26,0)
(23,5,0)
(20,17,0)
(6,17,0)
(26,21,0)
(25,17,0)
(18,0,0)
(6,28,0)
(28,6,0)
(15,16,0)
(14,13,0)
(10,12,0)
(26,25,0)
(9,4,0)
(11,28,0)
(25,13,0)
(28,2,0)
(30,16,0)
(17,25,0)
(19,2,0)
(0,4,0)
(17,20,0)
(29,12,0)
(17,6,0)
(2,28,0)
(5,1,0)
(21,13,0)
(27,0,0)
(21,26,0)
(7,25,0)
(22,4,0)
(23,16,1)
(3,14,1)
(7,16,1)
(2,19,1)
(18,27,1)
(26,25,1)
(11,7,1)
(5,23,1)
(28,2,1)
(12,29,1)
(17,6,1)
(0,18,1)
(10,21,1)
(30,15,1)
(21,26,1)
(6,28,1)
(24,3,1)
(29,10,1)
(10,5,1)
(8,12,1)
(16,30,1)
(14,25,1)
(26,24,1)
(15,0,1)
(19,11,1)
(17,20,1)
(25,17,1)
(25,16,2)
(3,16,2)
(23,16,2)
(19,16,2)
(5,16,2)
(25,17,2)
(26,16,2)
(28,2,2)
(2,16,2)
(6,28,2)
(21,16,2)
(17,20,2)
(26,25,2)
(24,16,2)
(11,16,2)
(17,16,2)
(7,16,2)
(14,16,2)
(17,6,2)
(28,16,2)
(21,26,2)
(6,16,2)
-----------------------------------
(0,data = NULL)
(1,)
(2,sizeof(int64_t)
(3,data)
(4,)
(5,printLine("Benign, fixed string")
(6,ALLOCA(100*sizeof(int64_t)
(7,data)
(8,RET)
(9,if(STATIC_CONST_FIVE!=5)
(10,STATIC_CONST_FIVE)
(11,100)
(12,STATIC_CONST_FIVE==5)
(13,)
(14,L)
(15,STATIC_CONST_FIVE)
(16,STATIC_CONST_FIVE!=5)
(17,(int64_t *)
(18,NULL)
(19,int64_t)
(20,int64_t *)
(21,printLongLongLine(data[0])
(22,data)
(23,"Benign, fixed string")
(24,0)
(25,data = (int64_t *)
(26,data[0])
(27,data)
(28,100*sizeof(int64_t)
(29,5)
(30,5)
(31,if(STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^