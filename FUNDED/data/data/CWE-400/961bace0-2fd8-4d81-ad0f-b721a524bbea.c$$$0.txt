-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02_bad()
{
    struct _twoIntsStruct * data;
    data = NULL;
    if(1)
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0].intOne = 0;
        data[0].intTwo = 0;
        printStructLine((twoIntsStruct *)&data[0]);
    }
    if(1)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
21,22
21,23
21,24
21,25
21,26
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
28,29
30,31
32,33
32,34
32,35
33,34
35,36
37,38
37,39
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
46,47
48,49
50,51
51,52
52,53
52,54
53,54
55,56
57,58
58,59
58,60
59,60
59,61
60,61
60,62
61,62
66,67
67,68
67,69
68,69
68,70
69,70
69,71
70,71
75,76
76,77
76,78
77,78
79,80
79,81
80,81
80,82
81,82
83,84
85,86
86,87
86,88
87,88
90,91
90,92
92,93
-----nextToken-----
2,4,9,11,12,16,18,20,25,29,31,34,36,38,42,43,47,49,54,56,62,63,64,65,71,72,73,74,78,82,84,88,89,91,93
-----computeFrom-----
14,15
14,16
23,24
23,25
37,38
37,39
45,46
45,47
58,59
58,60
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02_bad(){    struct _twoIntsStruct * data;    data = NULL;    if(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }    if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02_bad
{    struct _twoIntsStruct * data;    data = NULL;    if(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }    if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(1)    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }
1
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0].intOne = 0;        data[0].intTwo = 0;        printStructLine((twoIntsStruct *)&data[0]);    }
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
realloc(data, 100*sizeof(struct _twoIntsStruct))
realloc
realloc
data
data
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
if(1)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
1
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(31,4,0)
(49,42,0)
(28,3,0)
(14,25,0)
(8,18,0)
(48,18,0)
(27,45,0)
(26,22,0)
(24,46,0)
(4,20,0)
(49,4,0)
(10,9,0)
(28,9,0)
(46,33,0)
(2,18,0)
(9,10,0)
(35,21,0)
(25,9,0)
(21,7,0)
(41,45,0)
(38,6,0)
(3,6,0)
(36,40,0)
(42,25,0)
(45,41,0)
(16,25,0)
(24,25,0)
(34,3,0)
(42,49,0)
(47,49,0)
(7,21,0)
(28,2,0)
(23,42,0)
(13,28,0)
(12,24,0)
(17,33,0)
(19,18,0)
(22,36,0)
(21,25,0)
(29,2,0)
(6,38,0)
(6,3,0)
(39,46,0)
(7,45,0)
(5,20,0)
(30,42,0)
(45,7,0)
(3,28,0)
(33,20,0)
(36,22,0)
(37,2,0)
(1,16,0)
(9,25,0)
(0,21,0)
(27,20,0)
(32,24,0)
(43,16,0)
(9,28,0)
(46,24,0)
(25,20,0)
(45,27,0)
(13,14,1)
(36,22,1)
(21,25,1)
(6,38,1)
(37,29,1)
(44,15,1)
(16,43,1)
(42,25,1)
(46,24,1)
(12,4,1)
(2,37,1)
(31,49,1)
(7,21,1)
(23,16,1)
(26,16,1)
(32,12,1)
(11,2,1)
(16,25,1)
(24,25,1)
(15,27,1)
(46,39,1)
(22,26,1)
(42,30,1)
(9,10,1)
(0,33,1)
(23,36,1)
(43,1,1)
(17,46,1)
(6,34,1)
(30,23,1)
(28,2,1)
(15,11,1)
(28,3,1)
(27,45,1)
(1,25,1)
(39,24,1)
(4,31,1)
(45,7,1)
(33,17,1)
(49,47,1)
(3,6,1)
(24,32,1)
(47,42,1)
(21,35,1)
(35,0,1)
(45,41,1)
(25,9,1)
(9,28,1)
(49,42,1)
(14,11,1)
(34,13,1)
(25,11,2)
(47,11,2)
(3,6,2)
(14,11,2)
(26,16,2)
(24,25,2)
(16,11,2)
(13,11,2)
(6,38,2)
(46,24,2)
(7,11,2)
(42,11,2)
(27,11,2)
(45,7,2)
(4,11,2)
(0,11,2)
(32,11,2)
(45,11,2)
(16,25,2)
(43,11,2)
(46,11,2)
(36,16,2)
(39,11,2)
(1,11,2)
(12,11,2)
(9,10,2)
(21,11,2)
(21,25,2)
(34,11,2)
(3,11,2)
(36,22,2)
(31,11,2)
(27,45,2)
(28,3,2)
(35,11,2)
(9,11,2)
(22,16,2)
(42,25,2)
(28,11,2)
(49,42,2)
(9,28,2)
(7,21,2)
(49,11,2)
(28,2,2)
(23,11,2)
(25,9,2)
(45,41,2)
(6,11,2)
(33,11,2)
(24,11,2)
(30,11,2)
(17,11,2)
-----------------------------------
(0,data)
(1,data)
(2,data = NULL)
(3,100*sizeof(struct _twoIntsStruct)
(4,data[0].intOne = 0)
(5,if (data == NULL)
(6,sizeof(struct _twoIntsStruct)
(7,&data[0])
(8,if(1)
(9,(struct _twoIntsStruct *)
(10,struct _twoIntsStruct *)
(11,1)
(12,data)
(13,data)
(14,data)
(15,1)
(16,data == NULL)
(17,0)
(18,)
(19,data)
(20,)
(21,data[0])
(22,-1)
(23,data)
(24,data[0])
(25,data = (struct _twoIntsStruct *)
(26,1)
(27,printStructLine((twoIntsStruct *)
(28,realloc(data, 100*sizeof(struct _twoIntsStruct)
(29,data)
(30,0)
(31,0)
(32,0)
(33,data[0].intTwo = 0)
(34,100)
(35,0)
(36,exit(-1)
(37,NULL)
(38,struct _twoIntsStruct)
(39,intTwo)
(40,)
(41,twoIntsStruct *)
(42,data[0])
(43,NULL)
(44,RET)
(45,(twoIntsStruct *)
(46,data[0].intTwo)
(47,intOne)
(48,if(1)
(49,data[0].intOne)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^