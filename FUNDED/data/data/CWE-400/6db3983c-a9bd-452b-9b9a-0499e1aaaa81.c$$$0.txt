-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_14_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
    }
    if(globalFive==5)
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
18,20
19,20
22,23
23,24
24,25
24,26
24,27
24,28
25,26
27,28
30,31
31,32
33,34
33,35
34,35
34,36
35,36
38,39
38,40
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
-----nextToken-----
2,4,8,10,14,16,20,21,26,28,29,32,36,37,42,44,48,49
-----computeFrom-----
12,13
12,14
18,19
18,20
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_14_bad(){    int count;    /* Initialize count */    count = -1;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__fscanf_sleep_14_bad()
CWE400_Resource_Exhaustion__fscanf_sleep_14_bad
{    int count;    /* Initialize count */    count = -1;    if(globalFive==5)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(globalFive==5)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(globalFive==5)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
if(globalFive==5)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
globalFive==5
globalFive
globalFive
5
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(22,1,0)
(14,11,0)
(21,9,0)
(4,12,0)
(13,24,0)
(23,19,0)
(8,11,0)
(25,23,0)
(19,12,0)
(9,7,0)
(15,20,0)
(16,6,0)
(10,19,0)
(5,20,0)
(12,24,0)
(17,24,0)
(2,24,0)
(9,12,0)
(18,23,0)
(19,23,0)
(12,6,0)
(23,3,0)
(1,7,0)
(6,12,0)
(19,12,1)
(25,11,1)
(18,25,1)
(14,12,1)
(11,8,1)
(6,16,1)
(19,10,1)
(15,11,1)
(15,23,1)
(9,21,1)
(9,12,1)
(20,5,1)
(5,15,1)
(16,4,1)
(12,6,1)
(23,19,1)
(21,20,1)
(0,20,1)
(1,22,1)
(0,1,1)
(22,9,1)
(8,14,1)
(10,18,1)
(18,11,2)
(9,12,2)
(23,11,2)
(22,20,2)
(10,11,2)
(25,11,2)
(1,20,2)
(19,11,2)
(12,6,2)
(9,20,2)
(19,12,2)
(21,20,2)
(23,19,2)
-----------------------------------
(0,RET)
(1,printLine("Sleep time possibly too long")
(2,if(globalFive==5)
(3,)
(4,count)
(5,5)
(6,-1)
(7,)
(8,5)
(9,SLEEP(count)
(10,count)
(11,globalFive==5)
(12,count = -1)
(13,if(globalFive==5)
(14,globalFive)
(15,globalFive)
(16,1)
(17,count)
(18,"%d")
(19,&count)
(20,globalFive==5)
(21,count)
(22,"Sleep time possibly too long")
(23,fscanf(stdin, "%d", &count)
(24,)
(25,stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^