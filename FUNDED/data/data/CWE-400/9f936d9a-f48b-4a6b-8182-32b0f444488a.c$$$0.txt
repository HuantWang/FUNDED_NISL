-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(int count)
{
    if(CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)
    {
        {
            size_t i = 0;
            FILE *pFile = NULL;
            const char *filename = "output_bad.txt";
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
             * This can cause a file to become very large */
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
                {
                    exit(1);
                }
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,6,8,12,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(int count){    if(CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink(int count)
CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badSink
int count
int
count
count
{    if(CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }}
if(CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }
CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal
CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal
{        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }    }
{            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_bad.txt";            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation             * This can cause a file to become very large */            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }            if (pFile)            {                fclose(pFile);            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))                {                    exit(1);                }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                    exit(1);                }
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(49,20,0)
(51,15,0)
(28,49,0)
(26,21,0)
(44,31,0)
(48,47,0)
(7,30,0)
(52,49,0)
(47,39,0)
(23,39,0)
(11,24,0)
(22,11,0)
(31,47,0)
(16,49,0)
(39,50,0)
(48,19,0)
(29,3,0)
(59,50,0)
(3,29,0)
(38,2,0)
(11,15,0)
(41,48,0)
(6,21,0)
(24,11,0)
(47,49,0)
(35,39,0)
(27,28,0)
(60,21,0)
(29,4,0)
(37,0,0)
(36,31,0)
(39,47,0)
(43,47,0)
(5,50,0)
(14,7,0)
(18,42,0)
(57,49,0)
(58,3,0)
(50,49,0)
(1,49,0)
(3,21,0)
(9,56,0)
(56,49,0)
(0,17,0)
(32,29,0)
(42,33,0)
(46,60,0)
(54,28,0)
(11,33,0)
(29,55,0)
(33,11,0)
(13,24,0)
(15,11,0)
(10,56,0)
(8,49,0)
(4,29,0)
(45,40,0)
(33,42,0)
(61,11,0)
(11,47,0)
(12,49,0)
(47,39,1)
(58,60,1)
(34,3,1)
(46,33,1)
(33,42,1)
(11,47,1)
(56,9,1)
(3,29,1)
(48,41,1)
(10,28,1)
(5,59,1)
(11,22,1)
(28,54,1)
(37,33,1)
(15,51,1)
(53,34,1)
(29,55,1)
(53,25,1)
(53,48,1)
(51,24,1)
(39,35,1)
(7,14,1)
(11,24,1)
(61,42,1)
(6,31,1)
(43,50,1)
(60,21,1)
(9,10,1)
(18,3,1)
(11,15,1)
(33,11,1)
(59,56,1)
(39,50,1)
(29,32,1)
(42,18,1)
(31,36,1)
(41,34,1)
(35,23,1)
(6,7,1)
(24,13,1)
(44,47,1)
(3,21,1)
(58,21,1)
(32,58,1)
(13,61,1)
(0,37,1)
(31,47,1)
(27,25,1)
(14,31,1)
(46,0,1)
(22,15,1)
(36,44,1)
(23,43,1)
(29,4,1)
(60,46,1)
(54,27,1)
(21,26,1)
(50,5,1)
(26,6,1)
(48,47,1)
(46,3,2)
(51,3,2)
(47,39,2)
(39,50,2)
(58,3,2)
(22,3,2)
(48,34,2)
(37,33,2)
(33,3,2)
(3,3,2)
(28,25,2)
(43,25,2)
(21,25,2)
(26,25,2)
(14,31,2)
(11,15,2)
(48,47,2)
(34,25,2)
(3,21,2)
(5,25,2)
(36,25,2)
(13,3,2)
(32,25,2)
(60,21,2)
(29,3,2)
(23,25,2)
(39,25,2)
(41,34,2)
(59,25,2)
(3,25,2)
(11,3,2)
(9,25,2)
(31,25,2)
(47,25,2)
(31,47,2)
(29,25,2)
(33,42,2)
(42,3,2)
(6,25,2)
(44,25,2)
(0,33,2)
(24,3,2)
(29,4,2)
(60,3,2)
(33,11,2)
(56,25,2)
(29,55,2)
(32,3,2)
(11,47,2)
(11,24,2)
(58,25,2)
(3,29,2)
(35,25,2)
(7,31,2)
(27,25,2)
(18,3,2)
(54,25,2)
(61,3,2)
(50,25,2)
(15,3,2)
(10,25,2)
-----------------------------------
(0,exit(1)
(1,for (i = 0; i < (size_t)
(2,)
(3,i < (size_t)
(4,size_t)
(5,"output_bad.txt")
(6,i)
(7,exit(1)
(8,if (pFile == NULL)
(9,NULL)
(10,pFile)
(11,fwrite(SENTENCE, sizeof(char)
(12,filename)
(13,char)
(14,1)
(15,strlen(SENTENCE)
(16,i)
(17,)
(18,SENTENCE)
(19,)
(20,)
(21,i = 0)
(22,pFile)
(23,filename)
(24,sizeof(char)
(25,CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)
(26,0)
(27,i)
(28,i = 0)
(29,(size_t)
(30,)
(31,pFile == NULL)
(32,count)
(33,strlen(SENTENCE)
(34,pFile)
(35,"w+")
(36,NULL)
(37,1)
(38,if (strlen(SENTENCE)
(39,fopen(filename, "w+")
(40,)
(41,pFile)
(42,strlen(SENTENCE)
(43,pFile)
(44,pFile)
(45,if(CWE400_Resource_Exhaustion__listen_socket_fwrite_22_badGlobal)
(46,i)
(47,pFile = fopen(filename, "w+")
(48,fclose(pFile)
(49,)
(50,*filename = "output_bad.txt")
(51,SENTENCE)
(52,if (pFile)
(53,RET)
(54,0)
(55,int count)
(56,*pFile = NULL)
(57,pFile)
(58,i)
(59,filename)
(60,i++)
(61,SENTENCE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^