-----label-----
0
-----code-----
void
init_param2(int physpages)
{

	/* Base parameters */
	if ((maxusers = MAXUSERS) == 0) {
		maxusers = physpages / (1024 * 1024 / PAGE_SIZE);
		if (maxusers < 32)
			maxusers = 32;
		if (maxusers > 512)
			maxusers = 512;
	}
	TUNABLE_INT_FETCH("kern.maxusers", &maxusers);

	/*
	 * The following can be overridden after boot via sysctl.  Note:
	 * unless overriden, these macros are ultimately based on maxusers.
	 */
	maxproc = NPROC;
	TUNABLE_INT_FETCH("kern.maxproc", &maxproc);
	maxfiles = MAXFILES;
	TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles);
	maxprocperuid = (maxproc * 9) / 10;
	maxfilesperproc = (maxfiles * 9) / 10;

	/*
	 * Cannot be changed after boot.
	 */
	nbuf = NBUF;
	TUNABLE_INT_FETCH("kern.nbuf", &nbuf);

	ncallout = 16 + maxproc + maxfiles;
	TUNABLE_INT_FETCH("kern.ncallout", &ncallout);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
9,17
9,18
9,19
9,20
9,21
10,11
10,12
11,12
11,13
12,13
13,14
13,15
14,15
16,17
19,20
19,21
19,22
20,21
21,22
21,23
22,23
24,25
24,26
25,26
27,28
28,29
28,30
29,30
29,31
32,33
34,35
34,36
35,36
35,37
36,37
39,40
40,41
40,42
41,42
44,45
44,46
45,46
45,47
46,47
49,50
50,51
50,52
51,52
54,55
55,56
55,57
55,58
56,57
59,60
60,61
62,63
63,64
63,65
64,65
66,67
68,69
69,70
69,71
69,72
70,71
73,74
74,75
76,77
77,78
77,79
78,79
80,81
82,83
83,84
83,85
83,86
84,85
87,88
88,89
90,91
91,92
91,93
92,93
94,95
94,96
95,96
96,97
96,98
97,98
101,102
102,103
102,104
103,104
105,106
105,107
106,107
107,108
107,109
108,109
112,113
113,114
113,115
114,115
116,117
118,119
119,120
119,121
119,122
120,121
123,124
124,125
126,127
127,128
127,129
128,129
130,131
130,132
131,132
131,133
133,134
135,136
137,138
138,139
138,140
138,141
139,140
142,143
143,144
-----nextToken-----
2,4,6,8,15,17,18,23,26,30,31,33,37,38,42,43,47,48,52,53,57,58,61,65,67,71,72,75,79,81,85,86,89,93,98,99,100,104,109,110,111,115,117,121,122,125,129,132,134,136,140,141,144
-----computeFrom-----
11,12
11,13
13,14
13,15
21,22
21,23
24,25
24,26
28,29
28,30
29,30
29,31
35,36
35,37
40,41
40,42
45,46
45,47
50,51
50,52
63,64
63,65
77,78
77,79
91,92
91,93
94,95
94,96
96,97
96,98
102,103
102,104
105,106
105,107
107,108
107,109
113,114
113,115
127,128
127,129
130,131
130,132
131,132
131,133
-----guardedBy-----
15,52
37,42
47,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;
-----ast_node-----
voidinit_param2(int physpages){	/* Base parameters */	if ((maxusers = MAXUSERS) == 0) {		maxusers = physpages / (1024 * 1024 / PAGE_SIZE);		if (maxusers < 32)			maxusers = 32;		if (maxusers > 512)			maxusers = 512;	}	TUNABLE_INT_FETCH("kern.maxusers", &maxusers);	/*	 * The following can be overridden after boot via sysctl.  Note:	 * unless overriden, these macros are ultimately based on maxusers.	 */	maxproc = NPROC;	TUNABLE_INT_FETCH("kern.maxproc", &maxproc);	maxfiles = MAXFILES;	TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles);	maxprocperuid = (maxproc * 9) / 10;	maxfilesperproc = (maxfiles * 9) / 10;	/*	 * Cannot be changed after boot.	 */	nbuf = NBUF;	TUNABLE_INT_FETCH("kern.nbuf", &nbuf);	ncallout = 16 + maxproc + maxfiles;	TUNABLE_INT_FETCH("kern.ncallout", &ncallout);}
void
init_param2(int physpages)
init_param2
int physpages
int
physpages
physpages
{	/* Base parameters */	if ((maxusers = MAXUSERS) == 0) {		maxusers = physpages / (1024 * 1024 / PAGE_SIZE);		if (maxusers < 32)			maxusers = 32;		if (maxusers > 512)			maxusers = 512;	}	TUNABLE_INT_FETCH("kern.maxusers", &maxusers);	/*	 * The following can be overridden after boot via sysctl.  Note:	 * unless overriden, these macros are ultimately based on maxusers.	 */	maxproc = NPROC;	TUNABLE_INT_FETCH("kern.maxproc", &maxproc);	maxfiles = MAXFILES;	TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles);	maxprocperuid = (maxproc * 9) / 10;	maxfilesperproc = (maxfiles * 9) / 10;	/*	 * Cannot be changed after boot.	 */	nbuf = NBUF;	TUNABLE_INT_FETCH("kern.nbuf", &nbuf);	ncallout = 16 + maxproc + maxfiles;	TUNABLE_INT_FETCH("kern.ncallout", &ncallout);}
if ((maxusers = MAXUSERS) == 0) {		maxusers = physpages / (1024 * 1024 / PAGE_SIZE);		if (maxusers < 32)			maxusers = 32;		if (maxusers > 512)			maxusers = 512;	}
(maxusers = MAXUSERS) == 0
(maxusers = MAXUSERS)
maxusers = MAXUSERS
maxusers
maxusers
MAXUSERS
MAXUSERS
0
{		maxusers = physpages / (1024 * 1024 / PAGE_SIZE);		if (maxusers < 32)			maxusers = 32;		if (maxusers > 512)			maxusers = 512;	}
maxusers = physpages / (1024 * 1024 / PAGE_SIZE);
maxusers = physpages / (1024 * 1024 / PAGE_SIZE)
maxusers
maxusers
physpages / (1024 * 1024 / PAGE_SIZE)
physpages
physpages
(1024 * 1024 / PAGE_SIZE)
1024 * 1024 / PAGE_SIZE
1024 * 1024
1024
1024
PAGE_SIZE
PAGE_SIZE
if (maxusers < 32)			maxusers = 32;
maxusers < 32
maxusers
maxusers
32
maxusers = 32;
maxusers = 32
maxusers
maxusers
32
if (maxusers > 512)			maxusers = 512;
maxusers > 512
maxusers
maxusers
512
maxusers = 512;
maxusers = 512
maxusers
maxusers
512
TUNABLE_INT_FETCH("kern.maxusers", &maxusers);
TUNABLE_INT_FETCH("kern.maxusers", &maxusers)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"kern.maxusers"
&maxusers
maxusers
maxusers
maxproc = NPROC;
maxproc = NPROC
maxproc
maxproc
NPROC
NPROC
TUNABLE_INT_FETCH("kern.maxproc", &maxproc);
TUNABLE_INT_FETCH("kern.maxproc", &maxproc)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"kern.maxproc"
&maxproc
maxproc
maxproc
maxfiles = MAXFILES;
maxfiles = MAXFILES
maxfiles
maxfiles
MAXFILES
MAXFILES
TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles);
TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"kern.maxfiles"
&maxfiles
maxfiles
maxfiles
maxprocperuid = (maxproc * 9) / 10;
maxprocperuid = (maxproc * 9) / 10
maxprocperuid
maxprocperuid
(maxproc * 9) / 10
(maxproc * 9)
maxproc * 9
maxproc
maxproc
9
10
maxfilesperproc = (maxfiles * 9) / 10;
maxfilesperproc = (maxfiles * 9) / 10
maxfilesperproc
maxfilesperproc
(maxfiles * 9) / 10
(maxfiles * 9)
maxfiles * 9
maxfiles
maxfiles
9
10
nbuf = NBUF;
nbuf = NBUF
nbuf
nbuf
NBUF
NBUF
TUNABLE_INT_FETCH("kern.nbuf", &nbuf);
TUNABLE_INT_FETCH("kern.nbuf", &nbuf)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"kern.nbuf"
&nbuf
nbuf
nbuf
ncallout = 16 + maxproc + maxfiles;
ncallout = 16 + maxproc + maxfiles
ncallout
ncallout
16 + maxproc + maxfiles
16 + maxproc
16
maxproc
maxproc
maxfiles
maxfiles
TUNABLE_INT_FETCH("kern.ncallout", &ncallout);
TUNABLE_INT_FETCH("kern.ncallout", &ncallout)
TUNABLE_INT_FETCH
TUNABLE_INT_FETCH
"kern.ncallout"
&ncallout
ncallout
ncallout
-----joern-----
(32,54,0)
(27,62,0)
(45,59,0)
(28,16,0)
(15,3,0)
(17,35,0)
(80,16,0)
(66,58,0)
(43,31,0)
(62,19,0)
(64,16,0)
(43,16,0)
(8,22,0)
(34,2,0)
(7,64,0)
(12,3,0)
(24,12,0)
(76,37,0)
(35,16,0)
(55,4,0)
(42,54,0)
(4,16,0)
(41,42,0)
(68,55,0)
(79,57,0)
(29,67,0)
(19,39,0)
(37,63,0)
(63,37,0)
(54,42,0)
(28,77,0)
(31,43,0)
(81,55,0)
(69,70,0)
(44,16,0)
(10,16,0)
(30,70,0)
(77,65,0)
(82,59,0)
(58,16,0)
(1,37,0)
(65,77,0)
(6,63,0)
(61,43,0)
(21,64,0)
(20,9,0)
(67,5,0)
(55,68,0)
(71,68,0)
(38,2,0)
(36,57,0)
(49,22,0)
(78,44,0)
(53,23,0)
(42,16,0)
(0,65,0)
(4,55,0)
(19,62,0)
(69,16,0)
(60,31,0)
(74,4,0)
(75,8,0)
(77,28,0)
(51,3,0)
(5,67,0)
(70,69,0)
(26,77,0)
(13,65,0)
(47,68,0)
(67,16,0)
(11,44,0)
(52,22,0)
(72,19,0)
(14,9,0)
(2,62,0)
(40,80,0)
(3,12,0)
(56,80,0)
(62,2,0)
(48,58,0)
(35,63,0)
(50,28,0)
(19,8,0)
(73,7,0)
(18,69,0)
(64,7,0)
(25,5,0)
(46,23,0)
(63,35,0)
(8,19,0)
(59,82,1)
(31,60,1)
(78,69,1)
(54,32,1)
(46,57,1)
(73,21,1)
(9,14,1)
(74,42,1)
(37,1,1)
(65,13,1)
(40,56,1)
(18,12,1)
(72,75,1)
(53,46,1)
(18,57,1)
(34,27,1)
(11,78,1)
(80,40,1)
(63,37,1)
(2,38,1)
(24,3,1)
(48,66,1)
(69,70,1)
(82,45,1)
(77,65,1)
(3,15,1)
(4,55,1)
(6,17,1)
(66,28,1)
(67,5,1)
(58,48,1)
(30,18,1)
(75,12,1)
(25,29,1)
(50,4,1)
(79,36,1)
(68,71,1)
(47,74,1)
(55,81,1)
(27,72,1)
(56,64,1)
(19,39,1)
(13,0,1)
(61,58,1)
(12,3,1)
(0,50,1)
(18,23,1)
(55,68,1)
(14,20,1)
(77,26,1)
(29,35,1)
(71,47,1)
(44,11,1)
(36,59,1)
(17,43,1)
(20,8,1)
(5,25,1)
(32,41,1)
(21,44,1)
(60,61,1)
(38,34,1)
(45,9,1)
(42,54,1)
(36,9,1)
(33,67,1)
(43,31,1)
(8,19,1)
(35,63,1)
(15,51,1)
(76,6,1)
(28,77,1)
(26,65,1)
(23,53,1)
(1,76,1)
(57,79,1)
(81,68,1)
(12,24,1)
(64,7,1)
(7,73,1)
(70,30,1)
(62,2,1)
(19,62,1)
(41,80,1)
(19,12,2)
(46,57,2)
(82,9,2)
(34,12,2)
(77,65,2)
(36,12,2)
(59,9,2)
(28,77,2)
(64,7,2)
(8,12,2)
(8,19,2)
(62,2,2)
(63,37,2)
(2,12,2)
(67,5,2)
(45,9,2)
(23,57,2)
(79,12,2)
(19,39,2)
(75,12,2)
(55,68,2)
(42,54,2)
(14,12,2)
(69,70,2)
(12,3,2)
(9,12,2)
(4,55,2)
(38,12,2)
(53,57,2)
(72,12,2)
(20,12,2)
(19,62,2)
(57,12,2)
(35,63,2)
(43,31,2)
(62,12,2)
(27,12,2)
-----------------------------------
(0,maxfiles)
(1,maxfiles)
(2,1024 / PAGE_SIZE)
(3,maxusers = MAXUSERS)
(4,maxprocperuid = (maxproc * 9)
(5,&ncallout)
(6,16)
(7,&maxproc)
(8,maxusers = physpages / (1024 * 1024 / PAGE_SIZE)
(9,maxusers < 32)
(10,if ((maxusers = MAXUSERS)
(11,NPROC)
(12,(maxusers = MAXUSERS)
(13,9)
(14,32)
(15,MAXUSERS)
(16,)
(17,ncallout)
(18,"kern.maxusers")
(19,physpages / (1024 * 1024 / PAGE_SIZE)
(20,maxusers)
(21,"kern.maxproc")
(22,)
(23,maxusers = 512)
(24,0)
(25,ncallout)
(26,10)
(27,1024)
(28,maxfilesperproc = (maxfiles * 9)
(29,"kern.ncallout")
(30,maxusers)
(31,&nbuf)
(32,maxfiles)
(33,RET)
(34,1024)
(35,ncallout = 16 + maxproc + maxfiles)
(36,maxusers)
(37,maxproc + maxfiles)
(38,PAGE_SIZE)
(39,int physpages)
(40,MAXFILES)
(41,"kern.maxfiles")
(42,TUNABLE_INT_FETCH("kern.maxfiles", &maxfiles)
(43,TUNABLE_INT_FETCH("kern.nbuf", &nbuf)
(44,maxproc = NPROC)
(45,maxusers)
(46,maxusers)
(47,maxproc)
(48,NBUF)
(49,if (maxusers > 512)
(50,maxfilesperproc)
(51,maxusers)
(52,if (maxusers < 32)
(53,512)
(54,&maxfiles)
(55,(maxproc * 9)
(56,maxfiles)
(57,maxusers > 512)
(58,nbuf = NBUF)
(59,maxusers = 32)
(60,nbuf)
(61,"kern.nbuf")
(62,1024 * 1024 / PAGE_SIZE)
(63,16 + maxproc + maxfiles)
(64,TUNABLE_INT_FETCH("kern.maxproc", &maxproc)
(65,maxfiles * 9)
(66,nbuf)
(67,TUNABLE_INT_FETCH("kern.ncallout", &ncallout)
(68,maxproc * 9)
(69,TUNABLE_INT_FETCH("kern.maxusers", &maxusers)
(70,&maxusers)
(71,9)
(72,physpages)
(73,maxproc)
(74,maxprocperuid)
(75,maxusers)
(76,maxproc)
(77,(maxfiles * 9)
(78,maxproc)
(79,512)
(80,maxfiles = MAXFILES)
(81,10)
(82,32)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^