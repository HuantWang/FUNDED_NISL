-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_badSink(struct _twoIntsStruct * * dataPtr)
{
    struct _twoIntsStruct * data = *dataPtr;
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
8,11
12,13
12,14
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
22,23
-----nextToken-----
2,4,7,9,10,11,16,18,19,23,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_badSink(struct _twoIntsStruct * * dataPtr){    struct _twoIntsStruct * data = *dataPtr;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_badSink(struct _twoIntsStruct * * dataPtr)
CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_badSink
struct _twoIntsStruct * * dataPtr
struct _twoIntsStruct
_twoIntsStruct
* * dataPtr
*
*
dataPtr
{    struct _twoIntsStruct * data = *dataPtr;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data = *dataPtr;
struct _twoIntsStruct * data = *dataPtr;
struct _twoIntsStruct
_twoIntsStruct
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
;
-----joern-----
(6,5,0)
(6,3,0)
(7,3,0)
(5,1,0)
(4,5,0)
(2,6,0)
(5,6,0)
(4,2,1)
(0,6,1)
(6,5,1)
(5,1,1)
(5,4,1)
(6,5,2)
(5,1,2)
-----------------------------------
(0,RET)
(1,struct _twoIntsStruct * * dataPtr)
(2,data)
(3,)
(4,dataPtr)
(5,*dataPtr)
(6,* data = *dataPtr)
(7,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^