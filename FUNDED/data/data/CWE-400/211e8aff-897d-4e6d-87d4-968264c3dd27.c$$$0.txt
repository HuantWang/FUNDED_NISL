-----label-----
0
-----code-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodG2BSource(twoIntsStruct * data)
{
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
31,32
34,35
35,36
35,37
36,37
36,38
37,38
37,39
38,39
43,44
44,45
44,46
45,46
45,47
46,47
46,48
47,48
52,53
53,54
53,55
54,55
56,57
57,58
57,59
58,59
61,62
62,63
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,32,33,39,40,41,42,48,49,50,51,55,59,60,63
-----computeFrom-----
15,16
15,17
27,28
27,29
35,36
35,37
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
twoIntsStruct * CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodG2BSource(twoIntsStruct * data){    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
twoIntsStruct
twoIntsStruct
* CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodG2BSource(twoIntsStruct * data)
*
CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodG2BSource
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    return data;}
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
ALLOCA(100*sizeof(twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(25,10,0)
(4,6,0)
(23,6,0)
(19,25,0)
(13,31,0)
(3,18,0)
(9,1,0)
(26,13,0)
(11,14,0)
(13,6,0)
(24,26,0)
(29,24,0)
(4,10,0)
(30,18,0)
(27,31,0)
(2,21,0)
(12,23,0)
(2,1,0)
(1,2,0)
(30,27,0)
(5,27,0)
(32,26,0)
(21,22,0)
(8,25,0)
(21,2,0)
(14,6,0)
(10,4,0)
(16,21,0)
(18,6,0)
(20,14,0)
(7,26,0)
(28,13,0)
(26,24,0)
(22,21,0)
(13,1,0)
(25,13,0)
(27,30,0)
(27,13,0)
(17,27,0)
(26,31,0)
(14,13,0)
(1,9,0)
(25,31,0)
(15,22,0)
(24,23,0)
(0,30,0)
(10,25,0)
(14,31,0)
(1,13,0)
(26,7,1)
(26,31,1)
(25,13,1)
(24,26,1)
(2,21,1)
(1,9,1)
(27,5,1)
(23,12,1)
(0,27,1)
(14,31,1)
(27,13,1)
(25,31,1)
(5,17,1)
(4,10,1)
(30,27,1)
(13,31,1)
(14,11,1)
(8,18,1)
(26,13,1)
(24,29,1)
(3,30,1)
(1,2,1)
(20,14,1)
(30,0,1)
(7,32,1)
(11,4,1)
(10,25,1)
(25,19,1)
(15,16,1)
(18,3,1)
(21,22,1)
(17,23,1)
(13,1,1)
(22,15,1)
(16,28,1)
(32,13,1)
(12,24,1)
(27,31,1)
(29,26,1)
(14,13,1)
(19,8,1)
(27,31,2)
(25,13,2)
(20,14,2)
(25,31,2)
(13,31,2)
(21,22,2)
(26,13,2)
(30,27,2)
(4,10,2)
(1,2,2)
(13,1,2)
(14,13,2)
(10,25,2)
(1,9,2)
(26,31,2)
(2,21,2)
(24,26,2)
(27,13,2)
(14,31,2)
-----------------------------------
(0,intTwo)
(1,(twoIntsStruct *)
(2,ALLOCA(100*sizeof(twoIntsStruct)
(3,0)
(4,printStructLine(&data[0])
(5,0)
(6,)
(7,0)
(8,data)
(9,twoIntsStruct *)
(10,&data[0])
(11,data)
(12,0)
(13,data = (twoIntsStruct *)
(14,return data;)
(15,twoIntsStruct)
(16,100)
(17,data)
(18,data[0].intTwo = 0)
(19,0)
(20,RET)
(21,100*sizeof(twoIntsStruct)
(22,sizeof(twoIntsStruct)
(23,data[0].intOne = 0)
(24,data[0].intOne)
(25,data[0])
(26,data[0])
(27,data[0])
(28,data)
(29,intOne)
(30,data[0].intTwo)
(31,twoIntsStruct * data)
(32,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^