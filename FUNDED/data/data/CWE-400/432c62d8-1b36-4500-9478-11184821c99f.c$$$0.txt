-----label-----
0
-----code-----
static void goodB2G2()
{
    int count;
    /* Initialize count */
    count = -1;
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: Set count to a random value */
        count = RAND32();
    }
    if(GLOBAL_CONST_TRUE)
    {
        {
            size_t i = 0;
            FILE *pFile = NULL;
            const char *filename = "output_good.txt";
            /* FIX: Validate count before using it as the for loop variant to write to a file */
            if (count > 0 && count <= 20)
            {
                pFile = fopen(filename, "w+");
                if (pFile == NULL)
                {
                    exit(1);
                }
                for (i = 0; i < (size_t)count; i++)
                {
                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
                }
                if (pFile)
                {
                    fclose(pFile);
                }
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
20,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
32,36
33,34
34,35
34,36
35,36
37,38
37,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
48,49
49,50
51,52
52,53
52,54
54,55
54,56
54,57
57,58
59,60
59,61
60,61
60,62
61,62
61,63
62,63
65,66
65,67
66,67
69,70
69,71
69,72
69,73
70,71
71,72
71,73
72,73
74,75
74,76
74,77
75,76
77,78
80,81
80,82
81,82
81,83
82,83
84,85
86,87
87,88
88,89
88,90
89,90
92,93
92,94
92,95
92,96
93,94
94,95
94,96
95,96
98,99
98,100
99,100
101,102
101,103
102,103
102,104
103,104
106,107
108,109
109,110
111,112
112,113
112,114
113,114
113,115
114,115
114,116
115,116
117,118
119,120
119,121
119,122
119,123
119,124
120,121
122,123
124,125
125,126
125,127
128,129
128,130
129,130
131,132
133,134
135,136
136,137
136,138
137,138
140,141
140,142
141,142
143,144
144,145
145,146
145,147
146,147
148,149
-----nextToken-----
2,4,8,10,14,16,19,24,27,30,36,38,40,44,46,47,50,53,55,56,58,63,64,67,68,73,76,78,79,83,85,90,91,96,97,100,104,105,107,110,116,118,121,123,126,127,130,132,134,138,139,142,147,149
-----computeFrom-----
12,13
12,14
22,23
22,24
60,61
60,62
61,62
61,63
65,66
65,67
71,72
71,73
81,82
81,83
94,95
94,96
98,99
98,100
113,114
113,115
-----guardedBy-----
67,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    int count;    /* Initialize count */    count = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
static void
goodB2G2()
goodB2G2
{    int count;    /* Initialize count */    count = -1;    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    if(GLOBAL_CONST_TRUE)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
if(GLOBAL_CONST_TRUE)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
{            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)                {                    exit(1);                }
pFile == NULL
pFile
pFile
NULL
NULL
{                    exit(1);                }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)                {                    fclose(pFile);                }
pFile
pFile
{                    fclose(pFile);                }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(40,9,0)
(5,12,0)
(22,15,0)
(79,40,0)
(19,57,0)
(49,70,0)
(12,5,0)
(74,30,0)
(53,12,0)
(73,57,0)
(19,36,0)
(36,9,0)
(41,22,0)
(18,15,0)
(1,5,0)
(47,30,0)
(3,7,0)
(38,1,0)
(65,44,0)
(16,15,0)
(71,0,0)
(28,23,0)
(7,0,0)
(2,40,0)
(48,46,0)
(39,15,0)
(9,77,0)
(40,56,0)
(17,0,0)
(32,68,0)
(37,35,0)
(6,22,0)
(12,8,0)
(58,29,0)
(15,55,0)
(56,70,0)
(69,40,0)
(33,36,0)
(44,15,0)
(5,1,0)
(20,12,0)
(36,56,0)
(36,33,0)
(40,2,0)
(9,64,0)
(34,9,0)
(50,19,0)
(51,37,0)
(24,61,0)
(56,45,0)
(12,23,0)
(78,56,0)
(2,30,0)
(60,8,0)
(12,7,0)
(36,19,0)
(14,45,0)
(7,37,0)
(31,57,0)
(59,46,0)
(43,0,0)
(13,25,0)
(67,37,0)
(75,35,0)
(46,7,0)
(76,15,0)
(30,2,0)
(30,9,0)
(4,44,0)
(23,12,0)
(10,57,0)
(11,36,0)
(63,35,0)
(35,15,0)
(68,27,0)
(37,7,0)
(52,45,0)
(21,45,0)
(8,12,0)
(77,9,0)
(29,54,0)
(68,7,0)
(30,56,0)
(72,73,0)
(70,56,0)
(44,65,1)
(74,35,1)
(73,57,1)
(49,78,1)
(63,75,1)
(46,7,1)
(12,23,1)
(79,69,1)
(67,3,1)
(73,72,1)
(60,20,1)
(72,5,1)
(66,68,1)
(2,30,1)
(42,19,1)
(1,38,1)
(19,57,1)
(20,1,1)
(48,59,1)
(5,12,1)
(75,22,1)
(68,7,1)
(56,70,1)
(53,23,1)
(34,26,1)
(51,67,1)
(36,11,1)
(72,61,1)
(40,79,1)
(3,2,1)
(6,44,1)
(32,42,1)
(12,8,1)
(57,10,1)
(66,62,1)
(31,46,1)
(40,56,1)
(30,9,1)
(62,9,1)
(24,5,1)
(2,40,1)
(37,35,1)
(40,9,1)
(30,56,1)
(66,42,1)
(36,56,1)
(69,30,1)
(37,51,1)
(77,34,1)
(31,29,1)
(30,47,1)
(19,36,1)
(58,46,1)
(36,33,1)
(61,24,1)
(8,60,1)
(4,62,1)
(22,41,1)
(50,57,1)
(35,63,1)
(9,77,1)
(46,48,1)
(11,50,1)
(10,31,1)
(36,9,1)
(41,6,1)
(68,32,1)
(12,53,1)
(50,73,1)
(70,49,1)
(65,4,1)
(66,2,1)
(28,8,1)
(26,56,1)
(47,74,1)
(12,7,1)
(59,7,1)
(23,28,1)
(5,1,1)
(62,26,1)
(7,37,1)
(29,58,1)
(38,19,1)
(73,57,2)
(30,62,2)
(40,30,2)
(19,19,2)
(24,5,2)
(36,33,2)
(7,2,2)
(9,77,2)
(30,56,2)
(73,19,2)
(12,19,2)
(8,19,2)
(29,46,2)
(4,62,2)
(38,19,2)
(60,19,2)
(50,2,2)
(9,26,2)
(79,30,2)
(74,62,2)
(30,9,2)
(36,9,2)
(22,62,2)
(19,36,2)
(1,19,2)
(68,42,2)
(2,30,2)
(42,2,2)
(11,19,2)
(41,62,2)
(72,19,2)
(28,19,2)
(20,19,2)
(7,37,2)
(59,2,2)
(2,62,2)
(6,62,2)
(53,19,2)
(36,2,2)
(2,40,2)
(5,12,2)
(31,2,2)
(23,19,2)
(56,70,2)
(32,42,2)
(36,19,2)
(19,57,2)
(12,7,2)
(10,2,2)
(77,26,2)
(57,2,2)
(40,9,2)
(35,62,2)
(37,2,2)
(68,7,2)
(61,5,2)
(67,2,2)
(37,35,2)
(3,2,2)
(48,2,2)
(69,30,2)
(46,7,2)
(12,23,2)
(5,19,2)
(11,2,2)
(36,56,2)
(40,56,2)
(50,19,2)
(34,26,2)
(63,62,2)
(46,2,2)
(58,46,2)
(51,2,2)
(44,62,2)
(75,62,2)
(47,62,2)
(65,62,2)
(19,2,2)
(5,1,2)
(12,8,2)
-----------------------------------
(0,)
(1,strlen(SENTENCE)
(2,count > 0 && count <= 20)
(3,pFile)
(4,i)
(5,strlen(SENTENCE)
(6,pFile)
(7,pFile = fopen(filename, "w+")
(8,sizeof(char)
(9,count = RAND32()
(10,0)
(11,count)
(12,fwrite(SENTENCE, sizeof(char)
(13,if (strlen(SENTENCE)
(14,count)
(15,)
(16,pFile)
(17,for (i = 0; i < (size_t)
(18,i)
(19,i < (size_t)
(20,SENTENCE)
(21,if(GLOBAL_CONST_TRUE)
(22,*pFile = NULL)
(23,strlen(SENTENCE)
(24,1)
(25,)
(26,GLOBAL_CONST_TRUE)
(27,)
(28,SENTENCE)
(29,exit(1)
(30,count > 0)
(31,i)
(32,pFile)
(33,size_t)
(34,count)
(35,*filename = "output_good.txt")
(36,(size_t)
(37,fopen(filename, "w+")
(38,SENTENCE)
(39,if (count > 0 && count <= 20)
(40,count <= 20)
(41,NULL)
(42,pFile)
(43,if (pFile)
(44,i = 0)
(45,)
(46,pFile == NULL)
(47,0)
(48,NULL)
(49,1)
(50,i)
(51,"w+")
(52,if(GLOBAL_CONST_TRUE)
(53,pFile)
(54,)
(55,)
(56,count = -1)
(57,i = 0)
(58,1)
(59,pFile)
(60,char)
(61,exit(1)
(62,GLOBAL_CONST_TRUE)
(63,"output_good.txt")
(64,)
(65,0)
(66,RET)
(67,filename)
(68,fclose(pFile)
(69,count)
(70,-1)
(71,if (pFile == NULL)
(72,i)
(73,i++)
(74,count)
(75,filename)
(76,filename)
(77,RAND32()
(78,count)
(79,20)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^