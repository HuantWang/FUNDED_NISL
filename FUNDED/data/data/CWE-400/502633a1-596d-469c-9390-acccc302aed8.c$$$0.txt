-----label-----
1
-----code-----
static int cdc_ncm_setup(struct usbnet *dev)
{
	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
	u32 def_rx, def_tx;

	/* be conservative when selecting intial buffer size to
	 * increase the number of hosts this will work for
	 */
	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,
		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));
	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,
		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));

	/* clamp rx_max and tx_max and inform device */
	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);

	/* sanitize the modulus and remainder values */
	cdc_ncm_fix_modulus(dev);

	/* set max datagram size */
	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
33,36
34,35
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
44,47
44,48
45,46
47,48
49,50
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
60,61
61,62
61,63
62,63
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
71,73
72,73
74,75
74,76
75,76
75,77
76,77
80,81
81,82
81,83
81,84
81,85
82,83
84,85
86,87
88,89
90,91
91,92
91,93
92,93
94,95
96,97
97,98
97,99
97,100
98,99
100,101
102,103
102,104
103,104
105,106
107,108
-----nextToken-----
2,4,7,9,10,15,17,18,23,25,29,30,31,35,37,39,43,46,48,50,53,57,58,59,63,66,68,70,73,77,78,79,83,85,87,89,93,95,99,101,104,106,108
-----computeFrom-----
41,42
41,43
61,62
61,63
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int cdc_ncm_setup(struct usbnet *dev){	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];	u32 def_rx, def_tx;	/* be conservative when selecting intial buffer size to	 * increase the number of hosts this will work for	 */	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));	/* clamp rx_max and tx_max and inform device */	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);	/* sanitize the modulus and remainder values */	cdc_ncm_fix_modulus(dev);	/* set max datagram size */	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));	return 0;}
static int
cdc_ncm_setup(struct usbnet *dev)
cdc_ncm_setup
struct usbnet *dev
struct usbnet
usbnet
*dev
*
dev
{	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];	u32 def_rx, def_tx;	/* be conservative when selecting intial buffer size to	 * increase the number of hosts this will work for	 */	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));	/* clamp rx_max and tx_max and inform device */	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);	/* sanitize the modulus and remainder values */	cdc_ncm_fix_modulus(dev);	/* set max datagram size */	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));	return 0;}
struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
struct cdc_ncm_ctx
cdc_ncm_ctx
*ctx = (struct cdc_ncm_ctx *)dev->data[0]
*
ctx
= (struct cdc_ncm_ctx *)dev->data[0]
(struct cdc_ncm_ctx *)dev->data[0]
struct cdc_ncm_ctx *
struct cdc_ncm_ctx
cdc_ncm_ctx
*
*
dev->data[0]
dev->data
dev
dev
data
0
u32 def_rx, def_tx;
u32 def_rx, def_tx;
u32
u32
def_rx
def_rx
def_tx
def_tx
def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));
def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize))
def_rx
def_rx
min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize))
min_t
min_t
u32
u32
CDC_NCM_NTB_DEF_SIZE_RX
CDC_NCM_NTB_DEF_SIZE_RX
le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
le32_to_cpu
le32_to_cpu
ctx->ncm_parm.dwNtbInMaxSize
ctx->ncm_parm
ctx
ctx
ncm_parm
dwNtbInMaxSize
def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));
def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize))
def_tx
def_tx
min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize))
min_t
min_t
u32
u32
CDC_NCM_NTB_DEF_SIZE_TX
CDC_NCM_NTB_DEF_SIZE_TX
le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
le32_to_cpu
le32_to_cpu
ctx->ncm_parm.dwNtbOutMaxSize
ctx->ncm_parm
ctx
ctx
ncm_parm
dwNtbOutMaxSize
cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);
cdc_ncm_update_rxtx_max(dev, def_rx, def_tx)
cdc_ncm_update_rxtx_max
cdc_ncm_update_rxtx_max
dev
dev
def_rx
def_rx
def_tx
def_tx
cdc_ncm_fix_modulus(dev);
cdc_ncm_fix_modulus(dev)
cdc_ncm_fix_modulus
cdc_ncm_fix_modulus
dev
dev
cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));
cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev))
cdc_ncm_set_dgram_size
cdc_ncm_set_dgram_size
dev
dev
cdc_ncm_max_dgram_size(dev)
cdc_ncm_max_dgram_size
cdc_ncm_max_dgram_size
dev
dev
return 0;
0
-----joern-----
(36,38,0)
(39,15,0)
(21,34,0)
(23,34,0)
(16,42,0)
(15,39,0)
(0,14,0)
(22,9,0)
(3,9,0)
(25,18,0)
(35,19,0)
(39,47,0)
(34,47,0)
(5,4,0)
(24,4,0)
(18,25,0)
(26,32,0)
(39,9,0)
(21,19,0)
(11,4,0)
(12,39,0)
(43,3,0)
(42,25,0)
(28,18,0)
(40,4,0)
(19,38,0)
(45,9,0)
(24,9,0)
(5,32,0)
(43,24,0)
(17,46,0)
(36,42,0)
(43,47,0)
(6,43,0)
(14,38,0)
(19,21,0)
(14,32,0)
(4,24,0)
(25,42,0)
(42,36,0)
(27,9,0)
(3,18,0)
(38,19,0)
(19,35,0)
(32,14,0)
(2,9,0)
(33,22,0)
(46,47,0)
(15,47,0)
(41,36,0)
(38,9,0)
(46,9,0)
(44,22,0)
(8,15,0)
(29,43,0)
(31,18,0)
(7,21,0)
(1,14,0)
(34,21,0)
(4,5,0)
(37,36,0)
(18,3,0)
(30,24,0)
(32,5,0)
(48,34,0)
(10,3,0)
(43,9,0)
(13,43,0)
(20,38,0)
(21,34,1)
(36,38,1)
(31,28,1)
(18,25,1)
(15,47,1)
(10,38,1)
(7,34,1)
(26,14,1)
(37,31,1)
(11,40,1)
(12,46,1)
(46,17,1)
(13,29,1)
(41,37,1)
(23,48,1)
(34,23,1)
(48,20,1)
(6,13,1)
(24,4,1)
(15,8,1)
(0,11,1)
(17,43,1)
(32,14,1)
(42,16,1)
(19,35,1)
(39,15,1)
(43,3,1)
(44,39,1)
(22,44,1)
(28,10,1)
(21,7,1)
(30,3,1)
(32,26,1)
(8,12,1)
(4,5,1)
(42,36,1)
(38,19,1)
(14,38,1)
(43,6,1)
(46,47,1)
(33,22,1)
(3,18,1)
(25,42,1)
(1,0,1)
(36,41,1)
(14,1,1)
(5,32,1)
(29,24,1)
(19,21,1)
(40,30,1)
(43,47,1)
(43,24,1)
(16,36,1)
(34,47,1)
(39,47,1)
(46,47,2)
(39,47,2)
(39,15,2)
(14,38,2)
(5,32,2)
(18,25,2)
(24,4,2)
(21,34,2)
(19,21,2)
(36,38,2)
(15,47,2)
(3,18,2)
(43,3,2)
(43,24,2)
(19,35,2)
(33,22,2)
(38,19,2)
(43,47,2)
(32,14,2)
(4,5,2)
(42,36,2)
(34,47,2)
(25,42,2)
-----------------------------------
(0,ctx)
(1,ncm_parm)
(2,def_rx)
(3,def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(4,min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
(5,le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
(6,def_tx)
(7,0)
(8,dev)
(9,)
(10,def_rx)
(11,CDC_NCM_NTB_DEF_SIZE_TX)
(12,dev)
(13,def_rx)
(14,ctx->ncm_parm)
(15,cdc_ncm_max_dgram_size(dev)
(16,dwNtbInMaxSize)
(17,dev)
(18,min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(19,(struct cdc_ncm_ctx *)
(20,ctx)
(21,dev->data[0])
(22,return 0;)
(23,data)
(24,def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
(25,le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(26,dwNtbOutMaxSize)
(27,ctx)
(28,u32)
(29,dev)
(30,def_tx)
(31,CDC_NCM_NTB_DEF_SIZE_RX)
(32,ctx->ncm_parm.dwNtbOutMaxSize)
(33,RET)
(34,dev->data)
(35,struct cdc_ncm_ctx *)
(36,ctx->ncm_parm)
(37,ctx)
(38,*ctx = (struct cdc_ncm_ctx *)
(39,cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev)
(40,u32)
(41,ncm_parm)
(42,ctx->ncm_parm.dwNtbInMaxSize)
(43,cdc_ncm_update_rxtx_max(dev, def_rx, def_tx)
(44,0)
(45,def_tx)
(46,cdc_ncm_fix_modulus(dev)
(47,struct usbnet *dev)
(48,dev)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^