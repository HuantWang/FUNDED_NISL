-----label-----
0
-----code-----
char **copyblk(register char **v)
{
    register char **nv = (char **) malloc((unsigned) ((blklen(v) + 1) *
						      sizeof(char **)));
    if (nv == (char **) 0)
	fatal("Out of memory");

    return (blkcpy(nv, v));
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
7,8
7,9
9,10
9,11
9,12
13,14
13,15
13,16
14,15
15,16
15,17
17,18
17,19
17,20
17,21
21,22
22,23
22,24
23,24
23,25
25,26
25,27
28,29
28,30
29,30
31,32
31,33
32,33
32,34
35,36
36,37
36,38
37,38
38,39
38,40
39,40
39,41
40,41
42,43
45,46
46,47
46,48
48,49
48,50
51,52
51,53
52,53
52,54
53,54
55,56
55,57
56,57
56,58
58,59
58,60
62,63
63,64
63,65
64,65
67,68
68,69
69,70
69,71
69,72
70,71
72,73
74,75
-----nextToken-----
2,4,5,6,8,10,11,12,16,18,19,20,24,26,27,30,33,34,41,43,44,47,49,50,54,57,59,60,61,65,66,71,73,75
-----computeFrom-----
36,37
36,38
38,39
38,40
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;IfStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;Pointer;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ReturnStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
char **copyblk(register char **v){    register char **nv = (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)));    if (nv == (char **) 0)	fatal("Out of memory");    return (blkcpy(nv, v));}
char
**copyblk(register char **v)
*
*
copyblk
register char **v
register char
**v
*
*
v
{    register char **nv = (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)));    if (nv == (char **) 0)	fatal("Out of memory");    return (blkcpy(nv, v));}
register char **nv = (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)));
register char **nv = (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)));
register char
**nv = (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)))
*
*
nv
= (char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)))
(char **) malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)))
char **
char
**
*
*
malloc((unsigned) ((blklen(v) + 1) *						      sizeof(char **)))
malloc
malloc
(unsigned) ((blklen(v) + 1) *						      sizeof(char **))
unsigned
unsigned

((blklen(v) + 1) *						      sizeof(char **))
(blklen(v) + 1) *						      sizeof(char **)
(blklen(v) + 1)
blklen(v) + 1
blklen(v)
blklen
blklen
v
v
1
sizeof(char **)
char **
char
**
*
*
if (nv == (char **) 0)	fatal("Out of memory");
nv == (char **) 0
nv
nv
(char **) 0
char **
char
**
*
*
0
fatal("Out of memory");
fatal("Out of memory")
fatal
fatal
"Out of memory"
return (blkcpy(nv, v));
(blkcpy(nv, v))
blkcpy(nv, v)
blkcpy
blkcpy
nv
nv
v
v
-----joern-----
(9,14,0)
(13,2,0)
(29,1,0)
(26,7,0)
(14,11,0)
(8,11,0)
(21,9,0)
(20,8,0)
(18,13,0)
(21,25,0)
(25,27,0)
(0,7,0)
(21,17,0)
(9,21,0)
(28,26,0)
(16,14,0)
(8,26,0)
(24,9,0)
(1,19,0)
(2,13,0)
(12,7,0)
(2,26,0)
(1,29,0)
(13,18,0)
(8,12,0)
(29,25,0)
(26,1,0)
(4,3,0)
(6,12,0)
(22,2,0)
(14,9,0)
(17,10,0)
(25,29,0)
(5,8,0)
(23,13,0)
(19,1,0)
(25,21,0)
(10,17,0)
(27,25,0)
(1,26,0)
(15,7,0)
(17,21,0)
(8,26,1)
(23,22,1)
(16,28,1)
(14,11,1)
(26,1,1)
(13,23,1)
(8,20,1)
(5,3,1)
(21,9,1)
(13,18,1)
(9,24,1)
(12,8,1)
(6,12,1)
(20,5,1)
(5,2,1)
(29,25,1)
(25,21,1)
(9,14,1)
(17,10,1)
(8,11,1)
(25,27,1)
(22,26,1)
(3,4,1)
(2,13,1)
(1,19,1)
(21,17,1)
(24,14,1)
(14,16,1)
(2,26,1)
(1,29,1)
(4,2,1)
(17,9,1)
(17,10,2)
(1,19,2)
(21,17,2)
(8,26,2)
(9,14,2)
(2,26,2)
(26,1,2)
(4,2,2)
(14,11,2)
(21,9,2)
(8,11,2)
(1,29,2)
(3,2,2)
(6,12,2)
(25,27,2)
(2,13,2)
(13,18,2)
(25,21,2)
(29,25,2)
-----------------------------------
(0,if (nv == (char **)
(1,(char **)
(2,nv == (char **)
(3,fatal("Out of memory")
(4,"Out of memory")
(5,nv)
(6,RET)
(7,)
(8,blkcpy(nv, v)
(9,blklen(v)
(10,char **)
(11,register char **v)
(12,return (blkcpy(nv, v)
(13,(char **)
(14,blklen(v)
(15,nv)
(16,v)
(17,sizeof(char **)
(18,char **)
(19,char **)
(20,v)
(21,(blklen(v)
(22,nv)
(23,0)
(24,1)
(25,(unsigned)
(26,**nv = (char **)
(27,unsigned)
(28,nv)
(29,malloc((unsigned)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^