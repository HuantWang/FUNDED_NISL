-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    data = NULL;
    goto source;
source:
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
32,33
34,35
34,36
36,37
37,38
37,39
40,41
41,42
41,43
41,44
42,43
44,45
47,48
48,49
48,50
49,50
51,52
53,54
55,56
55,57
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,38,39,43,45,46,50,52,54,56,57
-----computeFrom-----
13,14
13,15
23,24
23,25
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    wchar_t * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
source
data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
data = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
data
data
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(0,12,0)
(10,12,0)
(16,7,0)
(9,15,0)
(6,12,0)
(3,11,0)
(15,16,0)
(7,16,0)
(17,8,0)
(3,7,0)
(8,12,0)
(3,10,0)
(20,10,0)
(16,15,0)
(18,12,0)
(10,3,0)
(1,14,0)
(7,3,0)
(2,8,0)
(11,3,0)
(14,12,0)
(4,12,0)
(5,12,0)
(14,10,0)
(13,16,0)
(20,5,1)
(14,10,1)
(10,3,1)
(16,15,1)
(1,10,1)
(17,2,1)
(14,1,1)
(13,20,1)
(0,14,1)
(15,9,1)
(3,7,1)
(19,0,1)
(3,11,1)
(9,13,1)
(7,16,1)
(8,17,1)
(5,8,1)
(3,11,2)
(10,3,2)
(16,15,2)
(7,16,2)
(3,7,2)
(14,10,2)
-----------------------------------
(0,goto sink;)
(1,data)
(2,data)
(3,(wchar_t *)
(4,data)
(5,goto source;)
(6,sink:)
(7,ALLOCA(100*sizeof(wchar_t)
(8,data = NULL)
(9,wchar_t)
(10,data = (wchar_t *)
(11,wchar_t *)
(12,)
(13,100)
(14,printWLine(data)
(15,sizeof(wchar_t)
(16,100*sizeof(wchar_t)
(17,NULL)
(18,source:)
(19,RET)
(20,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^