-----label-----
0
-----code-----
static void goodB2GSink()
{
    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;
    {
        size_t i = 0;
        /* FIX: Validate count before using it as the for loop variant */
        if (count > 0 && count <= 20)
        {
            for (i = 0; i < (size_t)count; i++)
            {
                printLine("Hello");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
23,25
24,25
24,26
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
34,36
34,37
34,38
35,36
36,37
36,38
37,38
40,41
40,42
41,42
43,44
43,45
44,45
44,46
45,46
48,49
50,51
51,52
53,54
54,55
55,56
55,57
56,57
-----nextToken-----
2,4,8,10,13,18,20,22,27,28,31,32,38,39,42,46,47,49,52,57,58
-----computeFrom-----
24,25
24,26
25,26
25,27
29,30
29,31
36,37
36,38
40,41
40,42
-----guardedBy-----
31,49
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodB2GSink(){    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;    {        size_t i = 0;        /* FIX: Validate count before using it as the for loop variant */        if (count > 0 && count <= 20)        {            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
static void
goodB2GSink()
goodB2GSink
{    int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;    {        size_t i = 0;        /* FIX: Validate count before using it as the for loop variant */        if (count > 0 && count <= 20)        {            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;
int count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData;
int
count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData
count
= CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData
CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData
CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData
{        size_t i = 0;        /* FIX: Validate count before using it as the for loop variant */        if (count > 0 && count <= 20)        {            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
if (count > 0 && count <= 20)        {            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }
for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                printLine("Hello");            }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(5,6,0)
(30,28,0)
(15,12,0)
(6,5,0)
(16,5,0)
(5,16,0)
(24,32,0)
(7,14,0)
(2,11,0)
(22,26,0)
(29,32,0)
(5,12,0)
(32,29,0)
(9,27,0)
(28,29,0)
(19,6,0)
(1,28,0)
(28,12,0)
(14,26,0)
(33,27,0)
(17,31,0)
(6,27,0)
(0,27,0)
(23,5,0)
(25,33,0)
(31,14,0)
(20,31,0)
(32,12,0)
(12,26,0)
(8,32,0)
(13,12,0)
(29,28,0)
(4,18,0)
(10,4,0)
(3,14,0)
(30,1,1)
(5,23,1)
(33,27,1)
(9,0,1)
(12,15,1)
(17,20,1)
(25,4,1)
(6,5,1)
(0,29,1)
(32,12,1)
(15,13,1)
(28,12,1)
(6,27,1)
(10,6,1)
(27,9,1)
(5,12,1)
(19,33,1)
(33,25,1)
(24,8,1)
(29,32,1)
(8,31,1)
(23,19,1)
(19,27,1)
(5,16,1)
(4,10,1)
(28,30,1)
(1,32,1)
(21,29,1)
(31,17,1)
(20,12,1)
(29,28,1)
(21,6,1)
(32,24,1)
(6,29,2)
(23,6,2)
(6,27,2)
(5,16,2)
(23,29,2)
(6,5,2)
(33,6,2)
(19,6,2)
(25,6,2)
(1,32,2)
(5,29,2)
(29,32,2)
(28,12,2)
(32,12,2)
(27,29,2)
(28,32,2)
(29,28,2)
(19,29,2)
(0,29,2)
(4,6,2)
(9,29,2)
(10,6,2)
(5,6,2)
(30,32,2)
(33,27,2)
(5,12,2)
(6,6,2)
-----------------------------------
(0,i)
(1,count)
(2,for (i = 0; i < (size_t)
(3,if (count > 0 && count <= 20)
(4,printLine("Hello")
(5,(size_t)
(6,i < (size_t)
(7,i)
(8,count)
(9,0)
(10,"Hello")
(11,)
(12,count = CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData)
(13,count)
(14,)
(15,CWE400_Resource_Exhaustion__fscanf_for_loop_45_goodB2GData)
(16,size_t)
(17,0)
(18,)
(19,i)
(20,i)
(21,RET)
(22,count)
(23,count)
(24,0)
(25,i)
(26,)
(27,i = 0)
(28,count <= 20)
(29,count > 0 && count <= 20)
(30,20)
(31,i = 0)
(32,count > 0)
(33,i++)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^