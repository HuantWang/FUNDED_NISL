-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_66b_badSink(int64_t * dataArray[])
{
    /* copy data out of dataArray */
    int64_t * data = dataArray[2];
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
8,11
12,13
12,14
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
21,23
22,23
-----nextToken-----
2,4,7,9,10,11,16,18,19,23,24,25
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_66b_badSink(int64_t * dataArray[]){    /* copy data out of dataArray */    int64_t * data = dataArray[2];    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int64_t_malloc_66b_badSink(int64_t * dataArray[])
CWE401_Memory_Leak__int64_t_malloc_66b_badSink
int64_t * dataArray[]
int64_t
int64_t
* dataArray[]
*
dataArray
[]
{    /* copy data out of dataArray */    int64_t * data = dataArray[2];    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int64_t * data = dataArray[2];
int64_t * data = dataArray[2];
int64_t
int64_t
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
;
-----joern-----
(6,5,0)
(8,6,0)
(6,1,0)
(3,5,0)
(5,6,0)
(7,1,0)
(5,4,0)
(0,5,0)
(0,3,1)
(6,5,1)
(2,6,1)
(5,0,1)
(3,8,1)
(5,4,1)
(6,5,2)
(5,4,2)
-----------------------------------
(0,2)
(1,)
(2,RET)
(3,dataArray)
(4,int64_t * dataArray[])
(5,dataArray[2])
(6,* data = dataArray[2])
(7,data)
(8,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^