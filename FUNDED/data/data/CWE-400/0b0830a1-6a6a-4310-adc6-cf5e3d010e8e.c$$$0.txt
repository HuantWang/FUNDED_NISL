-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Sink(int count)
{
    if(CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)
    {
        {
            size_t i = 0;
            FILE *pFile = NULL;
            const char *filename = "output_good.txt";
            /* FIX: Validate count before using it as the for loop variant to write to a file */
            if (count > 0 && count <= 20)
            {
                pFile = fopen(filename, "w+");
                if (pFile == NULL)
                {
                    exit(1);
                }
                for (i = 0; i < (size_t)count; i++)
                {
                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
                }
                if (pFile)
                {
                    fclose(pFile);
                }
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
14,15
14,16
14,17
14,18
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
41,43
42,43
42,44
43,44
43,45
44,45
47,48
47,49
48,49
51,52
51,53
51,54
51,55
52,53
53,54
53,55
54,55
56,57
56,58
56,59
57,58
59,60
62,63
62,64
63,64
63,65
64,65
66,67
68,69
69,70
70,71
70,72
71,72
74,75
74,76
74,77
74,78
75,76
76,77
76,78
77,78
80,81
80,82
81,82
83,84
83,85
84,85
84,86
85,86
88,89
90,91
91,92
93,94
94,95
94,96
95,96
95,97
96,97
96,98
97,98
99,100
101,102
101,103
101,104
101,105
101,106
102,103
104,105
106,107
107,108
107,109
110,111
110,112
111,112
113,114
115,116
117,118
118,119
118,120
119,120
122,123
122,124
123,124
125,126
126,127
127,128
127,129
128,129
130,131
-----nextToken-----
2,4,6,8,12,18,20,22,26,28,29,32,35,37,38,40,45,46,49,50,55,58,60,61,65,67,72,73,78,79,82,86,87,89,92,98,100,103,105,108,109,112,114,116,120,121,124,129,131
-----computeFrom-----
42,43
42,44
43,44
43,45
47,48
47,49
53,54
53,55
63,64
63,65
76,77
76,78
80,81
80,82
95,96
95,97
-----guardedBy-----
49,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Sink(int count){    if(CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
void
CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Sink(int count)
CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Sink
int count
int
count
count
{    if(CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }}
if(CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)    {        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global
CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global
{        {            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }    }
{            size_t i = 0;            FILE *pFile = NULL;            const char *filename = "output_good.txt";            /* FIX: Validate count before using it as the for loop variant to write to a file */            if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)            {                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{                pFile = fopen(filename, "w+");                if (pFile == NULL)                {                    exit(1);                }                for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }                if (pFile)                {                    fclose(pFile);                }            }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)                {                    exit(1);                }
pFile == NULL
pFile
pFile
NULL
NULL
{                    exit(1);                }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)                {                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                    if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);                }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)                {                    fclose(pFile);                }
pFile
pFile
{                    fclose(pFile);                }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(7,11,0)
(18,25,0)
(7,45,0)
(25,18,0)
(34,56,0)
(48,18,0)
(67,17,0)
(49,4,0)
(62,64,0)
(63,33,0)
(49,5,0)
(10,27,0)
(31,64,0)
(16,28,0)
(11,10,0)
(36,11,0)
(69,63,0)
(2,8,0)
(63,51,0)
(8,0,0)
(21,66,0)
(33,63,0)
(55,62,0)
(28,42,0)
(66,6,0)
(13,18,0)
(25,28,0)
(5,49,0)
(30,51,0)
(63,11,0)
(35,52,0)
(0,8,0)
(28,25,0)
(60,56,0)
(64,54,0)
(4,6,0)
(38,63,0)
(43,10,0)
(18,42,0)
(20,27,0)
(51,63,0)
(0,63,0)
(27,64,0)
(44,49,0)
(49,42,0)
(15,31,0)
(10,11,0)
(65,52,0)
(3,50,0)
(63,0,0)
(29,33,0)
(53,39,0)
(41,64,0)
(12,27,0)
(17,1,0)
(46,10,0)
(11,56,0)
(68,64,0)
(61,6,0)
(52,11,0)
(40,4,0)
(59,31,0)
(9,56,0)
(19,37,0)
(32,6,0)
(57,64,0)
(4,49,0)
(22,62,0)
(47,28,0)
(58,7,0)
(24,64,0)
(43,36,1)
(11,10,1)
(63,33,1)
(52,65,1)
(13,28,1)
(2,4,1)
(36,25,1)
(10,46,1)
(49,5,1)
(28,42,1)
(15,62,1)
(23,25,1)
(55,14,1)
(19,0,1)
(65,35,1)
(51,30,1)
(23,14,1)
(18,42,1)
(12,20,1)
(48,13,1)
(16,47,1)
(8,2,1)
(6,32,1)
(69,8,1)
(4,49,1)
(46,43,1)
(61,17,1)
(0,8,1)
(0,63,1)
(22,55,1)
(66,6,1)
(28,16,1)
(33,29,1)
(4,6,1)
(30,69,1)
(66,21,1)
(35,11,1)
(52,11,1)
(63,11,1)
(37,19,1)
(23,26,1)
(20,31,1)
(31,59,1)
(49,42,1)
(58,26,1)
(61,52,1)
(49,44,1)
(67,52,1)
(25,18,1)
(27,12,1)
(26,4,1)
(10,27,1)
(7,11,1)
(59,15,1)
(18,48,1)
(21,0,1)
(40,66,1)
(21,37,1)
(63,38,1)
(62,22,1)
(25,28,1)
(44,40,1)
(7,58,1)
(47,27,1)
(38,33,1)
(32,61,1)
(63,51,1)
(17,67,1)
(29,51,1)
(23,7,1)
(40,6,1)
(36,25,2)
(17,52,2)
(63,33,2)
(21,4,2)
(10,25,2)
(46,25,2)
(67,52,2)
(19,0,2)
(25,28,2)
(52,11,2)
(8,4,2)
(26,25,2)
(18,28,2)
(10,27,2)
(31,14,2)
(4,6,2)
(12,14,2)
(61,25,2)
(47,14,2)
(32,25,2)
(40,4,2)
(0,8,2)
(59,14,2)
(58,26,2)
(25,18,2)
(18,42,2)
(52,25,2)
(44,25,2)
(22,14,2)
(38,4,2)
(7,11,2)
(63,11,2)
(49,4,2)
(29,4,2)
(49,42,2)
(13,28,2)
(4,4,2)
(0,4,2)
(2,4,2)
(4,49,2)
(33,4,2)
(44,4,2)
(40,25,2)
(48,28,2)
(37,0,2)
(27,14,2)
(11,10,2)
(6,25,2)
(30,4,2)
(49,25,2)
(49,5,2)
(65,25,2)
(35,25,2)
(51,4,2)
(62,14,2)
(7,26,2)
(28,42,2)
(0,63,2)
(16,14,2)
(63,4,2)
(15,14,2)
(69,4,2)
(4,25,2)
(66,4,2)
(11,25,2)
(55,14,2)
(63,51,2)
(20,14,2)
(43,25,2)
(25,14,2)
(66,6,2)
(28,14,2)
-----------------------------------
(0,strlen(SENTENCE)
(1,)
(2,SENTENCE)
(3,if (strlen(SENTENCE)
(4,i < (size_t)
(5,size_t)
(6,i = 0)
(7,fclose(pFile)
(8,strlen(SENTENCE)
(9,if (pFile == NULL)
(10,fopen(filename, "w+")
(11,pFile = fopen(filename, "w+")
(12,"output_good.txt")
(13,count)
(14,CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)
(15,pFile)
(16,0)
(17,exit(1)
(18,count <= 20)
(19,1)
(20,filename)
(21,i)
(22,0)
(23,RET)
(24,filename)
(25,count > 0 && count <= 20)
(26,pFile)
(27,*filename = "output_good.txt")
(28,count > 0)
(29,SENTENCE)
(30,char)
(31,*pFile = NULL)
(32,0)
(33,strlen(SENTENCE)
(34,for (i = 0; i < (size_t)
(35,pFile)
(36,pFile)
(37,exit(1)
(38,pFile)
(39,)
(40,i)
(41,pFile)
(42,int count)
(43,filename)
(44,count)
(45,)
(46,"w+")
(47,count)
(48,20)
(49,(size_t)
(50,)
(51,sizeof(char)
(52,pFile == NULL)
(53,if(CWE400_Resource_Exhaustion__rand_fwrite_22_goodB2G2Global)
(54,)
(55,i)
(56,)
(57,i)
(58,pFile)
(59,NULL)
(60,if (pFile)
(61,i)
(62,i = 0)
(63,fwrite(SENTENCE, sizeof(char)
(64,)
(65,NULL)
(66,i++)
(67,1)
(68,if (count > 0 && count <= 20)
(69,SENTENCE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^