-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_31_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    {
        int64_t * dataCopy = data;
        int64_t * data = dataCopy;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
66,68
66,69
67,68
68,69
68,70
69,70
71,72
71,73
71,74
74,75
75,76
77,78
78,79
78,80
79,80
81,82
81,83
81,84
84,85
85,86
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,70,72,73,76,80,82,83,86,87
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_31_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_calloc_31_bad()
CWE401_Memory_Leak__int64_t_calloc_31_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    {        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
{        int64_t * dataCopy = data;        int64_t * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * dataCopy = data;
int64_t * dataCopy = data;
int64_t
int64_t
* dataCopy = data
*
dataCopy
= data
data
data
int64_t * data = dataCopy;
int64_t * data = dataCopy;
int64_t
int64_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
;
-----joern-----
(9,25,0)
(25,9,0)
(13,11,0)
(28,30,0)
(14,6,0)
(27,24,0)
(29,4,0)
(16,28,0)
(24,30,0)
(12,10,0)
(0,6,0)
(10,6,0)
(36,6,0)
(17,16,0)
(23,30,0)
(32,27,0)
(11,28,0)
(11,34,0)
(31,14,0)
(10,14,0)
(24,27,0)
(21,4,0)
(3,16,0)
(28,11,0)
(14,28,0)
(33,30,0)
(1,25,0)
(13,20,0)
(4,30,0)
(34,11,0)
(35,14,0)
(27,28,0)
(15,27,0)
(9,18,0)
(22,20,0)
(8,13,0)
(5,28,0)
(6,30,0)
(2,30,0)
(20,13,0)
(11,13,0)
(19,10,0)
(5,4,1)
(26,10,1)
(14,31,1)
(16,28,1)
(9,25,1)
(1,16,1)
(15,33,1)
(28,11,1)
(4,21,1)
(10,14,1)
(20,22,1)
(16,3,1)
(8,5,1)
(25,1,1)
(22,8,1)
(21,29,1)
(11,13,1)
(10,12,1)
(13,20,1)
(14,28,1)
(3,17,1)
(27,28,1)
(19,14,1)
(31,35,1)
(11,34,1)
(27,32,1)
(17,28,1)
(33,16,1)
(12,19,1)
(35,24,1)
(32,15,1)
(24,27,1)
(33,9,1)
(10,14,2)
(11,13,2)
(9,16,2)
(24,27,2)
(11,34,2)
(25,16,2)
(13,20,2)
(28,11,2)
(1,16,2)
(14,28,2)
(9,25,2)
(27,28,2)
(16,28,2)
-----------------------------------
(0,data)
(1,1)
(2,data)
(3,NULL)
(4,data = NULL)
(5,data)
(6,)
(7, sizeof(int64_t)
(8,100)
(9,exit(-1)
(10,* data = dataCopy)
(11,(int64_t *)
(12,dataCopy)
(13,calloc(100, sizeof(int64_t)
(14,* dataCopy = data)
(15,data)
(16,data == NULL)
(17,data)
(18,)
(19,data)
(20,sizeof(int64_t)
(21,NULL)
(22,int64_t)
(23,if (data == NULL)
(24,printLongLongLine(data[0])
(25,-1)
(26,RET)
(27,data[0])
(28,data = (int64_t *)
(29,data)
(30,)
(31,data)
(32,0)
(33,L)
(34,int64_t *)
(35,dataCopy)
(36,dataCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^