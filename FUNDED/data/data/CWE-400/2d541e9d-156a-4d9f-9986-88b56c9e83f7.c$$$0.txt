-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
39,40
41,42
41,43
41,44
42,43
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
59,62
59,63
60,61
61,62
61,63
62,63
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
86,90
86,91
87,88
89,90
91,92
92,93
92,94
95,96
95,97
96,97
98,99
100,101
102,103
103,104
104,105
104,106
105,106
108,109
108,110
109,110
111,112
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,40,43,45,46,50,52,57,58,63,64,67,71,72,74,77,83,85,88,90,93,94,97,99,101,106,107,110,115,117
-----computeFrom-----
38,39
38,40
48,49
48,50
61,62
61,63
65,66
65,67
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink(int count)
CWE400_Resource_Exhaustion__fscanf_fwrite_51b_goodG2BSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(38,58,0)
(18,52,0)
(21,29,0)
(29,21,0)
(51,27,0)
(23,52,0)
(0,27,0)
(43,24,0)
(21,44,0)
(8,28,0)
(3,6,0)
(52,6,0)
(31,44,0)
(42,41,0)
(55,25,0)
(9,57,0)
(40,28,0)
(51,15,0)
(7,30,0)
(27,2,0)
(13,29,0)
(6,47,0)
(24,14,0)
(25,55,0)
(5,21,0)
(56,15,0)
(11,36,0)
(55,21,0)
(22,6,0)
(21,55,0)
(16,6,0)
(41,44,0)
(37,25,0)
(4,51,0)
(27,51,0)
(1,30,0)
(17,21,0)
(54,6,0)
(32,15,0)
(44,6,0)
(50,31,0)
(30,6,0)
(2,27,0)
(44,31,0)
(39,11,0)
(34,44,0)
(31,30,0)
(49,6,0)
(19,45,0)
(21,5,0)
(45,15,0)
(53,6,0)
(35,5,0)
(28,44,0)
(41,20,0)
(12,21,0)
(58,6,0)
(27,26,0)
(46,58,0)
(33,31,0)
(45,19,1)
(31,50,1)
(10,41,1)
(24,43,1)
(27,2,1)
(19,24,1)
(58,38,1)
(33,34,1)
(27,0,1)
(21,17,1)
(25,37,1)
(21,29,1)
(31,30,1)
(34,30,1)
(38,46,1)
(15,56,1)
(50,33,1)
(30,7,1)
(29,13,1)
(4,45,1)
(1,52,1)
(13,12,1)
(35,29,1)
(21,5,1)
(27,26,1)
(8,40,1)
(39,28,1)
(32,11,1)
(19,55,1)
(28,44,1)
(48,51,1)
(18,23,1)
(10,48,1)
(51,15,1)
(4,15,1)
(42,48,1)
(45,15,1)
(41,44,1)
(5,35,1)
(0,4,1)
(40,44,1)
(43,55,1)
(52,18,1)
(51,27,1)
(17,5,1)
(44,31,1)
(32,28,1)
(7,1,1)
(55,21,1)
(12,25,1)
(56,32,1)
(21,44,1)
(37,51,1)
(41,42,1)
(55,25,1)
(28,8,1)
(11,39,1)
(23,58,1)
(27,2,2)
(39,28,2)
(27,51,2)
(13,51,2)
(28,44,2)
(41,44,2)
(21,51,2)
(21,44,2)
(11,28,2)
(41,48,2)
(21,5,2)
(55,21,2)
(5,51,2)
(12,51,2)
(51,27,2)
(55,51,2)
(17,51,2)
(45,51,2)
(51,15,2)
(4,51,2)
(55,25,2)
(24,55,2)
(21,29,2)
(45,15,2)
(51,51,2)
(27,26,2)
(43,55,2)
(19,51,2)
(35,51,2)
(37,51,2)
(29,51,2)
(0,51,2)
(25,51,2)
(44,31,2)
(31,30,2)
(42,48,2)
-----------------------------------
(0,count)
(1,filename)
(2,size_t)
(3,i)
(4,i)
(5,strlen(SENTENCE)
(6,)
(7,"output_bad.txt")
(8,NULL)
(9,if (strlen(SENTENCE)
(10,RET)
(11,exit(1)
(12,SENTENCE)
(13,char)
(14,)
(15,i = 0)
(16,if (pFile == NULL)
(17,pFile)
(18,NULL)
(19,i)
(20,)
(21,fwrite(SENTENCE, sizeof(char)
(22,filename)
(23,pFile)
(24,exit(1)
(25,strlen(SENTENCE)
(26,int count)
(27,(size_t)
(28,pFile == NULL)
(29,sizeof(char)
(30,*filename = "output_bad.txt")
(31,fopen(filename, "w+")
(32,i)
(33,filename)
(34,pFile)
(35,SENTENCE)
(36,)
(37,SENTENCE)
(38,0)
(39,1)
(40,pFile)
(41,fclose(pFile)
(42,pFile)
(43,1)
(44,pFile = fopen(filename, "w+")
(45,i++)
(46,i)
(47,)
(48,pFile)
(49,pFile)
(50,"w+")
(51,i < (size_t)
(52,*pFile = NULL)
(53,for (i = 0; i < (size_t)
(54,if (pFile)
(55,strlen(SENTENCE)
(56,0)
(57,)
(58,i = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^