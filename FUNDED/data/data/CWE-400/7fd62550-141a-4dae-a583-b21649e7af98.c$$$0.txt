-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_11_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
    }
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
18,19
19,20
21,22
22,23
23,24
23,25
23,26
23,27
24,25
26,27
29,30
30,31
32,33
32,34
33,34
34,35
36,37
36,38
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
45,46
-----nextToken-----
2,4,8,10,14,16,20,25,27,28,31,35,40,42,46,47
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_11_bad(){    int count;    /* Initialize count */    count = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__fscanf_sleep_11_bad()
CWE400_Resource_Exhaustion__fscanf_sleep_11_bad
{    int count;    /* Initialize count */    count = -1;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(11,5,0)
(15,10,0)
(15,11,0)
(1,11,0)
(8,15,0)
(13,10,0)
(20,19,0)
(0,21,0)
(17,5,0)
(2,1,0)
(21,19,0)
(9,21,0)
(3,13,0)
(19,11,0)
(6,5,0)
(4,5,0)
(21,7,0)
(11,1,0)
(19,21,0)
(18,11,0)
(14,11,1)
(21,19,1)
(2,18,1)
(15,8,1)
(15,11,1)
(16,13,1)
(9,0,1)
(19,20,1)
(1,2,1)
(19,11,1)
(16,12,1)
(3,15,1)
(8,12,1)
(0,14,1)
(13,3,1)
(20,9,1)
(11,1,1)
(12,21,1)
(12,14,1)
(11,1,2)
(15,12,2)
(19,11,2)
(0,14,2)
(9,14,2)
(15,11,2)
(21,19,2)
(19,14,2)
(8,12,2)
(21,14,2)
(3,12,2)
(13,12,2)
(20,14,2)
-----------------------------------
(0,stdin)
(1,-1)
(2,1)
(3,"Sleep time possibly too long")
(4,if(globalReturnsTrue()
(5,)
(6,count)
(7,)
(8,count)
(9,"%d")
(10,)
(11,count = -1)
(12,globalReturnsTrue()
(13,printLine("Sleep time possibly too long")
(14,globalReturnsTrue()
(15,SLEEP(count)
(16,RET)
(17,if(globalReturnsTrue()
(18,count)
(19,&count)
(20,count)
(21,fscanf(stdin, "%d", &count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^