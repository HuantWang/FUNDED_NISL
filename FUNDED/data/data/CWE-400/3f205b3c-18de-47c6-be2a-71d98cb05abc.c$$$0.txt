-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct)
{
    int count = myStruct.structFirst;
    /* FIX: Validate count before using it as a parameter in the sleep function */
    if (count > 0 && count <= 2000)
    {
        SLEEP(count);
        printLine("Sleep time OK");
    }
    else
    {
        printLine("Sleep time too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
10,11
10,12
11,12
12,13
12,14
14,15
14,16
16,17
17,18
17,19
18,19
21,22
21,23
21,24
22,23
22,24
23,24
23,25
24,25
27,28
27,29
28,29
31,32
31,33
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
40,41
43,44
44,45
45,46
45,47
46,47
-----nextToken-----
2,4,7,9,13,15,19,20,25,26,29,30,35,37,41,42,47,48
-----computeFrom-----
22,23
22,24
23,24
23,25
27,28
27,29
-----guardedBy-----
29,37
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct){    int count = myStruct.structFirst;    /* FIX: Validate count before using it as a parameter in the sleep function */    if (count > 0 && count <= 2000)    {        SLEEP(count);        printLine("Sleep time OK");    }    else    {        printLine("Sleep time too long");    }}
void
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink(CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct)
CWE400_Resource_Exhaustion__fgets_sleep_67b_goodB2GSink
CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct
CWE400_Resource_Exhaustion__fgets_sleep_67_structType
CWE400_Resource_Exhaustion__fgets_sleep_67_structType
myStruct
myStruct
{    int count = myStruct.structFirst;    /* FIX: Validate count before using it as a parameter in the sleep function */    if (count > 0 && count <= 2000)    {        SLEEP(count);        printLine("Sleep time OK");    }    else    {        printLine("Sleep time too long");    }}
int count = myStruct.structFirst;
int count = myStruct.structFirst;
int
count = myStruct.structFirst
count
= myStruct.structFirst
myStruct.structFirst
myStruct
myStruct
structFirst
if (count > 0 && count <= 2000)    {        SLEEP(count);        printLine("Sleep time OK");    }    else    {        printLine("Sleep time too long");    }
count > 0 && count <= 2000
count > 0
count
count
0
count <= 2000
count
count
2000
{        SLEEP(count);        printLine("Sleep time OK");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time OK");
printLine("Sleep time OK")
printLine
printLine
"Sleep time OK"
{        printLine("Sleep time too long");    }
printLine("Sleep time too long");
printLine("Sleep time too long")
printLine
printLine
"Sleep time too long"
-----joern-----
(18,17,0)
(1,19,0)
(12,17,0)
(17,8,0)
(2,16,0)
(4,23,0)
(7,6,0)
(14,1,0)
(8,1,0)
(5,17,0)
(13,3,0)
(21,8,0)
(17,18,0)
(8,16,0)
(18,22,0)
(1,8,0)
(11,1,0)
(15,16,0)
(23,8,0)
(24,22,0)
(23,6,0)
(20,7,0)
(22,18,0)
(9,22,0)
(22,8,0)
(3,10,0)
(9,24,1)
(8,1,1)
(23,8,1)
(18,17,1)
(18,22,1)
(17,8,1)
(23,4,1)
(1,14,1)
(7,20,1)
(20,23,1)
(13,18,1)
(0,3,1)
(24,17,1)
(12,8,1)
(1,19,1)
(22,9,1)
(5,12,1)
(4,18,1)
(14,11,1)
(22,8,1)
(0,7,1)
(3,13,1)
(11,21,1)
(17,5,1)
(17,8,2)
(9,17,2)
(24,17,2)
(20,18,2)
(8,1,2)
(23,8,2)
(23,18,2)
(22,17,2)
(1,19,2)
(7,18,2)
(18,17,2)
(3,18,2)
(22,8,2)
(13,18,2)
(18,22,2)
(4,18,2)
-----------------------------------
(0,RET)
(1,myStruct.structFirst)
(2,count)
(3,printLine("Sleep time too long")
(4,count)
(5,0)
(6,)
(7,printLine("Sleep time OK")
(8,count = myStruct.structFirst)
(9,2000)
(10,)
(11,myStruct)
(12,count)
(13,"Sleep time too long")
(14,structFirst)
(15,if (count > 0 && count <= 2000)
(16,)
(17,count > 0)
(18,count > 0 && count <= 2000)
(19,CWE400_Resource_Exhaustion__fgets_sleep_67_structType myStruct)
(20,"Sleep time OK")
(21,count)
(22,count <= 2000)
(23,SLEEP(count)
(24,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^