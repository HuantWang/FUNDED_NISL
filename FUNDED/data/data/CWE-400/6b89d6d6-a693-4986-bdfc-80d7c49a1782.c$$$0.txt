-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_realloc_18_bad()
{
    int * data;
    data = NULL;
    goto source;
source:
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)realloc(data, 100*sizeof(int));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
20,21
20,22
22,23
23,24
23,25
24,25
26,27
26,28
27,28
27,29
29,30
31,32
31,33
31,34
32,33
34,35
36,37
36,38
38,39
39,40
39,41
42,43
42,44
43,44
43,45
44,45
46,47
48,49
49,50
50,51
50,52
51,52
53,54
55,56
56,57
56,58
57,58
57,59
58,59
62,63
63,64
63,65
64,65
66,67
66,68
67,68
70,71
72,73
72,74
-----nextToken-----
2,4,8,10,11,15,17,19,21,25,28,30,33,35,37,40,41,45,47,52,54,59,60,61,65,68,69,71,73,74
-----computeFrom-----
13,14
13,15
23,24
23,25
36,37
36,38
43,44
43,45
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_realloc_18_bad(){    int * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int_realloc_18_bad()
CWE401_Memory_Leak__int_realloc_18_bad
{    int * data;    data = NULL;    goto source;source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)realloc(data, 100*sizeof(int));
source
data = (int *)realloc(data, 100*sizeof(int));
data = (int *)realloc(data, 100*sizeof(int))
data
data
(int *)realloc(data, 100*sizeof(int))
int *
int
*
*
realloc(data, 100*sizeof(int))
realloc
realloc
data
data
100*sizeof(int)
100
sizeof(int)
int
int

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(30,29,0)
(8,22,0)
(18,6,0)
(29,11,0)
(27,14,0)
(12,32,0)
(3,21,0)
(6,0,0)
(29,20,0)
(7,21,0)
(2,11,0)
(13,32,0)
(4,21,0)
(32,13,0)
(33,32,0)
(34,23,0)
(35,21,0)
(31,6,0)
(14,27,0)
(5,21,0)
(19,20,0)
(6,22,0)
(20,29,0)
(24,20,0)
(25,17,0)
(20,19,0)
(32,0,0)
(23,34,0)
(15,17,0)
(26,14,0)
(9,11,0)
(29,34,0)
(32,22,0)
(36,0,0)
(17,0,0)
(1,21,0)
(13,21,0)
(22,21,0)
(11,21,0)
(34,0,0)
(34,29,0)
(10,19,0)
(0,21,0)
(0,34,0)
(27,28,0)
(32,12,1)
(26,17,1)
(15,0,1)
(36,5,1)
(25,15,1)
(33,22,1)
(18,17,1)
(22,8,1)
(32,0,1)
(6,0,1)
(14,26,1)
(30,36,1)
(31,18,1)
(24,30,1)
(5,11,1)
(16,1,1)
(34,23,1)
(18,27,1)
(10,24,1)
(11,9,1)
(29,20,1)
(12,33,1)
(17,25,1)
(32,22,1)
(9,2,1)
(8,6,1)
(19,10,1)
(6,31,1)
(13,32,1)
(0,34,1)
(34,29,1)
(27,14,1)
(17,0,1)
(1,13,1)
(29,11,1)
(20,19,1)
(26,17,2)
(6,0,2)
(27,14,2)
(34,29,2)
(0,34,2)
(32,22,2)
(20,19,2)
(32,0,2)
(29,20,2)
(17,0,2)
(27,17,2)
(29,11,2)
(34,23,2)
(13,32,2)
(14,17,2)
-----------------------------------
(0,data = (int *)
(1,goto sink;)
(2,data)
(3,data)
(4,if (data == NULL)
(5,goto source;)
(6,data[0])
(7,source:)
(8,5)
(9,NULL)
(10,int)
(11,data = NULL)
(12,0)
(13,printIntLine(data[0])
(14,-1)
(15,data)
(16,RET)
(17,data == NULL)
(18,data)
(19,sizeof(int)
(20,100*sizeof(int)
(21,)
(22,data[0] = 5)
(23,int *)
(24,100)
(25,NULL)
(26,1)
(27,exit(-1)
(28,)
(29,realloc(data, 100*sizeof(int)
(30,data)
(31,0)
(32,data[0])
(33,data)
(34,(int *)
(35,sink:)
(36,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^