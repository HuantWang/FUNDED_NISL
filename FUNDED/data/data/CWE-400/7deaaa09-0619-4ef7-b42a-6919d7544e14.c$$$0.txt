-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_02_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    if(1)
    {
        /* POTENTIAL FLAW: Read count from the console using fscanf() */
        fscanf(stdin, "%d", &count);
    }
    if(1)
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
17,19
19,20
20,21
21,22
21,23
21,24
21,25
22,23
24,25
27,28
28,29
30,31
30,32
32,33
32,34
33,34
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
-----nextToken-----
2,4,8,10,14,16,18,23,25,26,29,31,36,38,42,43
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_02_bad(){    int count;    /* Initialize count */    count = -1;    if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__fscanf_sleep_02_bad()
CWE400_Resource_Exhaustion__fscanf_sleep_02_bad
{    int count;    /* Initialize count */    count = -1;    if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }    if(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
if(1)    {        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
1
{        /* POTENTIAL FLAW: Read count from the console using fscanf() */        fscanf(stdin, "%d", &count);    }
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
if(1)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
1
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(0,18,0)
(5,13,0)
(14,13,0)
(8,10,0)
(20,21,0)
(2,15,0)
(15,17,0)
(7,2,0)
(16,8,0)
(2,13,0)
(15,2,0)
(13,21,0)
(18,13,0)
(6,15,0)
(11,15,0)
(13,5,0)
(4,21,0)
(3,5,0)
(18,10,0)
(1,21,0)
(2,7,1)
(19,13,1)
(3,14,1)
(18,13,1)
(5,3,1)
(16,18,1)
(15,2,1)
(18,0,1)
(9,12,1)
(13,5,1)
(8,16,1)
(0,12,1)
(6,11,1)
(12,15,1)
(9,8,1)
(11,19,1)
(12,19,1)
(7,6,1)
(2,13,1)
(13,5,2)
(7,19,2)
(11,19,2)
(15,19,2)
(2,19,2)
(2,13,2)
(18,12,2)
(18,13,2)
(0,12,2)
(16,12,2)
(15,2,2)
(8,12,2)
(6,19,2)
-----------------------------------
(0,count)
(1,if(1)
(2,&count)
(3,1)
(4,if(1)
(5,-1)
(6,"%d")
(7,count)
(8,printLine("Sleep time possibly too long")
(9,RET)
(10,)
(11,stdin)
(12,1)
(13,count = -1)
(14,count)
(15,fscanf(stdin, "%d", &count)
(16,"Sleep time possibly too long")
(17,)
(18,SLEEP(count)
(19,1)
(20,count)
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^