-----label-----
1
-----code-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data)
{

    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}

    /* Initialize and make use of data */

    data[0].intOne = 0;
    data[0].intTwo = 0;

    printStructLine((twoIntsStruct *)&data[0]);

    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
28,29
29,30
29,31
30,31
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
48,50
49,50
49,51
50,51
55,56
56,57
56,58
57,58
57,59
58,59
58,60
59,60
64,65
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
79,80
80,81
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,27,31,32,36,38,43,45,51,52,53,54,60,61,62,63,67,71,73,77,78,81
-----computeFrom-----
15,16
15,17
34,35
34,36
47,48
47,49
56,57
56,58
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static struct _twoIntsStruct * badSource(struct _twoIntsStruct * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
static struct _twoIntsStruct
_twoIntsStruct
* badSource(struct _twoIntsStruct * data)
*
badSource
struct _twoIntsStruct * data
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    return data;}
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
return data;
data
data
-----joern-----
(37,3,0)
(0,33,0)
(6,13,0)
(11,24,0)
(17,18,0)
(17,38,0)
(19,40,0)
(38,17,0)
(23,28,0)
(17,29,0)
(2,16,0)
(24,17,0)
(20,0,0)
(0,20,0)
(10,36,0)
(36,5,0)
(12,24,0)
(24,1,0)
(25,17,0)
(40,19,0)
(38,9,0)
(16,29,0)
(20,16,0)
(41,1,0)
(28,37,0)
(22,5,0)
(9,19,0)
(0,26,0)
(37,28,0)
(36,21,0)
(27,21,0)
(13,17,0)
(15,4,0)
(5,18,0)
(16,20,0)
(14,18,0)
(42,16,0)
(21,29,0)
(19,9,0)
(38,39,0)
(7,13,0)
(8,29,0)
(13,29,0)
(31,8,0)
(33,0,0)
(24,29,0)
(16,17,0)
(9,38,0)
(30,21,0)
(8,18,0)
(8,17,0)
(39,38,0)
(1,4,0)
(34,9,0)
(4,18,0)
(32,8,0)
(26,18,0)
(21,36,0)
(26,0,0)
(21,17,0)
(1,24,0)
(21,29,1)
(1,41,1)
(30,13,1)
(19,40,1)
(41,24,1)
(38,9,1)
(21,17,1)
(30,37,1)
(4,15,1)
(27,30,1)
(11,5,1)
(10,21,1)
(20,16,1)
(23,13,1)
(24,12,1)
(42,4,1)
(8,17,1)
(17,29,1)
(2,42,1)
(37,28,1)
(34,25,1)
(17,38,1)
(21,27,1)
(16,2,1)
(8,31,1)
(38,39,1)
(31,26,1)
(16,29,1)
(32,8,1)
(13,6,1)
(6,7,1)
(16,17,1)
(0,33,1)
(15,1,1)
(22,36,1)
(24,17,1)
(13,29,1)
(9,19,1)
(36,10,1)
(1,24,1)
(8,29,1)
(19,34,1)
(7,17,1)
(5,22,1)
(13,17,1)
(36,21,1)
(26,0,1)
(24,29,1)
(28,23,1)
(0,20,1)
(12,11,1)
(19,40,2)
(37,28,2)
(21,17,2)
(26,0,2)
(13,17,2)
(16,17,2)
(17,29,2)
(28,13,2)
(17,38,2)
(8,29,2)
(36,21,2)
(16,29,2)
(24,17,2)
(37,13,2)
(32,8,2)
(38,39,2)
(8,17,2)
(13,29,2)
(9,19,2)
(0,33,2)
(23,13,2)
(38,9,2)
(1,24,2)
(21,29,2)
(20,16,2)
(24,29,2)
(0,20,2)
-----------------------------------
(0,(twoIntsStruct *)
(1,data[0].intTwo)
(2,0)
(3,)
(4,data[0].intTwo = 0)
(5,data[0].intOne = 0)
(6,NULL)
(7,data)
(8,return data;)
(9,calloc(100, sizeof(struct _twoIntsStruct)
(10,intOne)
(11,data)
(12,0)
(13,data == NULL)
(14,if (data == NULL)
(15,0)
(16,data[0])
(17,data = (struct _twoIntsStruct *)
(18,)
(19,sizeof(struct _twoIntsStruct)
(20,&data[0])
(21,data[0])
(22,0)
(23,1)
(24,data[0])
(25,data)
(26,printStructLine((twoIntsStruct *)
(27,0)
(28,-1)
(29,struct _twoIntsStruct * data)
(30,data)
(31,data)
(32,RET)
(33,twoIntsStruct *)
(34,100)
(35, sizeof(struct _twoIntsStruct)
(36,data[0].intOne)
(37,exit(-1)
(38,(struct _twoIntsStruct *)
(39,struct _twoIntsStruct *)
(40,struct _twoIntsStruct)
(41,intTwo)
(42,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^