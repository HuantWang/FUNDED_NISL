-----label-----
1
-----code-----
static void badSink()
{
    int count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
static void
badSink()
badSink
{    int count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;
int count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData;
int
count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData
count
= CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData
CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData
CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(50,32,0)
(32,35,0)
(55,58,0)
(45,39,0)
(41,35,0)
(18,38,0)
(43,35,0)
(0,30,0)
(17,35,0)
(15,34,0)
(54,35,0)
(11,42,0)
(52,31,0)
(30,42,0)
(22,4,0)
(51,42,0)
(20,1,0)
(30,45,0)
(47,13,0)
(21,35,0)
(34,42,0)
(5,43,0)
(4,1,0)
(38,30,0)
(37,43,0)
(16,58,0)
(44,2,0)
(30,38,0)
(4,22,0)
(59,48,0)
(4,52,0)
(1,58,0)
(6,53,0)
(2,57,0)
(1,4,0)
(45,30,0)
(27,51,0)
(7,52,0)
(14,51,0)
(49,53,0)
(56,32,0)
(33,52,0)
(29,4,0)
(30,28,0)
(39,45,0)
(61,31,0)
(8,58,0)
(53,43,0)
(10,28,0)
(48,12,0)
(26,39,0)
(19,40,0)
(25,13,0)
(53,42,0)
(13,35,0)
(36,35,0)
(3,30,0)
(34,60,0)
(42,35,0)
(35,31,0)
(23,55,0)
(24,35,0)
(28,30,0)
(42,53,0)
(46,9,1)
(53,43,1)
(34,15,1)
(30,42,1)
(4,52,1)
(55,23,1)
(43,5,1)
(2,44,1)
(15,9,1)
(20,55,1)
(32,50,1)
(18,28,1)
(16,8,1)
(3,39,1)
(1,58,1)
(14,42,1)
(51,27,1)
(8,2,1)
(30,38,1)
(47,25,1)
(44,51,1)
(29,20,1)
(23,45,1)
(11,43,1)
(49,11,1)
(34,42,1)
(23,48,1)
(25,32,1)
(0,38,1)
(30,0,1)
(52,33,1)
(48,59,1)
(27,14,1)
(13,47,1)
(53,6,1)
(30,28,1)
(50,56,1)
(6,49,1)
(4,22,1)
(1,4,1)
(51,42,1)
(37,13,1)
(38,18,1)
(55,58,1)
(33,7,1)
(20,58,1)
(59,45,1)
(46,34,1)
(56,52,1)
(26,1,1)
(9,1,1)
(45,39,1)
(39,26,1)
(5,37,1)
(42,53,1)
(8,51,1)
(10,3,1)
(45,30,1)
(4,29,1)
(28,10,1)
(58,16,1)
(34,42,2)
(48,45,2)
(26,1,2)
(51,42,2)
(15,9,2)
(44,51,2)
(0,1,2)
(30,38,2)
(1,4,2)
(2,51,2)
(1,58,2)
(45,30,2)
(4,1,2)
(45,39,2)
(59,45,2)
(10,1,2)
(23,1,2)
(42,53,2)
(18,1,2)
(3,1,2)
(29,1,2)
(28,1,2)
(39,1,2)
(30,28,2)
(55,58,2)
(53,43,2)
(1,1,2)
(4,52,2)
(30,1,2)
(20,1,2)
(55,1,2)
(45,1,2)
(4,22,2)
(34,9,2)
(38,1,2)
(30,42,2)
-----------------------------------
(0,pFile)
(1,i < (size_t)
(2,exit(1)
(3,SENTENCE)
(4,(size_t)
(5,"output_bad.txt")
(6,"w+")
(7,count)
(8,i)
(9,pFile)
(10,char)
(11,pFile)
(12,)
(13,*pFile = NULL)
(14,pFile)
(15,pFile)
(16,0)
(17,pFile)
(18,SENTENCE)
(19,if (strlen(SENTENCE)
(20,i)
(21,i)
(22,size_t)
(23,i)
(24,if (pFile == NULL)
(25,pFile)
(26,SENTENCE)
(27,NULL)
(28,sizeof(char)
(29,count)
(30,fwrite(SENTENCE, sizeof(char)
(31,)
(32,i = 0)
(33,CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData)
(34,fclose(pFile)
(35,)
(36,for (i = 0; i < (size_t)
(37,filename)
(38,strlen(SENTENCE)
(39,strlen(SENTENCE)
(40,)
(41,if (pFile)
(42,pFile = fopen(filename, "w+")
(43,*filename = "output_bad.txt")
(44,1)
(45,strlen(SENTENCE)
(46,RET)
(47,NULL)
(48,exit(1)
(49,filename)
(50,0)
(51,pFile == NULL)
(52,count = CWE400_Resource_Exhaustion__fscanf_fwrite_45_badData)
(53,fopen(filename, "w+")
(54,filename)
(55,i++)
(56,i)
(57,)
(58,i = 0)
(59,1)
(60,)
(61,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^