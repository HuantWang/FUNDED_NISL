-----label-----
1
-----code-----
int rmsummary_assign_field(struct rmsummary *s, char *key, char *value)
{
	rmsummary_assign_as_string_field(s, key, value, category);
	rmsummary_assign_as_string_field(s, key, value, command);
	rmsummary_assign_as_int_field   (s, key, value, task_id);
	rmsummary_assign_as_time_field  (s, key, value, start);
	rmsummary_assign_as_time_field  (s, key, value, end);
	rmsummary_assign_as_string_field(s, key, value, exit_type);
	rmsummary_assign_as_int_field   (s, key, value, last_error);
	rmsummary_assign_as_int_field   (s, key, value, signal);
	rmsummary_assign_as_string_field(s, key, value, limits_exceeded);
	rmsummary_assign_as_int_field   (s, key, value, exit_status);
	rmsummary_assign_as_int_field   (s, key, value, last_error);
	rmsummary_assign_as_time_field  (s, key, value, wall_time);
	rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes);
	rmsummary_assign_as_int_field   (s, key, value, total_processes);
	rmsummary_assign_as_time_field  (s, key, value, cpu_time);
	rmsummary_assign_as_int_field   (s, key, value, virtual_memory);
	rmsummary_assign_as_int_field   (s, key, value, resident_memory);
	rmsummary_assign_as_int_field   (s, key, value, swap_memory);
	rmsummary_assign_as_int_field   (s, key, value, bytes_read);
	rmsummary_assign_as_int_field   (s, key, value, bytes_written);
	rmsummary_assign_as_int_field   (s, key, value, workdir_num_files);
	rmsummary_assign_as_int_field   (s, key, value, workdir_footprint);
	rmsummary_assign_as_int_field   (s, key, value, cores);
	rmsummary_assign_as_int_field   (s, key, value, gpus);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
18,19
18,20
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
21,30
21,31
21,32
21,33
21,34
21,35
21,36
21,37
21,38
21,39
21,40
21,41
21,42
21,43
21,44
21,45
21,46
22,23
23,24
23,25
23,26
23,27
23,28
24,25
26,27
28,29
30,31
32,33
34,35
35,36
35,37
35,38
35,39
35,40
36,37
38,39
40,41
42,43
44,45
46,47
47,48
47,49
47,50
47,51
47,52
48,49
50,51
52,53
54,55
56,57
58,59
59,60
59,61
59,62
59,63
59,64
60,61
62,63
64,65
66,67
68,69
70,71
71,72
71,73
71,74
71,75
71,76
72,73
74,75
76,77
78,79
80,81
82,83
83,84
83,85
83,86
83,87
83,88
84,85
86,87
88,89
90,91
92,93
94,95
95,96
95,97
95,98
95,99
95,100
96,97
98,99
100,101
102,103
104,105
106,107
107,108
107,109
107,110
107,111
107,112
108,109
110,111
112,113
114,115
116,117
118,119
119,120
119,121
119,122
119,123
119,124
120,121
122,123
124,125
126,127
128,129
130,131
131,132
131,133
131,134
131,135
131,136
132,133
134,135
136,137
138,139
140,141
142,143
143,144
143,145
143,146
143,147
143,148
144,145
146,147
148,149
150,151
152,153
154,155
155,156
155,157
155,158
155,159
155,160
156,157
158,159
160,161
162,163
164,165
166,167
167,168
167,169
167,170
167,171
167,172
168,169
170,171
172,173
174,175
176,177
178,179
179,180
179,181
179,182
179,183
179,184
180,181
182,183
184,185
186,187
188,189
190,191
191,192
191,193
191,194
191,195
191,196
192,193
194,195
196,197
198,199
200,201
202,203
203,204
203,205
203,206
203,207
203,208
204,205
206,207
208,209
210,211
212,213
214,215
215,216
215,217
215,218
215,219
215,220
216,217
218,219
220,221
222,223
224,225
226,227
227,228
227,229
227,230
227,231
227,232
228,229
230,231
232,233
234,235
236,237
238,239
239,240
239,241
239,242
239,243
239,244
240,241
242,243
244,245
246,247
248,249
250,251
251,252
251,253
251,254
251,255
251,256
252,253
254,255
256,257
258,259
260,261
262,263
263,264
263,265
263,266
263,267
263,268
264,265
266,267
268,269
270,271
272,273
274,275
275,276
275,277
275,278
275,279
275,280
276,277
278,279
280,281
282,283
284,285
286,287
287,288
287,289
287,290
287,291
287,292
288,289
290,291
292,293
294,295
296,297
298,299
299,300
299,301
299,302
299,303
299,304
300,301
302,303
304,305
306,307
308,309
310,311
-----nextToken-----
2,4,7,9,10,12,14,15,17,19,20,25,27,29,31,33,37,39,41,43,45,49,51,53,55,57,61,63,65,67,69,73,75,77,79,81,85,87,89,91,93,97,99,101,103,105,109,111,113,115,117,121,123,125,127,129,133,135,137,139,141,145,147,149,151,153,157,159,161,163,165,169,171,173,175,177,181,183,185,187,189,193,195,197,199,201,205,207,209,211,213,217,219,221,223,225,229,231,233,235,237,241,243,245,247,249,253,255,257,259,261,265,267,269,271,273,277,279,281,283,285,289,291,293,295,297,301,303,305,307,309,311
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int rmsummary_assign_field(struct rmsummary *s, char *key, char *value){	rmsummary_assign_as_string_field(s, key, value, category);	rmsummary_assign_as_string_field(s, key, value, command);	rmsummary_assign_as_int_field   (s, key, value, task_id);	rmsummary_assign_as_time_field  (s, key, value, start);	rmsummary_assign_as_time_field  (s, key, value, end);	rmsummary_assign_as_string_field(s, key, value, exit_type);	rmsummary_assign_as_int_field   (s, key, value, last_error);	rmsummary_assign_as_int_field   (s, key, value, signal);	rmsummary_assign_as_string_field(s, key, value, limits_exceeded);	rmsummary_assign_as_int_field   (s, key, value, exit_status);	rmsummary_assign_as_int_field   (s, key, value, last_error);	rmsummary_assign_as_time_field  (s, key, value, wall_time);	rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes);	rmsummary_assign_as_int_field   (s, key, value, total_processes);	rmsummary_assign_as_time_field  (s, key, value, cpu_time);	rmsummary_assign_as_int_field   (s, key, value, virtual_memory);	rmsummary_assign_as_int_field   (s, key, value, resident_memory);	rmsummary_assign_as_int_field   (s, key, value, swap_memory);	rmsummary_assign_as_int_field   (s, key, value, bytes_read);	rmsummary_assign_as_int_field   (s, key, value, bytes_written);	rmsummary_assign_as_int_field   (s, key, value, workdir_num_files);	rmsummary_assign_as_int_field   (s, key, value, workdir_footprint);	rmsummary_assign_as_int_field   (s, key, value, cores);	rmsummary_assign_as_int_field   (s, key, value, gpus);	return 0;}
int
rmsummary_assign_field(struct rmsummary *s, char *key, char *value)
rmsummary_assign_field
struct rmsummary *s
struct rmsummary
rmsummary
*s
*
s
char *key
char
*key
*
key
char *value
char
*value
*
value
{	rmsummary_assign_as_string_field(s, key, value, category);	rmsummary_assign_as_string_field(s, key, value, command);	rmsummary_assign_as_int_field   (s, key, value, task_id);	rmsummary_assign_as_time_field  (s, key, value, start);	rmsummary_assign_as_time_field  (s, key, value, end);	rmsummary_assign_as_string_field(s, key, value, exit_type);	rmsummary_assign_as_int_field   (s, key, value, last_error);	rmsummary_assign_as_int_field   (s, key, value, signal);	rmsummary_assign_as_string_field(s, key, value, limits_exceeded);	rmsummary_assign_as_int_field   (s, key, value, exit_status);	rmsummary_assign_as_int_field   (s, key, value, last_error);	rmsummary_assign_as_time_field  (s, key, value, wall_time);	rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes);	rmsummary_assign_as_int_field   (s, key, value, total_processes);	rmsummary_assign_as_time_field  (s, key, value, cpu_time);	rmsummary_assign_as_int_field   (s, key, value, virtual_memory);	rmsummary_assign_as_int_field   (s, key, value, resident_memory);	rmsummary_assign_as_int_field   (s, key, value, swap_memory);	rmsummary_assign_as_int_field   (s, key, value, bytes_read);	rmsummary_assign_as_int_field   (s, key, value, bytes_written);	rmsummary_assign_as_int_field   (s, key, value, workdir_num_files);	rmsummary_assign_as_int_field   (s, key, value, workdir_footprint);	rmsummary_assign_as_int_field   (s, key, value, cores);	rmsummary_assign_as_int_field   (s, key, value, gpus);	return 0;}
rmsummary_assign_as_string_field(s, key, value, category);
rmsummary_assign_as_string_field(s, key, value, category)
rmsummary_assign_as_string_field
rmsummary_assign_as_string_field
s
s
key
key
value
value
category
category
rmsummary_assign_as_string_field(s, key, value, command);
rmsummary_assign_as_string_field(s, key, value, command)
rmsummary_assign_as_string_field
rmsummary_assign_as_string_field
s
s
key
key
value
value
command
command
rmsummary_assign_as_int_field   (s, key, value, task_id);
rmsummary_assign_as_int_field   (s, key, value, task_id)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
task_id
task_id
rmsummary_assign_as_time_field  (s, key, value, start);
rmsummary_assign_as_time_field  (s, key, value, start)
rmsummary_assign_as_time_field
rmsummary_assign_as_time_field
s
s
key
key
value
value
start
start
rmsummary_assign_as_time_field  (s, key, value, end);
rmsummary_assign_as_time_field  (s, key, value, end)
rmsummary_assign_as_time_field
rmsummary_assign_as_time_field
s
s
key
key
value
value
end
end
rmsummary_assign_as_string_field(s, key, value, exit_type);
rmsummary_assign_as_string_field(s, key, value, exit_type)
rmsummary_assign_as_string_field
rmsummary_assign_as_string_field
s
s
key
key
value
value
exit_type
exit_type
rmsummary_assign_as_int_field   (s, key, value, last_error);
rmsummary_assign_as_int_field   (s, key, value, last_error)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
last_error
last_error
rmsummary_assign_as_int_field   (s, key, value, signal);
rmsummary_assign_as_int_field   (s, key, value, signal)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
signal
signal
rmsummary_assign_as_string_field(s, key, value, limits_exceeded);
rmsummary_assign_as_string_field(s, key, value, limits_exceeded)
rmsummary_assign_as_string_field
rmsummary_assign_as_string_field
s
s
key
key
value
value
limits_exceeded
limits_exceeded
rmsummary_assign_as_int_field   (s, key, value, exit_status);
rmsummary_assign_as_int_field   (s, key, value, exit_status)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
exit_status
exit_status
rmsummary_assign_as_int_field   (s, key, value, last_error);
rmsummary_assign_as_int_field   (s, key, value, last_error)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
last_error
last_error
rmsummary_assign_as_time_field  (s, key, value, wall_time);
rmsummary_assign_as_time_field  (s, key, value, wall_time)
rmsummary_assign_as_time_field
rmsummary_assign_as_time_field
s
s
key
key
value
value
wall_time
wall_time
rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes);
rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
max_concurrent_processes
max_concurrent_processes
rmsummary_assign_as_int_field   (s, key, value, total_processes);
rmsummary_assign_as_int_field   (s, key, value, total_processes)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
total_processes
total_processes
rmsummary_assign_as_time_field  (s, key, value, cpu_time);
rmsummary_assign_as_time_field  (s, key, value, cpu_time)
rmsummary_assign_as_time_field
rmsummary_assign_as_time_field
s
s
key
key
value
value
cpu_time
cpu_time
rmsummary_assign_as_int_field   (s, key, value, virtual_memory);
rmsummary_assign_as_int_field   (s, key, value, virtual_memory)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
virtual_memory
virtual_memory
rmsummary_assign_as_int_field   (s, key, value, resident_memory);
rmsummary_assign_as_int_field   (s, key, value, resident_memory)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
resident_memory
resident_memory
rmsummary_assign_as_int_field   (s, key, value, swap_memory);
rmsummary_assign_as_int_field   (s, key, value, swap_memory)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
swap_memory
swap_memory
rmsummary_assign_as_int_field   (s, key, value, bytes_read);
rmsummary_assign_as_int_field   (s, key, value, bytes_read)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
bytes_read
bytes_read
rmsummary_assign_as_int_field   (s, key, value, bytes_written);
rmsummary_assign_as_int_field   (s, key, value, bytes_written)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
bytes_written
bytes_written
rmsummary_assign_as_int_field   (s, key, value, workdir_num_files);
rmsummary_assign_as_int_field   (s, key, value, workdir_num_files)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
workdir_num_files
workdir_num_files
rmsummary_assign_as_int_field   (s, key, value, workdir_footprint);
rmsummary_assign_as_int_field   (s, key, value, workdir_footprint)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
workdir_footprint
workdir_footprint
rmsummary_assign_as_int_field   (s, key, value, cores);
rmsummary_assign_as_int_field   (s, key, value, cores)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
cores
cores
rmsummary_assign_as_int_field   (s, key, value, gpus);
rmsummary_assign_as_int_field   (s, key, value, gpus)
rmsummary_assign_as_int_field
rmsummary_assign_as_int_field
s
s
key
key
value
value
gpus
gpus
return 0;
0
-----joern-----
(120,23,0)
(42,0,0)
(61,43,0)
(30,23,0)
(0,43,0)
(75,16,0)
(53,87,0)
(1,63,0)
(121,70,0)
(16,70,0)
(63,70,0)
(107,10,0)
(118,87,0)
(52,71,0)
(107,70,0)
(34,43,0)
(16,10,0)
(7,61,0)
(25,70,0)
(29,98,0)
(47,70,0)
(126,63,0)
(71,10,0)
(31,10,0)
(54,30,0)
(104,71,0)
(98,23,0)
(20,25,0)
(35,0,0)
(113,120,0)
(40,10,0)
(45,30,0)
(6,25,0)
(16,43,0)
(103,83,0)
(11,63,0)
(88,112,0)
(36,115,0)
(76,61,0)
(31,43,0)
(19,122,0)
(8,115,0)
(84,40,0)
(40,23,0)
(97,121,0)
(121,23,0)
(38,37,0)
(63,43,0)
(109,98,0)
(107,23,0)
(71,70,0)
(28,71,0)
(14,98,0)
(98,43,0)
(87,43,0)
(13,83,0)
(121,43,0)
(40,43,0)
(111,31,0)
(105,10,0)
(58,40,0)
(4,107,0)
(102,2,0)
(123,16,0)
(26,31,0)
(62,70,0)
(3,25,0)
(68,121,0)
(120,43,0)
(105,43,0)
(87,10,0)
(79,62,0)
(21,62,0)
(67,63,0)
(98,10,0)
(17,34,0)
(37,23,0)
(107,43,0)
(87,70,0)
(37,43,0)
(25,23,0)
(100,112,0)
(71,43,0)
(44,114,0)
(115,10,0)
(25,10,0)
(66,112,0)
(0,23,0)
(62,10,0)
(61,70,0)
(78,2,0)
(81,0,0)
(5,16,0)
(59,87,0)
(112,70,0)
(30,70,0)
(41,114,0)
(47,23,0)
(121,10,0)
(62,43,0)
(90,120,0)
(91,120,0)
(115,23,0)
(122,10,0)
(62,23,0)
(48,31,0)
(87,23,0)
(47,43,0)
(22,83,0)
(37,70,0)
(115,43,0)
(37,10,0)
(77,47,0)
(83,23,0)
(72,2,0)
(18,31,0)
(61,10,0)
(47,10,0)
(2,43,0)
(95,105,0)
(31,23,0)
(93,71,0)
(112,23,0)
(30,43,0)
(55,37,0)
(117,98,0)
(110,47,0)
(114,10,0)
(50,122,0)
(73,105,0)
(96,2,0)
(82,16,0)
(9,87,0)
(40,70,0)
(2,23,0)
(85,105,0)
(101,112,0)
(2,10,0)
(116,114,0)
(83,70,0)
(122,70,0)
(24,37,0)
(63,23,0)
(39,0,0)
(46,61,0)
(2,70,0)
(92,47,0)
(94,47,0)
(115,70,0)
(120,70,0)
(31,70,0)
(30,10,0)
(112,43,0)
(25,43,0)
(0,70,0)
(33,83,0)
(61,23,0)
(105,23,0)
(15,107,0)
(49,121,0)
(89,115,0)
(12,61,0)
(108,115,0)
(114,23,0)
(32,25,0)
(98,70,0)
(51,30,0)
(16,23,0)
(114,70,0)
(120,10,0)
(0,10,0)
(86,40,0)
(106,121,0)
(122,23,0)
(65,107,0)
(60,37,0)
(105,70,0)
(64,30,0)
(114,43,0)
(27,107,0)
(80,122,0)
(99,120,0)
(74,122,0)
(83,43,0)
(57,34,0)
(83,10,0)
(122,43,0)
(119,62,0)
(56,40,0)
(112,10,0)
(125,105,0)
(69,114,0)
(71,23,0)
(63,10,0)
(124,62,0)
(119,31,1)
(100,47,1)
(11,1,1)
(109,105,1)
(51,45,1)
(2,78,1)
(102,72,1)
(29,14,1)
(82,63,1)
(0,10,1)
(87,70,1)
(98,70,1)
(121,70,1)
(67,114,1)
(107,23,1)
(55,38,1)
(98,29,1)
(63,10,1)
(47,110,1)
(80,2,1)
(87,23,1)
(44,41,1)
(34,17,1)
(63,70,1)
(53,59,1)
(18,48,1)
(31,23,1)
(114,23,1)
(71,93,1)
(123,75,1)
(121,23,1)
(122,23,1)
(15,4,1)
(120,10,1)
(59,118,1)
(5,123,1)
(121,106,1)
(17,0,1)
(112,70,1)
(107,70,1)
(56,58,1)
(83,23,1)
(115,10,1)
(87,53,1)
(36,108,1)
(20,6,1)
(86,115,1)
(47,23,1)
(101,88,1)
(116,44,1)
(79,119,1)
(7,12,1)
(113,90,1)
(71,70,1)
(107,27,1)
(125,16,1)
(12,46,1)
(114,10,1)
(54,51,1)
(83,70,1)
(50,19,1)
(40,70,1)
(46,120,1)
(47,10,1)
(115,23,1)
(126,11,1)
(16,70,1)
(104,107,1)
(74,80,1)
(2,23,1)
(92,77,1)
(4,65,1)
(40,23,1)
(0,23,1)
(115,70,1)
(47,70,1)
(49,83,1)
(39,35,1)
(16,5,1)
(95,85,1)
(37,10,1)
(37,24,1)
(107,10,1)
(105,70,1)
(3,20,1)
(48,111,1)
(40,84,1)
(25,70,1)
(24,60,1)
(111,26,1)
(114,70,1)
(73,95,1)
(62,23,1)
(25,10,1)
(118,9,1)
(105,73,1)
(71,23,1)
(37,70,1)
(120,70,1)
(13,71,1)
(61,70,1)
(26,30,1)
(58,86,1)
(106,68,1)
(98,23,1)
(57,34,1)
(25,3,1)
(6,32,1)
(9,121,1)
(98,10,1)
(62,70,1)
(84,56,1)
(88,100,1)
(25,23,1)
(96,102,1)
(72,87,1)
(105,10,1)
(30,10,1)
(122,50,1)
(93,28,1)
(16,23,1)
(33,13,1)
(0,39,1)
(78,96,1)
(32,98,1)
(30,54,1)
(41,69,1)
(77,94,1)
(61,10,1)
(83,10,1)
(40,10,1)
(60,55,1)
(103,22,1)
(89,36,1)
(2,70,1)
(64,40,1)
(65,112,1)
(1,67,1)
(52,104,1)
(85,125,1)
(120,91,1)
(68,97,1)
(31,70,1)
(69,61,1)
(90,122,1)
(27,15,1)
(2,10,1)
(122,70,1)
(19,74,1)
(61,23,1)
(114,116,1)
(63,126,1)
(0,70,1)
(97,49,1)
(8,89,1)
(22,33,1)
(117,109,1)
(31,10,1)
(63,23,1)
(83,103,1)
(45,64,1)
(91,99,1)
(37,23,1)
(122,10,1)
(112,10,1)
(66,101,1)
(75,82,1)
(61,76,1)
(87,10,1)
(28,52,1)
(71,10,1)
(62,10,1)
(81,25,1)
(42,81,1)
(121,10,1)
(16,10,1)
(124,21,1)
(62,124,1)
(115,8,1)
(105,23,1)
(30,23,1)
(112,23,1)
(30,70,1)
(76,7,1)
(14,117,1)
(99,113,1)
(35,42,1)
(112,66,1)
(110,92,1)
(94,37,1)
(31,18,1)
(38,62,1)
(120,23,1)
(21,79,1)
(16,10,2)
(112,70,2)
(62,10,2)
(120,23,2)
(61,10,2)
(63,70,2)
(40,70,2)
(0,10,2)
(30,10,2)
(16,23,2)
(37,23,2)
(71,23,2)
(114,23,2)
(115,10,2)
(98,10,2)
(83,70,2)
(30,70,2)
(40,10,2)
(61,70,2)
(105,23,2)
(0,23,2)
(31,23,2)
(31,10,2)
(87,10,2)
(114,10,2)
(37,10,2)
(107,10,2)
(98,23,2)
(62,23,2)
(122,23,2)
(115,23,2)
(98,70,2)
(61,23,2)
(30,23,2)
(0,70,2)
(31,70,2)
(107,23,2)
(2,70,2)
(2,10,2)
(16,70,2)
(63,10,2)
(112,10,2)
(40,23,2)
(47,23,2)
(37,70,2)
(105,10,2)
(122,70,2)
(25,10,2)
(47,70,2)
(120,70,2)
(105,70,2)
(63,23,2)
(25,70,2)
(83,10,2)
(121,70,2)
(83,23,2)
(62,70,2)
(2,23,2)
(114,70,2)
(115,70,2)
(25,23,2)
(107,70,2)
(121,10,2)
(87,23,2)
(112,23,2)
(122,10,2)
(87,70,2)
(121,23,2)
(71,70,2)
(120,10,2)
(47,10,2)
(57,34,2)
(71,10,2)
-----------------------------------
(0,rmsummary_assign_as_int_field   (s, key, value, gpus)
(1,key)
(2,rmsummary_assign_as_int_field   (s, key, value, total_processes)
(3,cores)
(4,key)
(5,bytes_written)
(6,key)
(7,value)
(8,category)
(9,s)
(10,char *value)
(11,value)
(12,key)
(13,s)
(14,value)
(15,value)
(16,rmsummary_assign_as_int_field   (s, key, value, bytes_written)
(17,0)
(18,start)
(19,value)
(20,value)
(21,value)
(22,value)
(23,char *key)
(24,exit_type)
(25,rmsummary_assign_as_int_field   (s, key, value, cores)
(26,s)
(27,limits_exceeded)
(28,value)
(29,workdir_footprint)
(30,rmsummary_assign_as_int_field   (s, key, value, task_id)
(31,rmsummary_assign_as_time_field  (s, key, value, start)
(32,s)
(33,key)
(34,return 0;)
(35,value)
(36,key)
(37,rmsummary_assign_as_string_field(s, key, value, exit_type)
(38,s)
(39,gpus)
(40,rmsummary_assign_as_string_field(s, key, value, command)
(41,key)
(42,key)
(43,)
(44,value)
(45,key)
(46,s)
(47,rmsummary_assign_as_int_field   (s, key, value, last_error)
(48,value)
(49,s)
(50,cpu_time)
(51,value)
(52,key)
(53,max_concurrent_processes)
(54,task_id)
(55,key)
(56,value)
(57,RET)
(58,key)
(59,value)
(60,value)
(61,rmsummary_assign_as_int_field   (s, key, value, resident_memory)
(62,rmsummary_assign_as_time_field  (s, key, value, end)
(63,rmsummary_assign_as_int_field   (s, key, value, bytes_read)
(64,s)
(65,s)
(66,signal)
(67,s)
(68,value)
(69,s)
(70,struct rmsummary *s)
(71,rmsummary_assign_as_int_field   (s, key, value, exit_status)
(72,s)
(73,workdir_num_files)
(74,key)
(75,key)
(76,resident_memory)
(77,key)
(78,total_processes)
(79,key)
(80,s)
(81,s)
(82,s)
(83,rmsummary_assign_as_int_field   (s, key, value, last_error)
(84,command)
(85,key)
(86,s)
(87,rmsummary_assign_as_int_field   (s, key, value, max_concurrent_processes)
(88,key)
(89,value)
(90,s)
(91,virtual_memory)
(92,value)
(93,exit_status)
(94,s)
(95,value)
(96,value)
(97,key)
(98,rmsummary_assign_as_int_field   (s, key, value, workdir_footprint)
(99,value)
(100,s)
(101,value)
(102,key)
(103,last_error)
(104,s)
(105,rmsummary_assign_as_int_field   (s, key, value, workdir_num_files)
(106,wall_time)
(107,rmsummary_assign_as_string_field(s, key, value, limits_exceeded)
(108,s)
(109,s)
(110,last_error)
(111,key)
(112,rmsummary_assign_as_int_field   (s, key, value, signal)
(113,key)
(114,rmsummary_assign_as_int_field   (s, key, value, swap_memory)
(115,rmsummary_assign_as_string_field(s, key, value, category)
(116,swap_memory)
(117,key)
(118,key)
(119,s)
(120,rmsummary_assign_as_int_field   (s, key, value, virtual_memory)
(121,rmsummary_assign_as_time_field  (s, key, value, wall_time)
(122,rmsummary_assign_as_time_field  (s, key, value, cpu_time)
(123,value)
(124,end)
(125,s)
(126,bytes_read)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^