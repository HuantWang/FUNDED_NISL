-----label-----
0
-----code-----
static void good2()
{
    if(5==5)
    {
        {
            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
            if (data == NULL) {exit(-1);}
            wchar_t * tmpData;
            /* Initialize and make use of data */
            wcscpy(data, L"A String");
            printWLine(data);
            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
            /* FIX: Ensure realloc() was successful before assigning data to the memory block
            * allocated with realloc() */
            if (tmpData != NULL)
            {
                data = tmpData;
                /* Reinitialize and make use of data */
                wcscpy(data, L"New String");
                printWLine(data);
            }
            free(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
6,7
6,8
7,8
7,9
10,11
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
22,23
24,25
24,26
25,26
27,28
27,29
29,30
30,31
30,32
33,34
33,35
34,35
34,36
35,36
37,38
39,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
52,53
53,54
53,55
53,56
54,55
56,57
59,60
60,61
60,62
61,62
63,64
65,66
66,67
66,68
67,68
69,70
69,71
70,71
70,72
72,73
74,75
74,76
74,77
75,76
77,78
79,80
79,81
80,81
82,83
83,84
83,85
86,87
86,88
87,88
87,89
88,89
90,91
92,93
92,94
92,95
93,94
94,95
94,96
95,96
97,98
99,100
100,101
100,102
100,103
101,102
103,104
106,107
107,108
107,109
108,109
110,111
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,8,9,14,16,17,21,23,26,28,31,32,36,38,43,45,48,50,51,55,57,58,62,64,68,71,73,76,78,81,84,85,89,91,96,98,102,104,105,109,111,115,117
-----computeFrom-----
7,8
7,9
27,28
27,29
34,35
34,36
66,67
66,68
79,80
79,81
87,88
87,89
94,95
94,96
-----guardedBy-----
89,98
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;UnaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void good2(){    if(5==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
static void
good2()
good2
{    if(5==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }}
if(5==5)    {        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
5==5
5
5
{        {            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }    }
{            wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));            if (data == NULL) {exit(-1);}            wchar_t * tmpData;            /* Initialize and make use of data */            wcscpy(data, L"A String");            printWLine(data);            tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));            /* FIX: Ensure realloc() was successful before assigning data to the memory block            * allocated with realloc() */            if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }            free(data);        }
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));
wchar_t
* data = (wchar_t *)malloc(100*sizeof(wchar_t))
*
data
= (wchar_t *)malloc(100*sizeof(wchar_t))
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wchar_t * tmpData;
wchar_t * tmpData;
wchar_t
* tmpData
*
tmpData
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));
tmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
tmpData
tmpData
(wchar_t *)realloc(data, (130000)*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, (130000)*sizeof(wchar_t))
realloc
realloc
data
data
(130000)*sizeof(wchar_t)
(130000)
130000
sizeof(wchar_t)
wchar_t
wchar_t

if (tmpData != NULL)            {                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
tmpData != NULL
tmpData
tmpData
NULL
NULL
{                data = tmpData;                /* Reinitialize and make use of data */                wcscpy(data, L"New String");                printWLine(data);            }
data = tmpData;
data = tmpData
data
data
tmpData
tmpData
wcscpy(data, L"New String");
wcscpy(data, L"New String")
wcscpy
wcscpy
data
data
L"New String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(0,35,0)
(5,9,0)
(14,35,0)
(27,6,0)
(26,10,0)
(9,49,0)
(6,39,0)
(43,28,0)
(36,16,0)
(24,39,0)
(2,10,0)
(25,12,0)
(1,9,0)
(22,10,0)
(40,38,0)
(2,25,0)
(7,38,0)
(48,17,0)
(20,17,0)
(32,10,0)
(39,6,0)
(8,33,0)
(35,29,0)
(47,50,0)
(33,8,0)
(12,25,0)
(17,49,0)
(13,10,0)
(21,5,0)
(25,2,0)
(23,6,0)
(29,35,0)
(13,2,0)
(10,41,0)
(0,25,0)
(16,10,0)
(11,9,0)
(39,24,0)
(23,49,0)
(6,2,0)
(45,24,0)
(49,23,0)
(33,3,0)
(35,0,0)
(30,10,0)
(38,2,0)
(25,0,0)
(16,9,0)
(31,8,0)
(49,10,0)
(44,2,0)
(6,23,0)
(15,13,0)
(16,2,0)
(37,39,0)
(18,28,0)
(23,34,0)
(9,42,0)
(46,49,0)
(34,23,0)
(4,29,0)
(5,42,0)
(9,49,1)
(13,15,1)
(11,1,1)
(8,31,1)
(21,9,1)
(31,38,1)
(45,37,1)
(15,33,1)
(38,40,1)
(5,9,1)
(33,8,1)
(16,2,1)
(20,49,1)
(6,2,1)
(28,18,1)
(23,34,1)
(44,28,1)
(36,17,1)
(17,49,1)
(2,25,1)
(29,4,1)
(23,6,1)
(16,36,1)
(46,13,1)
(5,21,1)
(39,24,1)
(48,20,1)
(6,39,1)
(18,43,1)
(13,2,1)
(37,27,1)
(49,23,1)
(15,38,1)
(24,45,1)
(16,9,1)
(0,35,1)
(40,7,1)
(25,12,1)
(19,28,1)
(9,11,1)
(36,5,1)
(19,16,1)
(17,48,1)
(7,2,1)
(4,14,1)
(27,46,1)
(25,0,1)
(38,2,1)
(35,29,1)
(1,17,1)
(14,44,1)
(0,35,2)
(33,38,2)
(5,9,2)
(45,28,2)
(1,17,2)
(49,28,2)
(0,28,2)
(37,28,2)
(48,28,2)
(16,28,2)
(9,17,2)
(27,28,2)
(16,2,2)
(33,8,2)
(23,6,2)
(16,9,2)
(49,23,2)
(36,28,2)
(25,12,2)
(31,38,2)
(5,17,2)
(17,28,2)
(2,25,2)
(15,28,2)
(14,28,2)
(9,49,2)
(6,39,2)
(21,17,2)
(25,0,2)
(40,28,2)
(7,28,2)
(46,28,2)
(35,29,2)
(17,49,2)
(6,28,2)
(29,28,2)
(13,28,2)
(25,28,2)
(20,28,2)
(39,24,2)
(4,28,2)
(23,28,2)
(6,2,2)
(44,28,2)
(8,38,2)
(13,2,2)
(24,28,2)
(35,28,2)
(11,17,2)
(23,34,2)
(38,2,2)
(39,28,2)
(38,28,2)
(2,28,2)
-----------------------------------
(0,malloc(100*sizeof(wchar_t)
(1,data)
(2,* data = (wchar_t *)
(3,)
(4,wchar_t)
(5,printWLine(data)
(6,realloc(data, (130000)
(7,data)
(8,-1)
(9,data = tmpData)
(10,)
(11,tmpData)
(12,wchar_t *)
(13,printWLine(data)
(14,100)
(15,data)
(16,free(data)
(17,tmpData != NULL)
(18,5)
(19,RET)
(20,tmpData)
(21,data)
(22,if (tmpData != NULL)
(23,(wchar_t *)
(24,sizeof(wchar_t)
(25,(wchar_t *)
(26,tmpData)
(27,data)
(28,5==5)
(29,sizeof(wchar_t)
(30,if (data == NULL)
(31,1)
(32,data)
(33,exit(-1)
(34,wchar_t *)
(35,100*sizeof(wchar_t)
(36,data)
(37,130000)
(38,data == NULL)
(39,(130000)
(40,NULL)
(41,)
(42,)
(43,5)
(44,data)
(45,wchar_t)
(46,tmpData)
(47,if(5==5)
(48,NULL)
(49,tmpData = (wchar_t *)
(50,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^