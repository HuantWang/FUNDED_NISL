-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_for_loop_17_bad()
{
    int i,j;
    int count;
    /* Initialize count */
    count = -1;
    for(i = 0; i < 1; i++)
    {
        /* POTENTIAL FLAW: Set count to a random value */
        count = RAND32();
    }
    for(j = 0; j < 1; j++)
    {
        {
            size_t i = 0;
            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */
            for (i = 0; i < (size_t)count; i++)
            {
                printLine("Hello");
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
7,10
9,10
11,12
13,14
14,15
14,16
16,17
18,19
19,20
19,21
20,21
22,23
24,25
24,26
24,27
24,28
25,26
26,27
26,28
27,28
30,31
30,32
31,32
34,35
35,36
37,38
38,39
39,40
39,41
40,41
42,43
43,44
45,46
45,47
45,48
45,49
46,47
47,48
47,49
48,49
51,52
51,53
52,53
55,56
56,57
58,59
59,60
59,61
60,61
61,62
61,63
62,63
64,65
64,66
66,67
68,69
68,70
68,71
68,72
69,70
70,71
70,72
71,72
74,75
74,76
75,76
77,78
77,79
78,79
78,80
79,80
82,83
84,85
85,86
87,88
88,89
89,90
89,91
90,91
-----nextToken-----
2,4,8,10,12,15,17,21,23,28,29,32,33,36,41,44,49,50,53,54,57,63,65,67,72,73,76,80,81,83,86,91,92
-----computeFrom-----
19,20
19,21
26,27
26,28
30,31
30,32
39,40
39,41
47,48
47,49
51,52
51,53
70,71
70,72
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_for_loop_17_bad(){    int i,j;    int count;    /* Initialize count */    count = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    for(j = 0; j < 1; j++)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
void
CWE400_Resource_Exhaustion__rand_for_loop_17_bad()
CWE400_Resource_Exhaustion__rand_for_loop_17_bad
{    int i,j;    int count;    /* Initialize count */    count = -1;    for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }    for(j = 0; j < 1; j++)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }}
int i,j;
int i,j;
int
i
i
j
j
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
for(i = 0; i < 1; i++)    {        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        /* POTENTIAL FLAW: Set count to a random value */        count = RAND32();    }
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
for(j = 0; j < 1; j++)    {        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }
j = 0;
j = 0
j
j
0
j < 1
j
j
1
j++
j
j
{        {            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }    }
{            size_t i = 0;            /* POTENTIAL FLAW: For loop using count as the loop variant and no validation */            for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }        }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
for (i = 0; i < (size_t)count; i++)            {                printLine("Hello");            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                printLine("Hello");            }
printLine("Hello");
printLine("Hello")
printLine
printLine
"Hello"
-----joern-----
(49,3,0)
(39,36,0)
(37,14,0)
(25,43,0)
(3,24,0)
(0,28,0)
(31,2,0)
(33,24,0)
(7,43,0)
(19,22,0)
(46,26,0)
(35,41,0)
(24,42,0)
(13,0,0)
(21,44,0)
(22,47,0)
(5,44,0)
(6,0,0)
(2,28,0)
(10,32,0)
(4,43,0)
(8,21,0)
(11,28,0)
(9,3,0)
(45,29,0)
(18,14,0)
(3,21,0)
(30,28,0)
(24,20,0)
(27,36,0)
(36,16,0)
(41,43,0)
(29,47,0)
(12,48,0)
(26,41,0)
(3,9,0)
(34,43,0)
(38,47,0)
(17,43,0)
(41,26,0)
(15,44,0)
(40,22,0)
(32,44,0)
(14,36,0)
(3,41,0)
(48,50,0)
(1,47,0)
(20,24,0)
(21,3,0)
(15,14,1)
(38,1,1)
(3,9,1)
(37,0,1)
(26,46,1)
(8,44,1)
(22,19,1)
(21,44,1)
(11,30,1)
(10,48,1)
(45,24,1)
(44,5,1)
(24,20,1)
(0,28,1)
(6,2,1)
(12,21,1)
(2,31,1)
(1,41,1)
(33,22,1)
(14,18,1)
(29,47,1)
(40,29,1)
(13,6,1)
(19,40,1)
(3,41,1)
(0,13,1)
(3,24,1)
(40,47,1)
(47,38,1)
(41,26,1)
(32,44,1)
(31,21,1)
(46,35,1)
(8,32,1)
(32,10,1)
(29,45,1)
(3,49,1)
(21,3,1)
(48,12,1)
(23,0,1)
(20,33,1)
(5,15,1)
(2,28,1)
(30,22,1)
(18,37,1)
(22,47,1)
(28,11,1)
(49,8,1)
(6,28,1)
(8,0,2)
(48,21,2)
(29,22,2)
(3,9,2)
(2,0,2)
(8,21,2)
(13,0,2)
(37,0,2)
(6,0,2)
(18,0,2)
(3,24,2)
(44,0,2)
(21,21,2)
(41,26,2)
(3,0,2)
(24,20,2)
(2,28,2)
(0,28,2)
(3,41,2)
(32,44,2)
(12,21,2)
(31,0,2)
(19,22,2)
(29,47,2)
(5,0,2)
(14,0,2)
(49,0,2)
(10,21,2)
(32,21,2)
(0,0,2)
(49,21,2)
(21,0,2)
(33,22,2)
(20,22,2)
(3,21,2)
(40,22,2)
(21,44,2)
(21,3,2)
(15,0,2)
(24,22,2)
(22,22,2)
(45,22,2)
(22,47,2)
-----------------------------------
(0,j < 1)
(1,i)
(2,j++)
(3,(size_t)
(4,count)
(5,0)
(6,j)
(7,for(i = 0; i < 1; i++)
(8,i)
(9,size_t)
(10,i)
(11,0)
(12,"Hello")
(13,1)
(14,i = 0)
(15,i)
(16,)
(17,j)
(18,0)
(19,1)
(20,RAND32()
(21,i < (size_t)
(22,i < 1)
(23,RET)
(24,count = RAND32()
(25,i)
(26,-1)
(27,i)
(28,j = 0)
(29,i++)
(30,j)
(31,j)
(32,i++)
(33,count)
(34,for(j = 0; j < 1; j++)
(35,count)
(36,)
(37,i)
(38,0)
(39,for (i = 0; i < (size_t)
(40,i)
(41,count = -1)
(42,)
(43,)
(44,i = 0)
(45,i)
(46,1)
(47,i = 0)
(48,printLine("Hello")
(49,count)
(50,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^