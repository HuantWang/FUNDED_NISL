-----label-----
0
-----code-----
static int driver_send_unicast(Peer *receiver, Message *message) {
        int r;

        r = driver_monitor(receiver->bus, NULL, message);
        if (r)
                return error_fold(r);

        r = connection_queue(&receiver->connection, NULL, message);
        if (r) {
                if (r == CONNECTION_E_QUOTA) {
                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);

                        connection_shutdown(&receiver->connection);

                        log_append_here(receiver->bus->log, LOG_WARNING, 0);
                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,
                                                   receiver->bus->seclabel, receiver->policy->seclabel,
                                                   message);
                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);
                        if (r)
                                return error_fold(r);
                } else {
                        return error_fold(r);
                }
        }

        return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
27,31
28,29
30,31
30,32
31,32
34,35
36,37
38,39
38,40
39,40
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
51,54
51,55
52,53
54,55
55,56
55,57
56,57
59,60
61,62
63,64
63,65
64,65
66,67
67,68
67,69
67,70
68,69
68,70
69,70
71,72
73,74
73,75
73,76
73,77
73,78
73,79
74,75
75,76
75,77
76,77
78,79
78,80
80,81
81,82
81,83
82,83
84,85
85,86
85,87
86,87
89,90
90,91
90,92
91,92
93,94
94,95
94,96
95,96
98,99
99,100
99,101
99,102
99,103
100,101
102,103
102,104
103,104
103,105
104,105
108,109
111,112
112,113
112,114
112,115
112,116
112,117
112,118
112,119
112,120
112,121
113,114
115,116
115,117
116,117
119,120
121,122
121,123
122,123
125,126
127,128
128,129
130,131
130,132
131,132
131,133
132,133
136,137
136,138
137,138
137,139
138,139
142,143
144,145
145,146
145,147
146,147
148,149
148,150
148,151
148,152
149,150
151,152
151,153
152,153
152,154
153,154
158,159
158,160
159,160
162,163
162,164
163,164
165,166
166,167
166,168
167,168
169,170
171,172
172,173
173,174
173,175
174,175
176,177
178,179
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,26,29,32,33,35,37,40,44,46,50,53,57,58,60,62,65,70,72,77,79,83,87,88,92,96,97,101,105,106,107,109,110,114,117,118,120,123,124,126,129,133,134,135,139,140,141,143,147,150,154,155,156,157,160,161,164,168,170,175,177,179
-----computeFrom-----
24,25
24,26
48,49
48,50
68,69
68,70
145,146
145,147
-----guardedBy-----
70,170
-----guardedByNegation-----
70,177
-----lastLexicalUse-----
70,177
-----jump-----
70,177
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int driver_send_unicast(Peer *receiver, Message *message) {        int r;        r = driver_monitor(receiver->bus, NULL, message);        if (r)                return error_fold(r);        r = connection_queue(&receiver->connection, NULL, message);        if (r) {                if (r == CONNECTION_E_QUOTA) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }        return 0;}
static int
driver_send_unicast(Peer *receiver, Message *message)
driver_send_unicast
Peer *receiver
Peer
Peer
*receiver
*
receiver
Message *message
Message
Message
*message
*
message
{        int r;        r = driver_monitor(receiver->bus, NULL, message);        if (r)                return error_fold(r);        r = connection_queue(&receiver->connection, NULL, message);        if (r) {                if (r == CONNECTION_E_QUOTA) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }        return 0;}
int r;
int r;
int
r
r
r = driver_monitor(receiver->bus, NULL, message);
r = driver_monitor(receiver->bus, NULL, message)
r
r
driver_monitor(receiver->bus, NULL, message)
driver_monitor
driver_monitor
receiver->bus
receiver
receiver
bus
NULL
NULL
message
message
if (r)                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
r = connection_queue(&receiver->connection, NULL, message);
r = connection_queue(&receiver->connection, NULL, message)
r
r
connection_queue(&receiver->connection, NULL, message)
connection_queue
connection_queue
&receiver->connection
receiver->connection
receiver
receiver
connection
NULL
NULL
message
message
if (r) {                if (r == CONNECTION_E_QUOTA) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }
r
r
{                if (r == CONNECTION_E_QUOTA) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }        }
if (r == CONNECTION_E_QUOTA) {                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                } else {                        return error_fold(r);                }
r == CONNECTION_E_QUOTA
r
r
CONNECTION_E_QUOTA
CONNECTION_E_QUOTA
{                        NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);                        connection_shutdown(&receiver->connection);                        log_append_here(receiver->bus->log, LOG_WARNING, 0);                        bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);                        r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);                        if (r)                                return error_fold(r);                }
NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);
NameSet receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names);
NameSet
NameSet
receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
receiver_names
= NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
NAME_SET_INIT_FROM_OWNER
NAME_SET_INIT_FROM_OWNER
&receiver->owned_names
receiver->owned_names
receiver
receiver
owned_names
connection_shutdown(&receiver->connection);
connection_shutdown(&receiver->connection)
connection_shutdown
connection_shutdown
&receiver->connection
receiver->connection
receiver
receiver
connection
log_append_here(receiver->bus->log, LOG_WARNING, 0);
log_append_here(receiver->bus->log, LOG_WARNING, 0)
log_append_here
log_append_here
receiver->bus->log
receiver->bus
receiver
receiver
bus
log
LOG_WARNING
LOG_WARNING
0
bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message);
bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,                                                   receiver->bus->seclabel, receiver->policy->seclabel,                                                   message)
bus_log_append_transaction
bus_log_append_transaction
receiver->bus
receiver
receiver
bus
ADDRESS_ID_INVALID
ADDRESS_ID_INVALID
receiver->id
receiver
receiver
id
NULL
NULL
&receiver_names
receiver_names
receiver_names
receiver->bus->seclabel
receiver->bus
receiver
receiver
bus
seclabel
receiver->policy->seclabel
receiver->policy
receiver
receiver
policy
seclabel
message
message
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id);
r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
r
r
log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
log_commitf
log_commitf
receiver->bus->log
receiver->bus
receiver
receiver
bus
log
"Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects."
receiver->id
receiver
receiver
id
if (r)                                return error_fold(r);
r
r
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
{                        return error_fold(r);                }
return error_fold(r);
error_fold(r)
error_fold
error_fold
r
r
return 0;
0
-----joern-----
(56,78,0)
(61,97,0)
(17,58,0)
(84,52,0)
(46,30,0)
(18,39,0)
(72,35,0)
(15,100,0)
(43,82,0)
(5,33,0)
(39,78,0)
(34,89,0)
(99,46,0)
(6,82,0)
(38,100,0)
(22,33,0)
(70,91,0)
(51,31,0)
(3,74,0)
(69,47,0)
(20,67,0)
(8,31,0)
(8,96,0)
(30,46,0)
(73,0,0)
(100,15,0)
(2,97,0)
(55,47,0)
(93,0,0)
(60,87,0)
(77,44,0)
(29,78,0)
(12,90,0)
(78,75,0)
(47,69,0)
(47,50,0)
(13,78,0)
(100,50,0)
(78,79,0)
(16,22,0)
(91,69,0)
(51,30,0)
(20,58,0)
(86,8,0)
(90,31,0)
(68,51,0)
(90,100,0)
(7,31,0)
(44,49,0)
(27,89,0)
(20,9,0)
(78,29,0)
(30,51,0)
(26,96,0)
(33,79,0)
(97,49,0)
(78,39,0)
(10,79,0)
(85,83,0)
(44,33,0)
(4,8,0)
(84,79,0)
(1,90,0)
(42,13,0)
(21,13,0)
(45,67,0)
(17,15,0)
(78,96,0)
(54,75,0)
(57,51,0)
(64,83,0)
(15,0,0)
(82,75,0)
(23,44,0)
(83,47,0)
(47,83,0)
(81,0,0)
(76,83,0)
(36,78,0)
(66,78,0)
(41,74,0)
(39,31,0)
(98,79,0)
(91,31,0)
(69,91,0)
(74,31,0)
(78,13,0)
(3,34,0)
(96,78,0)
(96,8,0)
(49,97,0)
(82,31,0)
(28,29,0)
(33,44,0)
(89,34,0)
(97,31,0)
(100,90,0)
(85,60,0)
(88,15,0)
(62,47,0)
(92,77,0)
(37,49,0)
(49,44,0)
(78,50,0)
(75,82,0)
(14,77,0)
(20,60,0)
(34,3,0)
(52,7,0)
(94,39,0)
(67,0,0)
(11,91,0)
(7,52,0)
(83,0,0)
(95,100,0)
(29,89,0)
(24,46,0)
(65,30,0)
(75,78,0)
(59,7,0)
(89,79,0)
(22,9,0)
(48,7,0)
(40,85,0)
(53,64,0)
(77,31,0)
(25,64,0)
(19,17,0)
(74,3,0)
(52,84,0)
(13,31,0)
(46,79,0)
(44,77,0)
(63,74,0)
(14,23,1)
(30,51,1)
(74,31,1)
(75,54,1)
(97,31,1)
(64,53,1)
(28,56,1)
(44,49,1)
(83,47,1)
(77,31,1)
(78,13,1)
(6,43,1)
(78,75,1)
(37,97,1)
(20,60,1)
(16,32,1)
(57,68,1)
(39,31,1)
(69,91,1)
(86,4,1)
(63,27,1)
(18,66,1)
(25,80,1)
(46,30,1)
(20,9,1)
(78,50,1)
(26,8,1)
(82,6,1)
(56,39,1)
(100,95,1)
(66,13,1)
(76,71,1)
(71,15,1)
(47,62,1)
(92,14,1)
(78,96,1)
(23,49,1)
(17,19,1)
(67,45,1)
(8,31,1)
(2,5,1)
(12,1,1)
(53,25,1)
(15,100,1)
(96,8,1)
(68,84,1)
(60,85,1)
(55,69,1)
(100,90,1)
(97,61,1)
(27,64,1)
(61,2,1)
(46,99,1)
(95,38,1)
(54,82,1)
(91,31,1)
(62,55,1)
(90,31,1)
(94,18,1)
(42,46,1)
(29,28,1)
(17,15,1)
(7,48,1)
(43,96,1)
(51,57,1)
(13,31,1)
(29,89,1)
(59,89,1)
(64,83,1)
(78,39,1)
(47,50,1)
(58,17,1)
(44,77,1)
(22,16,1)
(85,83,1)
(38,90,1)
(9,22,1)
(70,11,1)
(77,92,1)
(48,59,1)
(74,41,1)
(34,3,1)
(41,63,1)
(20,58,1)
(13,21,1)
(80,83,1)
(32,33,1)
(45,32,1)
(24,30,1)
(4,29,1)
(33,44,1)
(99,24,1)
(75,82,1)
(51,31,1)
(22,33,1)
(84,52,1)
(8,86,1)
(45,80,1)
(20,67,1)
(1,88,1)
(3,74,1)
(78,29,1)
(19,71,1)
(96,26,1)
(85,40,1)
(7,31,1)
(78,36,1)
(49,37,1)
(90,12,1)
(82,31,1)
(91,70,1)
(21,42,1)
(52,7,1)
(30,65,1)
(36,75,1)
(100,50,1)
(49,97,1)
(39,94,1)
(5,78,1)
(40,64,1)
(47,69,1)
(65,51,1)
(89,34,1)
(11,76,1)
(20,60,2)
(77,64,2)
(77,31,2)
(85,83,2)
(22,33,2)
(45,32,2)
(25,80,2)
(26,64,2)
(34,3,2)
(14,64,2)
(46,30,2)
(86,64,2)
(68,64,2)
(8,31,2)
(76,71,2)
(44,64,2)
(74,64,2)
(33,44,2)
(78,29,2)
(29,89,2)
(97,31,2)
(3,64,2)
(27,64,2)
(52,64,2)
(51,31,2)
(24,64,2)
(78,50,2)
(78,39,2)
(2,64,2)
(41,64,2)
(48,64,2)
(78,96,2)
(7,31,2)
(74,31,2)
(49,64,2)
(28,64,2)
(58,71,2)
(99,64,2)
(60,64,2)
(84,64,2)
(17,71,2)
(89,64,2)
(53,80,2)
(75,64,2)
(62,71,2)
(6,64,2)
(49,97,2)
(64,80,2)
(39,31,2)
(91,71,2)
(83,47,2)
(47,71,2)
(45,80,2)
(67,80,2)
(33,64,2)
(85,64,2)
(100,50,2)
(16,32,2)
(18,64,2)
(64,83,2)
(13,31,2)
(78,64,2)
(80,71,2)
(20,67,2)
(36,64,2)
(42,64,2)
(17,15,2)
(54,64,2)
(32,64,2)
(84,52,2)
(30,51,2)
(78,13,2)
(100,90,2)
(34,64,2)
(97,64,2)
(7,64,2)
(3,74,2)
(9,32,2)
(96,64,2)
(82,31,2)
(61,64,2)
(69,91,2)
(91,31,2)
(65,64,2)
(59,64,2)
(57,64,2)
(5,64,2)
(55,71,2)
(44,77,2)
(75,82,2)
(30,64,2)
(90,31,2)
(20,9,2)
(8,64,2)
(56,64,2)
(47,69,2)
(22,32,2)
(96,8,2)
(67,32,2)
(51,64,2)
(44,49,2)
(21,64,2)
(15,100,2)
(46,64,2)
(66,64,2)
(47,50,2)
(78,75,2)
(63,64,2)
(70,71,2)
(39,64,2)
(11,71,2)
(92,64,2)
(89,34,2)
(82,64,2)
(19,71,2)
(20,58,2)
(40,64,2)
(94,64,2)
(37,64,2)
(13,64,2)
(29,64,2)
(69,71,2)
(83,71,2)
(23,64,2)
(4,64,2)
(52,7,2)
(43,64,2)
-----------------------------------
(0,)
(1,receiver)
(2,receiver)
(3,&receiver->owned_names)
(4,receiver)
(5,r)
(6,policy)
(7,receiver->connection)
(8,receiver->bus)
(9,return error_fold(r)
(10,receiver_names)
(11,receiver)
(12,bus)
(13,receiver->bus)
(14,receiver)
(15,r = driver_monitor(receiver->bus, NULL, message)
(16,r)
(17,error_fold(r)
(18,receiver)
(19,r)
(20,RET)
(21,bus)
(22,error_fold(r)
(23,"Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.")
(24,LOG_WARNING)
(25,r)
(26,seclabel)
(27,receiver_names)
(28,receiver_names)
(29,&receiver_names)
(30,receiver->bus->log)
(31,Peer *receiver)
(32,r)
(33,r = log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
(34,NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
(35,)
(36,message)
(37,log)
(38,NULL)
(39,receiver->id)
(40,r)
(41,owned_names)
(42,receiver)
(43,receiver)
(44,log_commitf(receiver->bus->log, "Peer :1.%llu is being disconnected as it does not have the resources to receive a reply or unicast signal it expects.", receiver->id)
(45,0)
(46,log_append_here(receiver->bus->log, LOG_WARNING, 0)
(47,connection_queue(&receiver->connection, NULL, message)
(48,connection)
(49,receiver->bus->log)
(50,Message *message)
(51,receiver->bus)
(52,&receiver->connection)
(53,CONNECTION_E_QUOTA)
(54,seclabel)
(55,NULL)
(56,NULL)
(57,bus)
(58,return error_fold(r)
(59,receiver)
(60,return error_fold(r)
(61,bus)
(62,message)
(63,receiver)
(64,r == CONNECTION_E_QUOTA)
(65,log)
(66,ADDRESS_ID_INVALID)
(67,return 0;)
(68,receiver)
(69,&receiver->connection)
(70,connection)
(71,r)
(72,if (r == CONNECTION_E_QUOTA)
(73,r)
(74,receiver->owned_names)
(75,receiver->policy->seclabel)
(76,r)
(77,receiver->id)
(78,bus_log_append_transaction(receiver->bus, ADDRESS_ID_INVALID, receiver->id, NULL, &receiver_names,\n\\n                                                   receiver->bus->seclabel, receiver->policy->seclabel,\n\\n                                                   message)
(79,)
(80,r)
(81,if (r)
(82,receiver->policy)
(83,r = connection_queue(&receiver->connection, NULL, message)
(84,connection_shutdown(&receiver->connection)
(85,error_fold(r)
(86,bus)
(87,)
(88,r)
(89,receiver_names = NAME_SET_INIT_FROM_OWNER(&receiver->owned_names)
(90,receiver->bus)
(91,receiver->connection)
(92,id)
(93,if (r)
(94,id)
(95,message)
(96,receiver->bus->seclabel)
(97,receiver->bus)
(98,if (r)
(99,0)
(100,driver_monitor(receiver->bus, NULL, message)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^