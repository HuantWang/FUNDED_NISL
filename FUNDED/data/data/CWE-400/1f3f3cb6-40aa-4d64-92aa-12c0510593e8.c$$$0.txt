-----label-----
0
-----code-----
static void goodG2B2()
{
    int64_t * data;
    data = NULL;
    if(GLOBAL_CONST_TRUE)
    {
        /* FIX: Use memory allocated on the stack with ALLOCA */
        data = (int64_t *)ALLOCA(100*sizeof(int64_t));
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(GLOBAL_CONST_TRUE)
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
22,23
22,24
22,25
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
45,47
46,47
50,51
51,52
51,53
52,53
54,55
54,56
55,56
58,59
58,60
59,60
61,62
-----nextToken-----
2,4,9,11,12,16,18,21,26,30,32,35,37,41,42,47,48,49,53,56,57,60,62
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
static void goodG2B2(){    int64_t * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
static void
goodG2B2()
goodG2B2
{    int64_t * data;    data = NULL;    if(GLOBAL_CONST_TRUE)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(GLOBAL_CONST_TRUE)    {        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* FIX: Use memory allocated on the stack with ALLOCA */        data = (int64_t *)ALLOCA(100*sizeof(int64_t));        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)ALLOCA(100*sizeof(int64_t));
data = (int64_t *)ALLOCA(100*sizeof(int64_t))
data
data
(int64_t *)ALLOCA(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
ALLOCA(100*sizeof(int64_t))
ALLOCA
ALLOCA
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(GLOBAL_CONST_TRUE)    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(22,16,0)
(24,23,0)
(16,6,0)
(10,8,0)
(18,6,0)
(5,21,0)
(14,8,0)
(21,5,0)
(6,23,0)
(13,5,0)
(1,3,0)
(7,6,0)
(7,21,0)
(4,5,0)
(21,7,0)
(6,7,0)
(5,13,0)
(11,7,0)
(7,11,0)
(2,16,0)
(19,3,0)
(16,12,0)
(15,13,0)
(8,3,0)
(12,23,0)
(17,3,0)
(12,16,0)
(22,2,1)
(24,6,1)
(12,16,1)
(5,13,1)
(14,10,1)
(8,14,1)
(4,18,1)
(6,7,1)
(16,22,1)
(20,8,1)
(2,24,1)
(0,12,1)
(7,21,1)
(16,6,1)
(7,11,1)
(9,0,1)
(21,5,1)
(0,20,1)
(13,15,1)
(15,4,1)
(18,20,1)
(12,16,2)
(13,20,2)
(7,20,2)
(2,20,2)
(16,6,2)
(15,20,2)
(7,11,2)
(18,20,2)
(12,20,2)
(7,21,2)
(5,13,2)
(5,20,2)
(6,7,2)
(24,20,2)
(16,20,2)
(21,5,2)
(21,20,2)
(4,20,2)
(22,20,2)
(6,20,2)
-----------------------------------
(0,GLOBAL_CONST_TRUE)
(1,data)
(2,data)
(3,)
(4,100)
(5,100*sizeof(int64_t)
(6,data = (int64_t *)
(7,(int64_t *)
(8,data = NULL)
(9,RET)
(10,data)
(11,int64_t *)
(12,printLongLongLine(data[0])
(13,sizeof(int64_t)
(14,NULL)
(15,int64_t)
(16,data[0])
(17,if(GLOBAL_CONST_TRUE)
(18,data)
(19,if(GLOBAL_CONST_TRUE)
(20,GLOBAL_CONST_TRUE)
(21,ALLOCA(100*sizeof(int64_t)
(22,0)
(23,)
(24,L)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^