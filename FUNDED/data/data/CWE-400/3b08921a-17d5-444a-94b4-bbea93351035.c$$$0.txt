-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_calloc_01_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
50,51
52,53
55,56
56,57
56,58
57,58
59,60
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,51,53,54,58,60,61
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_calloc_01_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__wchar_t_calloc_01_bad()
CWE401_Memory_Leak__wchar_t_calloc_01_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)calloc(100, sizeof(wchar_t));
data = (wchar_t *)calloc(100, sizeof(wchar_t))
data
data
(wchar_t *)calloc(100, sizeof(wchar_t))
wchar_t *
wchar_t
*
*
calloc(100, sizeof(wchar_t))
calloc
calloc
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
;
-----joern-----
(12,16,0)
(10,22,0)
(2,23,0)
(19,23,0)
(21,20,0)
(14,18,0)
(24,2,0)
(6,20,0)
(14,22,0)
(9,16,0)
(20,16,0)
(4,12,0)
(23,2,0)
(5,16,0)
(15,16,0)
(7,20,0)
(2,21,0)
(22,14,0)
(0,9,0)
(11,6,0)
(12,20,0)
(8,21,0)
(13,6,0)
(21,8,0)
(20,21,0)
(21,2,0)
(3,9,0)
(11,13,1)
(12,4,1)
(0,3,1)
(7,9,1)
(21,8,1)
(6,11,1)
(19,24,1)
(13,20,1)
(10,6,1)
(24,7,1)
(14,22,1)
(1,12,1)
(12,20,1)
(22,10,1)
(2,23,1)
(21,2,1)
(4,6,1)
(23,19,1)
(20,21,1)
(6,20,1)
(9,0,1)
(4,14,1)
(14,6,2)
(2,23,2)
(20,21,2)
(21,2,2)
(22,6,2)
(12,20,2)
(21,8,2)
(6,20,2)
(10,6,2)
(14,22,2)
-----------------------------------
(0,NULL)
(1,RET)
(2,calloc(100, sizeof(wchar_t)
(3,data)
(4,data)
(5,if (data == NULL)
(6,data == NULL)
(7,data)
(8,wchar_t *)
(9,data = NULL)
(10,1)
(11,NULL)
(12,printWLine(data)
(13,data)
(14,exit(-1)
(15,data)
(16,)
(17, sizeof(wchar_t)
(18,)
(19,wchar_t)
(20,data = (wchar_t *)
(21,(wchar_t *)
(22,-1)
(23,sizeof(wchar_t)
(24,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^