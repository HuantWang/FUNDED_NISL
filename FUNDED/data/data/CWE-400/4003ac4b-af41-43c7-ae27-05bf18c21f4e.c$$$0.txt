-----label-----
1
-----code-----
char * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
34,35
36,37
37,38
38,39
38,40
39,40
41,42
43,44
44,45
44,46
44,47
45,46
47,48
50,51
51,52
51,53
52,53
54,55
56,57
57,58
-----nextToken-----
2,4,5,7,9,10,15,18,20,23,25,28,29,33,35,40,42,46,48,49,53,55,58
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
char
* CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)
*
CWE401_Memory_Leak__char_malloc_61b_badSource
char * data
char
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    return data;}
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
return data;
data
data
-----joern-----
(14,21,0)
(19,21,0)
(15,21,0)
(13,20,0)
(3,14,0)
(6,4,0)
(11,16,0)
(16,2,0)
(26,19,0)
(13,21,0)
(21,2,0)
(21,13,0)
(12,16,0)
(18,8,0)
(24,19,0)
(8,5,0)
(21,5,0)
(6,13,0)
(14,5,0)
(8,2,0)
(8,21,0)
(22,23,0)
(22,9,0)
(4,0,0)
(14,2,0)
(7,4,0)
(10,23,0)
(13,6,0)
(25,5,0)
(23,22,0)
(0,4,0)
(20,13,0)
(17,0,0)
(1,8,0)
(4,6,0)
(19,2,0)
(19,5,0)
(16,21,0)
(26,14,1)
(11,12,1)
(19,21,1)
(19,26,1)
(18,16,1)
(21,13,1)
(13,6,1)
(24,19,1)
(18,22,1)
(16,2,1)
(6,4,1)
(8,21,1)
(0,17,1)
(16,21,1)
(21,2,1)
(23,10,1)
(14,2,1)
(12,21,1)
(8,2,1)
(14,21,1)
(17,7,1)
(16,11,1)
(3,8,1)
(13,20,1)
(8,1,1)
(7,15,1)
(22,23,1)
(1,18,1)
(14,3,1)
(10,16,1)
(19,2,1)
(4,0,1)
(21,2,2)
(16,21,2)
(23,16,2)
(13,20,2)
(10,16,2)
(16,2,2)
(24,19,2)
(22,23,2)
(19,21,2)
(21,13,2)
(13,6,2)
(14,21,2)
(8,21,2)
(8,2,2)
(4,0,2)
(6,4,2)
(14,2,2)
(19,2,2)
(22,16,2)
-----------------------------------
(0,sizeof(char)
(1,"A String")
(2,char * data)
(3,data)
(4,100*sizeof(char)
(5,)
(6,malloc(100*sizeof(char)
(7,100)
(8,strcpy(data, "A String")
(9,)
(10,1)
(11,NULL)
(12,data)
(13,(char *)
(14,printLine(data)
(15,data)
(16,data == NULL)
(17,char)
(18,data)
(19,return data;)
(20,char *)
(21,data = (char *)
(22,exit(-1)
(23,-1)
(24,RET)
(25,if (data == NULL)
(26,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^