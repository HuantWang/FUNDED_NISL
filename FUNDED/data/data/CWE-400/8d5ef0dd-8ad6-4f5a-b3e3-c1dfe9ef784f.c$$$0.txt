-----label-----
1
-----code-----
static void
usage (FILE *stream, int status)
{
  fprintf (stream, _("Usage: %s [option(s)] [addr(s)]\n"), program_name);
  fprintf (stream, _(" Convert addresses into line number/file name pairs.\n"));
  fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\n"));
  fprintf (stream, _(" The options are:\n\
  @<file>                Read options from <file>\n\
  -a --addresses         Show addresses\n\
  -b --target=<bfdname>  Set the binary file format\n\
  -e --exe=<executable>  Set the input file name (default is a.out)\n\
  -i --inlines           Unwind inlined functions\n\
  -j --section=<name>    Read section-relative offsets instead of addresses\n\
  -p --pretty-print      Make the output easier to read for humans\n\
  -s --basenames         Strip directory names\n\
  -f --functions         Show function names\n\
  -C --demangle[=style]  Demangle function names\n\
  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\
  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\
  -h --help              Display this information\n\
  -v --version           Display the program's version\n\
\n"));

  list_supported_targets (program_name, stream);
  if (REPORT_BUGS_TO[0] && status == 0)
    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);
  exit (status);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
16,17
17,18
17,19
17,20
17,21
18,19
20,21
22,23
22,24
23,24
26,27
28,29
29,30
29,31
29,32
30,31
32,33
34,35
34,36
35,36
38,39
39,40
39,41
39,42
40,41
42,43
44,45
44,46
45,46
48,49
49,50
49,51
49,52
50,51
52,53
54,55
54,56
55,56
58,59
59,60
59,61
59,62
60,61
62,63
64,65
66,67
66,68
67,68
67,69
68,69
68,70
69,70
72,73
72,74
73,74
76,77
77,78
77,79
77,80
77,81
78,79
80,81
82,83
82,84
83,84
86,87
88,89
89,90
89,91
90,91
92,93
-----nextToken-----
2,4,7,9,10,12,14,19,21,24,25,27,31,33,36,37,41,43,46,47,51,53,56,57,61,63,65,70,71,74,75,79,81,84,85,87,91,93
-----computeFrom-----
67,68
67,69
72,73
72,74
-----guardedBy-----
70,87
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static voidusage (FILE *stream, int status){  fprintf (stream, _("Usage: %s [option(s)] [addr(s)]\n"), program_name);  fprintf (stream, _(" Convert addresses into line number/file name pairs.\n"));  fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\n"));  fprintf (stream, _(" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n"));  list_supported_targets (program_name, stream);  if (REPORT_BUGS_TO[0] && status == 0)    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);  exit (status);}
static void
usage (FILE *stream, int status)
usage
FILE *stream
FILE
FILE
*stream
*
stream
int status
int
status
status
{  fprintf (stream, _("Usage: %s [option(s)] [addr(s)]\n"), program_name);  fprintf (stream, _(" Convert addresses into line number/file name pairs.\n"));  fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\n"));  fprintf (stream, _(" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n"));  list_supported_targets (program_name, stream);  if (REPORT_BUGS_TO[0] && status == 0)    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);  exit (status);}
fprintf (stream, _("Usage: %s [option(s)] [addr(s)]\n"), program_name);
fprintf (stream, _("Usage: %s [option(s)] [addr(s)]\n"), program_name)
fprintf
fprintf
stream
stream
_("Usage: %s [option(s)] [addr(s)]\n")
_
_
"Usage: %s [option(s)] [addr(s)]\n"
program_name
program_name
fprintf (stream, _(" Convert addresses into line number/file name pairs.\n"));
fprintf (stream, _(" Convert addresses into line number/file name pairs.\n"))
fprintf
fprintf
stream
stream
_(" Convert addresses into line number/file name pairs.\n")
_
_
" Convert addresses into line number/file name pairs.\n"
fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\n"));
fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\n"))
fprintf
fprintf
stream
stream
_(" If no addresses are specified on the command line, they will be read from stdin\n")
_
_
" If no addresses are specified on the command line, they will be read from stdin\n"
fprintf (stream, _(" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n"));
fprintf (stream, _(" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n"))
fprintf
fprintf
stream
stream
_(" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n")
_
_
" The options are:\n\  @<file>                Read options from <file>\n\  -a --addresses         Show addresses\n\  -b --target=<bfdname>  Set the binary file format\n\  -e --exe=<executable>  Set the input file name (default is a.out)\n\  -i --inlines           Unwind inlined functions\n\  -j --section=<name>    Read section-relative offsets instead of addresses\n\  -p --pretty-print      Make the output easier to read for humans\n\  -s --basenames         Strip directory names\n\  -f --functions         Show function names\n\  -C --demangle[=style]  Demangle function names\n\  -R --recurse-limit     Enable a limit on recursion whilst demangling.  [Default]\n\  -r --no-recurse-limit  Disable a limit on recursion whilst demangling\n\  -h --help              Display this information\n\  -v --version           Display the program's version\n\\n"
list_supported_targets (program_name, stream);
list_supported_targets (program_name, stream)
list_supported_targets
list_supported_targets
program_name
program_name
stream
stream
if (REPORT_BUGS_TO[0] && status == 0)    fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);
REPORT_BUGS_TO[0] && status == 0
REPORT_BUGS_TO[0]
REPORT_BUGS_TO
REPORT_BUGS_TO
0
status == 0
status
status
0
fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO);
fprintf (stream, _("Report bugs to %s\n"), REPORT_BUGS_TO)
fprintf
fprintf
stream
stream
_("Report bugs to %s\n")
_
_
"Report bugs to %s\n"
REPORT_BUGS_TO
REPORT_BUGS_TO
exit (status);
exit (status)
exit
exit
status
status
-----joern-----
(37,22,0)
(29,22,0)
(9,2,0)
(13,23,0)
(6,37,0)
(25,7,0)
(21,23,0)
(3,33,0)
(36,24,0)
(14,31,0)
(7,6,0)
(29,23,0)
(19,23,0)
(34,13,0)
(13,16,0)
(18,2,0)
(8,33,0)
(17,3,0)
(28,33,0)
(5,37,0)
(32,24,0)
(20,13,0)
(37,6,0)
(26,37,0)
(31,23,0)
(19,16,0)
(6,7,0)
(15,7,0)
(32,16,0)
(30,20,0)
(4,19,0)
(2,18,0)
(18,16,0)
(18,23,0)
(38,19,0)
(12,29,0)
(31,16,0)
(35,14,0)
(13,20,0)
(33,16,0)
(11,18,0)
(24,32,0)
(32,23,0)
(31,14,0)
(27,13,0)
(33,3,0)
(0,32,0)
(10,31,0)
(36,0,1)
(12,33,1)
(14,35,1)
(31,14,1)
(33,8,1)
(27,20,1)
(37,26,1)
(3,17,1)
(19,16,1)
(17,28,1)
(13,20,1)
(32,24,1)
(6,7,1)
(18,2,1)
(2,9,1)
(25,15,1)
(8,3,1)
(38,31,1)
(11,32,1)
(6,37,1)
(24,36,1)
(20,30,1)
(1,29,1)
(10,18,1)
(28,6,1)
(30,34,1)
(37,22,1)
(29,12,1)
(31,16,1)
(7,25,1)
(33,16,1)
(35,10,1)
(5,7,1)
(19,4,1)
(4,38,1)
(13,27,1)
(18,16,1)
(32,16,1)
(13,16,1)
(9,11,1)
(0,13,1)
(33,3,1)
(29,22,1)
(12,6,1)
(26,5,1)
(15,19,1)
(13,20,2)
(17,6,2)
(32,16,2)
(5,7,2)
(37,22,2)
(33,16,2)
(29,22,2)
(6,7,2)
(26,7,2)
(28,6,2)
(31,16,2)
(3,6,2)
(18,2,2)
(37,7,2)
(19,16,2)
(18,16,2)
(33,3,2)
(6,37,2)
(32,24,2)
(8,6,2)
(33,6,2)
(31,14,2)
(13,16,2)
-----------------------------------
(0,stream)
(1,RET)
(2,_(" If no addresses are specified on the command line, they will be read from stdin\\n")
(3,_("Report bugs to %s\\n")
(4,stream)
(5,status)
(6,REPORT_BUGS_TO[0] && status == 0)
(7,REPORT_BUGS_TO[0])
(8,REPORT_BUGS_TO)
(9," If no addresses are specified on the command line, they will be read from stdin\\n")
(10,stream)
(11,stream)
(12,status)
(13,fprintf (stream, _("Usage: %s [option(s)
(14,_(" The options are:\\n\\\n\\n  @<file>                Read options from <file>\\n\\\n\\n  -a --addresses         Show addresses\\n\\\n\\n  -b --target=<bfdname>  Set the binary file format\\n\\\n\\n  -e --exe=<executable>  Set the input file name (default is a.out)
(15,REPORT_BUGS_TO)
(16,FILE *stream)
(17,"Report bugs to %s\\n")
(18,fprintf (stream, _(" If no addresses are specified on the command line, they will be read from stdin\\n")
(19,list_supported_targets (program_name, stream)
(20,_("Usage: %s [option(s)
(21,if (REPORT_BUGS_TO[0] && status == 0)
(22,int status)
(23,)
(24,_(" Convert addresses into line number/file name pairs.\\n")
(25,0)
(26,0)
(27,program_name)
(28,stream)
(29,exit (status)
(30,"Usage: %s [option(s)
(31,fprintf (stream, _(" The options are:\\n\\\n\\n  @<file>                Read options from <file>\\n\\\n\\n  -a --addresses         Show addresses\\n\\\n\\n  -b --target=<bfdname>  Set the binary file format\\n\\\n\\n  -e --exe=<executable>  Set the input file name (default is a.out)
(32,fprintf (stream, _(" Convert addresses into line number/file name pairs.\\n")
(33,fprintf (stream, _("Report bugs to %s\\n")
(34,stream)
(35," The options are:\\n\\\n\\n  @<file>                Read options from <file>\\n\\\n\\n  -a --addresses         Show addresses\\n\\\n\\n  -b --target=<bfdname>  Set the binary file format\\n\\\n\\n  -e --exe=<executable>  Set the input file name (default is a.out)
(36," Convert addresses into line number/file name pairs.\\n")
(37,status == 0)
(38,program_name)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^