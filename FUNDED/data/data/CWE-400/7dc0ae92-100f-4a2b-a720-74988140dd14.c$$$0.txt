-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_realloc_11_bad()
{
    int64_t * data;
    data = NULL;
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: Allocate memory on the heap */
        data = (int64_t *)realloc(data, 100*sizeof(int64_t));
        if (data == NULL) {exit(-1);}
        /* Initialize and make use of data */
        data[0] = 5LL;
        printLongLongLine(data[0]);
    }
    if(globalReturnsTrue())
    {
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
19,21
20,21
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
26,27
28,29
28,30
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
37,38
39,40
39,41
41,42
42,43
42,44
43,44
46,47
46,48
47,48
47,49
48,49
50,51
52,53
53,54
54,55
54,56
55,56
57,58
59,60
60,61
60,62
61,62
61,63
62,63
66,67
67,68
67,69
68,69
70,71
70,72
71,72
74,75
74,76
75,76
76,77
78,79
-----nextToken-----
2,4,9,11,12,16,18,22,27,31,33,36,38,40,44,45,49,51,56,58,63,64,65,69,72,73,77,79
-----computeFrom-----
14,15
14,16
25,26
25,27
39,40
39,41
47,48
47,49
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_realloc_11_bad(){    int64_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_realloc_11_bad()
CWE401_Memory_Leak__int64_t_realloc_11_bad
{    int64_t * data;    data = NULL;    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }    if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: Allocate memory on the heap */        data = (int64_t *)realloc(data, 100*sizeof(int64_t));        if (data == NULL) {exit(-1);}        /* Initialize and make use of data */        data[0] = 5LL;        printLongLongLine(data[0]);    }
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
if(globalReturnsTrue())    {        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
;
-----joern-----
(22,11,0)
(27,31,0)
(33,27,0)
(16,31,0)
(28,18,0)
(7,11,0)
(30,27,0)
(33,1,0)
(6,18,0)
(33,22,0)
(13,18,0)
(4,30,0)
(11,7,0)
(20,26,0)
(3,20,0)
(29,22,0)
(8,16,0)
(19,31,0)
(25,30,0)
(12,8,0)
(21,28,0)
(17,27,0)
(11,22,0)
(8,27,0)
(9,28,0)
(1,33,0)
(22,33,0)
(22,28,0)
(32,18,0)
(26,10,0)
(26,20,0)
(15,8,0)
(0,11,0)
(2,31,0)
(23,7,0)
(27,33,0)
(16,8,0)
(16,8,1)
(17,5,1)
(14,16,1)
(19,30,1)
(28,21,1)
(5,28,1)
(19,26,1)
(22,28,1)
(11,7,1)
(33,22,1)
(27,33,1)
(22,11,1)
(14,5,1)
(12,15,1)
(29,17,1)
(7,23,1)
(15,19,1)
(21,9,1)
(30,25,1)
(24,14,1)
(0,29,1)
(20,3,1)
(23,0,1)
(30,27,1)
(25,4,1)
(8,12,1)
(33,1,1)
(4,27,1)
(26,20,1)
(8,27,1)
(3,30,1)
(26,30,2)
(7,5,2)
(23,5,2)
(27,5,2)
(22,11,2)
(33,22,2)
(30,5,2)
(22,28,2)
(33,5,2)
(3,30,2)
(11,7,2)
(16,5,2)
(29,5,2)
(27,33,2)
(19,5,2)
(12,5,2)
(26,20,2)
(30,27,2)
(33,1,2)
(8,5,2)
(4,5,2)
(25,5,2)
(17,5,2)
(0,5,2)
(11,5,2)
(15,5,2)
(22,5,2)
(16,8,2)
(8,27,2)
(20,30,2)
-----------------------------------
(0,100)
(1,int64_t *)
(2,if (data == NULL)
(3,1)
(4,data)
(5,globalReturnsTrue()
(6,if(globalReturnsTrue()
(7,sizeof(int64_t)
(8,data[0])
(9,data)
(10,)
(11,100*sizeof(int64_t)
(12,0)
(13,data)
(14,globalReturnsTrue()
(15,data)
(16,printLongLongLine(data[0])
(17,data)
(18,)
(19,L)
(20,-1)
(21,NULL)
(22,realloc(data, 100*sizeof(int64_t)
(23,int64_t)
(24,RET)
(25,NULL)
(26,exit(-1)
(27,data = (int64_t *)
(28,data = NULL)
(29,data)
(30,data == NULL)
(31,)
(32,if(globalReturnsTrue()
(33,(int64_t *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^