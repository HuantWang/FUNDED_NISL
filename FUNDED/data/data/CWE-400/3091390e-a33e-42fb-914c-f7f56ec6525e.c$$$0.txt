-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_sleep_18_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    goto source;
source:
    /* POTENTIAL FLAW: Set count to a random value */
    count = RAND32();
    goto sink;
sink:
    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
    SLEEP(count);
    printLine("Sleep time possibly too long");
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
19,20
19,21
21,22
22,23
22,24
23,24
25,26
26,27
28,29
30,31
30,32
32,33
33,34
33,35
34,35
36,37
38,39
39,40
39,41
40,41
-----nextToken-----
2,4,8,10,14,16,18,20,24,27,29,31,35,37,41,42
-----computeFrom-----
12,13
12,14
22,23
22,24
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_sleep_18_bad(){    int count;    /* Initialize count */    count = -1;    goto source;source:    /* POTENTIAL FLAW: Set count to a random value */    count = RAND32();    goto sink;sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
void
CWE400_Resource_Exhaustion__rand_sleep_18_bad()
CWE400_Resource_Exhaustion__rand_sleep_18_bad
{    int count;    /* Initialize count */    count = -1;    goto source;source:    /* POTENTIAL FLAW: Set count to a random value */    count = RAND32();    goto sink;sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);    printLine("Sleep time possibly too long");}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
goto source;
source
source:    /* POTENTIAL FLAW: Set count to a random value */    count = RAND32();
source
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
goto sink;
sink
sink:    /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */    SLEEP(count);
sink
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(2,6,0)
(9,6,0)
(10,3,0)
(12,6,0)
(12,15,0)
(1,9,0)
(11,6,0)
(15,6,0)
(16,6,0)
(11,3,0)
(14,12,0)
(15,13,0)
(0,6,0)
(17,15,0)
(8,11,0)
(3,11,0)
(7,6,0)
(13,15,0)
(5,6,0)
(12,14,1)
(1,12,1)
(17,16,1)
(5,15,1)
(16,11,1)
(12,15,1)
(3,10,1)
(4,9,1)
(11,3,1)
(14,5,1)
(13,17,1)
(10,8,1)
(15,13,1)
(9,1,1)
(12,15,2)
(15,13,2)
(11,3,2)
-----------------------------------
(0,source:)
(1,"Sleep time possibly too long")
(2,count)
(3,-1)
(4,RET)
(5,goto sink;)
(6,)
(7,sink:)
(8,count)
(9,printLine("Sleep time possibly too long")
(10,1)
(11,count = -1)
(12,SLEEP(count)
(13,RAND32()
(14,count)
(15,count = RAND32()
(16,goto source;)
(17,count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^