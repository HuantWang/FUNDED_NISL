-----label-----
0
-----code-----
static void goodG2B()
{
    int * data;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (int *)ALLOCA(100*sizeof(int));
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
38,39
38,40
39,40
43,44
44,45
44,46
45,46
47,48
47,49
48,49
51,52
52,53
52,54
53,54
55,56
56,57
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,40,41,42,46,49,50,54,57
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    int * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (int *)ALLOCA(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data);}
static void
goodG2B()
goodG2B
{    int * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (int *)ALLOCA(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)ALLOCA(100*sizeof(int));
data = (int *)ALLOCA(100*sizeof(int))
data
data
(int *)ALLOCA(100*sizeof(int))
int *
int
*
*
ALLOCA(100*sizeof(int))
ALLOCA
ALLOCA
100*sizeof(int)
100
sizeof(int)
int
int

data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data);
CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data)
CWE401_Memory_Leak__int_malloc_63b_goodG2BSink
CWE401_Memory_Leak__int_malloc_63b_goodG2BSink
&data
data
data
-----joern-----
(6,10,0)
(24,13,0)
(5,16,0)
(5,4,0)
(4,24,0)
(11,16,0)
(8,12,0)
(6,13,0)
(17,24,0)
(2,7,0)
(16,5,0)
(19,22,0)
(7,13,0)
(13,22,0)
(26,10,0)
(7,0,0)
(10,22,0)
(0,22,0)
(4,5,0)
(23,6,0)
(7,10,0)
(3,5,0)
(18,22,0)
(19,12,0)
(25,1,0)
(0,7,0)
(21,7,0)
(12,19,0)
(20,13,0)
(14,1,0)
(1,22,0)
(12,13,0)
(24,4,0)
(13,24,0)
(24,17,0)
(9,6,0)
(26,6,1)
(2,10,1)
(10,26,1)
(14,25,1)
(19,12,1)
(15,19,1)
(23,9,1)
(5,16,1)
(12,13,1)
(7,13,1)
(21,2,1)
(20,1,1)
(7,21,1)
(9,13,1)
(0,7,1)
(6,23,1)
(11,3,1)
(12,8,1)
(6,13,1)
(8,0,1)
(3,20,1)
(16,11,1)
(24,17,1)
(24,4,1)
(4,5,1)
(7,10,1)
(1,14,1)
(13,24,1)
(19,12,2)
(6,13,2)
(24,17,2)
(12,13,2)
(0,7,2)
(5,16,2)
(13,24,2)
(24,4,2)
(7,13,2)
(7,10,2)
(4,5,2)
-----------------------------------
(0,printIntLine(data[0])
(1,data = NULL)
(2,data)
(3,100)
(4,ALLOCA(100*sizeof(int)
(5,100*sizeof(int)
(6,data[0])
(7,data[0])
(8,data)
(9,data)
(10,data[0] = 5)
(11,int)
(12,&data)
(13,data = (int *)
(14,NULL)
(15,RET)
(16,sizeof(int)
(17,int *)
(18,data)
(19,CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(&data)
(20,data)
(21,0)
(22,)
(23,0)
(24,(int *)
(25,data)
(26,5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^