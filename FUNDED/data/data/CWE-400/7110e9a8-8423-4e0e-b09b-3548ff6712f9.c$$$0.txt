-----label-----
1
-----code-----
static int
kbdint_next_device(Authctxt *authctxt, KbdintAuthctxt *kbdintctxt)
{
	size_t len;
	char *t;
	int i;

	if (kbdintctxt->device)
		kbdint_reset_device(kbdintctxt);
	do {
		len = kbdintctxt->devices ?
		    strcspn(kbdintctxt->devices, ",") : 0;

		if (len == 0)
			break;
		for (i = 0; devices[i]; i++) {
			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||
			    !auth2_method_allowed(authctxt,
			    "keyboard-interactive", devices[i]->name))
				continue;
			if (strncmp(kbdintctxt->devices, devices[i]->name,
			    len) == 0) {
				kbdintctxt->device = devices[i];
				kbdintctxt->devices_done |= 1 << i;
			}
		}
		t = kbdintctxt->devices;
		kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;
		free(t);
		debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?
		    kbdintctxt->devices : "<empty>");
	} while (kbdintctxt->devices && !kbdintctxt->device);

	return kbdintctxt->device ? 1 : 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
18,19
19,20
19,21
20,21
22,23
24,25
25,26
25,27
27,28
27,29
30,31
31,32
31,33
33,34
35,36
35,37
36,37
36,38
37,38
40,41
41,42
41,43
42,43
44,45
46,47
46,48
47,48
47,49
47,50
47,51
47,52
47,53
47,54
48,49
49,50
49,51
50,51
52,53
52,54
52,55
53,54
53,55
54,55
57,58
57,59
57,60
58,59
60,61
60,62
61,62
66,67
66,68
67,68
67,69
68,69
72,73
72,74
72,75
72,76
73,74
74,75
74,76
75,76
78,79
78,80
79,80
81,82
83,84
84,85
86,87
86,88
87,88
87,89
88,89
88,90
89,90
89,91
90,91
91,92
91,93
92,93
92,94
93,94
96,97
97,98
97,99
99,100
102,103
103,104
103,105
103,106
103,107
104,105
106,107
109,110
109,111
110,111
110,112
111,112
113,114
117,118
117,119
118,119
118,120
119,120
119,121
119,122
119,123
120,121
122,123
122,124
123,124
126,127
126,128
127,128
127,129
128,129
130,131
133,134
136,137
136,138
137,138
138,139
138,140
139,140
139,141
140,141
143,144
143,145
144,145
146,147
148,149
149,150
149,151
150,151
150,152
151,152
154,155
154,156
156,157
158,159
159,160
159,161
160,161
162,163
162,164
163,164
166,167
167,168
167,169
168,169
168,170
169,170
172,173
172,174
172,175
173,174
173,175
174,175
176,177
178,179
178,180
179,180
181,182
181,183
182,183
182,184
183,184
185,186
188,189
190,191
191,192
191,193
192,193
194,195
196,197
197,198
197,199
197,200
198,199
201,202
201,203
201,204
202,203
202,204
203,204
206,207
206,208
207,208
211,212
211,213
212,213
212,214
213,214
216,217
217,218
217,219
218,219
221,222
222,223
222,224
222,225
223,224
223,225
224,225
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,26,28,29,32,34,38,39,43,45,51,55,56,59,62,63,64,65,69,70,71,76,77,80,82,85,94,95,98,100,101,105,107,108,112,114,115,116,121,124,125,129,131,132,134,135,141,142,145,147,152,153,155,157,161,164,165,170,171,175,177,180,184,186,187,189,193,195,199,200,204,205,208,209,210,214,215,219,220,225,226,227,228
-----computeFrom-----
49,50
49,51
67,68
67,69
74,75
74,76
88,89
88,90
89,90
89,91
91,92
91,93
97,98
97,99
118,119
118,120
138,139
138,140
149,150
149,151
154,155
154,156
159,160
159,161
167,168
167,169
181,182
181,183
182,183
182,184
211,212
211,213
-----guardedBy-----
124,152
129,145
131,157
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DoStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;ConditionalExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BreakStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ContinueStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;ConditionalExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ConditionalExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;ConditionalExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;
-----ast_node-----
static intkbdint_next_device(Authctxt *authctxt, KbdintAuthctxt *kbdintctxt){	size_t len;	char *t;	int i;	if (kbdintctxt->device)		kbdint_reset_device(kbdintctxt);	do {		len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0;		if (len == 0)			break;		for (i = 0; devices[i]; i++) {			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}		t = kbdintctxt->devices;		kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;		free(t);		debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>");	} while (kbdintctxt->devices && !kbdintctxt->device);	return kbdintctxt->device ? 1 : 0;}
static int
kbdint_next_device(Authctxt *authctxt, KbdintAuthctxt *kbdintctxt)
kbdint_next_device
Authctxt *authctxt
Authctxt
Authctxt
*authctxt
*
authctxt
KbdintAuthctxt *kbdintctxt
KbdintAuthctxt
KbdintAuthctxt
*kbdintctxt
*
kbdintctxt
{	size_t len;	char *t;	int i;	if (kbdintctxt->device)		kbdint_reset_device(kbdintctxt);	do {		len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0;		if (len == 0)			break;		for (i = 0; devices[i]; i++) {			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}		t = kbdintctxt->devices;		kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;		free(t);		debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>");	} while (kbdintctxt->devices && !kbdintctxt->device);	return kbdintctxt->device ? 1 : 0;}
size_t len;
size_t len;
size_t
size_t
len
len
char *t;
char *t;
char
*t
*
t
int i;
int i;
int
i
i
if (kbdintctxt->device)		kbdint_reset_device(kbdintctxt);
kbdintctxt->device
kbdintctxt
kbdintctxt
device
kbdint_reset_device(kbdintctxt);
kbdint_reset_device(kbdintctxt)
kbdint_reset_device
kbdint_reset_device
kbdintctxt
kbdintctxt
do {		len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0;		if (len == 0)			break;		for (i = 0; devices[i]; i++) {			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}		t = kbdintctxt->devices;		kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;		free(t);		debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>");	} while (kbdintctxt->devices && !kbdintctxt->device);
{		len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0;		if (len == 0)			break;		for (i = 0; devices[i]; i++) {			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}		t = kbdintctxt->devices;		kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;		free(t);		debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>");	}
len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0;
len = kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0
len
len
kbdintctxt->devices ?		    strcspn(kbdintctxt->devices, ",") : 0
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
strcspn(kbdintctxt->devices, ",")
strcspn
strcspn
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
","
0
if (len == 0)			break;
len == 0
len
len
0
break;
for (i = 0; devices[i]; i++) {			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}
i = 0;
i = 0
i
i
0
devices[i]
devices
devices
i
i
i++
i
i
{			if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;			if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}		}
if ((kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name))				continue;
(kbdintctxt->devices_done & (1 << i)) != 0 ||			    !auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name)
(kbdintctxt->devices_done & (1 << i)) != 0
(kbdintctxt->devices_done & (1 << i))
kbdintctxt->devices_done & (1 << i)
kbdintctxt->devices_done
kbdintctxt
kbdintctxt
devices_done
(1 << i)
1 << i
1
i
i
0
!auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name)
auth2_method_allowed(authctxt,			    "keyboard-interactive", devices[i]->name)
auth2_method_allowed
auth2_method_allowed
authctxt
authctxt
"keyboard-interactive"
devices[i]->name
devices[i]
devices
devices
i
i
name
continue;
if (strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0) {				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}
strncmp(kbdintctxt->devices, devices[i]->name,			    len) == 0
strncmp(kbdintctxt->devices, devices[i]->name,			    len)
strncmp
strncmp
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
devices[i]->name
devices[i]
devices
devices
i
i
name
len
len
0
{				kbdintctxt->device = devices[i];				kbdintctxt->devices_done |= 1 << i;			}
kbdintctxt->device = devices[i];
kbdintctxt->device = devices[i]
kbdintctxt->device
kbdintctxt
kbdintctxt
device
devices[i]
devices
devices
i
i
kbdintctxt->devices_done |= 1 << i;
kbdintctxt->devices_done |= 1 << i
kbdintctxt->devices_done
kbdintctxt
kbdintctxt
devices_done
1 << i
1
i
i
t = kbdintctxt->devices;
t = kbdintctxt->devices
t
t
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL;
kbdintctxt->devices = t[len] ? xstrdup(t+len+1) : NULL
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
t[len] ? xstrdup(t+len+1) : NULL
t[len]
t
t
len
len
xstrdup(t+len+1)
xstrdup
xstrdup
t+len+1
t+len
t
t
len
len
1
NULL
NULL
free(t);
free(t)
free
free
t
t
debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>");
debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>")
debug2
debug2
"kbdint_next_device: devices %s"
kbdintctxt->devices ?		    kbdintctxt->devices : "<empty>"
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
"<empty>"
kbdintctxt->devices && !kbdintctxt->device
kbdintctxt->devices
kbdintctxt
kbdintctxt
devices
!kbdintctxt->device
kbdintctxt->device
kbdintctxt
kbdintctxt
device
return kbdintctxt->device ? 1 : 0;
kbdintctxt->device ? 1 : 0
kbdintctxt->device
kbdintctxt
kbdintctxt
device
1
0
-----joern-----
(114,37,0)
(23,20,0)
(34,39,0)
(58,39,0)
(50,120,0)
(81,71,0)
(25,71,0)
(72,106,0)
(79,68,0)
(101,112,0)
(105,112,0)
(115,40,0)
(55,112,0)
(135,132,0)
(55,92,0)
(102,106,0)
(46,82,0)
(96,74,0)
(35,70,0)
(61,132,0)
(14,26,0)
(45,98,0)
(5,134,0)
(127,79,0)
(71,92,0)
(38,49,0)
(14,82,0)
(40,116,0)
(30,66,0)
(98,74,0)
(29,8,0)
(116,53,0)
(97,87,0)
(13,126,0)
(53,116,0)
(27,124,0)
(63,125,0)
(110,72,0)
(37,44,0)
(131,107,0)
(26,6,0)
(1,137,0)
(37,58,0)
(28,116,0)
(49,90,0)
(88,66,0)
(117,137,0)
(134,106,0)
(32,128,0)
(98,45,0)
(91,68,0)
(70,23,0)
(118,65,0)
(16,45,0)
(107,116,0)
(112,106,0)
(136,43,0)
(15,6,0)
(25,123,0)
(109,120,0)
(119,34,0)
(24,34,0)
(41,130,0)
(107,71,0)
(43,49,0)
(45,6,0)
(125,87,0)
(73,127,0)
(87,120,0)
(87,74,0)
(113,80,0)
(116,40,0)
(64,93,0)
(100,105,0)
(126,39,0)
(90,7,0)
(21,39,0)
(75,53,0)
(74,6,0)
(79,127,0)
(121,45,0)
(40,71,0)
(54,39,0)
(77,125,0)
(56,63,0)
(116,107,0)
(26,14,0)
(2,107,0)
(80,71,0)
(51,15,0)
(86,63,0)
(128,6,0)
(19,104,0)
(132,39,0)
(71,7,0)
(0,92,0)
(70,6,0)
(18,26,0)
(25,6,0)
(123,25,0)
(107,6,0)
(63,6,0)
(92,55,0)
(72,81,0)
(78,120,0)
(92,71,0)
(124,6,0)
(123,33,0)
(80,6,0)
(98,20,0)
(90,15,0)
(80,44,0)
(106,72,0)
(44,93,0)
(11,92,0)
(22,79,0)
(63,23,0)
(82,118,0)
(104,6,0)
(134,6,0)
(62,74,0)
(33,123,0)
(53,7,0)
(59,81,0)
(8,39,0)
(127,31,0)
(130,90,0)
(111,90,0)
(87,45,0)
(81,72,0)
(122,7,0)
(103,43,0)
(92,0,0)
(106,112,0)
(137,14,0)
(85,120,0)
(93,44,0)
(94,80,0)
(132,23,0)
(89,55,0)
(15,90,0)
(47,126,0)
(84,68,0)
(134,71,0)
(81,6,0)
(95,125,0)
(0,49,0)
(9,104,0)
(108,44,0)
(49,43,0)
(26,98,0)
(68,79,0)
(127,65,0)
(10,7,0)
(99,40,0)
(42,127,0)
(65,127,0)
(98,126,0)
(60,15,0)
(70,33,0)
(129,81,0)
(44,112,0)
(40,6,0)
(87,128,0)
(130,7,0)
(133,105,0)
(58,37,0)
(12,120,0)
(43,112,0)
(49,0,0)
(106,134,0)
(23,132,0)
(48,25,0)
(82,14,0)
(126,98,0)
(44,80,0)
(68,39,0)
(15,71,0)
(67,58,0)
(14,137,0)
(83,25,0)
(36,58,0)
(44,37,0)
(137,39,0)
(112,7,0)
(3,128,0)
(17,134,0)
(65,118,0)
(33,70,0)
(69,70,0)
(125,63,0)
(52,55,0)
(55,90,0)
(128,71,0)
(118,82,0)
(98,128,0)
(74,23,0)
(4,26,0)
(95,63,1)
(127,79,1)
(63,6,1)
(40,6,1)
(87,125,1)
(100,112,1)
(125,77,1)
(34,39,1)
(15,6,1)
(111,34,1)
(110,81,1)
(116,40,1)
(71,92,1)
(17,5,1)
(104,6,1)
(62,96,1)
(49,43,1)
(98,128,1)
(101,124,1)
(92,0,1)
(98,45,1)
(22,68,1)
(87,128,1)
(70,6,1)
(36,67,1)
(89,52,1)
(29,93,1)
(0,49,1)
(70,23,1)
(80,113,1)
(132,39,1)
(55,112,1)
(47,45,1)
(116,107,1)
(98,126,1)
(119,8,1)
(73,42,1)
(55,90,1)
(79,22,1)
(64,44,1)
(43,112,1)
(127,31,1)
(15,51,1)
(46,14,1)
(134,6,1)
(33,70,1)
(128,6,1)
(42,82,1)
(119,39,1)
(87,45,1)
(131,75,1)
(128,3,1)
(130,41,1)
(83,48,1)
(26,6,1)
(44,80,1)
(74,6,1)
(53,116,1)
(84,73,1)
(124,27,1)
(63,23,1)
(65,127,1)
(123,33,1)
(13,47,1)
(136,38,1)
(52,128,1)
(63,86,1)
(130,90,1)
(60,111,1)
(67,80,1)
(56,123,1)
(132,61,1)
(44,37,1)
(14,26,1)
(16,121,1)
(51,60,1)
(137,39,1)
(26,98,1)
(74,62,1)
(90,15,1)
(25,83,1)
(133,100,1)
(40,71,1)
(19,9,1)
(29,57,1)
(92,55,1)
(34,24,1)
(125,63,1)
(94,118,1)
(45,6,1)
(15,71,1)
(29,98,1)
(97,87,1)
(48,53,1)
(45,16,1)
(101,104,1)
(32,90,1)
(81,71,1)
(72,81,1)
(92,11,1)
(80,6,1)
(102,134,1)
(57,118,1)
(108,37,1)
(116,28,1)
(25,71,1)
(76,105,1)
(106,102,1)
(8,39,1)
(49,90,1)
(81,6,1)
(26,18,1)
(82,14,1)
(134,71,1)
(3,32,1)
(58,36,1)
(81,129,1)
(5,101,1)
(113,94,1)
(93,44,1)
(118,65,1)
(58,39,1)
(11,55,1)
(121,23,1)
(75,130,1)
(44,112,1)
(54,105,1)
(129,59,1)
(96,93,1)
(39,21,1)
(93,64,1)
(79,68,1)
(4,34,1)
(115,107,1)
(21,54,1)
(101,123,1)
(107,6,1)
(91,84,1)
(103,136,1)
(104,19,1)
(37,114,1)
(61,135,1)
(72,110,1)
(125,95,1)
(99,115,1)
(98,74,1)
(8,29,1)
(28,107,1)
(56,76,1)
(80,71,1)
(18,4,1)
(23,132,1)
(134,17,1)
(107,2,1)
(68,39,1)
(41,71,1)
(25,6,1)
(27,104,1)
(117,26,1)
(105,112,1)
(59,134,1)
(68,91,1)
(106,134,1)
(114,58,1)
(37,58,1)
(44,108,1)
(70,35,1)
(137,1,1)
(106,72,1)
(14,137,1)
(55,89,1)
(124,6,1)
(1,117,1)
(2,131,1)
(126,39,1)
(105,133,1)
(77,63,1)
(43,103,1)
(87,74,1)
(82,46,1)
(86,56,1)
(112,106,1)
(40,99,1)
(135,74,1)
(118,82,1)
(123,25,1)
(38,55,1)
(35,69,1)
(24,119,1)
(126,13,1)
(107,71,1)
(69,25,1)
(72,81,2)
(65,127,2)
(35,25,2)
(116,105,2)
(117,34,2)
(70,25,2)
(137,34,2)
(37,58,2)
(98,128,2)
(38,55,2)
(119,34,2)
(87,45,2)
(17,123,2)
(99,107,2)
(37,118,2)
(135,93,2)
(14,26,2)
(58,118,2)
(100,123,2)
(92,105,2)
(55,112,2)
(25,6,2)
(59,134,2)
(26,98,2)
(95,63,2)
(79,82,2)
(98,45,2)
(54,105,2)
(124,104,2)
(2,105,2)
(83,105,2)
(40,6,2)
(53,105,2)
(134,123,2)
(106,134,2)
(114,118,2)
(131,105,2)
(96,93,2)
(23,93,2)
(81,71,2)
(115,107,2)
(127,79,2)
(64,118,2)
(98,126,2)
(82,34,2)
(75,105,2)
(58,39,2)
(93,44,2)
(25,105,2)
(81,6,2)
(126,39,2)
(53,116,2)
(40,107,2)
(27,104,2)
(106,123,2)
(43,55,2)
(0,49,2)
(32,105,2)
(110,134,2)
(82,14,2)
(11,55,2)
(8,34,2)
(136,55,2)
(45,6,2)
(71,105,2)
(22,82,2)
(132,93,2)
(48,105,2)
(133,123,2)
(127,82,2)
(90,15,2)
(13,93,2)
(41,105,2)
(14,137,2)
(49,43,2)
(93,118,2)
(107,105,2)
(49,55,2)
(127,31,2)
(72,134,2)
(124,6,2)
(57,118,2)
(101,123,2)
(5,123,2)
(15,6,2)
(24,105,2)
(14,34,2)
(123,105,2)
(102,134,2)
(87,74,2)
(84,82,2)
(90,105,2)
(98,74,2)
(105,112,2)
(26,6,2)
(134,71,2)
(34,39,2)
(0,55,2)
(16,93,2)
(126,93,2)
(130,90,2)
(8,39,2)
(68,82,2)
(74,6,2)
(112,106,2)
(62,93,2)
(137,39,2)
(63,23,2)
(55,105,2)
(123,33,2)
(91,82,2)
(92,55,2)
(18,34,2)
(80,71,2)
(23,132,2)
(33,70,2)
(104,6,2)
(74,93,2)
(118,65,2)
(3,105,2)
(69,25,2)
(130,105,2)
(55,90,2)
(81,134,2)
(34,105,2)
(44,118,2)
(44,80,2)
(49,90,2)
(105,123,2)
(25,71,2)
(107,6,2)
(47,93,2)
(4,34,2)
(52,105,2)
(119,105,2)
(39,105,2)
(97,87,2)
(103,55,2)
(70,6,2)
(63,6,2)
(60,105,2)
(132,39,2)
(1,34,2)
(28,107,2)
(68,39,2)
(70,23,2)
(26,34,2)
(134,6,2)
(107,71,2)
(106,72,2)
(87,128,2)
(123,25,2)
(118,34,2)
(77,63,2)
(33,25,2)
(15,71,2)
(44,112,2)
(128,105,2)
(112,123,2)
(113,118,2)
(121,93,2)
(46,34,2)
(73,82,2)
(45,93,2)
(65,82,2)
(42,82,2)
(71,92,2)
(116,40,2)
(98,93,2)
(76,105,2)
(108,118,2)
(116,107,2)
(67,118,2)
(44,37,2)
(125,63,2)
(129,134,2)
(40,71,2)
(43,112,2)
(29,34,2)
(21,105,2)
(79,68,2)
(94,118,2)
(80,118,2)
(24,34,2)
(51,105,2)
(118,82,2)
(61,93,2)
(128,6,2)
(92,0,2)
(34,34,2)
(80,6,2)
(36,118,2)
(111,105,2)
(89,105,2)
(15,105,2)
-----------------------------------
(0,xstrdup(t+len+1)
(1,i)
(2,devices)
(3,devices)
(4,kbdintctxt)
(5,kbdintctxt)
(6,KbdintAuthctxt *kbdintctxt)
(7,)
(8,i++)
(9,kbdintctxt)
(10,for (i = 0; devices[i]; i++)
(11,NULL)
(12,len)
(13,i)
(14,kbdintctxt->devices_done & (1 << i)
(15,kbdintctxt->devices)
(16,devices_done)
(17,devices)
(18,devices_done)
(19,device)
(20,)
(21,0)
(22,name)
(23,kbdintctxt->device = devices[i])
(24,i)
(25,kbdintctxt->devices)
(26,kbdintctxt->devices_done)
(27,kbdintctxt)
(28,"<empty>")
(29,i)
(30,if ((kbdintctxt->devices_done & (1 << i)
(31,Authctxt *authctxt)
(32,kbdintctxt)
(33,!kbdintctxt->device)
(34,devices[i])
(35,device)
(36,i)
(37,devices[i]->name)
(38,t)
(39,i = 0)
(40,kbdintctxt->devices)
(41,t)
(42,authctxt)
(43,len+1)
(44,strncmp(kbdintctxt->devices, devices[i]->name,\n\\n\\t\\t\\t    len)
(45,kbdintctxt->devices_done)
(46,0)
(47,1)
(48,kbdintctxt)
(49,t+len+1)
(50,do)
(51,devices)
(52,t)
(53,debug2("kbdint_next_device: devices %s", kbdintctxt->devices ?\n\\n\\t\\t    kbdintctxt->devices : "<empty>")
(54,i)
(55,t[len])
(56,kbdintctxt)
(57,continue;)
(58,devices[i])
(59,kbdintctxt)
(60,kbdintctxt)
(61,i)
(62,device)
(63,kbdintctxt->device)
(64,0)
(65,!auth2_method_allowed(authctxt,\n\\n\\t\\t\\t    "keyboard-interactive", devices[i]->name)
(66,)
(67,devices)
(68,devices[i])
(69,kbdintctxt)
(70,kbdintctxt->device)
(71,kbdintctxt->devices = t[len] ? xstrdup(t+len+1)
(72,strcspn(kbdintctxt->devices, ",")
(73,"keyboard-interactive")
(74,kbdintctxt->device)
(75,"kbdint_next_device: devices %s")
(76,break;)
(77,1)
(78,t)
(79,devices[i]->name)
(80,kbdintctxt->devices)
(81,kbdintctxt->devices)
(82,(kbdintctxt->devices_done & (1 << i)
(83,devices)
(84,devices)
(85,i)
(86,device)
(87,return kbdintctxt->device ? 1 : 0;)
(88,if (strncmp(kbdintctxt->devices, devices[i]->name,\n\\n\\t\\t\\t    len)
(89,len)
(90,t = kbdintctxt->devices)
(91,i)
(92,t[len] ? xstrdup(t+len+1)
(93,strncmp(kbdintctxt->devices, devices[i]->name,\n\\n\\t\\t\\t    len)
(94,kbdintctxt)
(95,0)
(96,kbdintctxt)
(97,RET)
(98,kbdintctxt->devices_done |= 1 << i)
(99,devices)
(100,len)
(101,len)
(102,0)
(103,1)
(104,kbdintctxt->device)
(105,len == 0)
(106,kbdintctxt->devices ?\n\\n\\t\\t    strcspn(kbdintctxt->devices, ",")
(107,kbdintctxt->devices)
(108,len)
(109,if (kbdintctxt->device)
(110,",")
(111,t)
(112,len = kbdintctxt->devices ?\n\\n\\t\\t    strcspn(kbdintctxt->devices, ",")
(113,devices)
(114,name)
(115,kbdintctxt)
(116,kbdintctxt->devices ?\n\\n\\t\\t    kbdintctxt->devices : "<empty>")
(117,1)
(118,(kbdintctxt->devices_done & (1 << i)
(119,devices)
(120,)
(121,kbdintctxt)
(122,if (len == 0)
(123,kbdintctxt->devices && !kbdintctxt->device)
(124,kbdint_reset_device(kbdintctxt)
(125,kbdintctxt->device ? 1 : 0)
(126,1 << i)
(127,auth2_method_allowed(authctxt,\n\\n\\t\\t\\t    "keyboard-interactive", devices[i]->name)
(128,kbdintctxt->devices)
(129,devices)
(130,free(t)
(131,kbdintctxt)
(132,devices[i])
(133,0)
(134,kbdintctxt->devices)
(135,devices)
(136,len)
(137,1 << i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^