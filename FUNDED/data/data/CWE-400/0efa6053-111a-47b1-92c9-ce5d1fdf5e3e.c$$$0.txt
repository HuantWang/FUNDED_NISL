-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_malloc_34_bad()
{
    int64_t * data;
    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)malloc(100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    myUnion.unionFirst = data;
    {
        int64_t * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
30,31
30,32
31,32
33,34
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
49,50
51,52
52,53
53,54
53,55
54,55
56,57
58,59
59,60
59,61
60,61
60,62
61,62
65,66
66,67
66,68
67,68
69,70
69,71
70,71
73,74
74,75
74,76
75,76
75,77
76,77
79,80
81,82
81,83
82,83
83,84
83,85
84,85
86,87
86,88
86,89
89,90
90,91
90,92
91,92
-----nextToken-----
2,4,9,11,12,16,18,22,24,28,32,34,37,39,43,44,48,50,55,57,62,63,64,68,71,72,77,78,80,85,87,88,92,93,94
-----computeFrom-----
20,21
20,22
26,27
26,28
38,39
38,40
46,47
46,48
59,60
59,61
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_malloc_34_bad(){    int64_t * data;    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__int64_t_malloc_34_bad()
CWE401_Memory_Leak__int64_t_malloc_34_bad
{    int64_t * data;    CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)malloc(100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    myUnion.unionFirst = data;    {        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_malloc_34_unionType myUnion;
CWE401_Memory_Leak__int64_t_malloc_34_unionType
CWE401_Memory_Leak__int64_t_malloc_34_unionType
myUnion
myUnion
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)malloc(100*sizeof(int64_t));
data = (int64_t *)malloc(100*sizeof(int64_t))
data
data
(int64_t *)malloc(100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
malloc(100*sizeof(int64_t))
malloc
malloc
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        int64_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
int64_t * data = myUnion.unionSecond;
int64_t * data = myUnion.unionSecond;
int64_t
int64_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
;
-----joern-----
(20,14,0)
(7,31,0)
(16,35,0)
(31,1,0)
(5,4,0)
(27,38,0)
(38,35,0)
(6,29,0)
(33,10,0)
(33,4,0)
(24,14,0)
(30,12,0)
(10,33,0)
(26,5,0)
(14,35,0)
(9,27,0)
(1,5,0)
(10,23,0)
(37,27,0)
(5,35,0)
(23,10,0)
(18,23,0)
(36,0,0)
(3,5,0)
(6,12,0)
(22,4,0)
(39,35,0)
(34,3,0)
(4,33,0)
(15,24,0)
(11,35,0)
(27,5,0)
(1,35,0)
(24,15,0)
(32,35,0)
(0,35,0)
(4,22,0)
(40,24,0)
(21,31,0)
(12,6,0)
(8,10,0)
(13,0,0)
(2,15,0)
(38,27,0)
(4,5,0)
(17,1,0)
(25,3,0)
(28,15,0)
(13,36,1)
(1,17,1)
(38,27,1)
(11,3,1)
(40,1,1)
(28,2,1)
(6,12,1)
(8,26,1)
(34,5,1)
(24,15,1)
(5,4,1)
(25,34,1)
(4,22,1)
(12,30,1)
(18,8,1)
(15,28,1)
(9,11,1)
(7,21,1)
(0,13,1)
(26,0,1)
(2,40,1)
(27,37,1)
(3,5,1)
(27,5,1)
(11,6,1)
(17,31,1)
(4,33,1)
(19,24,1)
(30,3,1)
(31,7,1)
(1,5,1)
(37,9,1)
(21,38,1)
(33,10,1)
(3,25,1)
(23,18,1)
(10,23,1)
(4,33,2)
(27,5,2)
(24,15,2)
(12,3,2)
(6,12,2)
(38,27,2)
(5,4,2)
(3,5,2)
(10,23,2)
(4,22,2)
(1,5,2)
(6,3,2)
(30,3,2)
(33,10,2)
-----------------------------------
(0,data = NULL)
(1,myUnion.unionFirst = data)
(2,myUnion)
(3,data == NULL)
(4,(int64_t *)
(5,data = (int64_t *)
(6,exit(-1)
(7,unionFirst)
(8,100)
(9,data)
(10,100*sizeof(int64_t)
(11,L)
(12,-1)
(13,NULL)
(14,)
(15,myUnion.unionSecond)
(16,data)
(17,data)
(18,int64_t)
(19,RET)
(20,data)
(21,myUnion)
(22,int64_t *)
(23,sizeof(int64_t)
(24,* data = myUnion.unionSecond)
(25,NULL)
(26,data)
(27,data[0])
(28,unionSecond)
(29,)
(30,1)
(31,myUnion.unionFirst)
(32,if (data == NULL)
(33,malloc(100*sizeof(int64_t)
(34,data)
(35,)
(36,data)
(37,0)
(38,printLongLongLine(data[0])
(39,myUnion)
(40,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^