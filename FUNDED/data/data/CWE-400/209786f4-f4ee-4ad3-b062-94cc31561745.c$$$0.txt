-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_realloc_01_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
52,55
53,54
55,56
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,54,56,57,61,63,64
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_realloc_01_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__wchar_t_realloc_01_bad()
CWE401_Memory_Leak__wchar_t_realloc_01_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
;
-----joern-----
(22,11,0)
(17,5,0)
(3,14,0)
(1,2,0)
(23,14,0)
(24,2,0)
(10,14,0)
(5,24,0)
(5,17,0)
(20,11,0)
(2,1,0)
(7,5,0)
(11,22,0)
(4,17,0)
(24,23,0)
(16,24,0)
(13,1,0)
(2,24,0)
(22,8,0)
(21,1,0)
(10,1,0)
(18,13,0)
(9,2,0)
(2,9,0)
(15,14,0)
(0,23,0)
(12,23,0)
(1,14,0)
(6,13,0)
(25,10,0)
(24,5,0)
(2,24,1)
(5,17,1)
(25,13,1)
(1,2,1)
(24,5,1)
(20,13,1)
(19,10,1)
(13,1,1)
(21,23,1)
(16,21,1)
(4,7,1)
(13,18,1)
(25,22,1)
(6,1,1)
(0,12,1)
(23,0,1)
(10,25,1)
(10,1,1)
(22,11,1)
(17,4,1)
(7,16,1)
(24,23,1)
(2,9,1)
(11,20,1)
(18,6,1)
(5,17,2)
(1,2,2)
(24,23,2)
(13,1,2)
(20,13,2)
(22,11,2)
(22,13,2)
(10,1,2)
(2,24,2)
(24,5,2)
(11,13,2)
(2,9,2)
-----------------------------------
(0,NULL)
(1,data = (wchar_t *)
(2,(wchar_t *)
(3,if (data == NULL)
(4,wchar_t)
(5,100*sizeof(wchar_t)
(6,data)
(7,100)
(8,)
(9,wchar_t *)
(10,printWLine(data)
(11,-1)
(12,data)
(13,data == NULL)
(14,)
(15,data)
(16,data)
(17,sizeof(wchar_t)
(18,NULL)
(19,RET)
(20,1)
(21,data)
(22,exit(-1)
(23,data = NULL)
(24,realloc(data, 100*sizeof(wchar_t)
(25,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^