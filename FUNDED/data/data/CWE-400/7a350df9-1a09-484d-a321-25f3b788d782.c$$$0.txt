-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_malloc_41_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
56,57
57,58
57,59
58,59
60,61
62,63
63,64
63,65
64,65
66,67
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,46,48,52,54,55,59,61,65,67
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_malloc_41_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badSink(data);}
void
CWE401_Memory_Leak__wchar_t_malloc_41_bad()
CWE401_Memory_Leak__wchar_t_malloc_41_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)malloc(100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(13,17,0)
(26,3,0)
(20,14,0)
(1,14,0)
(5,6,0)
(7,3,0)
(5,4,0)
(19,24,0)
(15,9,0)
(21,13,0)
(17,13,0)
(4,3,0)
(0,3,0)
(24,4,0)
(9,15,0)
(11,3,0)
(23,24,0)
(15,16,0)
(8,9,0)
(6,5,0)
(6,13,0)
(18,17,0)
(10,4,0)
(5,2,0)
(14,3,0)
(22,0,0)
(13,6,0)
(0,4,0)
(25,11,0)
(11,4,0)
(2,5,0)
(4,5,0)
(19,4,1)
(13,17,1)
(11,25,1)
(17,18,1)
(0,4,1)
(14,1,1)
(0,22,1)
(25,15,1)
(8,24,1)
(6,13,1)
(9,8,1)
(24,23,1)
(15,9,1)
(12,0,1)
(21,10,1)
(22,11,1)
(23,19,1)
(10,14,1)
(11,4,1)
(1,20,1)
(25,24,1)
(5,2,1)
(18,21,1)
(4,5,1)
(24,4,1)
(5,6,1)
(15,9,2)
(13,17,2)
(24,4,2)
(0,4,2)
(15,24,2)
(9,24,2)
(5,2,2)
(8,24,2)
(5,6,2)
(11,4,2)
(6,13,2)
(4,5,2)
-----------------------------------
(0,badSink(data)
(1,NULL)
(2,wchar_t *)
(3,)
(4,data = (wchar_t *)
(5,(wchar_t *)
(6,malloc(100*sizeof(wchar_t)
(7,data)
(8,1)
(9,-1)
(10,data)
(11,printWLine(data)
(12,RET)
(13,100*sizeof(wchar_t)
(14,data = NULL)
(15,exit(-1)
(16,)
(17,sizeof(wchar_t)
(18,wchar_t)
(19,data)
(20,data)
(21,100)
(22,data)
(23,NULL)
(24,data == NULL)
(25,data)
(26,if (data == NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^