-----label-----
1
-----code-----
static void badSink(int count)
{
    if(badStatic)
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
13,15
14,15
15,16
15,17
16,17
18,19
20,21
21,22
21,23
22,23
-----nextToken-----
2,4,6,8,12,17,19,23,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void badSink(int count){    if(badStatic)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
static void
badSink(int count)
badSink
int count
int
count
count
{    if(badStatic)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
if(badStatic)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
badStatic
badStatic
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(9,8,0)
(9,4,0)
(5,9,0)
(2,4,0)
(1,3,0)
(6,2,0)
(7,0,1)
(7,2,1)
(2,6,1)
(9,8,1)
(5,0,1)
(6,9,1)
(9,5,1)
(9,0,2)
(6,0,2)
(2,0,2)
(9,8,2)
(5,0,2)
-----------------------------------
(0,badStatic)
(1,if(badStatic)
(2,printLine("Sleep time possibly too long")
(3,)
(4,)
(5,count)
(6,"Sleep time possibly too long")
(7,RET)
(8,int count)
(9,SLEEP(count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^