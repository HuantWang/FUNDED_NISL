-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_calloc_21_bad()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)calloc(100, sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
31,32
32,33
32,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
50,51
52,53
55,56
56,57
56,58
57,58
59,60
61,62
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,30,33,34,38,40,45,47,51,53,54,58,60,64,65,69,71
-----computeFrom-----
13,14
13,15
19,20
19,21
36,37
36,38
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_calloc_21_bad(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__wchar_t_calloc_21_bad()
CWE401_Memory_Leak__wchar_t_calloc_21_bad
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)calloc(100, sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    badStatic = 1; /* true */    badSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)calloc(100, sizeof(wchar_t));
data = (wchar_t *)calloc(100, sizeof(wchar_t))
data
data
(wchar_t *)calloc(100, sizeof(wchar_t))
wchar_t *
wchar_t
*
*
calloc(100, sizeof(wchar_t))
calloc
calloc
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(5,16,0)
(3,15,0)
(16,13,0)
(3,13,0)
(20,24,0)
(29,9,0)
(28,0,0)
(9,15,0)
(21,13,0)
(13,0,0)
(11,9,0)
(4,28,0)
(13,15,0)
(12,2,0)
(7,15,0)
(0,1,0)
(17,15,0)
(19,28,0)
(24,15,0)
(6,19,0)
(27,16,0)
(26,17,0)
(12,14,0)
(2,12,0)
(0,13,0)
(8,15,0)
(28,19,0)
(10,24,0)
(0,28,0)
(25,2,0)
(23,3,0)
(1,0,0)
(17,13,0)
(10,20,1)
(16,27,1)
(17,26,1)
(25,16,1)
(5,13,1)
(12,2,1)
(29,11,1)
(0,1,1)
(13,0,1)
(0,28,1)
(23,16,1)
(9,29,1)
(6,4,1)
(23,12,1)
(24,10,1)
(19,6,1)
(11,3,1)
(16,13,1)
(26,9,1)
(28,19,1)
(3,13,1)
(2,25,1)
(21,24,1)
(4,21,1)
(27,5,1)
(3,23,1)
(18,17,1)
(17,13,1)
(3,13,2)
(28,19,2)
(16,13,2)
(17,13,2)
(2,16,2)
(13,0,2)
(12,16,2)
(25,16,2)
(0,28,2)
(0,1,2)
(12,2,2)
-----------------------------------
(0,(wchar_t *)
(1,wchar_t *)
(2,-1)
(3,printWLine(data)
(4,100)
(5,data)
(6,wchar_t)
(7,if (data == NULL)
(8,data)
(9,badStatic = 1)
(10,NULL)
(11,badStatic)
(12,exit(-1)
(13,data = (wchar_t *)
(14,)
(15,)
(16,data == NULL)
(17,badSink(data)
(18,RET)
(19,sizeof(wchar_t)
(20,data)
(21,data)
(22, sizeof(wchar_t)
(23,data)
(24,data = NULL)
(25,1)
(26,data)
(27,NULL)
(28,calloc(100, sizeof(wchar_t)
(29,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^