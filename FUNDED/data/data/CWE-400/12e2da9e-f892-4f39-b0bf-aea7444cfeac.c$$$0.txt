-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fscanf_sleep_31_bad()
{
    int count;
    /* Initialize count */
    count = -1;
    /* POTENTIAL FLAW: Read count from the console using fscanf() */
    fscanf(stdin, "%d", &count);
    {
        int countCopy = count;
        int count = countCopy;
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
18,21
18,22
19,20
21,22
24,25
25,26
27,28
27,29
27,30
27,31
28,29
29,30
29,31
31,32
31,33
33,34
34,35
36,37
37,38
37,39
39,40
39,41
41,42
42,43
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
52,53
-----nextToken-----
2,4,8,10,14,16,20,22,23,26,30,32,35,38,40,43,47,49,53,54
-----computeFrom-----
12,13
12,14
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fscanf_sleep_31_bad(){    int count;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Read count from the console using fscanf() */    fscanf(stdin, "%d", &count);    {        int countCopy = count;        int count = countCopy;        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__fscanf_sleep_31_bad()
CWE400_Resource_Exhaustion__fscanf_sleep_31_bad
{    int count;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Read count from the console using fscanf() */    fscanf(stdin, "%d", &count);    {        int countCopy = count;        int count = countCopy;        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
int count;
int count;
int
count
count
count = -1;
count = -1
count
count
-1
1
fscanf(stdin, "%d", &count);
fscanf(stdin, "%d", &count)
fscanf
fscanf
stdin
stdin
"%d"
&count
count
count
{        int countCopy = count;        int count = countCopy;        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
int countCopy = count;
int countCopy = count;
int
countCopy = count
countCopy
= count
count
count
int count = countCopy;
int count = countCopy;
int
count = countCopy
count
= countCopy
countCopy
countCopy
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(2,9,0)
(21,3,0)
(18,9,0)
(20,11,0)
(19,14,0)
(13,24,0)
(14,6,0)
(23,9,0)
(10,6,0)
(1,19,0)
(24,9,0)
(9,3,0)
(12,13,0)
(4,24,0)
(0,14,0)
(5,10,0)
(7,2,0)
(8,24,0)
(24,2,0)
(19,3,0)
(16,19,0)
(17,6,0)
(11,9,0)
(2,6,0)
(14,19,0)
(13,9,0)
(15,2,0)
(6,10,0)
(6,3,0)
(15,19,1)
(0,1,1)
(6,10,1)
(22,11,1)
(12,24,1)
(14,0,1)
(2,7,1)
(16,6,1)
(8,4,1)
(14,6,1)
(24,2,1)
(11,20,1)
(5,17,1)
(19,14,1)
(2,6,1)
(7,15,1)
(24,8,1)
(10,5,1)
(20,13,1)
(13,24,1)
(13,12,1)
(4,2,1)
(1,16,1)
(14,6,2)
(19,14,2)
(2,6,2)
(6,10,2)
(13,24,2)
(24,2,2)
-----------------------------------
(0,count)
(1,"%d")
(2,countCopy = count)
(3,)
(4,count)
(5,1)
(6,count = -1)
(7,count)
(8,countCopy)
(9,)
(10,-1)
(11,printLine("Sleep time possibly too long")
(12,count)
(13,SLEEP(count)
(14,&count)
(15,countCopy)
(16,stdin)
(17,count)
(18,count)
(19,fscanf(stdin, "%d", &count)
(20,"Sleep time possibly too long")
(21,count)
(22,RET)
(23,countCopy)
(24,count = countCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^