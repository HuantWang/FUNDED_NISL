-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    {
        twoIntsStruct * dataCopy = data;
        twoIntsStruct * data = dataCopy;
        /* POTENTIAL FLAW: No deallocation */
        ; /* empty statement needed for some flow variants */
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
32,33
34,35
34,36
36,37
37,38
37,39
38,39
41,42
41,43
42,43
42,44
43,44
45,46
47,48
48,49
49,50
49,51
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
65,67
66,67
66,68
67,68
72,73
73,74
73,75
74,75
76,77
77,78
77,79
78,79
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
86,89
89,90
90,91
92,93
93,94
93,95
94,95
96,97
96,98
96,99
99,100
100,101
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,33,35,39,40,44,46,51,53,59,60,61,62,68,69,70,71,75,79,80,85,87,88,91,95,97,98,101,102
-----computeFrom-----
14,15
14,16
20,21
20,22
34,35
34,36
42,43
42,44
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    {        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
void
CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad()
CWE401_Memory_Leak__twoIntsStruct_realloc_31_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    {        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
realloc(data, 100*sizeof(twoIntsStruct))
realloc
realloc
data
data
100*sizeof(twoIntsStruct)
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
{        twoIntsStruct * dataCopy = data;        twoIntsStruct * data = dataCopy;        /* POTENTIAL FLAW: No deallocation */        ; /* empty statement needed for some flow variants */    }
twoIntsStruct * dataCopy = data;
twoIntsStruct * dataCopy = data;
twoIntsStruct
twoIntsStruct
* dataCopy = data
*
dataCopy
= data
data
data
twoIntsStruct * data = dataCopy;
twoIntsStruct * data = dataCopy;
twoIntsStruct
twoIntsStruct
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
;
-----joern-----
(31,30,0)
(48,27,0)
(24,9,0)
(32,43,0)
(7,28,0)
(3,23,0)
(4,43,0)
(44,24,0)
(49,24,0)
(33,23,0)
(27,30,0)
(19,17,0)
(13,23,0)
(24,13,0)
(23,6,0)
(18,17,0)
(12,30,0)
(25,16,0)
(38,27,0)
(17,19,0)
(36,6,0)
(50,14,0)
(39,25,0)
(35,3,0)
(29,9,0)
(38,6,0)
(14,38,0)
(10,13,0)
(25,23,0)
(43,4,0)
(5,30,0)
(22,3,0)
(6,23,0)
(47,43,0)
(4,34,0)
(40,19,0)
(41,50,0)
(17,18,0)
(13,9,0)
(15,27,0)
(45,25,0)
(16,25,0)
(42,9,0)
(18,30,0)
(38,14,0)
(9,30,0)
(8,51,0)
(14,50,0)
(0,38,0)
(34,30,0)
(1,34,0)
(6,38,0)
(20,19,0)
(19,23,0)
(37,4,0)
(43,23,0)
(28,8,0)
(21,13,0)
(8,28,0)
(11,12,0)
(16,12,0)
(2,16,0)
(26,14,0)
(23,30,0)
(6,36,0)
(1,4,1)
(17,19,1)
(35,23,1)
(4,43,1)
(4,37,1)
(47,32,1)
(44,49,1)
(18,17,1)
(45,39,1)
(20,34,1)
(26,0,1)
(8,28,1)
(38,27,1)
(25,45,1)
(3,22,1)
(6,36,1)
(19,23,1)
(21,10,1)
(13,23,1)
(10,18,1)
(11,16,1)
(37,43,1)
(40,20,1)
(41,26,1)
(39,8,1)
(43,47,1)
(49,13,1)
(13,21,1)
(12,11,1)
(28,7,1)
(33,27,1)
(43,23,1)
(19,40,1)
(16,2,1)
(7,3,1)
(22,35,1)
(2,25,1)
(16,25,1)
(24,44,1)
(27,15,1)
(32,12,1)
(6,38,1)
(3,23,1)
(24,13,1)
(39,3,1)
(15,48,1)
(46,24,1)
(34,1,1)
(0,33,1)
(38,14,1)
(50,41,1)
(14,50,1)
(23,6,1)
(25,23,1)
(6,38,2)
(43,23,2)
(24,13,2)
(25,23,2)
(7,3,2)
(8,28,2)
(8,3,2)
(38,27,2)
(14,50,2)
(3,23,2)
(23,6,2)
(28,3,2)
(13,23,2)
(4,43,2)
(17,19,2)
(38,14,2)
(19,23,2)
(18,17,2)
(16,25,2)
(6,36,2)
-----------------------------------
(0,data)
(1,0)
(2,intOne)
(3,data == NULL)
(4,data[0].intTwo)
(5,if (data == NULL)
(6,(twoIntsStruct *)
(7,1)
(8,exit(-1)
(9,)
(10,dataCopy)
(11,0)
(12,data[0].intOne = 0)
(13,* dataCopy = data)
(14,100*sizeof(twoIntsStruct)
(15,NULL)
(16,data[0].intOne)
(17,&data[0])
(18,printStructLine(&data[0])
(19,data[0])
(20,data)
(21,data)
(22,NULL)
(23,data = (twoIntsStruct *)
(24,* data = dataCopy)
(25,data[0])
(26,100)
(27,data = NULL)
(28,-1)
(29,dataCopy)
(30,)
(31,data)
(32,data)
(33,data)
(34,data[0].intTwo = 0)
(35,data)
(36,twoIntsStruct *)
(37,intTwo)
(38,realloc(data, 100*sizeof(twoIntsStruct)
(39,data)
(40,0)
(41,twoIntsStruct)
(42,data)
(43,data[0])
(44,dataCopy)
(45,0)
(46,RET)
(47,0)
(48,data)
(49,data)
(50,sizeof(twoIntsStruct)
(51,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^