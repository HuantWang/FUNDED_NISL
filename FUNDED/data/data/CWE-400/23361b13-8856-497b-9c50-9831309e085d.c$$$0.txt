-----label-----
1
-----code-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_68_bad()
{
    twoIntsStruct * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine(&data[0]);
    CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data;
    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
39,40
39,41
40,41
40,42
41,42
41,43
42,43
47,48
48,49
48,50
49,50
49,51
50,51
50,52
51,52
56,57
57,58
57,59
58,59
60,61
61,62
61,63
62,63
65,66
66,67
66,68
67,68
69,70
71,72
72,73
73,74
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,43,44,45,46,52,53,54,55,59,63,64,68,70,74
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
48,49
48,50
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__twoIntsStruct_calloc_68_bad(){    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data;    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink();}
void
CWE401_Memory_Leak__twoIntsStruct_calloc_68_bad()
CWE401_Memory_Leak__twoIntsStruct_calloc_68_bad
{    twoIntsStruct * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine(&data[0]);    CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data;    CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink();}
twoIntsStruct * data;
twoIntsStruct * data;
twoIntsStruct
twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));
data = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
data
data
(twoIntsStruct *)calloc(100, sizeof(twoIntsStruct))
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
calloc(100, sizeof(twoIntsStruct))
calloc
calloc
100
sizeof(twoIntsStruct)
twoIntsStruct
twoIntsStruct
twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data;
CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data
CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData
CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData
data
data
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink();
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink()
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink
CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink
-----joern-----
(2,13,0)
(21,1,0)
(15,13,0)
(17,1,0)
(28,18,0)
(1,21,0)
(9,18,0)
(10,11,0)
(31,15,0)
(12,5,0)
(16,23,0)
(29,34,0)
(22,20,0)
(26,15,0)
(21,25,0)
(24,37,0)
(37,11,0)
(30,36,0)
(24,1,0)
(36,13,0)
(33,13,0)
(37,24,0)
(20,5,0)
(14,23,0)
(29,21,0)
(34,29,0)
(3,34,0)
(0,13,0)
(11,13,0)
(25,21,0)
(2,14,0)
(36,1,0)
(18,20,0)
(20,18,0)
(19,36,0)
(21,29,0)
(23,1,0)
(32,24,0)
(5,13,0)
(23,14,0)
(1,13,0)
(7,29,0)
(35,24,0)
(4,23,0)
(14,2,0)
(18,1,0)
(8,37,0)
(1,21,1)
(8,24,1)
(34,3,1)
(20,18,1)
(17,15,1)
(4,16,1)
(3,7,1)
(24,1,1)
(7,17,1)
(0,36,1)
(18,1,1)
(22,18,1)
(23,4,1)
(5,12,1)
(20,22,1)
(32,35,1)
(29,34,1)
(26,31,1)
(36,19,1)
(21,29,1)
(36,1,1)
(23,1,1)
(27,0,1)
(37,24,1)
(9,28,1)
(35,5,1)
(18,9,1)
(16,11,1)
(28,1,1)
(37,8,1)
(12,20,1)
(2,14,1)
(24,32,1)
(19,30,1)
(21,25,1)
(15,26,1)
(30,2,1)
(11,10,1)
(10,37,1)
(14,23,1)
(18,1,2)
(23,1,2)
(37,24,2)
(2,14,2)
(29,34,2)
(21,25,2)
(1,21,2)
(14,23,2)
(21,29,2)
(36,1,2)
(24,1,2)
(20,18,2)
-----------------------------------
(0,CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink()
(1,data = (twoIntsStruct *)
(2,printStructLine(&data[0])
(3,twoIntsStruct)
(4,0)
(5,data[0].intOne = 0)
(6, sizeof(twoIntsStruct)
(7,100)
(8,intTwo)
(9,0)
(10,0)
(11,data[0].intTwo = 0)
(12,0)
(13,)
(14,&data[0])
(15,data = NULL)
(16,data)
(17,data)
(18,data[0])
(19,data)
(20,data[0].intOne)
(21,(twoIntsStruct *)
(22,intOne)
(23,data[0])
(24,data[0])
(25,twoIntsStruct *)
(26,NULL)
(27,RET)
(28,data)
(29,calloc(100, sizeof(twoIntsStruct)
(30,CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData)
(31,data)
(32,0)
(33,data)
(34,sizeof(twoIntsStruct)
(35,data)
(36,CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData = data)
(37,data[0].intTwo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^