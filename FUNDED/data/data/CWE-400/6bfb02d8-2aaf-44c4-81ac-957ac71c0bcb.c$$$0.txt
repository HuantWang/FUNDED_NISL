-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_21_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    badStatic = 1; /* true */
    badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,69,70,74,76
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_21_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
void
CWE401_Memory_Leak__int64_t_calloc_21_bad()
CWE401_Memory_Leak__int64_t_calloc_21_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    badStatic = 1; /* true */    badSink(data);}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
badSink(data);
badSink(data)
badSink
badSink
data
data
-----joern-----
(17,12,0)
(19,25,0)
(13,14,0)
(21,22,0)
(8,15,0)
(27,23,0)
(1,2,0)
(3,19,0)
(19,1,0)
(27,11,0)
(14,15,0)
(28,15,0)
(24,12,0)
(21,32,0)
(16,11,0)
(5,15,0)
(22,1,0)
(2,1,0)
(30,6,0)
(1,19,0)
(4,6,0)
(9,28,0)
(22,15,0)
(12,15,0)
(20,15,0)
(0,14,0)
(28,22,0)
(26,21,0)
(7,25,0)
(6,22,0)
(18,21,0)
(11,27,0)
(29,22,0)
(32,21,0)
(25,19,0)
(1,22,0)
(32,15,0)
(12,24,1)
(14,13,1)
(20,6,1)
(24,17,1)
(32,21,1)
(1,2,1)
(26,20,1)
(28,9,1)
(19,25,1)
(22,1,1)
(13,0,1)
(11,16,1)
(3,29,1)
(27,11,1)
(20,27,1)
(25,7,1)
(29,14,1)
(1,19,1)
(17,32,1)
(21,22,1)
(18,26,1)
(7,3,1)
(6,4,1)
(9,12,1)
(28,22,1)
(31,28,1)
(21,18,1)
(30,22,1)
(4,30,1)
(16,6,1)
(6,22,1)
(1,2,2)
(22,1,2)
(16,6,2)
(19,25,2)
(28,22,2)
(32,21,2)
(1,19,2)
(27,6,2)
(27,11,2)
(21,22,2)
(11,6,2)
(6,22,2)
-----------------------------------
(0,data)
(1,(int64_t *)
(2,int64_t *)
(3,100)
(4,NULL)
(5,if (data == NULL)
(6,data == NULL)
(7,int64_t)
(8,data)
(9,data)
(10, sizeof(int64_t)
(11,-1)
(12,badStatic = 1)
(13,NULL)
(14,data = NULL)
(15,)
(16,1)
(17,badStatic)
(18,0)
(19,calloc(100, sizeof(int64_t)
(20,L)
(21,data[0])
(22,data = (int64_t *)
(23,)
(24,1)
(25,sizeof(int64_t)
(26,data)
(27,exit(-1)
(28,badSink(data)
(29,data)
(30,data)
(31,RET)
(32,printLongLongLine(data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^