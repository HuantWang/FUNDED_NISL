-----label-----
0
-----code-----
static void prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,
			    int more, ldms_set_t set, void *arg)
{
	ldmsd_prdcr_set_t prd_set = arg;
	int rc;

	pthread_mutex_lock(&prd_set->lock);
	if (status != LDMS_LOOKUP_OK) {
		status = (status < 0 ? -status : status);
		ldmsd_log(LDMSD_LERROR,
			  "Error %d in lookup callback for set '%s'\n",
			  status,
			  prd_set->inst_name);
		if (status == ENOMEM)
			ldmsd_log(LDMSD_LINFO,
				  "Consider changing the -m parameter on the command line.\n");
		if (prd_set->set)
			ldms_set_delete(prd_set->set);
		prd_set->set = NULL;
		goto err;
	}
	/*
	 * Check that the producer name in the metric set matches our
	 * name. If it doesn't, we write a warning to the log file
	 */
	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))
		ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"
			 "does not match the producer name '%s' in the '%s' metric set.\n",
			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),
			 ldms_set_instance_name_get(set));
	prd_set->set = set;
	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));
	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;
	ldmsd_strgp_update(prd_set);
	pthread_mutex_unlock(&prd_set->lock);
	return;
err:
	prd_set->state = LDMSD_PRDCR_SET_STATE_START;
	pthread_mutex_unlock(&prd_set->lock);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
5,6
5,7
6,7
8,9
10,11
10,12
11,12
13,14
15,16
15,17
17,18
19,20
19,21
20,21
22,23
24,25
24,26
26,27
26,28
29,30
29,31
29,32
29,33
29,34
29,35
29,36
29,37
29,38
29,39
29,40
29,41
29,42
30,31
31,32
31,33
32,33
34,35
34,36
36,37
37,38
39,40
40,41
40,42
42,43
44,45
45,46
45,47
46,47
48,49
49,50
49,51
50,51
53,54
53,55
54,55
54,56
55,56
57,58
59,60
59,61
59,62
59,63
59,64
59,65
60,61
61,62
61,63
62,63
64,65
65,66
65,67
65,68
66,67
66,68
67,68
70,71
71,72
73,74
75,76
76,77
76,78
76,79
76,80
76,81
77,78
79,80
82,83
84,85
84,86
85,86
88,89
88,90
89,90
89,91
90,91
92,93
94,95
95,96
95,97
95,98
96,97
98,99
101,102
101,103
102,103
102,104
103,104
106,107
107,108
107,109
108,109
110,111
110,112
111,112
114,115
115,116
115,117
116,117
116,118
117,118
120,121
122,123
124,125
124,126
125,126
125,127
125,128
126,127
128,129
128,130
129,130
129,131
130,131
130,132
131,132
136,137
136,138
137,138
139,140
141,142
142,143
142,144
142,145
142,146
142,147
142,148
143,144
145,146
148,149
148,150
149,150
149,151
150,151
150,152
151,152
156,157
156,158
157,158
159,160
161,162
161,163
162,163
164,165
166,167
167,168
167,169
168,169
168,170
169,170
172,173
174,175
175,176
175,177
176,177
176,178
177,178
180,181
180,182
181,182
183,184
183,185
184,185
186,187
188,189
189,190
189,191
190,191
190,192
191,192
194,195
196,197
197,198
197,199
198,199
200,201
202,203
203,204
203,205
204,205
206,207
207,208
207,209
208,209
212,213
212,214
214,215
215,216
215,217
216,217
216,218
217,218
220,221
222,223
223,224
223,225
224,225
226,227
227,228
227,229
228,229
-----nextToken-----
2,4,7,9,12,14,16,18,21,23,25,27,28,33,35,38,41,43,47,51,52,56,58,63,68,69,72,74,78,80,81,83,86,87,91,93,97,99,100,104,105,109,112,113,118,119,121,123,127,132,133,134,135,138,140,144,146,147,152,153,154,155,158,160,163,165,170,171,173,178,179,182,185,187,192,193,195,199,201,205,209,210,211,213,218,219,221,225,229,230
-----computeFrom-----
54,55
54,56
61,62
61,63
66,67
66,68
89,90
89,91
115,116
115,117
167,168
167,169
175,176
175,177
189,190
189,191
215,216
215,217
-----guardedBy-----
56,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;ConditionalExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;GotoStatement;Name;IfStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;LabelStatement;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,			    int more, ldms_set_t set, void *arg){	ldmsd_prdcr_set_t prd_set = arg;	int rc;	pthread_mutex_lock(&prd_set->lock);	if (status != LDMS_LOOKUP_OK) {		status = (status < 0 ? -status : status);		ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name);		if (status == ENOMEM)			ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}	/*	 * Check that the producer name in the metric set matches our	 * name. If it doesn't, we write a warning to the log file	 */	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));	prd_set->set = set;	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;	ldmsd_strgp_update(prd_set);	pthread_mutex_unlock(&prd_set->lock);	return;err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;	pthread_mutex_unlock(&prd_set->lock);}
static void
prdcr_lookup_cb(ldms_t xprt, enum ldms_lookup_status status,			    int more, ldms_set_t set, void *arg)
prdcr_lookup_cb
ldms_t xprt
ldms_t
ldms_t
xprt
xprt
enum ldms_lookup_status status
enum ldms_lookup_status
ldms_lookup_status
status
status
int more
int
more
more
ldms_set_t set
ldms_set_t
ldms_set_t
set
set
void *arg
void
*arg
*
arg
{	ldmsd_prdcr_set_t prd_set = arg;	int rc;	pthread_mutex_lock(&prd_set->lock);	if (status != LDMS_LOOKUP_OK) {		status = (status < 0 ? -status : status);		ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name);		if (status == ENOMEM)			ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}	/*	 * Check that the producer name in the metric set matches our	 * name. If it doesn't, we write a warning to the log file	 */	if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));	prd_set->set = set;	prd_set->schema_name = strdup(ldms_set_schema_name_get(set));	prd_set->state = LDMSD_PRDCR_SET_STATE_READY;	ldmsd_strgp_update(prd_set);	pthread_mutex_unlock(&prd_set->lock);	return;err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;	pthread_mutex_unlock(&prd_set->lock);}
ldmsd_prdcr_set_t prd_set = arg;
ldmsd_prdcr_set_t prd_set = arg;
ldmsd_prdcr_set_t
ldmsd_prdcr_set_t
prd_set = arg
prd_set
= arg
arg
arg
int rc;
int rc;
int
rc
rc
pthread_mutex_lock(&prd_set->lock);
pthread_mutex_lock(&prd_set->lock)
pthread_mutex_lock
pthread_mutex_lock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
if (status != LDMS_LOOKUP_OK) {		status = (status < 0 ? -status : status);		ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name);		if (status == ENOMEM)			ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}
status != LDMS_LOOKUP_OK
status
status
LDMS_LOOKUP_OK
LDMS_LOOKUP_OK
{		status = (status < 0 ? -status : status);		ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name);		if (status == ENOMEM)			ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");		if (prd_set->set)			ldms_set_delete(prd_set->set);		prd_set->set = NULL;		goto err;	}
status = (status < 0 ? -status : status);
status = (status < 0 ? -status : status)
status
status
(status < 0 ? -status : status)
status < 0 ? -status : status
status < 0
status
status
0
-status
status
status
status
status
ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name);
ldmsd_log(LDMSD_LERROR,			  "Error %d in lookup callback for set '%s'\n",			  status,			  prd_set->inst_name)
ldmsd_log
ldmsd_log
LDMSD_LERROR
LDMSD_LERROR
"Error %d in lookup callback for set '%s'\n"
status
status
prd_set->inst_name
prd_set
prd_set
inst_name
if (status == ENOMEM)			ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");
status == ENOMEM
status
status
ENOMEM
ENOMEM
ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n");
ldmsd_log(LDMSD_LINFO,				  "Consider changing the -m parameter on the command line.\n")
ldmsd_log
ldmsd_log
LDMSD_LINFO
LDMSD_LINFO
"Consider changing the -m parameter on the command line.\n"
if (prd_set->set)			ldms_set_delete(prd_set->set);
prd_set->set
prd_set
prd_set
set
ldms_set_delete(prd_set->set);
ldms_set_delete(prd_set->set)
ldms_set_delete
ldms_set_delete
prd_set->set
prd_set
prd_set
set
prd_set->set = NULL;
prd_set->set = NULL
prd_set->set
prd_set
prd_set
set
NULL
NULL
goto err;
err
if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)))		ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));
strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set))
strcmp
strcmp
prd_set->prdcr->obj.name
prd_set->prdcr->obj
prd_set->prdcr
prd_set
prd_set
prdcr
obj
name
ldms_set_producer_name_get(set)
ldms_set_producer_name_get
ldms_set_producer_name_get
set
set
ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set));
ldmsd_log(LDMSD_LINFO, "Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n",			 prd_set->prdcr->obj.name, ldms_set_producer_name_get(set),			 ldms_set_instance_name_get(set))
ldmsd_log
ldmsd_log
LDMSD_LINFO
LDMSD_LINFO
"Warning: The producer name '%s' in the configuration"			 "does not match the producer name '%s' in the '%s' metric set.\n"
prd_set->prdcr->obj.name
prd_set->prdcr->obj
prd_set->prdcr
prd_set
prd_set
prdcr
obj
name
ldms_set_producer_name_get(set)
ldms_set_producer_name_get
ldms_set_producer_name_get
set
set
ldms_set_instance_name_get(set)
ldms_set_instance_name_get
ldms_set_instance_name_get
set
set
prd_set->set = set;
prd_set->set = set
prd_set->set
prd_set
prd_set
set
set
set
prd_set->schema_name = strdup(ldms_set_schema_name_get(set));
prd_set->schema_name = strdup(ldms_set_schema_name_get(set))
prd_set->schema_name
prd_set
prd_set
schema_name
strdup(ldms_set_schema_name_get(set))
strdup
strdup
ldms_set_schema_name_get(set)
ldms_set_schema_name_get
ldms_set_schema_name_get
set
set
prd_set->state = LDMSD_PRDCR_SET_STATE_READY;
prd_set->state = LDMSD_PRDCR_SET_STATE_READY
prd_set->state
prd_set
prd_set
state
LDMSD_PRDCR_SET_STATE_READY
LDMSD_PRDCR_SET_STATE_READY
ldmsd_strgp_update(prd_set);
ldmsd_strgp_update(prd_set)
ldmsd_strgp_update
ldmsd_strgp_update
prd_set
prd_set
pthread_mutex_unlock(&prd_set->lock);
pthread_mutex_unlock(&prd_set->lock)
pthread_mutex_unlock
pthread_mutex_unlock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
return;
err:	prd_set->state = LDMSD_PRDCR_SET_STATE_START;
err
prd_set->state = LDMSD_PRDCR_SET_STATE_START;
prd_set->state = LDMSD_PRDCR_SET_STATE_START
prd_set->state
prd_set
prd_set
state
LDMSD_PRDCR_SET_STATE_START
LDMSD_PRDCR_SET_STATE_START
pthread_mutex_unlock(&prd_set->lock);
pthread_mutex_unlock(&prd_set->lock)
pthread_mutex_unlock
pthread_mutex_unlock
&prd_set->lock
prd_set->lock
prd_set
prd_set
lock
-----joern-----
(52,0,0)
(113,101,0)
(10,76,0)
(107,22,0)
(74,80,0)
(108,42,0)
(35,1,0)
(44,21,0)
(30,59,0)
(80,21,0)
(50,16,0)
(95,32,0)
(66,76,0)
(3,80,0)
(40,80,0)
(13,15,0)
(108,86,0)
(18,87,0)
(70,101,0)
(85,46,0)
(25,54,0)
(11,100,0)
(17,21,0)
(75,41,0)
(2,32,0)
(20,30,0)
(49,46,0)
(81,37,0)
(78,108,0)
(112,37,0)
(61,19,0)
(94,38,0)
(26,97,0)
(72,80,0)
(114,27,0)
(73,9,0)
(46,13,0)
(22,107,0)
(116,13,0)
(64,65,0)
(74,28,0)
(0,80,0)
(116,40,0)
(57,65,0)
(68,100,0)
(3,64,0)
(56,67,0)
(103,72,0)
(19,32,0)
(59,21,0)
(46,111,0)
(69,116,0)
(101,113,0)
(40,116,0)
(8,53,0)
(106,3,0)
(60,86,0)
(51,111,0)
(28,74,0)
(76,80,0)
(88,40,0)
(84,9,0)
(105,71,0)
(24,74,0)
(28,96,0)
(76,10,0)
(116,15,0)
(64,21,0)
(29,74,0)
(33,40,0)
(86,108,0)
(62,21,0)
(8,93,0)
(1,16,0)
(42,67,0)
(117,57,0)
(27,80,0)
(54,21,0)
(53,21,0)
(39,0,0)
(102,108,0)
(109,107,0)
(58,51,0)
(107,80,0)
(87,21,0)
(110,93,0)
(32,80,0)
(100,80,0)
(108,56,0)
(104,30,0)
(13,111,0)
(97,21,0)
(61,21,0)
(30,80,0)
(48,1,0)
(115,107,0)
(53,8,0)
(97,67,0)
(9,111,0)
(93,8,0)
(81,111,0)
(10,86,0)
(55,93,0)
(7,116,0)
(79,51,0)
(93,80,0)
(9,37,0)
(31,116,0)
(89,38,0)
(1,80,0)
(6,59,0)
(19,61,0)
(16,21,0)
(101,67,0)
(100,71,0)
(63,15,0)
(12,72,0)
(5,3,0)
(14,21,0)
(96,28,0)
(116,111,0)
(56,108,0)
(87,80,0)
(37,9,0)
(91,15,0)
(37,81,0)
(57,67,0)
(77,13,0)
(13,37,0)
(83,94,0)
(42,108,0)
(38,94,0)
(65,64,0)
(37,13,0)
(37,111,0)
(27,97,0)
(47,80,0)
(23,42,0)
(38,0,0)
(92,41,0)
(36,56,0)
(71,15,0)
(4,10,0)
(98,21,0)
(86,10,0)
(82,76,0)
(45,27,0)
(80,90,0)
(43,80,0)
(65,57,0)
(32,19,0)
(96,21,0)
(94,113,0)
(99,81,0)
(113,94,0)
(0,38,0)
(34,15,0)
(32,2,1)
(38,89,1)
(92,46,1)
(37,9,1)
(56,67,1)
(61,19,1)
(43,47,1)
(102,113,1)
(105,100,1)
(42,23,1)
(106,97,1)
(8,93,1)
(65,57,1)
(50,1,1)
(45,114,1)
(13,37,1)
(74,29,1)
(108,86,1)
(5,106,1)
(42,67,1)
(116,40,1)
(10,4,1)
(36,86,1)
(64,65,1)
(4,76,1)
(59,6,1)
(115,72,1)
(66,82,1)
(83,38,1)
(37,112,1)
(71,105,1)
(107,80,1)
(38,0,1)
(89,0,1)
(108,42,1)
(75,92,1)
(70,94,1)
(85,49,1)
(28,74,1)
(23,56,1)
(49,116,1)
(31,13,1)
(110,16,1)
(1,48,1)
(30,80,1)
(40,88,1)
(12,103,1)
(46,13,1)
(116,13,1)
(108,56,1)
(34,71,1)
(95,87,1)
(82,78,1)
(93,80,1)
(9,73,1)
(114,113,1)
(10,76,1)
(46,111,1)
(1,80,1)
(22,107,1)
(109,115,1)
(29,24,1)
(69,7,1)
(35,34,1)
(0,52,1)
(40,80,1)
(55,110,1)
(97,67,1)
(60,10,1)
(16,50,1)
(25,54,1)
(57,117,1)
(73,84,1)
(97,26,1)
(11,22,1)
(0,80,1)
(3,80,1)
(46,85,1)
(51,79,1)
(96,28,1)
(101,70,1)
(79,58,1)
(114,108,1)
(6,30,1)
(25,53,1)
(19,32,1)
(93,55,1)
(81,99,1)
(32,80,1)
(80,43,1)
(94,83,1)
(26,27,1)
(88,33,1)
(27,45,1)
(48,35,1)
(37,111,1)
(72,12,1)
(51,111,1)
(76,66,1)
(87,80,1)
(100,80,1)
(27,80,1)
(77,51,1)
(30,104,1)
(37,81,1)
(68,11,1)
(41,75,1)
(113,94,1)
(39,51,1)
(81,111,1)
(112,9,1)
(94,38,1)
(87,18,1)
(72,80,1)
(54,61,1)
(57,67,1)
(84,77,1)
(107,109,1)
(101,67,1)
(11,72,1)
(117,3,1)
(52,39,1)
(86,10,1)
(103,46,1)
(56,36,1)
(24,80,1)
(20,64,1)
(74,80,1)
(99,9,1)
(76,80,1)
(18,59,1)
(7,31,1)
(80,90,1)
(78,102,1)
(86,60,1)
(104,20,1)
(58,96,1)
(53,8,1)
(9,111,1)
(2,95,1)
(116,111,1)
(100,68,1)
(3,5,1)
(113,101,1)
(33,69,1)
(13,111,1)
(103,41,1)
(18,51,2)
(50,51,2)
(10,113,2)
(105,51,2)
(16,51,2)
(60,113,2)
(19,51,2)
(27,51,2)
(2,51,2)
(102,113,2)
(97,67,2)
(48,51,2)
(101,67,2)
(54,51,2)
(66,113,2)
(42,67,2)
(53,51,2)
(100,51,2)
(32,51,2)
(69,51,2)
(64,51,2)
(56,67,2)
(51,111,2)
(33,51,2)
(3,80,2)
(104,51,2)
(61,19,2)
(92,46,2)
(96,28,2)
(57,67,2)
(10,76,2)
(46,51,2)
(109,72,2)
(35,51,2)
(65,51,2)
(81,9,2)
(77,51,2)
(28,74,2)
(38,51,2)
(112,9,2)
(74,80,2)
(55,51,2)
(97,51,2)
(27,80,2)
(9,111,2)
(22,72,2)
(84,51,2)
(108,56,2)
(9,51,2)
(113,51,2)
(87,51,2)
(46,111,2)
(13,111,2)
(49,51,2)
(73,51,2)
(116,40,2)
(8,93,2)
(116,111,2)
(86,10,2)
(26,51,2)
(117,51,2)
(83,51,2)
(59,51,2)
(36,113,2)
(19,32,2)
(85,51,2)
(30,51,2)
(42,113,2)
(99,9,2)
(13,51,2)
(78,113,2)
(22,107,2)
(72,80,2)
(20,51,2)
(30,80,2)
(80,90,2)
(11,51,2)
(70,51,2)
(37,51,2)
(23,113,2)
(57,51,2)
(37,9,2)
(6,51,2)
(0,51,2)
(107,72,2)
(115,72,2)
(110,51,2)
(46,13,2)
(76,113,2)
(88,51,2)
(31,51,2)
(114,51,2)
(116,13,2)
(5,51,2)
(56,113,2)
(8,51,2)
(4,113,2)
(93,51,2)
(53,8,2)
(86,113,2)
(0,80,2)
(61,51,2)
(94,51,2)
(65,57,2)
(81,111,2)
(1,80,2)
(113,94,2)
(25,54,2)
(52,51,2)
(107,80,2)
(94,38,2)
(76,80,2)
(103,51,2)
(75,46,2)
(71,51,2)
(95,51,2)
(13,37,2)
(1,51,2)
(45,51,2)
(106,51,2)
(7,51,2)
(93,80,2)
(34,51,2)
(39,51,2)
(108,86,2)
(116,51,2)
(12,51,2)
(72,51,2)
(64,65,2)
(68,51,2)
(41,46,2)
(108,42,2)
(40,80,2)
(37,111,2)
(38,0,2)
(113,101,2)
(32,80,2)
(37,81,2)
(82,113,2)
(108,113,2)
(40,51,2)
(89,51,2)
(100,80,2)
(87,80,2)
(101,51,2)
(3,51,2)
-----------------------------------
(0,prd_set->prdcr)
(1,prd_set->state)
(2,lock)
(3,prd_set->schema_name)
(4,obj)
(5,schema_name)
(6,LDMSD_PRDCR_SET_STATE_READY)
(7,"Error %d in lookup callback for set \'%s\'\\n")
(8,&prd_set->lock)
(9,status < 0)
(10,prd_set->prdcr->obj)
(11,prd_set)
(12,set)
(13,status = (status < 0 ? -status : status)
(14,rc)
(15,)
(16,prd_set->state = LDMSD_PRDCR_SET_STATE_START)
(17,prd_set)
(18,prd_set)
(19,&prd_set->lock)
(20,prd_set)
(21,)
(22,ldms_set_delete(prd_set->set)
(23,set)
(24,prd_set)
(25,RET)
(26,set)
(27,prd_set->set)
(28,&prd_set->lock)
(29,lock)
(30,prd_set->state)
(31,LDMSD_LERROR)
(32,prd_set->lock)
(33,prd_set)
(34,goto err;)
(35,prd_set)
(36,set)
(37,status < 0 ? -status : status)
(38,prd_set->prdcr->obj)
(39,prd_set)
(40,prd_set->inst_name)
(41,ldmsd_log(LDMSD_LINFO,\n\\n\\t\\t\\t\\t  "Consider changing the -m parameter on the command line.\\n")
(42,ldms_set_instance_name_get(set)
(43,arg)
(44,if (status != LDMS_LOOKUP_OK)
(45,set)
(46,status == ENOMEM)
(47,prd_set)
(48,state)
(49,status)
(50,LDMSD_PRDCR_SET_STATE_START)
(51,status != LDMS_LOOKUP_OK)
(52,prdcr)
(53,pthread_mutex_unlock(&prd_set->lock)
(54,return;)
(55,lock)
(56,ldms_set_producer_name_get(set)
(57,ldms_set_schema_name_get(set)
(58,status)
(59,prd_set->state = LDMSD_PRDCR_SET_STATE_READY)
(60,name)
(61,pthread_mutex_unlock(&prd_set->lock)
(62,err:)
(63,if (status == ENOMEM)
(64,prd_set->schema_name = strdup(ldms_set_schema_name_get(set)
(65,strdup(ldms_set_schema_name_get(set)
(66,prdcr)
(67,ldms_set_t set)
(68,set)
(69,status)
(70,set)
(71,prd_set->set = NULL)
(72,prd_set->set)
(73,0)
(74,prd_set->lock)
(75,"Consider changing the -m parameter on the command line.\\n")
(76,prd_set->prdcr)
(77,status)
(78,"Warning: The producer name \'%s\' in the configuration"\n\\n\\t\\t\\t "does not match the producer name \'%s\' in the \'%s\' metric set.\\n")
(79,LDMS_LOOKUP_OK)
(80,prd_set = arg)
(81,-status)
(82,prd_set)
(83,name)
(84,status)
(85,ENOMEM)
(86,prd_set->prdcr->obj.name)
(87,ldmsd_strgp_update(prd_set)
(88,inst_name)
(89,obj)
(90,void *arg)
(91,if (prd_set->set)
(92,LDMSD_LINFO)
(93,prd_set->lock)
(94,prd_set->prdcr->obj.name)
(95,prd_set)
(96,pthread_mutex_lock(&prd_set->lock)
(97,prd_set->set = set)
(98,if (strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(99,status)
(100,prd_set->set)
(101,ldms_set_producer_name_get(set)
(102,LDMSD_LINFO)
(103,prd_set)
(104,state)
(105,NULL)
(106,prd_set)
(107,prd_set->set)
(108,ldmsd_log(LDMSD_LINFO, "Warning: The producer name \'%s\' in the configuration"\n\\n\\t\\t\\t "does not match the producer name \'%s\' in the \'%s\' metric set.\\n",\n\\n\\t\\t\\t prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(109,set)
(110,prd_set)
(111,enum ldms_lookup_status status)
(112,status)
(113,strcmp(prd_set->prdcr->obj.name, ldms_set_producer_name_get(set)
(114,prd_set)
(115,prd_set)
(116,ldmsd_log(LDMSD_LERROR,\n\\n\\t\\t\\t  "Error %d in lookup callback for set \'%s\'\\n",\n\\n\\t\\t\\t  status,\n\\n\\t\\t\\t  prd_set->inst_name)
(117,set)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^