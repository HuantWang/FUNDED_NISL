-----label-----
0
-----code-----
static int slice_area_is_free(struct mm_struct *mm, unsigned long addr,
			      unsigned long len)
{
	struct vm_area_struct *vma;

	if ((mm->task_size - len) < addr)
		return 0;
	vma = find_vma(mm, addr);
	return (!vma || (addr + len) <= vm_start_gap(vma));
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
19,20
19,21
19,22
19,23
20,21
21,22
21,23
22,23
24,25
24,26
27,28
27,29
28,29
28,30
29,30
30,31
30,32
31,32
31,33
32,33
35,36
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
50,51
52,53
53,54
54,55
54,56
55,56
56,57
58,59
58,60
59,60
60,61
60,62
61,62
63,64
65,66
65,67
66,67
68,69
-----nextToken-----
2,4,7,9,10,12,14,16,18,23,25,26,33,34,36,38,40,44,47,49,51,57,62,64,67,69
-----computeFrom-----
28,29
28,30
30,31
30,32
42,43
42,44
54,55
54,56
58,59
58,60
60,61
60,62
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;BinaryExpression;UnaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static int slice_area_is_free(struct mm_struct *mm, unsigned long addr,			      unsigned long len){	struct vm_area_struct *vma;	if ((mm->task_size - len) < addr)		return 0;	vma = find_vma(mm, addr);	return (!vma || (addr + len) <= vm_start_gap(vma));}
static int
slice_area_is_free(struct mm_struct *mm, unsigned long addr,			      unsigned long len)
slice_area_is_free
struct mm_struct *mm
struct mm_struct
mm_struct
*mm
*
mm
unsigned long addr
unsigned long
addr
addr
unsigned long len
unsigned long
len
len
{	struct vm_area_struct *vma;	if ((mm->task_size - len) < addr)		return 0;	vma = find_vma(mm, addr);	return (!vma || (addr + len) <= vm_start_gap(vma));}
struct vm_area_struct *vma;
struct vm_area_struct *vma;
struct vm_area_struct
vm_area_struct
*vma
*
vma
if ((mm->task_size - len) < addr)		return 0;
(mm->task_size - len) < addr
(mm->task_size - len)
mm->task_size - len
mm->task_size
mm
mm
task_size
len
len
addr
addr
return 0;
0
vma = find_vma(mm, addr);
vma = find_vma(mm, addr)
vma
vma
find_vma(mm, addr)
find_vma
find_vma
mm
mm
addr
addr
return (!vma || (addr + len) <= vm_start_gap(vma));
(!vma || (addr + len) <= vm_start_gap(vma))
!vma || (addr + len) <= vm_start_gap(vma)
!vma
vma
vma
(addr + len) <= vm_start_gap(vma)
(addr + len)
addr + len
addr
addr
len
len
vm_start_gap(vma)
vm_start_gap
vm_start_gap
vma
vma
-----joern-----
(20,12,0)
(4,12,0)
(16,5,0)
(30,27,0)
(2,14,0)
(8,4,0)
(6,8,0)
(17,14,0)
(19,28,0)
(11,27,0)
(18,3,0)
(18,10,0)
(14,26,0)
(0,25,0)
(5,15,0)
(10,28,0)
(23,28,0)
(12,20,0)
(9,3,0)
(14,29,0)
(12,4,0)
(7,15,0)
(15,28,0)
(12,10,0)
(25,30,0)
(4,14,0)
(27,30,0)
(14,4,0)
(27,29,0)
(20,15,0)
(4,8,0)
(5,29,0)
(5,22,0)
(30,25,0)
(24,25,0)
(30,26,0)
(15,5,0)
(13,20,0)
(8,15,0)
(21,5,0)
(25,22,0)
(1,30,0)
(25,0,1)
(12,20,1)
(5,21,1)
(8,15,1)
(30,1,1)
(2,17,1)
(1,25,1)
(9,27,1)
(3,9,1)
(25,22,1)
(27,11,1)
(20,15,1)
(7,27,1)
(0,24,1)
(16,7,1)
(5,22,1)
(27,30,1)
(14,2,1)
(11,30,1)
(4,8,1)
(20,13,1)
(15,5,1)
(13,15,1)
(30,25,1)
(30,26,1)
(14,29,1)
(21,16,1)
(17,20,1)
(27,29,1)
(14,26,1)
(12,4,1)
(18,3,1)
(4,14,1)
(8,6,1)
(18,10,1)
(10,12,1)
(6,14,1)
(5,29,1)
(6,20,2)
(20,15,2)
(16,27,2)
(15,5,2)
(12,27,2)
(18,10,2)
(9,27,2)
(17,20,2)
(5,27,2)
(3,27,2)
(8,15,2)
(21,27,2)
(4,14,2)
(5,22,2)
(13,27,2)
(8,20,2)
(12,4,2)
(27,29,2)
(5,29,2)
(15,27,2)
(12,20,2)
(30,26,2)
(20,27,2)
(30,25,2)
(27,30,2)
(14,26,2)
(14,20,2)
(18,3,2)
(7,27,2)
(25,22,2)
(14,29,2)
(4,20,2)
(2,20,2)
(10,27,2)
(4,8,2)
-----------------------------------
(0,task_size)
(1,len)
(2,len)
(3,return 0;)
(4,(addr + len)
(5,find_vma(mm, addr)
(6,vma)
(7,vma)
(8,vm_start_gap(vma)
(9,0)
(10,return (!vma || (addr + len)
(11,addr)
(12,!vma || (addr + len)
(13,vma)
(14,addr + len)
(15,vma = find_vma(mm, addr)
(16,mm)
(17,addr)
(18,RET)
(19,vma)
(20,!vma)
(21,addr)
(22,struct mm_struct *mm)
(23,if ((mm->task_size - len)
(24,mm)
(25,mm->task_size)
(26,unsigned long len)
(27,(mm->task_size - len)
(28,)
(29,unsigned long addr)
(30,mm->task_size - len)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^