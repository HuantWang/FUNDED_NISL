-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(int count)
{
    if(CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)
    {
        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */
        SLEEP(count);
        printLine("Sleep time possibly too long");
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
11,12
13,14
13,15
14,15
15,16
15,17
16,17
18,19
20,21
21,22
21,23
22,23
-----nextToken-----
2,4,6,8,12,17,19,23,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(int count){    if(CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
void
CWE400_Resource_Exhaustion__fgets_sleep_22_badSink(int count)
CWE400_Resource_Exhaustion__fgets_sleep_22_badSink
int count
int
count
count
{    if(CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }}
if(CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)    {        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal
CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal
{        /* POTENTIAL FLAW: Sleep function using count as the parameter with no validation */        SLEEP(count);        printLine("Sleep time possibly too long");    }
SLEEP(count);
SLEEP(count)
SLEEP
SLEEP
count
count
printLine("Sleep time possibly too long");
printLine("Sleep time possibly too long")
printLine
printLine
"Sleep time possibly too long"
-----joern-----
(9,3,0)
(4,9,0)
(0,6,0)
(7,8,0)
(8,3,0)
(9,1,0)
(7,9,1)
(8,7,1)
(5,2,1)
(5,8,1)
(9,1,1)
(9,4,1)
(4,2,1)
(8,2,2)
(9,2,2)
(7,2,2)
(9,1,2)
(4,2,2)
-----------------------------------
(0,if(CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)
(1,int count)
(2,CWE400_Resource_Exhaustion__fgets_sleep_22_badGlobal)
(3,)
(4,count)
(5,RET)
(6,)
(7,"Sleep time possibly too long")
(8,printLine("Sleep time possibly too long")
(9,SLEEP(count)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^