-----label-----
1
-----code-----
void CWE400_Resource_Exhaustion__rand_sleep_65_bad()
{
    int count;
    /* define a function pointer */
    void (*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink;
    /* Initialize count */
    count = -1;
    /* POTENTIAL FLAW: Set count to a random value */
    count = RAND32();
    /* use the function pointer */
    funcPtr(count);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
35,36
36,37
38,39
39,40
39,41
40,41
42,43
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,37,41,43
-----computeFrom-----
26,27
26,28
32,33
32,34
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_sleep_65_bad(){    int count;    /* define a function pointer */    void (*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Set count to a random value */    count = RAND32();    /* use the function pointer */    funcPtr(count);}
void
CWE400_Resource_Exhaustion__rand_sleep_65_bad()
CWE400_Resource_Exhaustion__rand_sleep_65_bad
{    int count;    /* define a function pointer */    void (*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink;    /* Initialize count */    count = -1;    /* POTENTIAL FLAW: Set count to a random value */    count = RAND32();    /* use the function pointer */    funcPtr(count);}
int count;
int count;
int
count
count
void (*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink;
void (*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink;
void
(*funcPtr) (int) = CWE400_Resource_Exhaustion__rand_sleep_65b_badSink
*funcPtr
*
funcPtr
int
int


= CWE400_Resource_Exhaustion__rand_sleep_65b_badSink
CWE400_Resource_Exhaustion__rand_sleep_65b_badSink
CWE400_Resource_Exhaustion__rand_sleep_65b_badSink
count = -1;
count = -1
count
count
-1
1
count = RAND32();
count = RAND32()
count
count
RAND32()
RAND32
RAND32
funcPtr(count);
funcPtr(count)
funcPtr
funcPtr
count
count
-----joern-----
(13,6,0)
(2,6,0)
(11,6,0)
(3,1,0)
(15,14,0)
(13,11,0)
(11,8,0)
(7,11,0)
(10,6,0)
(14,6,0)
(9,1,0)
(1,3,0)
(12,13,0)
(1,6,0)
(5,14,0)
(8,11,0)
(4,3,0)
(5,15,1)
(13,12,1)
(11,8,1)
(13,11,1)
(3,4,1)
(7,1,1)
(14,5,1)
(9,14,1)
(4,9,1)
(8,7,1)
(0,13,1)
(1,3,1)
(12,11,1)
(1,3,2)
(13,11,2)
(11,8,2)
-----------------------------------
(0,RET)
(1,count = -1)
(2,count)
(3,-1)
(4,1)
(5,CWE400_Resource_Exhaustion__rand_sleep_65b_badSink)
(6,)
(7,count)
(8,RAND32()
(9,count)
(10,funcPtr)
(11,count = RAND32()
(12,count)
(13,funcPtr(count)
(14,(*funcPtr)
(15,funcPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^