-----label-----
1
-----code-----
static void badSink()
{
    int count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
static void
badSink()
badSink
{    int count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData;
int count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData;
int
count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData
count
= CWE400_Resource_Exhaustion__rand_fwrite_45_badData
CWE400_Resource_Exhaustion__rand_fwrite_45_badData
CWE400_Resource_Exhaustion__rand_fwrite_45_badData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(23,28,0)
(28,46,0)
(8,28,0)
(6,60,0)
(5,26,0)
(51,60,0)
(35,60,0)
(3,36,0)
(45,33,0)
(18,5,0)
(48,60,0)
(28,8,0)
(50,22,0)
(47,53,0)
(34,29,0)
(33,6,0)
(39,61,0)
(5,18,0)
(28,7,0)
(21,59,0)
(7,56,0)
(7,28,0)
(1,44,0)
(6,53,0)
(44,60,0)
(17,46,0)
(11,26,0)
(41,60,0)
(46,22,0)
(31,60,0)
(36,40,0)
(58,41,0)
(54,44,0)
(53,6,0)
(0,15,0)
(38,46,0)
(60,22,0)
(20,2,0)
(25,6,0)
(43,60,0)
(15,18,0)
(49,31,0)
(26,5,0)
(42,7,0)
(52,33,0)
(4,56,0)
(5,30,0)
(53,44,0)
(10,60,0)
(55,30,0)
(57,5,0)
(9,56,0)
(2,6,0)
(14,41,0)
(2,19,0)
(12,60,0)
(13,5,0)
(16,31,0)
(32,39,0)
(27,53,0)
(5,6,0)
(30,5,0)
(29,56,0)
(18,15,0)
(28,46,1)
(44,1,1)
(49,16,1)
(28,23,1)
(2,20,1)
(23,42,1)
(47,27,1)
(57,26,1)
(30,55,1)
(58,14,1)
(24,7,1)
(26,11,1)
(9,36,1)
(37,2,1)
(29,34,1)
(36,3,1)
(7,56,1)
(5,30,1)
(42,29,1)
(56,4,1)
(15,0,1)
(1,54,1)
(5,57,1)
(55,13,1)
(42,56,1)
(13,15,1)
(16,46,1)
(7,28,1)
(5,26,1)
(3,33,1)
(4,9,1)
(54,41,1)
(5,6,1)
(39,32,1)
(18,15,1)
(14,31,1)
(32,18,1)
(2,6,1)
(34,18,1)
(17,38,1)
(53,47,1)
(33,6,1)
(29,56,1)
(45,52,1)
(31,49,1)
(9,33,1)
(11,30,1)
(53,44,1)
(37,24,1)
(18,5,1)
(25,44,1)
(20,24,1)
(27,25,1)
(52,6,1)
(46,17,1)
(28,8,1)
(41,58,1)
(33,45,1)
(34,39,1)
(0,7,1)
(6,53,1)
(28,8,2)
(20,24,2)
(2,24,2)
(5,6,2)
(7,7,2)
(5,26,2)
(36,33,2)
(0,7,2)
(2,6,2)
(3,33,2)
(55,7,2)
(26,7,2)
(18,15,2)
(5,30,2)
(32,18,2)
(33,6,2)
(7,28,2)
(5,7,2)
(28,46,2)
(7,56,2)
(6,53,2)
(39,18,2)
(18,7,2)
(11,7,2)
(18,5,2)
(29,56,2)
(23,7,2)
(28,7,2)
(29,7,2)
(53,44,2)
(13,7,2)
(30,7,2)
(34,7,2)
(57,7,2)
(15,7,2)
(42,7,2)
-----------------------------------
(0,SENTENCE)
(1,"output_bad.txt")
(2,fclose(pFile)
(3,1)
(4,0)
(5,fwrite(SENTENCE, sizeof(char)
(6,pFile = fopen(filename, "w+")
(7,i < (size_t)
(8,size_t)
(9,i)
(10,if (pFile)
(11,SENTENCE)
(12,i)
(13,SENTENCE)
(14,pFile)
(15,strlen(SENTENCE)
(16,i)
(17,CWE400_Resource_Exhaustion__rand_fwrite_45_badData)
(18,strlen(SENTENCE)
(19,)
(20,pFile)
(21,if (strlen(SENTENCE)
(22,)
(23,count)
(24,pFile)
(25,pFile)
(26,strlen(SENTENCE)
(27,filename)
(28,(size_t)
(29,i++)
(30,sizeof(char)
(31,i = 0)
(32,1)
(33,pFile == NULL)
(34,i)
(35,if (pFile == NULL)
(36,exit(1)
(37,RET)
(38,count)
(39,exit(1)
(40,)
(41,*pFile = NULL)
(42,i)
(43,pFile)
(44,*filename = "output_bad.txt")
(45,NULL)
(46,count = CWE400_Resource_Exhaustion__rand_fwrite_45_badData)
(47,"w+")
(48,for (i = 0; i < (size_t)
(49,0)
(50,count)
(51,filename)
(52,pFile)
(53,fopen(filename, "w+")
(54,filename)
(55,char)
(56,i = 0)
(57,pFile)
(58,NULL)
(59,)
(60,)
(61,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^