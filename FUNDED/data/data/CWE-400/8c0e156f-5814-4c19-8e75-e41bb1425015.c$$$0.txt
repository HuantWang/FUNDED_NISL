-----label-----
0
-----code-----
static bool tcp_can_early_drop(const struct nf_conn *ct)
{
	switch (ct->proto.tcp.state) {
	case TCP_CONNTRACK_FIN_WAIT:
	case TCP_CONNTRACK_LAST_ACK:
	case TCP_CONNTRACK_TIME_WAIT:
	case TCP_CONNTRACK_CLOSE:
	case TCP_CONNTRACK_CLOSE_WAIT:
		return true;
	default:
		break;
	}

	return false;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
12,14
13,14
13,15
14,15
14,16
15,16
15,17
16,17
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
22,23
23,24
25,26
26,27
28,29
29,30
31,32
32,33
34,35
35,36
37,38
41,42
-----nextToken-----
2,4,7,9,10,17,18,19,20,24,27,30,33,36,38,39,40,42
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;SwitchStatement;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;CompoundStatement;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;LiteralExpression;DefaultStatement;BreakStatement;ReturnStatement;LiteralExpression;
-----ast_node-----
static bool tcp_can_early_drop(const struct nf_conn *ct){	switch (ct->proto.tcp.state) {	case TCP_CONNTRACK_FIN_WAIT:	case TCP_CONNTRACK_LAST_ACK:	case TCP_CONNTRACK_TIME_WAIT:	case TCP_CONNTRACK_CLOSE:	case TCP_CONNTRACK_CLOSE_WAIT:		return true;	default:		break;	}	return false;}
static bool
tcp_can_early_drop(const struct nf_conn *ct)
tcp_can_early_drop
const struct nf_conn *ct
const struct nf_conn
nf_conn
*ct
*
ct
{	switch (ct->proto.tcp.state) {	case TCP_CONNTRACK_FIN_WAIT:	case TCP_CONNTRACK_LAST_ACK:	case TCP_CONNTRACK_TIME_WAIT:	case TCP_CONNTRACK_CLOSE:	case TCP_CONNTRACK_CLOSE_WAIT:		return true;	default:		break;	}	return false;}
switch (ct->proto.tcp.state) {	case TCP_CONNTRACK_FIN_WAIT:	case TCP_CONNTRACK_LAST_ACK:	case TCP_CONNTRACK_TIME_WAIT:	case TCP_CONNTRACK_CLOSE:	case TCP_CONNTRACK_CLOSE_WAIT:		return true;	default:		break;	}
ct->proto.tcp.state
ct->proto.tcp
ct->proto
ct
ct
proto
tcp
state
{	case TCP_CONNTRACK_FIN_WAIT:	case TCP_CONNTRACK_LAST_ACK:	case TCP_CONNTRACK_TIME_WAIT:	case TCP_CONNTRACK_CLOSE:	case TCP_CONNTRACK_CLOSE_WAIT:		return true;	default:		break;	}
case TCP_CONNTRACK_FIN_WAIT:
TCP_CONNTRACK_FIN_WAIT
TCP_CONNTRACK_FIN_WAIT
case TCP_CONNTRACK_LAST_ACK:
TCP_CONNTRACK_LAST_ACK
TCP_CONNTRACK_LAST_ACK
case TCP_CONNTRACK_TIME_WAIT:
TCP_CONNTRACK_TIME_WAIT
TCP_CONNTRACK_TIME_WAIT
case TCP_CONNTRACK_CLOSE:
TCP_CONNTRACK_CLOSE
TCP_CONNTRACK_CLOSE
case TCP_CONNTRACK_CLOSE_WAIT:
TCP_CONNTRACK_CLOSE_WAIT
TCP_CONNTRACK_CLOSE_WAIT
return true;
true
default:
break;
return false;
false
-----joern-----
(10,3,0)
(21,13,0)
(13,18,0)
(0,13,0)
(6,18,0)
(5,18,0)
(20,18,0)
(1,18,0)
(14,18,0)
(16,3,0)
(3,16,0)
(19,18,0)
(3,8,0)
(11,9,0)
(7,17,0)
(16,4,0)
(12,18,0)
(4,16,0)
(15,16,0)
(17,9,0)
(22,4,0)
(2,3,0)
(21,17,0)
(21,13,1)
(4,22,1)
(17,7,1)
(16,15,1)
(13,0,1)
(21,17,1)
(3,8,1)
(7,5,1)
(3,10,1)
(10,2,1)
(22,16,1)
(16,3,1)
(5,4,1)
(15,3,1)
(0,4,1)
(4,16,1)
(21,13,2)
(13,4,2)
(7,4,2)
(5,4,2)
(3,8,2)
(0,4,2)
(21,17,2)
(17,4,2)
(16,3,2)
(4,16,2)
-----------------------------------
(0,true)
(1,case TCP_CONNTRACK_CLOSE_WAIT:)
(2,ct)
(3,ct->proto)
(4,ct->proto.tcp.state)
(5,break;)
(6,case TCP_CONNTRACK_FIN_WAIT:)
(7,false)
(8,const struct nf_conn *ct)
(9,)
(10,proto)
(11,switch (ct->proto.tcp.state)
(12,case TCP_CONNTRACK_CLOSE:)
(13,return true;)
(14,case TCP_CONNTRACK_TIME_WAIT:)
(15,tcp)
(16,ct->proto.tcp)
(17,return false;)
(18,)
(19,default:)
(20,case TCP_CONNTRACK_LAST_ACK:)
(21,RET)
(22,state)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^