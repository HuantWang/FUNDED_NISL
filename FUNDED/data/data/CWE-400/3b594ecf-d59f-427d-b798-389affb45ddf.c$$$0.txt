-----label-----
1
-----code-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad()
{
    struct _twoIntsStruct * data;
    /* define a function pointer */
    void (*funcPtr) (struct _twoIntsStruct *) = badSink;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
40,41
40,42
41,42
43,44
45,46
45,47
45,48
46,47
49,50
50,51
50,52
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
61,62
62,63
62,64
63,64
65,66
67,68
68,69
68,70
69,70
69,71
70,71
70,72
71,72
76,77
77,78
77,79
78,79
78,80
79,80
79,81
80,81
85,86
86,87
86,88
87,88
89,90
89,91
90,91
90,92
91,92
93,94
95,96
96,97
96,98
97,98
100,101
101,102
101,103
102,103
104,105
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,42,44,47,48,52,53,57,59,64,66,72,73,74,75,81,82,83,84,88,92,94,98,99,103,105
-----computeFrom-----
30,31
30,32
36,37
36,38
55,56
55,57
68,69
68,70
77,78
77,79
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad(){    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
void
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad()
CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44_bad
{    struct _twoIntsStruct * data;    /* define a function pointer */    void (*funcPtr) (struct _twoIntsStruct *) = badSink;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    /* use the function pointer */    funcPtr(data);}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void (*funcPtr) (struct _twoIntsStruct *) = badSink;
void
(*funcPtr) (struct _twoIntsStruct *) = badSink
*funcPtr
*
funcPtr
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*

= badSink
badSink
badSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)calloc(100, sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
calloc(100, sizeof(struct _twoIntsStruct))
calloc
calloc
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(7,13,0)
(43,6,0)
(1,37,0)
(44,4,0)
(9,23,0)
(22,18,0)
(25,9,0)
(10,40,0)
(21,18,0)
(5,20,0)
(33,16,0)
(31,36,0)
(8,36,0)
(9,19,0)
(20,45,0)
(37,36,0)
(27,16,0)
(35,40,0)
(16,14,0)
(30,36,0)
(42,6,0)
(14,16,0)
(15,36,0)
(40,15,0)
(0,36,0)
(12,15,0)
(41,46,0)
(13,15,0)
(4,19,0)
(13,7,0)
(26,36,0)
(46,36,0)
(14,0,0)
(15,13,0)
(9,25,0)
(48,18,0)
(3,0,0)
(24,21,0)
(45,2,0)
(19,9,0)
(17,4,0)
(6,43,0)
(47,46,0)
(45,20,0)
(23,9,0)
(23,36,0)
(18,21,0)
(30,15,0)
(32,30,0)
(16,15,0)
(34,14,0)
(11,26,0)
(4,15,0)
(21,26,0)
(18,15,0)
(13,42,0)
(39,36,0)
(28,42,0)
(6,42,0)
(19,4,0)
(29,37,0)
(42,13,0)
(21,24,1)
(3,14,1)
(30,15,1)
(14,16,1)
(5,40,1)
(26,11,1)
(40,15,1)
(9,25,1)
(21,18,1)
(32,23,1)
(42,6,1)
(22,48,1)
(6,43,1)
(4,44,1)
(29,1,1)
(47,41,1)
(12,46,1)
(4,15,1)
(15,13,1)
(33,45,1)
(11,21,1)
(9,19,1)
(13,42,1)
(0,3,1)
(46,47,1)
(49,30,1)
(20,5,1)
(18,22,1)
(19,4,1)
(17,26,1)
(33,40,1)
(24,18,1)
(44,17,1)
(41,37,1)
(10,15,1)
(48,0,1)
(27,33,1)
(23,9,1)
(37,29,1)
(16,15,1)
(28,12,1)
(40,35,1)
(6,28,1)
(18,15,1)
(30,32,1)
(35,10,1)
(34,16,1)
(45,20,1)
(16,27,1)
(13,7,1)
(14,34,1)
(23,9,2)
(15,13,2)
(5,40,2)
(19,4,2)
(9,19,2)
(20,40,2)
(6,43,2)
(9,25,2)
(21,18,2)
(45,40,2)
(40,15,2)
(45,20,2)
(13,42,2)
(30,15,2)
(4,15,2)
(18,15,2)
(14,16,2)
(42,6,2)
(13,7,2)
(16,15,2)
-----------------------------------
(0,data[0].intOne = 0)
(1,funcPtr)
(2,)
(3,0)
(4,data[0])
(5,1)
(6,sizeof(struct _twoIntsStruct)
(7,struct _twoIntsStruct *)
(8,if (data == NULL)
(9,(twoIntsStruct *)
(10,data)
(11,0)
(12,data)
(13,(struct _twoIntsStruct *)
(14,data[0].intOne)
(15,data = (struct _twoIntsStruct *)
(16,data[0])
(17,data)
(18,data[0])
(19,&data[0])
(20,-1)
(21,data[0].intTwo)
(22,0)
(23,printStructLine((twoIntsStruct *)
(24,intTwo)
(25,twoIntsStruct *)
(26,data[0].intTwo = 0)
(27,0)
(28,100)
(29,badSink)
(30,funcPtr(data)
(31,funcPtr)
(32,data)
(33,data)
(34,intOne)
(35,NULL)
(36,)
(37,(*funcPtr)
(38, sizeof(struct _twoIntsStruct)
(39,data)
(40,data == NULL)
(41,data)
(42,calloc(100, sizeof(struct _twoIntsStruct)
(43,struct _twoIntsStruct)
(44,0)
(45,exit(-1)
(46,data = NULL)
(47,NULL)
(48,data)
(49,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^