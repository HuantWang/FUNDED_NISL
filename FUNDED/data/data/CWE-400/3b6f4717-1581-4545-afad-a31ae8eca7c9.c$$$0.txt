-----label-----
0
-----code-----
static void goodB2G1Sink(int data)
{
    if(goodB2G1Static)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Close the file from the source before reassigning data to a new file descriptor */
        if (data != -1)
        {
            CLOSE(data);
        }
        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
        /* avoid incidental for not closing the file */
        if (data != -1)
        {
            CLOSE(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
11,12
13,14
14,15
15,16
15,17
16,17
19,20
19,21
19,22
20,21
20,22
21,22
21,23
22,23
24,25
26,27
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
35,36
37,38
37,39
37,40
37,41
38,39
41,42
41,43
42,43
44,45
46,47
46,48
47,48
49,50
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
62,63
-----nextToken-----
2,4,6,8,12,17,18,23,25,30,32,36,39,40,43,45,48,50,54,56,61,63
-----computeFrom-----
21,22
21,23
34,35
34,36
41,42
41,43
46,47
46,48
52,53
52,54
-----guardedBy-----
23,32
54,63
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G1Sink(int data){    if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }    }}
static void
goodB2G1Sink(int data)
goodB2G1Sink
int data
int
data
data
{    if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }    }}
if(goodB2G1Static)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }    }
goodB2G1Static
goodB2G1Static
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Close the file from the source before reassigning data to a new file descriptor */        if (data != -1)        {            CLOSE(data);        }        data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);        /* avoid incidental for not closing the file */        if (data != -1)        {            CLOSE(data);        }    }
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"GoodSink_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)        {            CLOSE(data);        }
data != -1
data
data
-1
1
{            CLOSE(data);        }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(15,11,0)
(13,14,0)
(9,14,0)
(9,4,0)
(5,27,0)
(11,33,0)
(18,1,0)
(2,8,0)
(26,1,0)
(33,11,0)
(11,4,0)
(10,27,0)
(3,6,0)
(17,25,0)
(29,32,0)
(34,9,0)
(14,9,0)
(19,5,0)
(5,1,0)
(22,18,0)
(7,14,0)
(18,4,0)
(23,32,0)
(4,9,0)
(4,1,0)
(8,9,0)
(20,3,0)
(9,8,0)
(12,4,0)
(26,24,0)
(18,16,0)
(11,1,0)
(21,26,0)
(27,5,0)
(30,8,0)
(4,32,0)
(28,33,0)
(2,34,1)
(19,31,1)
(13,7,1)
(8,30,1)
(21,5,1)
(10,19,1)
(0,11,1)
(34,12,1)
(9,8,1)
(30,2,1)
(27,10,1)
(4,1,1)
(7,8,1)
(22,11,1)
(33,28,1)
(5,1,1)
(3,20,1)
(12,26,1)
(11,33,1)
(15,4,1)
(28,15,1)
(4,9,1)
(18,1,1)
(9,14,1)
(20,31,1)
(0,3,1)
(5,27,1)
(0,18,1)
(12,5,1)
(18,4,1)
(11,4,1)
(18,22,1)
(11,1,1)
(26,21,1)
(26,1,1)
(14,13,1)
(8,31,2)
(34,31,2)
(11,1,2)
(15,31,2)
(5,31,2)
(18,1,2)
(4,1,2)
(27,31,2)
(30,31,2)
(26,5,2)
(18,11,2)
(9,8,2)
(4,9,2)
(7,31,2)
(11,33,2)
(9,14,2)
(33,31,2)
(5,27,2)
(10,31,2)
(14,31,2)
(11,31,2)
(13,31,2)
(3,31,2)
(12,31,2)
(2,31,2)
(18,4,2)
(21,5,2)
(26,1,2)
(20,31,2)
(5,1,2)
(11,4,2)
(9,31,2)
(4,31,2)
(22,11,2)
(19,31,2)
(28,31,2)
-----------------------------------
(0,RET)
(1,int data)
(2,O_RDWR)
(3,printLine("Benign, fixed string")
(4,data = OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(5,data != -1)
(6,)
(7,S_IREAD)
(8,O_RDWR|O_CREAT)
(9,OPEN("GoodSink_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(10,1)
(11,data != -1)
(12,data)
(13,S_IWRITE)
(14,S_IREAD|S_IWRITE)
(15,data)
(16,)
(17,if(goodB2G1Static)
(18,CLOSE(data)
(19,data)
(20,"Benign, fixed string")
(21,data)
(22,data)
(23,if (data != -1)
(24,)
(25,)
(26,CLOSE(data)
(27,-1)
(28,1)
(29,if (data != -1)
(30,O_CREAT)
(31,goodB2G1Static)
(32,)
(33,-1)
(34,"GoodSink_open.txt")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^