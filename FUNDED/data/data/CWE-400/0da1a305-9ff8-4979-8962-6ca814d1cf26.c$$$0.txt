-----label-----
0
-----code-----
static void goodG2B()
{
    struct _twoIntsStruct * data;
    data = NULL;
    goto source;
source:
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
    /* Initialize and make use of data */
    data[0].intOne = 0;
    data[0].intTwo = 0;
    printStructLine((twoIntsStruct *)&data[0]);
    goto sink;
sink:
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
5,14
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
27,29
28,29
28,30
29,30
31,32
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
43,44
44,45
44,46
45,46
45,47
46,47
46,48
47,48
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
61,62
62,63
62,64
63,64
65,66
65,67
66,67
66,68
67,68
69,70
71,72
72,73
72,74
73,74
76,77
78,79
78,80
-----nextToken-----
2,4,9,11,12,16,18,20,22,26,30,32,35,37,41,42,48,49,50,51,57,58,59,60,64,68,70,74,75,77,79,80
-----computeFrom-----
14,15
14,16
24,25
24,26
36,37
36,38
44,45
44,46
53,54
53,55
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;LabelStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;GotoStatement;Name;LabelStatement;Name;NullStatement;
-----ast_node-----
static void goodG2B(){    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
goodG2B()
goodG2B
{    struct _twoIntsStruct * data;    data = NULL;    goto source;source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));    /* Initialize and make use of data */    data[0].intOne = 0;    data[0].intTwo = 0;    printStructLine((twoIntsStruct *)&data[0]);    goto sink;sink:    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
struct _twoIntsStruct * data;
struct _twoIntsStruct * data;
struct _twoIntsStruct
_twoIntsStruct
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
goto source;
source
source:    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
source
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));
data = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
data
data
(struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct))
struct _twoIntsStruct *
struct _twoIntsStruct
_twoIntsStruct
*
*
ALLOCA(100*sizeof(struct _twoIntsStruct))
ALLOCA
ALLOCA
100*sizeof(struct _twoIntsStruct)
100
sizeof(struct _twoIntsStruct)
struct _twoIntsStruct
struct _twoIntsStruct
_twoIntsStruct

data[0].intOne = 0;
data[0].intOne = 0
data[0].intOne
data[0]
data
data
0
intOne
0
data[0].intTwo = 0;
data[0].intTwo = 0
data[0].intTwo
data[0]
data
data
0
intTwo
0
printStructLine((twoIntsStruct *)&data[0]);
printStructLine((twoIntsStruct *)&data[0])
printStructLine
printStructLine
(twoIntsStruct *)&data[0]
twoIntsStruct *
twoIntsStruct
twoIntsStruct
*
*
&data[0]
data[0]
data
data
0
goto sink;
sink
sink:    /* POTENTIAL FLAW: No deallocation */    ;
sink
;
-----joern-----
(19,27,0)
(4,36,0)
(1,26,0)
(6,17,0)
(21,36,0)
(10,25,0)
(22,3,0)
(38,9,0)
(18,39,0)
(5,10,0)
(9,7,0)
(23,39,0)
(24,7,0)
(7,10,0)
(23,9,0)
(37,3,0)
(10,5,0)
(26,36,0)
(12,36,0)
(2,0,0)
(16,29,0)
(14,36,0)
(14,0,0)
(2,27,0)
(35,36,0)
(25,10,0)
(10,7,0)
(0,2,0)
(25,31,0)
(37,7,0)
(3,26,0)
(29,31,0)
(32,37,0)
(31,25,0)
(15,36,0)
(7,36,0)
(9,23,0)
(0,20,0)
(13,17,0)
(29,16,0)
(3,37,0)
(0,14,0)
(17,36,0)
(20,0,0)
(33,37,0)
(39,36,0)
(31,29,0)
(27,7,0)
(34,31,0)
(27,2,0)
(28,9,0)
(30,23,0)
(8,27,0)
(27,7,1)
(37,32,1)
(21,17,1)
(1,3,1)
(0,2,1)
(30,9,1)
(17,6,1)
(2,27,1)
(11,4,1)
(27,19,1)
(32,33,1)
(10,5,1)
(31,29,1)
(0,20,1)
(6,13,1)
(9,28,1)
(38,26,1)
(18,23,1)
(25,31,1)
(23,9,1)
(28,38,1)
(34,24,1)
(22,37,1)
(39,18,1)
(29,16,1)
(19,8,1)
(23,30,1)
(26,1,1)
(9,7,1)
(29,34,1)
(7,10,1)
(8,39,1)
(3,37,1)
(24,21,1)
(3,22,1)
(14,0,1)
(10,25,1)
(33,7,1)
(4,14,1)
(37,7,1)
(14,0,2)
(10,5,2)
(7,10,2)
(0,2,2)
(25,31,2)
(27,7,2)
(37,7,2)
(23,9,2)
(29,16,2)
(3,37,2)
(31,29,2)
(0,20,2)
(10,25,2)
(9,7,2)
(2,27,2)
-----------------------------------
(0,(twoIntsStruct *)
(1,0)
(2,&data[0])
(3,data[0].intOne)
(4,goto sink;)
(5,struct _twoIntsStruct *)
(6,NULL)
(7,data = (struct _twoIntsStruct *)
(8,data)
(9,data[0])
(10,(struct _twoIntsStruct *)
(11,RET)
(12,source:)
(13,data)
(14,printStructLine((twoIntsStruct *)
(15,sink:)
(16,struct _twoIntsStruct)
(17,data = NULL)
(18,0)
(19,0)
(20,twoIntsStruct *)
(21,goto source;)
(22,intOne)
(23,data[0].intTwo)
(24,data)
(25,ALLOCA(100*sizeof(struct _twoIntsStruct)
(26,data[0].intOne = 0)
(27,data[0])
(28,0)
(29,sizeof(struct _twoIntsStruct)
(30,intTwo)
(31,100*sizeof(struct _twoIntsStruct)
(32,0)
(33,data)
(34,100)
(35,data)
(36,)
(37,data[0])
(38,data)
(39,data[0].intTwo = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^