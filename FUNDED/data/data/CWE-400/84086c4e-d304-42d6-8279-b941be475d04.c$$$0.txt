-----label-----
1
-----code-----
static int cdc_ncm_setup(struct usbnet *dev)
{
	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
	u32 def_rx, def_tx;

	/* be conservative when selecting intial buffer size to
	 * increase the number of hosts this will work for
	 */
	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,
		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));
	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,
		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));

	/* clamp rx_max and tx_max and inform device */
	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);

	/* sanitize the modulus and remainder values */
	cdc_ncm_fix_modulus(dev);

	/* set max datagram size */
	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
26,27
26,28
27,28
27,29
28,29
32,33
33,34
33,35
33,36
34,35
36,37
38,39
40,41
41,42
41,43
42,43
44,45
44,46
44,47
44,48
45,46
47,48
49,50
51,52
51,53
52,53
54,55
54,56
55,56
55,57
56,57
60,61
61,62
61,63
62,63
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
71,73
72,73
74,75
74,76
75,76
75,77
76,77
80,81
81,82
81,83
81,84
81,85
82,83
84,85
86,87
88,89
90,91
91,92
91,93
92,93
94,95
96,97
97,98
97,99
97,100
98,99
100,101
102,103
102,104
103,104
105,106
107,108
-----nextToken-----
2,4,7,9,10,15,17,18,23,25,29,30,31,35,37,39,43,46,48,50,53,57,58,59,63,66,68,70,73,77,78,79,83,85,87,89,93,95,99,101,104,106,108
-----computeFrom-----
41,42
41,43
61,62
61,63
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;ElaboratedTypeSpecifier;Name;Declarator;Pointer;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int cdc_ncm_setup(struct usbnet *dev){	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];	u32 def_rx, def_tx;	/* be conservative when selecting intial buffer size to	 * increase the number of hosts this will work for	 */	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));	/* clamp rx_max and tx_max and inform device */	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);	/* sanitize the modulus and remainder values */	cdc_ncm_fix_modulus(dev);	/* set max datagram size */	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));	return 0;}
static int
cdc_ncm_setup(struct usbnet *dev)
cdc_ncm_setup
struct usbnet *dev
struct usbnet
usbnet
*dev
*
dev
{	struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];	u32 def_rx, def_tx;	/* be conservative when selecting intial buffer size to	 * increase the number of hosts this will work for	 */	def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));	def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));	/* clamp rx_max and tx_max and inform device */	cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);	/* sanitize the modulus and remainder values */	cdc_ncm_fix_modulus(dev);	/* set max datagram size */	cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));	return 0;}
struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
struct cdc_ncm_ctx *ctx = (struct cdc_ncm_ctx *)dev->data[0];
struct cdc_ncm_ctx
cdc_ncm_ctx
*ctx = (struct cdc_ncm_ctx *)dev->data[0]
*
ctx
= (struct cdc_ncm_ctx *)dev->data[0]
(struct cdc_ncm_ctx *)dev->data[0]
struct cdc_ncm_ctx *
struct cdc_ncm_ctx
cdc_ncm_ctx
*
*
dev->data[0]
dev->data
dev
dev
data
0
u32 def_rx, def_tx;
u32 def_rx, def_tx;
u32
u32
def_rx
def_rx
def_tx
def_tx
def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize));
def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize))
def_rx
def_rx
min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,		       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize))
min_t
min_t
u32
u32
CDC_NCM_NTB_DEF_SIZE_RX
CDC_NCM_NTB_DEF_SIZE_RX
le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
le32_to_cpu
le32_to_cpu
ctx->ncm_parm.dwNtbInMaxSize
ctx->ncm_parm
ctx
ctx
ncm_parm
dwNtbInMaxSize
def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize));
def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize))
def_tx
def_tx
min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,		       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize))
min_t
min_t
u32
u32
CDC_NCM_NTB_DEF_SIZE_TX
CDC_NCM_NTB_DEF_SIZE_TX
le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
le32_to_cpu
le32_to_cpu
ctx->ncm_parm.dwNtbOutMaxSize
ctx->ncm_parm
ctx
ctx
ncm_parm
dwNtbOutMaxSize
cdc_ncm_update_rxtx_max(dev, def_rx, def_tx);
cdc_ncm_update_rxtx_max(dev, def_rx, def_tx)
cdc_ncm_update_rxtx_max
cdc_ncm_update_rxtx_max
dev
dev
def_rx
def_rx
def_tx
def_tx
cdc_ncm_fix_modulus(dev);
cdc_ncm_fix_modulus(dev)
cdc_ncm_fix_modulus
cdc_ncm_fix_modulus
dev
dev
cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev));
cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev))
cdc_ncm_set_dgram_size
cdc_ncm_set_dgram_size
dev
dev
cdc_ncm_max_dgram_size(dev)
cdc_ncm_max_dgram_size
cdc_ncm_max_dgram_size
dev
dev
return 0;
0
-----joern-----
(30,19,0)
(39,34,0)
(17,36,0)
(48,42,0)
(39,11,0)
(9,41,0)
(45,48,0)
(48,45,0)
(41,36,0)
(25,47,0)
(14,34,0)
(1,22,0)
(35,41,0)
(26,34,0)
(17,37,0)
(0,40,0)
(33,42,0)
(21,17,0)
(32,8,0)
(7,34,0)
(18,11,0)
(36,34,0)
(26,40,0)
(37,17,0)
(38,11,0)
(47,25,0)
(28,18,0)
(37,47,0)
(8,34,0)
(19,34,0)
(46,38,0)
(22,36,0)
(38,35,0)
(16,25,0)
(3,35,0)
(44,45,0)
(8,11,0)
(31,27,0)
(41,35,0)
(23,25,0)
(2,22,0)
(10,17,0)
(42,40,0)
(15,26,0)
(42,48,0)
(27,25,0)
(40,42,0)
(26,11,0)
(12,19,0)
(26,27,0)
(45,22,0)
(4,26,0)
(43,42,0)
(8,18,0)
(47,37,0)
(41,9,0)
(40,34,0)
(13,34,0)
(22,45,0)
(6,37,0)
(36,41,0)
(35,38,0)
(20,38,0)
(25,27,0)
(24,36,0)
(27,34,0)
(5,39,0)
(29,26,0)
(18,8,0)
(4,40,1)
(28,32,1)
(35,38,1)
(41,35,1)
(5,26,1)
(15,29,1)
(26,11,1)
(8,18,1)
(26,15,1)
(6,17,1)
(18,11,1)
(1,2,1)
(29,4,1)
(16,31,1)
(19,12,1)
(45,22,1)
(33,43,1)
(18,28,1)
(36,41,1)
(23,16,1)
(20,46,1)
(40,42,1)
(48,45,1)
(35,3,1)
(22,36,1)
(25,47,1)
(38,11,1)
(38,20,1)
(42,48,1)
(2,33,1)
(17,10,1)
(39,5,1)
(45,44,1)
(3,38,1)
(8,11,1)
(0,27,1)
(46,24,1)
(27,25,1)
(10,21,1)
(31,36,1)
(32,39,1)
(26,40,1)
(17,36,1)
(26,27,1)
(12,8,1)
(37,17,1)
(41,9,1)
(43,0,1)
(21,23,1)
(39,11,1)
(22,1,1)
(30,19,1)
(47,37,1)
(44,22,1)
(37,6,1)
(17,36,2)
(41,9,2)
(36,41,2)
(8,18,2)
(39,11,2)
(18,11,2)
(40,42,2)
(37,17,2)
(26,40,2)
(30,19,2)
(45,22,2)
(47,37,2)
(26,27,2)
(8,11,2)
(22,36,2)
(27,25,2)
(25,47,2)
(41,35,2)
(35,38,2)
(38,11,2)
(48,45,2)
(42,48,2)
(26,11,2)
-----------------------------------
(0,def_tx)
(1,ncm_parm)
(2,ctx)
(3,0)
(4,dev)
(5,dev)
(6,dwNtbInMaxSize)
(7,def_rx)
(8,cdc_ncm_set_dgram_size(dev, cdc_ncm_max_dgram_size(dev)
(9,struct cdc_ncm_ctx *)
(10,ncm_parm)
(11,struct usbnet *dev)
(12,0)
(13,def_tx)
(14,ctx)
(15,def_tx)
(16,u32)
(17,ctx->ncm_parm)
(18,cdc_ncm_max_dgram_size(dev)
(19,return 0;)
(20,data)
(21,ctx)
(22,ctx->ncm_parm)
(23,CDC_NCM_NTB_DEF_SIZE_RX)
(24,ctx)
(25,min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(26,cdc_ncm_update_rxtx_max(dev, def_rx, def_tx)
(27,def_rx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_RX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(28,dev)
(29,def_rx)
(30,RET)
(31,def_rx)
(32,dev)
(33,CDC_NCM_NTB_DEF_SIZE_TX)
(34,)
(35,dev->data[0])
(36,*ctx = (struct cdc_ncm_ctx *)
(37,ctx->ncm_parm.dwNtbInMaxSize)
(38,dev->data)
(39,cdc_ncm_fix_modulus(dev)
(40,def_tx = min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
(41,(struct cdc_ncm_ctx *)
(42,min_t(u32, CDC_NCM_NTB_DEF_SIZE_TX,\n\\n\\t\\t       le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
(43,u32)
(44,dwNtbOutMaxSize)
(45,ctx->ncm_parm.dwNtbOutMaxSize)
(46,dev)
(47,le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize)
(48,le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^