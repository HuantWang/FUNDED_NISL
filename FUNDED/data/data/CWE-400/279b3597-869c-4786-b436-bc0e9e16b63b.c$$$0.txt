-----label-----
1
-----code-----
static void badSink()
{
    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
11,12
12,13
14,15
14,16
14,17
14,18
14,19
14,20
14,21
15,16
16,17
16,18
17,18
19,20
19,21
21,22
23,24
24,25
24,26
25,26
27,28
27,29
27,30
30,31
31,32
33,34
34,35
34,36
36,37
36,38
36,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
51,52
51,53
52,53
52,54
53,54
55,56
57,58
58,59
59,60
59,61
60,61
63,64
63,65
63,66
63,67
64,65
65,66
65,67
66,67
69,70
69,71
70,71
72,73
72,74
73,74
73,75
74,75
77,78
79,80
80,81
82,83
83,84
83,85
84,85
84,86
85,86
85,87
86,87
88,89
90,91
90,92
90,93
90,94
90,95
91,92
93,94
95,96
96,97
96,98
99,100
99,101
100,101
102,103
104,105
106,107
107,108
108,109
108,110
109,110
112,113
112,114
113,114
115,116
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,13,18,20,22,26,28,29,32,35,37,38,40,44,47,49,50,54,56,61,62,67,68,71,75,76,78,81,87,89,92,94,97,98,101,103,105,110,111,114,119,121
-----computeFrom-----
42,43
42,44
52,53
52,54
65,66
65,67
69,70
69,71
84,85
84,86
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
static void
badSink()
badSink
{    int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;
int count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData;
int
count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData
count
= CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData
CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData
CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(21,43,0)
(8,48,0)
(25,26,0)
(48,14,0)
(16,18,0)
(3,10,0)
(49,55,0)
(41,55,0)
(44,14,0)
(43,21,0)
(14,55,0)
(9,3,0)
(5,42,0)
(22,39,0)
(36,8,0)
(11,46,0)
(27,8,0)
(8,55,0)
(42,55,0)
(38,39,0)
(48,8,0)
(9,6,0)
(17,48,0)
(3,9,0)
(39,38,0)
(34,6,0)
(24,55,0)
(55,57,0)
(37,14,0)
(1,48,0)
(19,55,0)
(54,38,0)
(58,6,0)
(10,57,0)
(28,53,0)
(12,3,0)
(50,6,0)
(38,43,0)
(30,4,0)
(26,0,0)
(45,55,0)
(43,38,0)
(61,21,0)
(56,38,0)
(51,10,0)
(20,38,0)
(7,27,0)
(3,59,0)
(23,53,0)
(2,57,0)
(29,42,0)
(31,34,0)
(40,54,0)
(38,8,0)
(53,55,0)
(59,3,0)
(47,27,0)
(18,52,0)
(32,55,0)
(15,10,0)
(30,8,0)
(60,30,0)
(35,9,0)
(38,54,0)
(39,22,1)
(15,51,1)
(30,8,1)
(28,10,1)
(18,16,1)
(48,1,1)
(56,54,1)
(35,6,1)
(54,40,1)
(13,33,1)
(38,39,1)
(14,37,1)
(27,8,1)
(44,42,1)
(33,9,1)
(31,26,1)
(30,60,1)
(8,48,1)
(3,12,1)
(48,14,1)
(21,61,1)
(9,3,1)
(43,21,1)
(60,33,1)
(38,56,1)
(27,7,1)
(38,54,1)
(50,27,1)
(31,43,1)
(13,30,1)
(43,38,1)
(61,9,1)
(53,23,1)
(42,5,1)
(3,10,1)
(37,44,1)
(23,28,1)
(29,53,1)
(10,15,1)
(3,59,1)
(20,21,1)
(1,17,1)
(12,35,1)
(7,47,1)
(47,8,1)
(9,6,1)
(50,18,1)
(25,43,1)
(6,58,1)
(26,25,1)
(58,50,1)
(34,6,1)
(5,29,1)
(17,36,1)
(38,8,1)
(36,14,1)
(34,31,1)
(16,27,1)
(22,20,1)
(40,39,1)
(35,34,1)
(54,9,2)
(34,6,2)
(48,14,2)
(40,9,2)
(20,9,2)
(12,9,2)
(30,33,2)
(38,8,2)
(43,9,2)
(60,33,2)
(21,9,2)
(56,9,2)
(9,9,2)
(38,39,2)
(8,48,2)
(22,9,2)
(9,3,2)
(3,59,2)
(3,9,2)
(38,54,2)
(27,8,2)
(43,21,2)
(34,9,2)
(61,9,2)
(3,10,2)
(25,43,2)
(31,9,2)
(26,43,2)
(39,9,2)
(35,9,2)
(18,27,2)
(9,6,2)
(38,9,2)
(16,27,2)
(30,8,2)
(43,38,2)
-----------------------------------
(0,)
(1,"w+")
(2,count)
(3,(size_t)
(4,)
(5,NULL)
(6,i = 0)
(7,NULL)
(8,pFile = fopen(filename, "w+")
(9,i < (size_t)
(10,count = CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData)
(11,if (strlen(SENTENCE)
(12,count)
(13,RET)
(14,*filename = "output_bad.txt")
(15,CWE400_Resource_Exhaustion__connect_socket_fwrite_45_badData)
(16,1)
(17,filename)
(18,exit(1)
(19,for (i = 0; i < (size_t)
(20,SENTENCE)
(21,strlen(SENTENCE)
(22,char)
(23,0)
(24,filename)
(25,1)
(26,exit(1)
(27,pFile == NULL)
(28,i)
(29,pFile)
(30,fclose(pFile)
(31,i)
(32,pFile)
(33,pFile)
(34,i++)
(35,i)
(36,pFile)
(37,"output_bad.txt")
(38,fwrite(SENTENCE, sizeof(char)
(39,sizeof(char)
(40,SENTENCE)
(41,if (pFile == NULL)
(42,*pFile = NULL)
(43,strlen(SENTENCE)
(44,filename)
(45,if (pFile)
(46,)
(47,pFile)
(48,fopen(filename, "w+")
(49,i)
(50,i)
(51,count)
(52,)
(53,i = 0)
(54,strlen(SENTENCE)
(55,)
(56,pFile)
(57,)
(58,0)
(59,size_t)
(60,pFile)
(61,SENTENCE)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^