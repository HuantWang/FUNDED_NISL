-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__rand_fwrite_52c_goodB2GSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_good.txt";
        /* FIX: Validate count before using it as the for loop variant to write to a file */
        if (count > 0 && count <= 20)
        {
            pFile = fopen(filename, "w+");
            if (pFile == NULL)
            {
                exit(1);
            }
            for (i = 0; i < (size_t)count; i++)
            {
                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
            }
            if (pFile)
            {
                fclose(pFile);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
37,39
38,39
38,40
39,40
39,41
40,41
43,44
43,45
44,45
47,48
47,49
47,50
47,51
48,49
49,50
49,51
50,51
52,53
52,54
52,55
53,54
55,56
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
67,68
70,71
70,72
70,73
70,74
71,72
72,73
72,74
73,74
76,77
76,78
77,78
79,80
79,81
80,81
80,82
81,82
84,85
86,87
87,88
89,90
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
97,98
97,99
97,100
97,101
97,102
98,99
100,101
102,103
103,104
103,105
106,107
106,108
107,108
109,110
111,112
113,114
114,115
114,116
115,116
118,119
118,120
119,120
121,122
122,123
123,124
123,125
124,125
126,127
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,41,42,45,46,51,54,56,57,61,63,68,69,74,75,78,82,83,85,88,94,96,99,101,104,105,108,110,112,116,117,120,125,127
-----computeFrom-----
38,39
38,40
39,40
39,41
43,44
43,45
49,50
49,51
59,60
59,61
72,73
72,74
76,77
76,78
91,92
91,93
-----guardedBy-----
45,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__rand_fwrite_52c_goodB2GSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
void
CWE400_Resource_Exhaustion__rand_fwrite_52c_goodB2GSink(int count)
CWE400_Resource_Exhaustion__rand_fwrite_52c_goodB2GSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_good.txt";        /* FIX: Validate count before using it as the for loop variant to write to a file */        if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_good.txt";
const char *filename = "output_good.txt";
const char
*filename = "output_good.txt"
*
filename
= "output_good.txt"
"output_good.txt"
if (count > 0 && count <= 20)        {            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
count > 0 && count <= 20
count > 0
count
count
0
count <= 20
count
count
20
{            pFile = fopen(filename, "w+");            if (pFile == NULL)            {                exit(1);            }            for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }            if (pFile)            {                fclose(pFile);            }        }
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)            {                exit(1);            }
pFile == NULL
pFile
pFile
NULL
NULL
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)            {                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{                if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);            }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)) exit(1);
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
exit(1);
exit(1)
exit
exit
1
if (pFile)            {                fclose(pFile);            }
pFile
pFile
{                fclose(pFile);            }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(49,25,0)
(19,59,0)
(61,8,0)
(27,30,0)
(37,13,0)
(37,42,0)
(11,4,0)
(44,14,0)
(8,13,0)
(4,13,0)
(42,37,0)
(30,6,0)
(18,2,0)
(60,14,0)
(40,33,0)
(64,2,0)
(38,43,0)
(16,0,0)
(17,64,0)
(39,27,0)
(13,8,0)
(29,66,0)
(48,37,0)
(31,66,0)
(35,21,0)
(47,13,0)
(54,30,0)
(21,14,0)
(43,13,0)
(9,30,0)
(62,15,0)
(25,30,0)
(45,64,0)
(7,30,0)
(53,65,0)
(51,55,0)
(26,37,0)
(23,8,0)
(20,66,0)
(24,27,0)
(45,55,0)
(12,18,0)
(37,33,0)
(56,52,0)
(57,28,0)
(52,3,0)
(50,65,0)
(65,30,0)
(28,18,0)
(42,22,0)
(28,14,0)
(64,45,0)
(4,63,0)
(13,66,0)
(34,25,0)
(22,42,0)
(55,2,0)
(37,59,0)
(32,55,0)
(55,45,0)
(8,27,0)
(33,37,0)
(46,43,0)
(18,58,0)
(59,37,0)
(58,18,0)
(41,64,0)
(18,28,0)
(36,30,0)
(10,22,0)
(28,18,1)
(55,51,1)
(56,43,1)
(60,52,1)
(47,45,1)
(65,53,1)
(5,45,1)
(42,22,1)
(22,10,1)
(61,47,1)
(37,48,1)
(48,59,1)
(64,41,1)
(5,4,1)
(8,27,1)
(14,44,1)
(28,14,1)
(34,65,1)
(26,22,1)
(23,61,1)
(18,58,1)
(42,37,1)
(43,13,1)
(13,8,1)
(17,27,1)
(57,14,1)
(45,55,1)
(15,62,1)
(43,38,1)
(41,17,1)
(39,25,1)
(27,24,1)
(19,33,1)
(21,35,1)
(35,15,1)
(11,1,1)
(37,59,1)
(24,39,1)
(10,28,1)
(5,1,1)
(52,56,1)
(37,13,1)
(8,23,1)
(4,13,1)
(59,19,1)
(37,33,1)
(60,43,1)
(4,11,1)
(46,13,1)
(55,2,1)
(57,21,1)
(49,34,1)
(33,40,1)
(38,46,1)
(21,14,1)
(40,26,1)
(35,42,1)
(18,2,1)
(18,12,1)
(45,64,1)
(12,57,1)
(53,50,1)
(25,49,1)
(1,28,1)
(62,42,1)
(51,32,1)
(32,64,1)
(44,60,1)
(64,2,1)
(51,64,2)
(38,45,2)
(14,45,2)
(18,58,2)
(13,8,2)
(28,45,2)
(46,45,2)
(18,28,2)
(4,13,2)
(33,28,2)
(8,27,2)
(55,64,2)
(55,2,2)
(45,64,2)
(57,28,2)
(62,42,2)
(37,59,2)
(32,64,2)
(37,13,2)
(26,28,2)
(28,18,2)
(61,45,2)
(12,45,2)
(43,13,2)
(4,1,2)
(21,28,2)
(37,28,2)
(11,1,2)
(12,28,2)
(10,28,2)
(1,45,2)
(44,45,2)
(28,28,2)
(19,28,2)
(64,2,2)
(42,37,2)
(40,28,2)
(37,33,2)
(57,45,2)
(59,28,2)
(52,43,2)
(15,42,2)
(23,45,2)
(35,28,2)
(43,45,2)
(18,2,2)
(8,45,2)
(21,14,2)
(60,45,2)
(48,28,2)
(45,55,2)
(56,43,2)
(18,45,2)
(42,22,2)
(28,14,2)
(42,28,2)
(47,45,2)
(13,45,2)
(22,28,2)
-----------------------------------
(0,)
(1,pFile)
(2,int count)
(3,)
(4,fclose(pFile)
(5,RET)
(6,)
(7,pFile)
(8,fopen(filename, "w+")
(9,i)
(10,SENTENCE)
(11,pFile)
(12,count)
(13,pFile = fopen(filename, "w+")
(14,i = 0)
(15,exit(1)
(16,if (strlen(SENTENCE)
(17,count)
(18,(size_t)
(19,SENTENCE)
(20,for (i = 0; i < (size_t)
(21,i++)
(22,strlen(SENTENCE)
(23,"w+")
(24,"output_good.txt")
(25,*pFile = NULL)
(26,SENTENCE)
(27,*filename = "output_good.txt")
(28,i < (size_t)
(29,if (pFile == NULL)
(30,)
(31,if (pFile)
(32,count)
(33,sizeof(char)
(34,pFile)
(35,i)
(36,if (count > 0 && count <= 20)
(37,fwrite(SENTENCE, sizeof(char)
(38,NULL)
(39,filename)
(40,char)
(41,0)
(42,strlen(SENTENCE)
(43,pFile == NULL)
(44,0)
(45,count > 0 && count <= 20)
(46,pFile)
(47,pFile)
(48,pFile)
(49,NULL)
(50,i)
(51,20)
(52,exit(1)
(53,0)
(54,filename)
(55,count <= 20)
(56,1)
(57,i)
(58,size_t)
(59,strlen(SENTENCE)
(60,i)
(61,filename)
(62,1)
(63,)
(64,count > 0)
(65,i = 0)
(66,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^