-----label-----
0
-----code-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(int count)
{
    {
        size_t i = 0;
        FILE *pFile = NULL;
        const char *filename = "output_bad.txt";
        pFile = fopen(filename, "w+");
        if (pFile == NULL)
        {
            exit(1);
        }
        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation
         * This can cause a file to become very large */
        for (i = 0; i < (size_t)count; i++)
        {
            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))
            {
                exit(1);
            }
        }
        if (pFile)
        {
            fclose(pFile);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
26,27
27,28
29,30
30,31
30,32
32,33
32,34
32,35
35,36
37,38
38,39
38,40
39,40
41,42
41,43
41,44
42,43
44,45
47,48
47,49
48,49
48,50
49,50
51,52
53,54
54,55
55,56
55,57
56,57
59,60
59,61
59,62
59,63
60,61
61,62
61,63
62,63
65,66
65,67
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
78,79
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
86,88
86,89
86,90
86,91
87,88
89,90
91,92
92,93
92,94
95,96
95,97
96,97
98,99
100,101
102,103
103,104
104,105
104,106
105,106
108,109
108,110
109,110
111,112
112,113
113,114
113,115
114,115
116,117
-----nextToken-----
2,4,6,8,14,16,18,22,24,25,28,31,33,34,36,40,43,45,46,50,52,57,58,63,64,67,71,72,74,77,83,85,88,90,93,94,97,99,101,106,107,110,115,117
-----computeFrom-----
38,39
38,40
48,49
48,50
61,62
61,63
65,66
65,67
80,81
80,82
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(int count){    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
void
CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink(int count)
CWE400_Resource_Exhaustion__connect_socket_fwrite_54e_goodG2BSink
int count
int
count
count
{    {        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }}
{        size_t i = 0;        FILE *pFile = NULL;        const char *filename = "output_bad.txt";        pFile = fopen(filename, "w+");        if (pFile == NULL)        {            exit(1);        }        /* POTENTIAL FLAW: For loop using count as the loop variant and no validation         * This can cause a file to become very large */        for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }        if (pFile)        {            fclose(pFile);        }    }
size_t i = 0;
size_t i = 0;
size_t
size_t
i = 0
i
= 0
0
FILE *pFile = NULL;
FILE *pFile = NULL;
FILE
FILE
*pFile = NULL
*
pFile
= NULL
NULL
NULL
const char *filename = "output_bad.txt";
const char *filename = "output_bad.txt";
const char
*filename = "output_bad.txt"
*
filename
= "output_bad.txt"
"output_bad.txt"
pFile = fopen(filename, "w+");
pFile = fopen(filename, "w+")
pFile
pFile
fopen(filename, "w+")
fopen
fopen
filename
filename
"w+"
if (pFile == NULL)        {            exit(1);        }
pFile == NULL
pFile
pFile
NULL
NULL
{            exit(1);        }
exit(1);
exit(1)
exit
exit
1
for (i = 0; i < (size_t)count; i++)        {            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
i = 0;
i = 0
i
i
0
i < (size_t)count
i
i
(size_t)count
size_t
size_t
size_t

count
count
i++
i
i
{            if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }        }
if (strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile))            {                exit(1);            }
strlen(SENTENCE) != fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
fwrite(SENTENCE, sizeof(char), strlen(SENTENCE), pFile)
fwrite
fwrite
SENTENCE
SENTENCE
sizeof(char)
char
char

strlen(SENTENCE)
strlen
strlen
SENTENCE
SENTENCE
pFile
pFile
{                exit(1);            }
exit(1);
exit(1)
exit
exit
1
if (pFile)        {            fclose(pFile);        }
pFile
pFile
{            fclose(pFile);        }
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
-----joern-----
(14,20,0)
(27,14,0)
(14,19,0)
(25,20,0)
(9,7,0)
(23,46,0)
(7,2,0)
(0,2,0)
(11,25,0)
(6,14,0)
(32,21,0)
(48,30,0)
(52,56,0)
(42,24,0)
(56,52,0)
(57,30,0)
(17,2,0)
(47,2,0)
(15,19,0)
(50,20,0)
(28,2,0)
(14,27,0)
(46,20,0)
(39,30,0)
(55,2,0)
(54,2,0)
(22,40,0)
(13,14,0)
(14,40,0)
(41,7,0)
(21,51,0)
(33,55,0)
(1,2,0)
(26,47,0)
(38,47,0)
(46,55,0)
(58,52,0)
(10,27,0)
(49,2,0)
(8,46,0)
(37,56,0)
(53,15,0)
(44,31,0)
(34,50,0)
(19,14,0)
(5,55,0)
(56,37,0)
(25,16,0)
(18,56,0)
(52,30,0)
(56,3,0)
(2,29,0)
(36,50,0)
(20,46,0)
(4,39,0)
(20,2,0)
(35,44,0)
(40,14,0)
(45,20,0)
(19,15,0)
(33,47,1)
(19,14,1)
(30,48,1)
(11,43,1)
(47,38,1)
(18,58,1)
(4,21,1)
(10,40,1)
(39,30,1)
(52,56,1)
(14,6,1)
(40,22,1)
(41,9,1)
(22,13,1)
(21,32,1)
(38,26,1)
(19,15,1)
(14,27,1)
(26,7,1)
(34,36,1)
(45,55,1)
(36,20,1)
(44,35,1)
(27,10,1)
(39,4,1)
(56,37,1)
(13,15,1)
(5,33,1)
(12,25,1)
(57,44,1)
(58,39,1)
(8,23,1)
(57,50,1)
(7,41,1)
(52,30,1)
(46,55,1)
(20,46,1)
(6,27,1)
(15,53,1)
(55,5,1)
(32,19,1)
(56,18,1)
(35,50,1)
(43,52,1)
(58,30,1)
(53,52,1)
(14,20,1)
(46,8,1)
(50,20,1)
(56,3,1)
(14,40,1)
(4,19,1)
(50,34,1)
(25,20,1)
(48,57,1)
(12,43,1)
(25,11,1)
(23,45,1)
(14,20,2)
(58,52,2)
(39,52,2)
(40,52,2)
(14,52,2)
(15,52,2)
(18,52,2)
(50,20,2)
(21,19,2)
(52,52,2)
(56,52,2)
(25,43,2)
(10,52,2)
(35,50,2)
(4,52,2)
(14,27,2)
(56,3,2)
(52,30,2)
(32,19,2)
(13,52,2)
(53,52,2)
(14,40,2)
(19,52,2)
(19,15,2)
(39,30,2)
(19,14,2)
(25,20,2)
(46,55,2)
(56,37,2)
(11,43,2)
(22,52,2)
(6,52,2)
(20,46,2)
(52,56,2)
(44,50,2)
(27,52,2)
-----------------------------------
(0,if (pFile)
(1,filename)
(2,)
(3,int count)
(4,i)
(5,"output_bad.txt")
(6,pFile)
(7,i = 0)
(8,"w+")
(9,i)
(10,SENTENCE)
(11,pFile)
(12,RET)
(13,SENTENCE)
(14,fwrite(SENTENCE, sizeof(char)
(15,strlen(SENTENCE)
(16,)
(17,if (pFile == NULL)
(18,count)
(19,strlen(SENTENCE)
(20,pFile = fopen(filename, "w+")
(21,exit(1)
(22,char)
(23,filename)
(24,)
(25,fclose(pFile)
(26,pFile)
(27,strlen(SENTENCE)
(28,pFile)
(29,)
(30,i = 0)
(31,)
(32,1)
(33,filename)
(34,NULL)
(35,1)
(36,pFile)
(37,size_t)
(38,NULL)
(39,i++)
(40,sizeof(char)
(41,0)
(42,if (strlen(SENTENCE)
(43,pFile)
(44,exit(1)
(45,pFile)
(46,fopen(filename, "w+")
(47,*pFile = NULL)
(48,0)
(49,for (i = 0; i < (size_t)
(50,pFile == NULL)
(51,)
(52,i < (size_t)
(53,SENTENCE)
(54,i)
(55,*filename = "output_bad.txt")
(56,(size_t)
(57,i)
(58,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^