-----label-----
0
-----code-----
static bool gc_worker_can_early_drop(const struct nf_conn *ct)
{
	const struct nf_conntrack_l4proto *l4proto;

	if (!test_bit(IPS_ASSURED_BIT, &ct->status))
		return true;

	l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct));
	if (l4proto->can_early_drop && l4proto->can_early_drop(ct))
		return true;

	return false;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
12,13
13,14
13,15
14,15
16,17
16,18
19,20
19,21
20,21
21,22
21,23
21,24
22,23
24,25
26,27
27,28
27,29
28,29
31,32
33,34
34,35
34,36
35,36
37,38
37,39
37,40
38,39
40,41
40,42
41,42
43,44
45,46
45,47
46,47
48,49
50,51
50,52
51,52
51,53
52,53
52,54
53,54
56,57
56,58
57,58
57,59
58,59
61,62
63,64
65,66
-----nextToken-----
2,4,7,9,10,15,17,18,23,25,29,30,32,36,39,42,44,47,49,54,55,59,60,62,64,66
-----computeFrom-----
34,35
34,36
51,52
51,53
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static bool gc_worker_can_early_drop(const struct nf_conn *ct){	const struct nf_conntrack_l4proto *l4proto;	if (!test_bit(IPS_ASSURED_BIT, &ct->status))		return true;	l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct));	if (l4proto->can_early_drop && l4proto->can_early_drop(ct))		return true;	return false;}
static bool
gc_worker_can_early_drop(const struct nf_conn *ct)
gc_worker_can_early_drop
const struct nf_conn *ct
const struct nf_conn
nf_conn
*ct
*
ct
{	const struct nf_conntrack_l4proto *l4proto;	if (!test_bit(IPS_ASSURED_BIT, &ct->status))		return true;	l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct));	if (l4proto->can_early_drop && l4proto->can_early_drop(ct))		return true;	return false;}
const struct nf_conntrack_l4proto *l4proto;
const struct nf_conntrack_l4proto *l4proto;
const struct nf_conntrack_l4proto
nf_conntrack_l4proto
*l4proto
*
l4proto
if (!test_bit(IPS_ASSURED_BIT, &ct->status))		return true;
!test_bit(IPS_ASSURED_BIT, &ct->status)
test_bit(IPS_ASSURED_BIT, &ct->status)
test_bit
test_bit
IPS_ASSURED_BIT
IPS_ASSURED_BIT
&ct->status
ct->status
ct
ct
status
return true;
true
l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct));
l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct))
l4proto
l4proto
__nf_ct_l4proto_find(nf_ct_l3num(ct), nf_ct_protonum(ct))
__nf_ct_l4proto_find
__nf_ct_l4proto_find
nf_ct_l3num(ct)
nf_ct_l3num
nf_ct_l3num
ct
ct
nf_ct_protonum(ct)
nf_ct_protonum
nf_ct_protonum
ct
ct
if (l4proto->can_early_drop && l4proto->can_early_drop(ct))		return true;
l4proto->can_early_drop && l4proto->can_early_drop(ct)
l4proto->can_early_drop
l4proto
l4proto
can_early_drop
l4proto->can_early_drop(ct)
l4proto->can_early_drop
l4proto
l4proto
can_early_drop
ct
ct
return true;
true
return false;
false
-----joern-----
(26,6,0)
(20,6,0)
(11,4,0)
(30,8,0)
(8,23,0)
(8,30,0)
(7,30,0)
(14,22,0)
(10,22,0)
(19,3,0)
(29,25,0)
(26,10,0)
(12,22,0)
(0,29,0)
(0,11,0)
(5,2,0)
(26,3,0)
(25,2,0)
(25,29,0)
(4,5,0)
(18,23,0)
(9,5,0)
(31,25,0)
(13,30,0)
(28,11,0)
(1,2,0)
(21,0,0)
(4,1,0)
(23,8,0)
(5,4,0)
(29,0,0)
(11,22,0)
(16,10,0)
(4,11,0)
(17,0,0)
(30,7,0)
(1,4,0)
(15,23,0)
(24,1,0)
(23,2,0)
(27,22,0)
(15,13,1)
(8,23,1)
(16,29,1)
(10,16,1)
(26,6,1)
(23,18,1)
(30,8,1)
(23,2,1)
(20,7,1)
(9,28,1)
(29,25,1)
(4,1,1)
(1,24,1)
(26,10,1)
(1,2,1)
(4,5,1)
(17,11,1)
(21,17,1)
(25,2,1)
(0,11,1)
(5,9,1)
(6,20,1)
(11,4,1)
(31,0,1)
(25,31,1)
(19,29,1)
(0,21,1)
(29,0,1)
(24,5,1)
(5,2,1)
(28,7,1)
(3,19,1)
(18,15,1)
(26,3,1)
(7,30,1)
(29,25,2)
(24,7,2)
(10,29,2)
(30,8,2)
(19,29,2)
(4,5,2)
(23,2,2)
(4,1,2)
(0,7,2)
(16,29,2)
(8,23,2)
(31,0,2)
(28,7,2)
(11,4,2)
(25,2,2)
(4,7,2)
(3,29,2)
(6,7,2)
(5,7,2)
(1,2,2)
(21,7,2)
(20,7,2)
(17,7,2)
(25,0,2)
(7,30,2)
(1,7,2)
(0,11,2)
(5,2,2)
(9,7,2)
(29,0,2)
(11,7,2)
(26,6,2)
(26,3,2)
(29,7,2)
(26,10,2)
-----------------------------------
(0,l4proto->can_early_drop)
(1,nf_ct_protonum(ct)
(2,const struct nf_conn *ct)
(3,return true;)
(4,__nf_ct_l4proto_find(nf_ct_l3num(ct)
(5,nf_ct_l3num(ct)
(6,return true;)
(7,!test_bit(IPS_ASSURED_BIT, &ct->status)
(8,&ct->status)
(9,ct)
(10,return false;)
(11,l4proto = __nf_ct_l4proto_find(nf_ct_l3num(ct)
(12,if (l4proto->can_early_drop && l4proto->can_early_drop(ct)
(13,IPS_ASSURED_BIT)
(14,l4proto)
(15,ct)
(16,false)
(17,l4proto)
(18,status)
(19,true)
(20,true)
(21,can_early_drop)
(22,)
(23,ct->status)
(24,ct)
(25,l4proto->can_early_drop(ct)
(26,RET)
(27,if (!test_bit(IPS_ASSURED_BIT, &ct->status)
(28,l4proto)
(29,l4proto->can_early_drop && l4proto->can_early_drop(ct)
(30,test_bit(IPS_ASSURED_BIT, &ct->status)
(31,ct)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^