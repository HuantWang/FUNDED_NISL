-----label-----
0
-----code-----
static int device_notifier(struct notifier_block *nb,
				  unsigned long action, void *data)
{
	struct device *dev = data;
	struct pci_dev *pdev = to_pci_dev(dev);
	struct dmar_domain *domain;

	if (iommu_no_mapping(dev))
		return 0;

	domain = find_domain(pdev);
	if (!domain)
		return 0;

	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
		domain_remove_one_dev_info(domain, pdev);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
17,19
20,21
20,22
20,23
20,24
20,25
20,26
20,27
20,28
21,22
22,23
22,24
23,24
25,26
25,27
25,28
28,29
29,30
31,32
32,33
32,34
33,34
35,36
35,37
35,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
46,47
48,49
48,50
51,52
51,53
52,53
52,54
53,54
55,56
57,58
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
68,69
68,70
69,70
70,71
72,73
74,75
74,76
75,76
75,77
76,77
76,78
77,78
79,80
81,82
82,83
84,85
85,86
85,87
85,88
86,87
88,89
90,91
92,93
-----nextToken-----
2,4,7,9,10,12,14,16,18,19,24,26,27,30,34,36,37,41,43,47,49,50,54,56,58,62,65,67,71,73,78,80,83,87,89,91,93
-----computeFrom-----
60,61
60,62
75,76
75,77
76,77
76,78
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int device_notifier(struct notifier_block *nb,				  unsigned long action, void *data){	struct device *dev = data;	struct pci_dev *pdev = to_pci_dev(dev);	struct dmar_domain *domain;	if (iommu_no_mapping(dev))		return 0;	domain = find_domain(pdev);	if (!domain)		return 0;	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);	return 0;}
static int
device_notifier(struct notifier_block *nb,				  unsigned long action, void *data)
device_notifier
struct notifier_block *nb
struct notifier_block
notifier_block
*nb
*
nb
unsigned long action
unsigned long
action
action
void *data
void
*data
*
data
{	struct device *dev = data;	struct pci_dev *pdev = to_pci_dev(dev);	struct dmar_domain *domain;	if (iommu_no_mapping(dev))		return 0;	domain = find_domain(pdev);	if (!domain)		return 0;	if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);	return 0;}
struct device *dev = data;
struct device *dev = data;
struct device
device
*dev = data
*
dev
= data
data
data
struct pci_dev *pdev = to_pci_dev(dev);
struct pci_dev *pdev = to_pci_dev(dev);
struct pci_dev
pci_dev
*pdev = to_pci_dev(dev)
*
pdev
= to_pci_dev(dev)
to_pci_dev(dev)
to_pci_dev
to_pci_dev
dev
dev
struct dmar_domain *domain;
struct dmar_domain *domain;
struct dmar_domain
dmar_domain
*domain
*
domain
if (iommu_no_mapping(dev))		return 0;
iommu_no_mapping(dev)
iommu_no_mapping
iommu_no_mapping
dev
dev
return 0;
0
domain = find_domain(pdev);
domain = find_domain(pdev)
domain
domain
find_domain(pdev)
find_domain
find_domain
pdev
pdev
if (!domain)		return 0;
!domain
domain
domain
return 0;
0
if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)		domain_remove_one_dev_info(domain, pdev);
action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through
action == BUS_NOTIFY_UNBOUND_DRIVER
action
action
BUS_NOTIFY_UNBOUND_DRIVER
BUS_NOTIFY_UNBOUND_DRIVER
!iommu_pass_through
iommu_pass_through
iommu_pass_through
domain_remove_one_dev_info(domain, pdev);
domain_remove_one_dev_info(domain, pdev)
domain_remove_one_dev_info
domain_remove_one_dev_info
domain
domain
pdev
pdev
return 0;
0
-----joern-----
(26,1,0)
(27,1,0)
(18,28,0)
(1,14,0)
(19,26,0)
(25,22,0)
(1,27,0)
(39,34,0)
(28,36,0)
(34,3,0)
(7,22,0)
(22,14,0)
(26,22,0)
(33,14,0)
(17,14,0)
(23,34,0)
(8,10,0)
(24,14,0)
(29,10,0)
(30,11,0)
(8,31,0)
(28,14,0)
(20,14,0)
(4,27,0)
(37,0,0)
(9,28,0)
(11,39,0)
(34,39,0)
(12,26,0)
(2,1,0)
(5,22,0)
(35,25,0)
(38,31,0)
(16,34,0)
(15,14,0)
(39,11,0)
(27,28,0)
(10,14,0)
(22,25,0)
(13,5,0)
(21,14,0)
(25,1,0)
(8,6,0)
(0,28,0)
(32,6,0)
(26,22,1)
(5,13,1)
(34,3,1)
(11,30,1)
(2,28,1)
(10,29,1)
(31,38,1)
(7,0,1)
(16,23,1)
(8,6,1)
(4,2,1)
(37,1,1)
(30,34,1)
(26,1,1)
(6,32,1)
(29,39,1)
(8,31,1)
(25,1,1)
(39,34,1)
(5,22,1)
(26,12,1)
(25,35,1)
(38,0,1)
(0,37,1)
(29,26,1)
(39,11,1)
(34,16,1)
(19,39,1)
(23,5,1)
(12,19,1)
(32,5,1)
(0,28,1)
(27,4,1)
(27,28,1)
(9,18,1)
(1,27,1)
(8,10,1)
(22,25,1)
(28,36,1)
(35,7,1)
(13,22,1)
(28,9,1)
(12,39,2)
(28,36,2)
(30,34,2)
(25,1,2)
(5,22,2)
(0,28,2)
(31,0,2)
(8,10,2)
(26,39,2)
(16,5,2)
(6,5,2)
(29,5,2)
(1,27,2)
(13,0,2)
(39,34,2)
(5,0,2)
(23,5,2)
(26,22,2)
(11,34,2)
(10,5,2)
(22,25,2)
(8,31,2)
(35,0,2)
(38,0,2)
(39,11,2)
(8,6,2)
(19,39,2)
(34,5,2)
(27,28,2)
(26,1,2)
(25,0,2)
(39,5,2)
(32,5,2)
(34,3,2)
(22,0,2)
(7,0,2)
-----------------------------------
(0,iommu_no_mapping(dev)
(1,*pdev = to_pci_dev(dev)
(2,pdev)
(3,unsigned long action)
(4,dev)
(5,!domain)
(6,return 0;)
(7,domain)
(8,RET)
(9,data)
(10,return 0;)
(11,!iommu_pass_through)
(12,pdev)
(13,domain)
(14,)
(15,domain)
(16,BUS_NOTIFY_UNBOUND_DRIVER)
(17,if (!domain)
(18,dev)
(19,domain)
(20,if (iommu_no_mapping(dev)
(21,pdev)
(22,domain = find_domain(pdev)
(23,action)
(24,dev)
(25,find_domain(pdev)
(26,domain_remove_one_dev_info(domain, pdev)
(27,to_pci_dev(dev)
(28,*dev = data)
(29,0)
(30,iommu_pass_through)
(31,return 0;)
(32,0)
(33,if (action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
(34,action == BUS_NOTIFY_UNBOUND_DRIVER)
(35,pdev)
(36,void *data)
(37,dev)
(38,0)
(39,action == BUS_NOTIFY_UNBOUND_DRIVER && !iommu_pass_through)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^