-----label-----
0
-----code-----
static void goodB2G()
{
    int * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int *)malloc(100*sizeof(int));
    /* Initialize and make use of data */
    data[0] = 5;
    printIntLine(data[0]);
    CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
38,39
38,40
39,40
43,44
44,45
44,46
45,46
47,48
47,49
48,49
51,52
52,53
52,54
53,54
55,56
56,57
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,40,41,42,46,49,50,54,57
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
37,38
37,39
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data);}
static void
goodB2G()
goodB2G
{    int * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int *)malloc(100*sizeof(int));    /* Initialize and make use of data */    data[0] = 5;    printIntLine(data[0]);    CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data);}
int * data;
int * data;
int
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int *)malloc(100*sizeof(int));
data = (int *)malloc(100*sizeof(int))
data
data
(int *)malloc(100*sizeof(int))
int *
int
*
*
malloc(100*sizeof(int))
malloc
malloc
100*sizeof(int)
100
sizeof(int)
int
int

data[0] = 5;
data[0] = 5
data[0]
data
data
0
5
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data);
CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data)
CWE401_Memory_Leak__int_malloc_64b_goodB2GSink
CWE401_Memory_Leak__int_malloc_64b_goodB2GSink
&data
data
data
-----joern-----
(24,0,0)
(13,4,0)
(3,7,0)
(18,20,0)
(8,22,0)
(8,1,0)
(15,7,0)
(11,10,0)
(17,26,0)
(10,14,0)
(2,12,0)
(26,0,0)
(26,8,0)
(12,24,0)
(25,4,0)
(10,26,0)
(1,8,0)
(18,0,0)
(8,26,0)
(5,12,0)
(20,18,0)
(14,0,0)
(22,8,0)
(15,1,0)
(1,15,0)
(10,24,0)
(14,10,0)
(16,10,0)
(7,15,0)
(4,0,0)
(20,26,0)
(12,26,0)
(19,15,0)
(9,0,0)
(21,24,0)
(6,20,0)
(1,15,1)
(16,24,1)
(19,17,1)
(20,26,1)
(10,26,1)
(8,1,1)
(23,18,1)
(21,12,1)
(3,19,1)
(10,11,1)
(17,4,1)
(18,20,1)
(26,8,1)
(24,21,1)
(7,3,1)
(11,16,1)
(15,7,1)
(4,13,1)
(10,24,1)
(13,25,1)
(12,2,1)
(12,26,1)
(2,5,1)
(20,6,1)
(14,10,1)
(8,22,1)
(5,26,1)
(6,14,1)
(8,22,2)
(10,24,2)
(10,26,2)
(26,8,2)
(15,7,2)
(12,26,2)
(1,15,2)
(8,1,2)
(18,20,2)
(20,26,2)
(14,10,2)
-----------------------------------
(0,)
(1,malloc(100*sizeof(int)
(2,0)
(3,int)
(4,data = NULL)
(5,data)
(6,data)
(7,sizeof(int)
(8,(int *)
(9,data)
(10,data[0])
(11,0)
(12,data[0])
(13,NULL)
(14,printIntLine(data[0])
(15,100*sizeof(int)
(16,data)
(17,data)
(18,CWE401_Memory_Leak__int_malloc_64b_goodB2GSink(&data)
(19,100)
(20,&data)
(21,5)
(22,int *)
(23,RET)
(24,data[0] = 5)
(25,data)
(26,data = (int *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^