-----label-----
1
-----code-----
void CWE401_Memory_Leak__int64_t_calloc_45_bad()
{
    int64_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)calloc(100, sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    CWE401_Memory_Leak__int64_t_calloc_45_badData = data;
    badSink();
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
5,13
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
24,25
24,26
25,26
27,28
29,30
29,31
29,32
30,31
33,34
34,35
34,36
35,36
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
62,64
63,64
66,67
67,68
67,69
68,69
70,71
72,73
73,74
74,75
-----nextToken-----
2,4,9,11,12,16,18,22,26,28,31,32,36,37,41,43,48,50,55,56,57,61,64,65,69,71,75
-----computeFrom-----
14,15
14,16
20,21
20,22
39,40
39,41
52,53
52,54
67,68
67,69
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
void CWE401_Memory_Leak__int64_t_calloc_45_bad(){    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    CWE401_Memory_Leak__int64_t_calloc_45_badData = data;    badSink();}
void
CWE401_Memory_Leak__int64_t_calloc_45_bad()
CWE401_Memory_Leak__int64_t_calloc_45_bad
{    int64_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)calloc(100, sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    CWE401_Memory_Leak__int64_t_calloc_45_badData = data;    badSink();}
int64_t * data;
int64_t * data;
int64_t
int64_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (int64_t *)calloc(100, sizeof(int64_t));
data = (int64_t *)calloc(100, sizeof(int64_t))
data
data
(int64_t *)calloc(100, sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
calloc(100, sizeof(int64_t))
calloc
calloc
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
CWE401_Memory_Leak__int64_t_calloc_45_badData = data;
CWE401_Memory_Leak__int64_t_calloc_45_badData = data
CWE401_Memory_Leak__int64_t_calloc_45_badData
CWE401_Memory_Leak__int64_t_calloc_45_badData
data
data
badSink();
badSink()
badSink
badSink
-----joern-----
(22,5,0)
(29,16,0)
(16,21,0)
(22,0,0)
(3,0,0)
(9,30,0)
(23,18,0)
(21,5,0)
(28,0,0)
(2,23,0)
(11,1,0)
(19,0,0)
(1,5,0)
(14,30,0)
(5,21,0)
(13,0,0)
(10,0,0)
(20,6,0)
(19,30,0)
(27,7,0)
(31,6,0)
(30,19,0)
(25,5,0)
(26,21,0)
(5,0,0)
(7,16,0)
(15,1,0)
(30,5,0)
(24,2,0)
(21,16,0)
(16,7,0)
(8,22,0)
(12,22,0)
(21,26,0)
(6,0,0)
(23,2,0)
(14,9,1)
(5,21,1)
(15,11,1)
(27,29,1)
(29,25,1)
(7,27,1)
(23,2,1)
(6,20,1)
(22,5,1)
(25,6,1)
(2,24,1)
(12,8,1)
(11,5,1)
(22,12,1)
(21,16,1)
(24,1,1)
(20,31,1)
(30,5,1)
(21,26,1)
(28,23,1)
(30,14,1)
(1,5,1)
(8,19,1)
(16,7,1)
(19,30,1)
(3,22,1)
(28,1,1)
(9,28,1)
(1,15,1)
(17,3,1)
(23,1,2)
(1,5,2)
(24,1,2)
(30,5,2)
(16,7,2)
(2,1,2)
(21,16,2)
(19,30,2)
(21,26,2)
(23,2,2)
(5,21,2)
(22,5,2)
-----------------------------------
(0,)
(1,data == NULL)
(2,-1)
(3,badSink()
(4, sizeof(int64_t)
(5,data = (int64_t *)
(6,data = NULL)
(7,sizeof(int64_t)
(8,CWE401_Memory_Leak__int64_t_calloc_45_badData)
(9,data)
(10,if (data == NULL)
(11,data)
(12,data)
(13,data)
(14,0)
(15,NULL)
(16,calloc(100, sizeof(int64_t)
(17,RET)
(18,)
(19,printLongLongLine(data[0])
(20,NULL)
(21,(int64_t *)
(22,CWE401_Memory_Leak__int64_t_calloc_45_badData = data)
(23,exit(-1)
(24,1)
(25,data)
(26,int64_t *)
(27,int64_t)
(28,L)
(29,100)
(30,data[0])
(31,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^