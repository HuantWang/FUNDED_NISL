-----label-----
1
-----code-----
static bool
tempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size)
{
  size_t nbytes;

  fseek((FILE *)tempfile->fp, pos, SEEK_SET);
  nbytes = fwrite(p, 1, size, tempfile->fp);
  if (nbytes != size)
    return false;

  return true;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
13,15
16,17
16,18
17,18
19,20
21,22
21,23
22,23
24,25
26,27
26,28
26,29
26,30
26,31
27,28
28,29
28,30
29,30
31,32
33,34
34,35
34,36
34,37
34,38
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
43,45
44,45
47,48
49,50
51,52
52,53
52,54
53,54
55,56
55,57
55,58
55,59
55,60
56,57
58,59
61,62
63,64
63,65
64,65
67,68
67,69
68,69
68,70
69,70
71,72
73,74
75,76
-----nextToken-----
2,4,7,9,10,12,14,15,18,20,23,25,30,32,36,40,42,45,46,48,50,54,57,59,60,62,65,66,70,72,74,76
-----computeFrom-----
52,53
52,54
68,69
68,70
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static booltempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size){  size_t nbytes;  fseek((FILE *)tempfile->fp, pos, SEEK_SET);  nbytes = fwrite(p, 1, size, tempfile->fp);  if (nbytes != size)    return false;  return true;}
static bool
tempfile_write(tempfile_t *tempfile, unsigned char *p, size_t pos, size_t size)
tempfile_write
tempfile_t *tempfile
tempfile_t
tempfile_t
*tempfile
*
tempfile
unsigned char *p
unsigned char
*p
*
p
size_t pos
size_t
size_t
pos
pos
size_t size
size_t
size_t
size
size
{  size_t nbytes;  fseek((FILE *)tempfile->fp, pos, SEEK_SET);  nbytes = fwrite(p, 1, size, tempfile->fp);  if (nbytes != size)    return false;  return true;}
size_t nbytes;
size_t nbytes;
size_t
size_t
nbytes
nbytes
fseek((FILE *)tempfile->fp, pos, SEEK_SET);
fseek((FILE *)tempfile->fp, pos, SEEK_SET)
fseek
fseek
(FILE *)tempfile->fp
FILE *
FILE
FILE
*
*
tempfile->fp
tempfile
tempfile
fp
pos
pos
SEEK_SET
SEEK_SET
nbytes = fwrite(p, 1, size, tempfile->fp);
nbytes = fwrite(p, 1, size, tempfile->fp)
nbytes
nbytes
fwrite(p, 1, size, tempfile->fp)
fwrite
fwrite
p
p
1
size
size
tempfile->fp
tempfile
tempfile
fp
if (nbytes != size)    return false;
nbytes != size
nbytes
nbytes
size
size
return false;
false
return true;
true
-----joern-----
(23,14,0)
(25,7,0)
(18,7,0)
(8,15,0)
(19,30,0)
(29,20,0)
(20,23,0)
(15,23,0)
(20,26,0)
(6,22,0)
(6,3,0)
(23,15,0)
(0,30,0)
(2,6,0)
(12,31,0)
(21,22,0)
(19,31,0)
(7,16,0)
(14,23,0)
(22,9,0)
(7,6,0)
(23,20,0)
(18,3,0)
(6,5,0)
(6,7,0)
(4,18,0)
(24,18,0)
(31,16,0)
(17,6,0)
(28,16,0)
(11,20,0)
(15,9,0)
(1,15,0)
(13,22,0)
(22,6,0)
(27,6,0)
(10,16,0)
(20,16,0)
(27,25,1)
(23,14,1)
(31,12,1)
(13,2,1)
(22,21,1)
(19,30,1)
(22,9,1)
(15,9,1)
(4,24,1)
(20,23,1)
(18,4,1)
(6,22,1)
(30,0,1)
(1,8,1)
(6,5,1)
(25,20,1)
(18,7,1)
(17,27,1)
(18,3,1)
(20,26,1)
(11,29,1)
(12,18,1)
(6,3,1)
(21,13,1)
(29,23,1)
(19,31,1)
(7,6,1)
(2,17,1)
(20,11,1)
(15,1,1)
(24,7,1)
(0,18,1)
(23,15,1)
(22,9,2)
(18,3,2)
(23,15,2)
(19,30,2)
(6,22,2)
(15,9,2)
(30,18,2)
(23,14,2)
(19,31,2)
(18,7,2)
(6,3,2)
(12,18,2)
(20,26,2)
(0,18,2)
(31,18,2)
(20,23,2)
(6,5,2)
(7,6,2)
-----------------------------------
(0,false)
(1,fp)
(2,size)
(3,size_t size)
(4,size)
(5,unsigned char *p)
(6,fwrite(p, 1, size, tempfile->fp)
(7,nbytes = fwrite(p, 1, size, tempfile->fp)
(8,tempfile)
(9,tempfile_t *tempfile)
(10,if (nbytes != size)
(11,SEEK_SET)
(12,true)
(13,tempfile)
(14,FILE *)
(15,tempfile->fp)
(16,)
(17,1)
(18,nbytes != size)
(19,RET)
(20,fseek((FILE *)
(21,fp)
(22,tempfile->fp)
(23,(FILE *)
(24,nbytes)
(25,nbytes)
(26,size_t pos)
(27,p)
(28,nbytes)
(29,pos)
(30,return false;)
(31,return true;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^