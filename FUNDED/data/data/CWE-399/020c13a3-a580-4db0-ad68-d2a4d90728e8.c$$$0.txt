-----label-----
1
-----code-----
void
eo_definitions_temps_free(Eo_Lexer_Temps *tmp)
{
   Eina_Strbuf *buf;
   Eo_Param_Def *par;
   const char *s;

   EINA_LIST_FREE(tmp->str_bufs, buf)
     eina_strbuf_free(buf);

   EINA_LIST_FREE(tmp->params, par)
     eo_definitions_param_free(par);

   if (tmp->legacy_def)
     eina_stringshare_del(tmp->legacy_def);

   if (tmp->kls)
     eo_definitions_class_def_free(tmp->kls);

   if (tmp->ret_def)
     eo_definitions_ret_free(tmp->ret_def);

   if (tmp->typedef_def)
     eo_definitions_typedef_def_free(tmp->typedef_def);

   if (tmp->type_def)
     eo_definitions_type_free(tmp->type_def);

   if (tmp->prop)
     eo_definitions_property_def_free(tmp->prop);

   if (tmp->meth)
     eo_definitions_method_def_free(tmp->meth);

   if (tmp->param)
     eo_definitions_param_free(tmp->param);

   if (tmp->accessor)
     eo_definitions_accessor_free(tmp->accessor);

   if (tmp->accessor_param)
     eo_definitions_accessor_param_free(tmp->accessor_param);

   EINA_LIST_FREE(tmp->str_items, s)
     if (s) eina_stringshare_del(s);

   if (tmp->event)
     eo_definitions_event_def_free(tmp->event);

   if (tmp->impl)
     eo_definitions_impl_def_free(tmp->impl);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
11,26
11,27
11,28
11,29
11,30
11,31
11,32
11,33
11,34
11,35
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
21,22
23,24
23,25
26,27
27,28
27,29
29,30
29,31
32,33
33,34
33,35
33,36
34,35
36,37
36,38
37,38
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
50,53
51,52
53,54
53,55
54,55
57,58
59,60
60,61
61,62
61,63
62,63
64,65
66,67
66,68
67,68
67,69
68,69
71,72
72,73
72,74
73,74
75,76
75,77
76,77
79,80
79,81
80,81
80,82
81,82
84,85
85,86
85,87
86,87
88,89
88,90
89,90
92,93
92,94
93,94
93,95
94,95
97,98
98,99
98,100
99,100
101,102
101,103
102,103
105,106
105,107
106,107
106,108
107,108
110,111
111,112
111,113
112,113
114,115
114,116
115,116
118,119
118,120
119,120
119,121
120,121
123,124
124,125
124,126
125,126
127,128
127,129
128,129
131,132
131,133
132,133
132,134
133,134
136,137
137,138
137,139
138,139
140,141
140,142
141,142
144,145
144,146
145,146
145,147
146,147
149,150
150,151
150,152
151,152
153,154
153,155
154,155
157,158
157,159
158,159
158,160
159,160
162,163
163,164
163,165
164,165
166,167
166,168
167,168
170,171
170,172
171,172
171,173
172,173
175,176
176,177
176,178
177,178
179,180
179,181
180,181
183,184
183,185
184,185
184,186
185,186
188,189
189,190
189,191
190,191
192,193
192,194
193,194
196,197
197,198
197,199
197,200
198,199
200,201
200,202
201,202
204,205
206,207
207,208
207,209
208,209
210,211
211,212
211,213
212,213
214,215
216,217
216,218
217,218
217,219
218,219
221,222
222,223
222,224
223,224
225,226
225,227
226,227
229,230
229,231
230,231
230,232
231,232
234,235
235,236
235,237
236,237
238,239
238,240
239,240
-----nextToken-----
2,4,7,9,10,15,17,18,22,24,25,28,30,31,35,38,39,41,46,48,52,55,56,58,63,65,69,70,74,77,78,82,83,87,90,91,95,96,100,103,104,108,109,113,116,117,121,122,126,129,130,134,135,139,142,143,147,148,152,155,156,160,161,165,168,169,173,174,178,181,182,186,187,191,194,195,199,202,203,205,209,213,215,219,220,224,227,228,232,233,237,240,241
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ProblemStatement;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;
-----ast_node-----
voideo_definitions_temps_free(Eo_Lexer_Temps *tmp){   Eina_Strbuf *buf;   Eo_Param_Def *par;   const char *s;   EINA_LIST_FREE(tmp->str_bufs, buf)     eina_strbuf_free(buf);   EINA_LIST_FREE(tmp->params, par)     eo_definitions_param_free(par);   if (tmp->legacy_def)     eina_stringshare_del(tmp->legacy_def);   if (tmp->kls)     eo_definitions_class_def_free(tmp->kls);   if (tmp->ret_def)     eo_definitions_ret_free(tmp->ret_def);   if (tmp->typedef_def)     eo_definitions_typedef_def_free(tmp->typedef_def);   if (tmp->type_def)     eo_definitions_type_free(tmp->type_def);   if (tmp->prop)     eo_definitions_property_def_free(tmp->prop);   if (tmp->meth)     eo_definitions_method_def_free(tmp->meth);   if (tmp->param)     eo_definitions_param_free(tmp->param);   if (tmp->accessor)     eo_definitions_accessor_free(tmp->accessor);   if (tmp->accessor_param)     eo_definitions_accessor_param_free(tmp->accessor_param);   EINA_LIST_FREE(tmp->str_items, s)     if (s) eina_stringshare_del(s);   if (tmp->event)     eo_definitions_event_def_free(tmp->event);   if (tmp->impl)     eo_definitions_impl_def_free(tmp->impl);}
void
eo_definitions_temps_free(Eo_Lexer_Temps *tmp)
eo_definitions_temps_free
Eo_Lexer_Temps *tmp
Eo_Lexer_Temps
Eo_Lexer_Temps
*tmp
*
tmp
{   Eina_Strbuf *buf;   Eo_Param_Def *par;   const char *s;   EINA_LIST_FREE(tmp->str_bufs, buf)     eina_strbuf_free(buf);   EINA_LIST_FREE(tmp->params, par)     eo_definitions_param_free(par);   if (tmp->legacy_def)     eina_stringshare_del(tmp->legacy_def);   if (tmp->kls)     eo_definitions_class_def_free(tmp->kls);   if (tmp->ret_def)     eo_definitions_ret_free(tmp->ret_def);   if (tmp->typedef_def)     eo_definitions_typedef_def_free(tmp->typedef_def);   if (tmp->type_def)     eo_definitions_type_free(tmp->type_def);   if (tmp->prop)     eo_definitions_property_def_free(tmp->prop);   if (tmp->meth)     eo_definitions_method_def_free(tmp->meth);   if (tmp->param)     eo_definitions_param_free(tmp->param);   if (tmp->accessor)     eo_definitions_accessor_free(tmp->accessor);   if (tmp->accessor_param)     eo_definitions_accessor_param_free(tmp->accessor_param);   EINA_LIST_FREE(tmp->str_items, s)     if (s) eina_stringshare_del(s);   if (tmp->event)     eo_definitions_event_def_free(tmp->event);   if (tmp->impl)     eo_definitions_impl_def_free(tmp->impl);}
Eina_Strbuf *buf;
Eina_Strbuf *buf;
Eina_Strbuf
Eina_Strbuf
*buf
*
buf
Eo_Param_Def *par;
Eo_Param_Def *par;
Eo_Param_Def
Eo_Param_Def
*par
*
par
const char *s;
const char *s;
const char
*s
*
s
EINA_LIST_FREE(tmp->str_bufs, buf)
EINA_LIST_FREE(tmp->str_bufs, buf)
EINA_LIST_FREE
EINA_LIST_FREE
tmp->str_bufs
tmp
tmp
str_bufs
buf
buf
)
eina_strbuf_free(buf);
eina_strbuf_free(buf)
eina_strbuf_free
eina_strbuf_free
buf
buf
EINA_LIST_FREE(tmp->params, par)
EINA_LIST_FREE(tmp->params, par)
EINA_LIST_FREE
EINA_LIST_FREE
tmp->params
tmp
tmp
params
par
par
)
eo_definitions_param_free(par);
eo_definitions_param_free(par)
eo_definitions_param_free
eo_definitions_param_free
par
par
if (tmp->legacy_def)     eina_stringshare_del(tmp->legacy_def);
tmp->legacy_def
tmp
tmp
legacy_def
eina_stringshare_del(tmp->legacy_def);
eina_stringshare_del(tmp->legacy_def)
eina_stringshare_del
eina_stringshare_del
tmp->legacy_def
tmp
tmp
legacy_def
if (tmp->kls)     eo_definitions_class_def_free(tmp->kls);
tmp->kls
tmp
tmp
kls
eo_definitions_class_def_free(tmp->kls);
eo_definitions_class_def_free(tmp->kls)
eo_definitions_class_def_free
eo_definitions_class_def_free
tmp->kls
tmp
tmp
kls
if (tmp->ret_def)     eo_definitions_ret_free(tmp->ret_def);
tmp->ret_def
tmp
tmp
ret_def
eo_definitions_ret_free(tmp->ret_def);
eo_definitions_ret_free(tmp->ret_def)
eo_definitions_ret_free
eo_definitions_ret_free
tmp->ret_def
tmp
tmp
ret_def
if (tmp->typedef_def)     eo_definitions_typedef_def_free(tmp->typedef_def);
tmp->typedef_def
tmp
tmp
typedef_def
eo_definitions_typedef_def_free(tmp->typedef_def);
eo_definitions_typedef_def_free(tmp->typedef_def)
eo_definitions_typedef_def_free
eo_definitions_typedef_def_free
tmp->typedef_def
tmp
tmp
typedef_def
if (tmp->type_def)     eo_definitions_type_free(tmp->type_def);
tmp->type_def
tmp
tmp
type_def
eo_definitions_type_free(tmp->type_def);
eo_definitions_type_free(tmp->type_def)
eo_definitions_type_free
eo_definitions_type_free
tmp->type_def
tmp
tmp
type_def
if (tmp->prop)     eo_definitions_property_def_free(tmp->prop);
tmp->prop
tmp
tmp
prop
eo_definitions_property_def_free(tmp->prop);
eo_definitions_property_def_free(tmp->prop)
eo_definitions_property_def_free
eo_definitions_property_def_free
tmp->prop
tmp
tmp
prop
if (tmp->meth)     eo_definitions_method_def_free(tmp->meth);
tmp->meth
tmp
tmp
meth
eo_definitions_method_def_free(tmp->meth);
eo_definitions_method_def_free(tmp->meth)
eo_definitions_method_def_free
eo_definitions_method_def_free
tmp->meth
tmp
tmp
meth
if (tmp->param)     eo_definitions_param_free(tmp->param);
tmp->param
tmp
tmp
param
eo_definitions_param_free(tmp->param);
eo_definitions_param_free(tmp->param)
eo_definitions_param_free
eo_definitions_param_free
tmp->param
tmp
tmp
param
if (tmp->accessor)     eo_definitions_accessor_free(tmp->accessor);
tmp->accessor
tmp
tmp
accessor
eo_definitions_accessor_free(tmp->accessor);
eo_definitions_accessor_free(tmp->accessor)
eo_definitions_accessor_free
eo_definitions_accessor_free
tmp->accessor
tmp
tmp
accessor
if (tmp->accessor_param)     eo_definitions_accessor_param_free(tmp->accessor_param);
tmp->accessor_param
tmp
tmp
accessor_param
eo_definitions_accessor_param_free(tmp->accessor_param);
eo_definitions_accessor_param_free(tmp->accessor_param)
eo_definitions_accessor_param_free
eo_definitions_accessor_param_free
tmp->accessor_param
tmp
tmp
accessor_param
EINA_LIST_FREE(tmp->str_items, s)
EINA_LIST_FREE(tmp->str_items, s)
EINA_LIST_FREE
EINA_LIST_FREE
tmp->str_items
tmp
tmp
str_items
s
s
)
if (s) eina_stringshare_del(s);
s
s
eina_stringshare_del(s);
eina_stringshare_del(s)
eina_stringshare_del
eina_stringshare_del
s
s
if (tmp->event)     eo_definitions_event_def_free(tmp->event);
tmp->event
tmp
tmp
event
eo_definitions_event_def_free(tmp->event);
eo_definitions_event_def_free(tmp->event)
eo_definitions_event_def_free
eo_definitions_event_def_free
tmp->event
tmp
tmp
event
if (tmp->impl)     eo_definitions_impl_def_free(tmp->impl);
tmp->impl
tmp
tmp
impl
eo_definitions_impl_def_free(tmp->impl);
eo_definitions_impl_def_free(tmp->impl)
eo_definitions_impl_def_free
eo_definitions_impl_def_free
tmp->impl
tmp
tmp
impl
-----joern-----
(3,91,0)
(1,8,0)
(32,91,0)
(74,57,0)
(87,50,0)
(65,46,0)
(48,4,0)
(23,76,0)
(64,76,0)
(45,46,0)
(84,107,0)
(5,47,0)
(98,50,0)
(13,9,0)
(62,46,0)
(27,91,0)
(22,66,0)
(7,65,0)
(59,62,0)
(99,73,0)
(62,10,0)
(72,84,0)
(70,91,0)
(84,46,0)
(16,47,0)
(95,39,0)
(66,22,0)
(83,8,0)
(69,46,0)
(12,46,0)
(47,46,0)
(37,46,0)
(75,55,0)
(4,91,0)
(100,17,0)
(39,46,0)
(47,16,0)
(20,33,0)
(50,11,0)
(19,61,0)
(107,84,0)
(49,80,0)
(15,91,0)
(68,6,0)
(76,46,0)
(44,62,0)
(109,67,0)
(36,57,0)
(17,46,0)
(80,46,0)
(14,47,0)
(41,91,0)
(94,91,0)
(54,91,0)
(69,29,0)
(82,22,0)
(85,35,0)
(52,80,0)
(104,73,0)
(93,91,0)
(73,46,0)
(8,46,0)
(9,91,0)
(28,57,0)
(57,46,0)
(6,46,0)
(88,6,0)
(29,69,0)
(25,33,0)
(35,46,0)
(96,35,0)
(71,53,0)
(103,37,0)
(56,37,0)
(101,91,0)
(78,45,0)
(30,91,0)
(51,45,0)
(33,46,0)
(26,67,0)
(42,69,0)
(43,67,0)
(81,91,0)
(80,38,0)
(37,56,0)
(22,46,0)
(35,96,0)
(60,22,0)
(77,35,0)
(34,91,0)
(106,17,0)
(67,46,0)
(92,31,0)
(61,46,0)
(75,46,0)
(18,75,0)
(63,69,0)
(58,91,0)
(10,62,0)
(0,37,0)
(102,12,0)
(67,109,0)
(11,50,0)
(57,28,0)
(53,46,0)
(79,91,0)
(50,46,0)
(21,53,0)
(2,91,0)
(105,61,0)
(108,65,0)
(90,84,0)
(24,39,0)
(40,75,0)
(55,75,0)
(89,12,0)
(38,80,0)
(12,46,1)
(89,65,1)
(96,35,1)
(63,53,1)
(80,49,1)
(95,28,1)
(61,46,1)
(40,33,1)
(61,19,1)
(102,89,1)
(92,97,1)
(106,109,1)
(66,22,1)
(8,1,1)
(82,17,1)
(76,46,1)
(84,46,1)
(105,38,1)
(98,65,1)
(107,84,1)
(47,46,1)
(69,46,1)
(109,67,1)
(44,45,1)
(45,46,1)
(78,51,1)
(42,63,1)
(64,23,1)
(85,6,1)
(52,39,1)
(59,44,1)
(56,37,1)
(71,12,1)
(22,60,1)
(39,46,1)
(53,46,1)
(16,47,1)
(71,107,1)
(77,85,1)
(9,13,1)
(55,75,1)
(7,108,1)
(57,46,1)
(35,46,1)
(26,61,1)
(49,52,1)
(8,46,1)
(76,64,1)
(104,31,1)
(17,46,1)
(73,46,1)
(28,57,1)
(106,61,1)
(10,62,1)
(80,46,1)
(24,95,1)
(18,40,1)
(86,6,1)
(65,46,1)
(89,11,1)
(50,46,1)
(72,12,1)
(5,14,1)
(75,46,1)
(75,18,1)
(97,16,1)
(103,0,1)
(67,43,1)
(11,50,1)
(83,10,1)
(90,72,1)
(39,24,1)
(88,56,1)
(19,105,1)
(6,46,1)
(97,8,1)
(108,4,1)
(21,71,1)
(83,45,1)
(33,25,1)
(105,39,1)
(84,90,1)
(100,106,1)
(23,53,1)
(48,9,1)
(23,29,1)
(73,99,1)
(22,46,1)
(37,46,1)
(4,48,1)
(36,74,1)
(6,68,1)
(17,100,1)
(37,103,1)
(65,7,1)
(62,59,1)
(99,104,1)
(53,21,1)
(20,17,1)
(1,83,1)
(87,98,1)
(12,102,1)
(51,33,1)
(35,77,1)
(95,76,1)
(60,82,1)
(33,46,1)
(57,36,1)
(14,8,1)
(43,26,1)
(74,76,1)
(31,92,1)
(47,5,1)
(0,73,1)
(20,66,1)
(88,73,1)
(62,46,1)
(69,42,1)
(50,87,1)
(67,46,1)
(68,88,1)
(51,55,1)
(104,97,1)
(86,96,1)
(45,78,1)
(25,20,1)
(29,69,1)
(38,80,1)
(49,39,2)
(56,73,2)
(16,8,2)
(37,46,2)
(80,46,2)
(52,39,2)
(31,97,2)
(74,76,2)
(96,6,2)
(18,33,2)
(66,22,2)
(96,35,2)
(73,46,2)
(17,46,2)
(33,46,2)
(22,46,2)
(76,46,2)
(75,46,2)
(82,17,2)
(84,46,2)
(53,46,2)
(8,46,2)
(87,65,2)
(57,46,2)
(62,46,2)
(67,61,2)
(62,45,2)
(57,76,2)
(69,53,2)
(35,6,2)
(28,57,2)
(47,8,2)
(66,17,2)
(55,33,2)
(36,76,2)
(65,46,2)
(72,12,2)
(0,73,2)
(40,33,2)
(37,73,2)
(43,61,2)
(60,17,2)
(92,97,2)
(80,39,2)
(69,46,2)
(63,53,2)
(107,84,2)
(38,80,2)
(98,65,2)
(35,46,2)
(29,53,2)
(6,46,2)
(11,65,2)
(42,53,2)
(47,46,2)
(50,46,2)
(55,75,2)
(67,46,2)
(50,65,2)
(11,50,2)
(28,76,2)
(90,12,2)
(26,61,2)
(85,6,2)
(103,73,2)
(22,17,2)
(107,12,2)
(16,47,2)
(10,45,2)
(10,62,2)
(109,61,2)
(77,6,2)
(38,39,2)
(45,46,2)
(56,37,2)
(39,46,2)
(12,46,2)
(14,8,2)
(59,45,2)
(44,45,2)
(75,33,2)
(5,8,2)
(61,46,2)
(84,12,2)
(29,69,2)
(109,67,2)
-----------------------------------
(0,tmp)
(1,accessor_param)
(2,if (tmp->accessor)
(3,if (tmp->legacy_def)
(4,eo_definitions_param_free(par)
(5,accessor_param)
(6,tmp->impl)
(7,legacy_def)
(8,tmp->accessor_param)
(9,eina_strbuf_free(buf)
(10,eo_definitions_accessor_free(tmp->accessor)
(11,eina_stringshare_del(tmp->legacy_def)
(12,tmp->kls)
(13,buf)
(14,tmp)
(15,if (tmp->ret_def)
(16,eo_definitions_accessor_param_free(tmp->accessor_param)
(17,tmp->meth)
(18,param)
(19,prop)
(20,tmp)
(21,ret_def)
(22,tmp->meth)
(23,tmp)
(24,type_def)
(25,param)
(26,tmp)
(27,if (tmp->meth)
(28,eo_definitions_typedef_def_free(tmp->typedef_def)
(29,eo_definitions_ret_free(tmp->ret_def)
(30,s)
(31,eina_stringshare_del(s)
(32,if (tmp->kls)
(33,tmp->param)
(34,if (tmp->param)
(35,tmp->impl)
(36,typedef_def)
(37,tmp->event)
(38,eo_definitions_type_free(tmp->type_def)
(39,tmp->type_def)
(40,tmp)
(41,if (tmp->prop)
(42,ret_def)
(43,prop)
(44,tmp)
(45,tmp->accessor)
(46,Eo_Lexer_Temps *tmp)
(47,tmp->accessor_param)
(48,par)
(49,type_def)
(50,tmp->legacy_def)
(51,tmp)
(52,tmp)
(53,tmp->ret_def)
(54,if (tmp->impl)
(55,eo_definitions_param_free(tmp->param)
(56,eo_definitions_event_def_free(tmp->event)
(57,tmp->typedef_def)
(58,if (tmp->typedef_def)
(59,accessor)
(60,meth)
(61,tmp->prop)
(62,tmp->accessor)
(63,tmp)
(64,typedef_def)
(65,tmp->legacy_def)
(66,eo_definitions_method_def_free(tmp->meth)
(67,tmp->prop)
(68,impl)
(69,tmp->ret_def)
(70,if (tmp->accessor_param)
(71,tmp)
(72,tmp)
(73,tmp->event)
(74,tmp)
(75,tmp->param)
(76,tmp->typedef_def)
(77,impl)
(78,accessor)
(79,if (tmp->event)
(80,tmp->type_def)
(81,par)
(82,tmp)
(83,tmp)
(84,tmp->kls)
(85,tmp)
(86,RET)
(87,legacy_def)
(88,tmp)
(89,tmp)
(90,kls)
(91,)
(92,s)
(93,if (tmp->type_def)
(94,if (s)
(95,tmp)
(96,eo_definitions_impl_def_free(tmp->impl)
(97,s)
(98,tmp)
(99,event)
(100,meth)
(101,buf)
(102,kls)
(103,event)
(104,tmp)
(105,tmp)
(106,tmp)
(107,eo_definitions_class_def_free(tmp->kls)
(108,tmp)
(109,eo_definitions_property_def_free(tmp->prop)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^