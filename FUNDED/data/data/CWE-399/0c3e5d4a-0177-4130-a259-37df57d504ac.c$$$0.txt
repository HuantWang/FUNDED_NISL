-----label-----
1
-----code-----
static int cpufreq_stat_cpu_callback(struct notifier_block *nfb,
					       unsigned long action,
					       void *hcpu)
{
	unsigned int cpu = (unsigned long)hcpu;

	switch (action) {
	case CPU_ONLINE:
	case CPU_ONLINE_FROZEN:
		cpufreq_update_policy(cpu);
		break;
	case CPU_DOWN_PREPARE:
		cpufreq_stats_free_sysfs(cpu);
		break;
	case CPU_DEAD:
		cpufreq_stats_free_table(cpu);
		break;
	case CPU_UP_CANCELED_FROZEN:
		cpufreq_stats_free_sysfs(cpu);
		cpufreq_stats_free_table(cpu);
		break;
	}
	return NOTIFY_OK;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
17,19
20,21
20,22
20,23
21,22
22,23
22,24
24,25
24,26
26,27
27,28
27,29
28,29
28,30
31,32
33,34
33,35
34,35
36,37
36,38
36,39
36,40
36,41
36,42
36,43
36,44
36,45
36,46
36,47
36,48
36,49
36,50
37,38
38,39
40,41
41,42
43,44
44,45
44,46
45,46
47,48
50,51
51,52
53,54
54,55
54,56
55,56
57,58
60,61
61,62
63,64
64,65
64,66
65,66
67,68
70,71
71,72
73,74
74,75
74,76
75,76
77,78
79,80
80,81
80,82
81,82
83,84
86,87
87,88
-----nextToken-----
2,4,7,9,10,12,14,16,18,19,23,25,29,30,32,35,39,42,46,48,49,52,56,58,59,62,66,68,69,72,76,78,82,84,85,88
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BreakStatement;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int cpufreq_stat_cpu_callback(struct notifier_block *nfb,					       unsigned long action,					       void *hcpu){	unsigned int cpu = (unsigned long)hcpu;	switch (action) {	case CPU_ONLINE:	case CPU_ONLINE_FROZEN:		cpufreq_update_policy(cpu);		break;	case CPU_DOWN_PREPARE:		cpufreq_stats_free_sysfs(cpu);		break;	case CPU_DEAD:		cpufreq_stats_free_table(cpu);		break;	case CPU_UP_CANCELED_FROZEN:		cpufreq_stats_free_sysfs(cpu);		cpufreq_stats_free_table(cpu);		break;	}	return NOTIFY_OK;}
static int
cpufreq_stat_cpu_callback(struct notifier_block *nfb,					       unsigned long action,					       void *hcpu)
cpufreq_stat_cpu_callback
struct notifier_block *nfb
struct notifier_block
notifier_block
*nfb
*
nfb
unsigned long action
unsigned long
action
action
void *hcpu
void
*hcpu
*
hcpu
{	unsigned int cpu = (unsigned long)hcpu;	switch (action) {	case CPU_ONLINE:	case CPU_ONLINE_FROZEN:		cpufreq_update_policy(cpu);		break;	case CPU_DOWN_PREPARE:		cpufreq_stats_free_sysfs(cpu);		break;	case CPU_DEAD:		cpufreq_stats_free_table(cpu);		break;	case CPU_UP_CANCELED_FROZEN:		cpufreq_stats_free_sysfs(cpu);		cpufreq_stats_free_table(cpu);		break;	}	return NOTIFY_OK;}
unsigned int cpu = (unsigned long)hcpu;
unsigned int cpu = (unsigned long)hcpu;
unsigned int
cpu = (unsigned long)hcpu
cpu
= (unsigned long)hcpu
(unsigned long)hcpu
unsigned long
unsigned long

hcpu
hcpu
switch (action) {	case CPU_ONLINE:	case CPU_ONLINE_FROZEN:		cpufreq_update_policy(cpu);		break;	case CPU_DOWN_PREPARE:		cpufreq_stats_free_sysfs(cpu);		break;	case CPU_DEAD:		cpufreq_stats_free_table(cpu);		break;	case CPU_UP_CANCELED_FROZEN:		cpufreq_stats_free_sysfs(cpu);		cpufreq_stats_free_table(cpu);		break;	}
action
action
{	case CPU_ONLINE:	case CPU_ONLINE_FROZEN:		cpufreq_update_policy(cpu);		break;	case CPU_DOWN_PREPARE:		cpufreq_stats_free_sysfs(cpu);		break;	case CPU_DEAD:		cpufreq_stats_free_table(cpu);		break;	case CPU_UP_CANCELED_FROZEN:		cpufreq_stats_free_sysfs(cpu);		cpufreq_stats_free_table(cpu);		break;	}
case CPU_ONLINE:
CPU_ONLINE
CPU_ONLINE
case CPU_ONLINE_FROZEN:
CPU_ONLINE_FROZEN
CPU_ONLINE_FROZEN
cpufreq_update_policy(cpu);
cpufreq_update_policy(cpu)
cpufreq_update_policy
cpufreq_update_policy
cpu
cpu
break;
case CPU_DOWN_PREPARE:
CPU_DOWN_PREPARE
CPU_DOWN_PREPARE
cpufreq_stats_free_sysfs(cpu);
cpufreq_stats_free_sysfs(cpu)
cpufreq_stats_free_sysfs
cpufreq_stats_free_sysfs
cpu
cpu
break;
case CPU_DEAD:
CPU_DEAD
CPU_DEAD
cpufreq_stats_free_table(cpu);
cpufreq_stats_free_table(cpu)
cpufreq_stats_free_table
cpufreq_stats_free_table
cpu
cpu
break;
case CPU_UP_CANCELED_FROZEN:
CPU_UP_CANCELED_FROZEN
CPU_UP_CANCELED_FROZEN
cpufreq_stats_free_sysfs(cpu);
cpufreq_stats_free_sysfs(cpu)
cpufreq_stats_free_sysfs
cpufreq_stats_free_sysfs
cpu
cpu
cpufreq_stats_free_table(cpu);
cpufreq_stats_free_table(cpu)
cpufreq_stats_free_table
cpufreq_stats_free_table
cpu
cpu
break;
return NOTIFY_OK;
NOTIFY_OK
NOTIFY_OK
-----joern-----
(9,8,0)
(30,28,0)
(10,20,0)
(15,22,0)
(2,8,0)
(32,9,0)
(14,8,0)
(4,27,0)
(22,8,0)
(26,8,0)
(11,30,0)
(16,8,0)
(5,8,0)
(27,4,0)
(3,4,0)
(23,30,0)
(1,8,0)
(25,8,0)
(26,4,0)
(6,8,0)
(29,27,0)
(19,28,0)
(0,1,0)
(17,26,0)
(4,28,0)
(13,27,0)
(20,4,0)
(9,4,0)
(22,4,0)
(20,8,0)
(1,4,0)
(27,12,0)
(31,8,0)
(18,8,0)
(7,28,0)
(21,8,0)
(27,13,0)
(11,24,1)
(11,31,1)
(23,30,1)
(27,29,1)
(0,24,1)
(27,13,1)
(31,22,1)
(20,10,1)
(15,1,1)
(22,4,1)
(20,4,1)
(24,4,1)
(30,11,1)
(9,32,1)
(26,4,1)
(25,9,1)
(10,24,1)
(16,26,1)
(11,25,1)
(17,24,1)
(32,24,1)
(4,27,1)
(9,4,1)
(22,15,1)
(1,4,1)
(11,16,1)
(27,12,1)
(29,3,1)
(11,14,1)
(14,20,1)
(26,17,1)
(1,0,1)
(31,24,2)
(22,4,2)
(32,24,2)
(20,24,2)
(14,24,2)
(0,24,2)
(26,24,2)
(9,24,2)
(1,4,2)
(26,4,2)
(17,24,2)
(4,27,2)
(9,4,2)
(15,24,2)
(23,30,2)
(22,24,2)
(27,13,2)
(27,12,2)
(1,24,2)
(16,24,2)
(10,24,2)
(25,24,2)
(20,4,2)
-----------------------------------
(0,cpu)
(1,cpufreq_stats_free_sysfs(cpu)
(2,case CPU_UP_CANCELED_FROZEN:)
(3,cpu)
(4,cpu = (unsigned long)
(5,case CPU_DOWN_PREPARE:)
(6,case CPU_ONLINE_FROZEN:)
(7,switch (action)
(8,)
(9,cpufreq_update_policy(cpu)
(10,cpu)
(11,NOTIFY_OK)
(12,void *hcpu)
(13,unsigned long)
(14,break;)
(15,cpu)
(16,break;)
(17,cpu)
(18,case CPU_ONLINE:)
(19,cpu)
(20,cpufreq_stats_free_table(cpu)
(21,case CPU_DEAD:)
(22,cpufreq_stats_free_table(cpu)
(23,RET)
(24,action)
(25,break;)
(26,cpufreq_stats_free_sysfs(cpu)
(27,(unsigned long)
(28,)
(29,hcpu)
(30,return NOTIFY_OK;)
(31,break;)
(32,cpu)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^