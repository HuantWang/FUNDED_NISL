-----label-----
1
-----code-----
static char *mv88e6123_61_65_probe(struct mii_bus *bus, int sw_addr)
{
	int ret;

	ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03);
	if (ret >= 0) {
		if (ret == 0x1212)
			return "Marvell 88E6123 (A1)";
		if (ret == 0x1213)
			return "Marvell 88E6123 (A2)";
		if ((ret & 0xfff0) == 0x1210)
			return "Marvell 88E6123";

		if (ret == 0x1612)
			return "Marvell 88E6161 (A1)";
		if (ret == 0x1613)
			return "Marvell 88E6161 (A2)";
		if ((ret & 0xfff0) == 0x1610)
			return "Marvell 88E6161";

		if (ret == 0x1652)
			return "Marvell 88E6165 (A1)";
		if (ret == 0x1653)
			return "Marvell 88e6165 (A2)";
		if ((ret & 0xfff0) == 0x1650)
			return "Marvell 88E6165";
	}

	return NULL;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
6,7
6,8
7,8
9,10
9,11
12,13
12,14
14,15
16,17
16,18
16,19
16,20
17,18
18,19
18,20
20,21
22,23
23,24
23,25
24,25
26,27
26,28
26,29
26,30
26,31
27,28
29,30
31,32
33,34
33,35
34,35
38,39
38,40
39,40
39,41
40,41
43,44
43,45
43,46
43,47
43,48
43,49
43,50
43,51
43,52
44,45
44,46
45,46
45,47
46,47
49,50
51,52
51,53
52,53
52,54
53,54
56,57
58,59
58,60
59,60
59,61
60,61
61,62
61,63
62,63
66,67
68,69
68,70
69,70
69,71
70,71
73,74
75,76
75,77
76,77
76,78
77,78
80,81
82,83
82,84
83,84
83,85
84,85
85,86
85,87
86,87
90,91
92,93
92,94
93,94
93,95
94,95
97,98
99,100
99,101
100,101
100,102
101,102
104,105
106,107
106,108
107,108
107,109
108,109
109,110
109,111
110,111
114,115
116,117
117,118
-----nextToken-----
2,4,5,8,10,11,13,15,19,21,25,28,30,32,35,36,37,41,42,47,48,50,54,55,57,63,64,65,67,71,72,74,78,79,81,87,88,89,91,95,96,98,102,103,105,111,112,113,115,118
-----computeFrom-----
23,24
23,25
39,40
39,41
45,46
45,47
52,53
52,54
59,60
59,61
61,62
61,63
69,70
69,71
76,77
76,78
83,84
83,85
85,86
85,87
93,94
93,95
100,101
100,102
107,108
107,109
109,110
109,111
-----guardedBy-----
41,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;LiteralExpression;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static char *mv88e6123_61_65_probe(struct mii_bus *bus, int sw_addr){	int ret;	ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03);	if (ret >= 0) {		if (ret == 0x1212)			return "Marvell 88E6123 (A1)";		if (ret == 0x1213)			return "Marvell 88E6123 (A2)";		if ((ret & 0xfff0) == 0x1210)			return "Marvell 88E6123";		if (ret == 0x1612)			return "Marvell 88E6161 (A1)";		if (ret == 0x1613)			return "Marvell 88E6161 (A2)";		if ((ret & 0xfff0) == 0x1610)			return "Marvell 88E6161";		if (ret == 0x1652)			return "Marvell 88E6165 (A1)";		if (ret == 0x1653)			return "Marvell 88e6165 (A2)";		if ((ret & 0xfff0) == 0x1650)			return "Marvell 88E6165";	}	return NULL;}
static char
*mv88e6123_61_65_probe(struct mii_bus *bus, int sw_addr)
*
mv88e6123_61_65_probe
struct mii_bus *bus
struct mii_bus
mii_bus
*bus
*
bus
int sw_addr
int
sw_addr
sw_addr
{	int ret;	ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03);	if (ret >= 0) {		if (ret == 0x1212)			return "Marvell 88E6123 (A1)";		if (ret == 0x1213)			return "Marvell 88E6123 (A2)";		if ((ret & 0xfff0) == 0x1210)			return "Marvell 88E6123";		if (ret == 0x1612)			return "Marvell 88E6161 (A1)";		if (ret == 0x1613)			return "Marvell 88E6161 (A2)";		if ((ret & 0xfff0) == 0x1610)			return "Marvell 88E6161";		if (ret == 0x1652)			return "Marvell 88E6165 (A1)";		if (ret == 0x1653)			return "Marvell 88e6165 (A2)";		if ((ret & 0xfff0) == 0x1650)			return "Marvell 88E6165";	}	return NULL;}
int ret;
int ret;
int
ret
ret
ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03);
ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03)
ret
ret
__mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0), 0x03)
__mv88e6xxx_reg_read
__mv88e6xxx_reg_read
bus
bus
sw_addr
sw_addr
REG_PORT(0)
REG_PORT
REG_PORT
0
0x03
if (ret >= 0) {		if (ret == 0x1212)			return "Marvell 88E6123 (A1)";		if (ret == 0x1213)			return "Marvell 88E6123 (A2)";		if ((ret & 0xfff0) == 0x1210)			return "Marvell 88E6123";		if (ret == 0x1612)			return "Marvell 88E6161 (A1)";		if (ret == 0x1613)			return "Marvell 88E6161 (A2)";		if ((ret & 0xfff0) == 0x1610)			return "Marvell 88E6161";		if (ret == 0x1652)			return "Marvell 88E6165 (A1)";		if (ret == 0x1653)			return "Marvell 88e6165 (A2)";		if ((ret & 0xfff0) == 0x1650)			return "Marvell 88E6165";	}
ret >= 0
ret
ret
0
{		if (ret == 0x1212)			return "Marvell 88E6123 (A1)";		if (ret == 0x1213)			return "Marvell 88E6123 (A2)";		if ((ret & 0xfff0) == 0x1210)			return "Marvell 88E6123";		if (ret == 0x1612)			return "Marvell 88E6161 (A1)";		if (ret == 0x1613)			return "Marvell 88E6161 (A2)";		if ((ret & 0xfff0) == 0x1610)			return "Marvell 88E6161";		if (ret == 0x1652)			return "Marvell 88E6165 (A1)";		if (ret == 0x1653)			return "Marvell 88e6165 (A2)";		if ((ret & 0xfff0) == 0x1650)			return "Marvell 88E6165";	}
if (ret == 0x1212)			return "Marvell 88E6123 (A1)";
ret == 0x1212
ret
ret
0x1212
return "Marvell 88E6123 (A1)";
"Marvell 88E6123 (A1)"
if (ret == 0x1213)			return "Marvell 88E6123 (A2)";
ret == 0x1213
ret
ret
0x1213
return "Marvell 88E6123 (A2)";
"Marvell 88E6123 (A2)"
if ((ret & 0xfff0) == 0x1210)			return "Marvell 88E6123";
(ret & 0xfff0) == 0x1210
(ret & 0xfff0)
ret & 0xfff0
ret
ret
0xfff0
0x1210
return "Marvell 88E6123";
"Marvell 88E6123"
if (ret == 0x1612)			return "Marvell 88E6161 (A1)";
ret == 0x1612
ret
ret
0x1612
return "Marvell 88E6161 (A1)";
"Marvell 88E6161 (A1)"
if (ret == 0x1613)			return "Marvell 88E6161 (A2)";
ret == 0x1613
ret
ret
0x1613
return "Marvell 88E6161 (A2)";
"Marvell 88E6161 (A2)"
if ((ret & 0xfff0) == 0x1610)			return "Marvell 88E6161";
(ret & 0xfff0) == 0x1610
(ret & 0xfff0)
ret & 0xfff0
ret
ret
0xfff0
0x1610
return "Marvell 88E6161";
"Marvell 88E6161"
if (ret == 0x1652)			return "Marvell 88E6165 (A1)";
ret == 0x1652
ret
ret
0x1652
return "Marvell 88E6165 (A1)";
"Marvell 88E6165 (A1)"
if (ret == 0x1653)			return "Marvell 88e6165 (A2)";
ret == 0x1653
ret
ret
0x1653
return "Marvell 88e6165 (A2)";
"Marvell 88e6165 (A2)"
if ((ret & 0xfff0) == 0x1650)			return "Marvell 88E6165";
(ret & 0xfff0) == 0x1650
(ret & 0xfff0)
ret & 0xfff0
ret
ret
0xfff0
0x1650
return "Marvell 88E6165";
"Marvell 88E6165"
return NULL;
NULL
NULL
-----joern-----
(68,25,0)
(27,47,0)
(68,10,0)
(63,39,0)
(24,19,0)
(73,64,0)
(68,42,0)
(44,19,0)
(9,8,0)
(17,21,0)
(4,72,0)
(77,25,0)
(67,44,0)
(55,47,0)
(11,16,0)
(68,23,0)
(46,67,0)
(10,19,0)
(62,48,0)
(21,17,0)
(30,41,0)
(72,44,0)
(78,79,0)
(75,39,0)
(32,59,0)
(1,71,0)
(13,56,0)
(56,44,0)
(47,44,0)
(38,7,0)
(64,44,0)
(43,17,0)
(12,39,0)
(40,79,0)
(68,71,0)
(35,41,0)
(6,19,0)
(26,17,0)
(34,21,0)
(60,64,0)
(57,44,0)
(49,39,0)
(50,23,0)
(65,64,0)
(45,39,0)
(70,58,0)
(36,39,0)
(68,29,0)
(68,58,0)
(51,62,0)
(2,39,0)
(62,16,0)
(18,62,0)
(64,65,0)
(79,44,0)
(53,66,0)
(68,8,0)
(15,59,0)
(0,66,0)
(52,65,0)
(14,41,0)
(20,10,0)
(68,74,0)
(69,67,0)
(62,37,0)
(59,44,0)
(68,7,0)
(76,29,0)
(62,44,0)
(31,62,0)
(28,74,0)
(41,35,0)
(66,44,0)
(61,39,0)
(5,56,0)
(16,62,0)
(33,72,0)
(22,39,0)
(44,62,0)
(17,44,0)
(3,42,0)
(54,35,0)
(41,44,0)
(66,44,1)
(11,51,1)
(64,44,1)
(68,8,1)
(71,1,1)
(68,23,1)
(41,44,1)
(38,21,1)
(70,72,1)
(68,25,1)
(5,13,1)
(17,44,1)
(31,16,1)
(29,76,1)
(23,50,1)
(47,55,1)
(35,41,1)
(68,7,1)
(34,17,1)
(20,21,1)
(59,44,1)
(56,5,1)
(64,73,1)
(9,35,1)
(68,29,1)
(44,62,1)
(67,44,1)
(68,71,1)
(15,35,1)
(18,57,1)
(79,78,1)
(33,65,1)
(21,17,1)
(10,20,1)
(60,47,1)
(69,56,1)
(43,66,1)
(16,11,1)
(77,79,1)
(62,31,1)
(55,27,1)
(79,44,1)
(51,18,1)
(50,66,1)
(30,14,1)
(53,0,1)
(32,15,1)
(52,64,1)
(58,70,1)
(72,44,1)
(13,44,1)
(62,16,1)
(28,65,1)
(40,67,1)
(73,60,1)
(62,37,1)
(7,38,1)
(72,4,1)
(66,53,1)
(68,74,1)
(76,59,1)
(56,44,1)
(35,54,1)
(68,10,1)
(74,28,1)
(54,41,1)
(59,32,1)
(21,34,1)
(26,43,1)
(27,59,1)
(20,56,1)
(67,46,1)
(41,30,1)
(42,3,1)
(8,9,1)
(65,52,1)
(68,42,1)
(46,69,1)
(0,72,1)
(17,26,1)
(25,77,1)
(14,79,1)
(62,48,1)
(47,44,1)
(65,64,1)
(78,40,1)
(1,67,1)
(4,33,1)
(68,58,1)
(3,47,1)
(68,10,2)
(8,35,2)
(35,41,2)
(47,59,2)
(79,67,2)
(67,44,2)
(4,65,2)
(68,8,2)
(10,56,2)
(1,67,2)
(64,44,2)
(68,71,2)
(21,17,2)
(70,72,2)
(79,44,2)
(20,56,2)
(64,47,2)
(42,47,2)
(38,21,2)
(23,66,2)
(66,72,2)
(7,21,2)
(54,79,2)
(68,58,2)
(69,56,2)
(46,56,2)
(40,67,2)
(21,66,2)
(68,29,2)
(14,79,2)
(68,42,2)
(10,21,2)
(56,44,2)
(27,59,2)
(68,23,2)
(68,7,2)
(43,66,2)
(25,79,2)
(17,44,2)
(74,65,2)
(62,48,2)
(72,65,2)
(50,66,2)
(17,66,2)
(66,44,2)
(77,79,2)
(15,35,2)
(9,35,2)
(29,59,2)
(59,44,2)
(41,79,2)
(53,72,2)
(52,47,2)
(78,67,2)
(34,66,2)
(30,79,2)
(65,64,2)
(58,72,2)
(67,56,2)
(71,67,2)
(3,47,2)
(0,72,2)
(32,35,2)
(47,44,2)
(60,47,2)
(62,16,2)
(76,59,2)
(55,59,2)
(65,47,2)
(68,25,2)
(73,47,2)
(33,65,2)
(72,44,2)
(68,74,2)
(44,62,2)
(41,44,2)
(59,35,2)
(62,37,2)
(28,65,2)
(26,66,2)
(35,79,2)
(20,21,2)
-----------------------------------
(0,ret)
(1,"Marvell 88E6123 (A1)
(2,if ((ret & 0xfff0)
(3,"Marvell 88E6161 (A2)
(4,0x1652)
(5,0)
(6,if (ret >= 0)
(7,return "Marvell 88E6165";)
(8,return "Marvell 88E6123";)
(9,"Marvell 88E6123")
(10,return NULL;)
(11,0)
(12,if (ret == 0x1212)
(13,ret)
(14,ret)
(15,ret)
(16,REG_PORT(0)
(17,ret & 0xfff0)
(18,bus)
(19,)
(20,NULL)
(21,(ret & 0xfff0)
(22,if (ret == 0x1613)
(23,return "Marvell 88e6165 (A2)
(24,ret)
(25,return "Marvell 88E6123 (A2)
(26,0xfff0)
(27,ret)
(28,"Marvell 88E6161")
(29,return "Marvell 88E6161 (A1)
(30,0xfff0)
(31,0x03)
(32,0x1612)
(33,ret)
(34,0x1650)
(35,(ret & 0xfff0)
(36,if (ret == 0x1213)
(37,struct mii_bus *bus)
(38,"Marvell 88E6165")
(39,)
(40,ret)
(41,ret & 0xfff0)
(42,return "Marvell 88E6161 (A2)
(43,ret)
(44,ret = __mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0)
(45,if ((ret & 0xfff0)
(46,0x1212)
(47,ret == 0x1613)
(48,int sw_addr)
(49,if ((ret & 0xfff0)
(50,"Marvell 88e6165 (A2)
(51,sw_addr)
(52,0x1610)
(53,0x1653)
(54,0x1210)
(55,0x1613)
(56,ret >= 0)
(57,ret)
(58,return "Marvell 88E6165 (A1)
(59,ret == 0x1612)
(60,ret)
(61,if (ret == 0x1653)
(62,__mv88e6xxx_reg_read(bus, sw_addr, REG_PORT(0)
(63,if (ret == 0x1652)
(64,ret & 0xfff0)
(65,(ret & 0xfff0)
(66,ret == 0x1653)
(67,ret == 0x1212)
(68,RET)
(69,ret)
(70,"Marvell 88E6165 (A1)
(71,return "Marvell 88E6123 (A1)
(72,ret == 0x1652)
(73,0xfff0)
(74,return "Marvell 88E6161";)
(75,if (ret == 0x1612)
(76,"Marvell 88E6161 (A1)
(77,"Marvell 88E6123 (A2)
(78,0x1213)
(79,ret == 0x1213)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^