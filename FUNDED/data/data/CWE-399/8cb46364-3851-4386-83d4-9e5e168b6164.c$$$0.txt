-----label-----
0
-----code-----
static void binder_set_nice(long nice)
{
	long min_nice;
	if (can_nice(current, nice)) {
		set_user_nice(current, nice);
		return;
	}
	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;
	binder_debug(BINDER_DEBUG_PRIORITY_CAP,
		     "%d: nice value %ld not allowed use %ld instead\n",
		      current->pid, nice, min_nice);
	set_user_nice(current, min_nice);
	if (min_nice < 20)
		return;
	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
9,15
9,16
10,11
11,12
11,13
13,14
15,16
15,17
16,17
16,18
16,19
17,18
19,20
21,22
23,24
23,25
24,25
25,26
25,27
25,28
26,27
28,29
30,31
33,34
34,35
34,36
35,36
37,38
37,39
39,40
39,41
40,41
40,42
41,42
41,43
42,43
42,44
43,44
47,48
50,51
51,52
51,53
51,54
51,55
51,56
51,57
52,53
54,55
57,58
57,59
58,59
61,62
63,64
65,66
66,67
66,68
66,69
67,68
69,70
71,72
73,74
73,75
74,75
74,76
75,76
79,80
80,81
80,82
80,83
81,82
84,85
84,86
85,86
-----nextToken-----
2,4,6,8,12,14,18,20,22,27,29,31,32,36,38,44,45,46,48,49,53,55,56,59,60,62,64,68,70,72,76,77,78,82,83,86,87
-----computeFrom-----
34,35
34,36
37,38
37,39
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;LiteralExpression;FieldReference;ArraySubscriptExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void binder_set_nice(long nice){	long min_nice;	if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;	binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);	set_user_nice(current, min_nice);	if (min_nice < 20)		return;	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);}
static void
binder_set_nice(long nice)
binder_set_nice
long nice
long
nice
nice
{	long min_nice;	if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}	min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;	binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);	set_user_nice(current, min_nice);	if (min_nice < 20)		return;	binder_user_error("%d RLIMIT_NICE not set\n", current->pid);}
long min_nice;
long min_nice;
long
min_nice
min_nice
if (can_nice(current, nice)) {		set_user_nice(current, nice);		return;	}
can_nice(current, nice)
can_nice
can_nice
current
current
nice
nice
{		set_user_nice(current, nice);		return;	}
set_user_nice(current, nice);
set_user_nice(current, nice)
set_user_nice
set_user_nice
current
current
nice
nice
return;
min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur;
min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur
min_nice
min_nice
20 - current->signal->rlim[RLIMIT_NICE].rlim_cur
20
current->signal->rlim[RLIMIT_NICE].rlim_cur
current->signal->rlim[RLIMIT_NICE]
current->signal->rlim
current->signal
current
current
signal
rlim
RLIMIT_NICE
RLIMIT_NICE
rlim_cur
binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice);
binder_debug(BINDER_DEBUG_PRIORITY_CAP,		     "%d: nice value %ld not allowed use %ld instead\n",		      current->pid, nice, min_nice)
binder_debug
binder_debug
BINDER_DEBUG_PRIORITY_CAP
BINDER_DEBUG_PRIORITY_CAP
"%d: nice value %ld not allowed use %ld instead\n"
current->pid
current
current
pid
nice
nice
min_nice
min_nice
set_user_nice(current, min_nice);
set_user_nice(current, min_nice)
set_user_nice
set_user_nice
current
current
min_nice
min_nice
if (min_nice < 20)		return;
min_nice < 20
min_nice
min_nice
20
return;
binder_user_error("%d RLIMIT_NICE not set\n", current->pid);
binder_user_error("%d RLIMIT_NICE not set\n", current->pid)
binder_user_error
binder_user_error
"%d RLIMIT_NICE not set\n"
current->pid
current
current
pid
-----joern-----
(27,40,0)
(31,29,0)
(23,37,0)
(43,0,0)
(24,40,0)
(26,40,0)
(4,15,0)
(3,12,0)
(6,0,0)
(5,34,0)
(44,15,0)
(11,42,0)
(0,43,0)
(45,23,0)
(20,22,0)
(2,37,0)
(13,37,0)
(46,7,0)
(23,41,0)
(25,17,0)
(33,40,0)
(42,18,0)
(40,13,0)
(12,7,0)
(43,41,0)
(22,13,0)
(1,41,0)
(8,26,0)
(32,43,0)
(16,13,0)
(17,7,0)
(38,22,0)
(36,7,0)
(41,23,0)
(29,19,0)
(42,19,0)
(10,26,0)
(37,13,0)
(40,19,0)
(41,43,0)
(12,13,0)
(17,15,0)
(5,14,0)
(28,42,0)
(40,7,0)
(39,12,0)
(34,18,0)
(35,7,0)
(15,17,0)
(30,40,0)
(21,29,0)
(40,26,0)
(13,7,0)
(37,23,0)
(9,0,0)
(39,40,1)
(16,29,1)
(45,41,1)
(8,10,1)
(41,43,1)
(5,34,1)
(24,26,1)
(34,42,1)
(6,2,1)
(30,33,1)
(12,3,1)
(29,31,1)
(4,25,1)
(0,9,1)
(40,19,1)
(22,13,1)
(26,8,1)
(27,24,1)
(38,20,1)
(28,29,1)
(40,26,1)
(23,41,1)
(42,19,1)
(3,39,1)
(44,4,1)
(12,13,1)
(40,13,1)
(2,16,1)
(29,19,1)
(22,38,1)
(40,27,1)
(43,32,1)
(13,37,1)
(42,11,1)
(25,22,1)
(43,0,1)
(23,45,1)
(5,17,1)
(41,1,1)
(31,21,1)
(14,22,1)
(10,30,1)
(33,13,1)
(5,14,1)
(1,43,1)
(20,12,1)
(37,23,1)
(9,6,1)
(32,0,1)
(17,15,1)
(15,44,1)
(11,28,1)
(13,29,2)
(12,13,2)
(10,29,2)
(45,29,2)
(32,29,2)
(39,29,2)
(41,43,2)
(23,41,2)
(4,22,2)
(40,13,2)
(23,29,2)
(9,29,2)
(22,29,2)
(5,34,2)
(34,29,2)
(37,29,2)
(30,29,2)
(5,14,2)
(11,29,2)
(17,15,2)
(1,29,2)
(44,22,2)
(40,29,2)
(40,26,2)
(40,19,2)
(26,29,2)
(42,29,2)
(37,23,2)
(28,29,2)
(2,29,2)
(29,19,2)
(14,22,2)
(3,29,2)
(42,19,2)
(22,13,2)
(27,29,2)
(8,29,2)
(43,0,2)
(13,37,2)
(33,29,2)
(0,29,2)
(38,29,2)
(17,22,2)
(20,29,2)
(15,22,2)
(43,29,2)
(24,29,2)
(12,29,2)
(25,22,2)
(41,29,2)
(6,29,2)
(16,29,2)
-----------------------------------
(0,current->signal)
(1,RLIMIT_NICE)
(2,20)
(3,min_nice)
(4,current)
(5,RET)
(6,current)
(7,)
(8,pid)
(9,signal)
(10,current)
(11,nice)
(12,set_user_nice(current, min_nice)
(13,min_nice = 20 - current->signal->rlim[RLIMIT_NICE].rlim_cur)
(14,return;)
(15,current->pid)
(16,min_nice)
(17,binder_user_error("%d RLIMIT_NICE not set\\n", current->pid)
(18,)
(19,long nice)
(20,min_nice)
(21,current)
(22,min_nice < 20)
(23,current->signal->rlim[RLIMIT_NICE].rlim_cur)
(24,nice)
(25,"%d RLIMIT_NICE not set\\n")
(26,current->pid)
(27,min_nice)
(28,current)
(29,can_nice(current, nice)
(30,"%d: nice value %ld not allowed use %ld instead\\n")
(31,nice)
(32,rlim)
(33,BINDER_DEBUG_PRIORITY_CAP)
(34,return;)
(35,min_nice)
(36,if (min_nice < 20)
(37,20 - current->signal->rlim[RLIMIT_NICE].rlim_cur)
(38,20)
(39,current)
(40,binder_debug(BINDER_DEBUG_PRIORITY_CAP,\n\\n\\t\\t     "%d: nice value %ld not allowed use %ld instead\\n",\n\\n\\t\\t      current->pid, nice, min_nice)
(41,current->signal->rlim[RLIMIT_NICE])
(42,set_user_nice(current, nice)
(43,current->signal->rlim)
(44,pid)
(45,rlim_cur)
(46,if (can_nice(current, nice)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^