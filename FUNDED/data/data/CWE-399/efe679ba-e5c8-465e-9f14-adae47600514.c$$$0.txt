-----label-----
0
-----code-----
static void corto_setLasterror(char* err) {
    corto_errThreadData *data = corto_getThreadData();
    if (!data->viewed && data->lastError) {
        corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",
          data->lastError, data->backtrace?"\n":"", data->backtrace);
    }
    if (data->lastError) corto_dealloc(data->lastError);
    if (data->backtrace) corto_dealloc(data->backtrace);
    data->lastError = err ? corto_strdup(err) : NULL;
    if (corto_verbosityGet() == CORTO_DEBUG) {
        data->backtrace = corto_backtraceString();
    }
    data->viewed = FALSE;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
10,15
10,16
10,17
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
23,24
23,25
24,25
25,26
25,27
26,27
29,30
29,31
30,31
33,34
34,35
35,36
35,37
35,38
35,39
35,40
36,37
39,40
39,41
40,41
43,44
43,45
43,46
44,45
44,46
45,46
50,51
50,52
51,52
54,55
54,56
55,56
55,57
56,57
59,60
60,61
60,62
61,62
63,64
63,65
64,65
67,68
67,69
68,69
68,70
69,70
72,73
73,74
73,75
74,75
76,77
76,78
77,78
80,81
81,82
81,83
82,83
82,84
83,84
86,87
86,88
86,89
87,88
89,90
89,91
90,91
92,93
94,95
96,97
96,98
97,98
97,99
98,99
99,100
101,102
103,104
104,105
105,106
105,107
106,107
106,108
107,108
110,111
111,112
113,114
114,115
114,116
115,116
115,117
116,117
119,120
-----nextToken-----
2,4,6,8,9,14,16,17,21,27,28,31,32,37,38,41,42,46,47,48,49,52,53,57,58,62,65,66,70,71,75,78,79,84,85,88,91,93,95,100,102,108,109,112,117,118,120
-----computeFrom-----
23,24
23,25
81,82
81,83
97,98
97,99
105,106
105,107
114,115
114,116
-----guardedBy-----
32,42
31,52
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;FieldReference;IdExpression;Name;Name;ConditionalExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;LiteralExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;ConditionalExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;
-----ast_node-----
static void corto_setLasterror(char* err) {    corto_errThreadData *data = corto_getThreadData();    if (!data->viewed && data->lastError) {        corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace);    }    if (data->lastError) corto_dealloc(data->lastError);    if (data->backtrace) corto_dealloc(data->backtrace);    data->lastError = err ? corto_strdup(err) : NULL;    if (corto_verbosityGet() == CORTO_DEBUG) {        data->backtrace = corto_backtraceString();    }    data->viewed = FALSE;}
static void
corto_setLasterror(char* err)
corto_setLasterror
char* err
char
* err
*
err
{    corto_errThreadData *data = corto_getThreadData();    if (!data->viewed && data->lastError) {        corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace);    }    if (data->lastError) corto_dealloc(data->lastError);    if (data->backtrace) corto_dealloc(data->backtrace);    data->lastError = err ? corto_strdup(err) : NULL;    if (corto_verbosityGet() == CORTO_DEBUG) {        data->backtrace = corto_backtraceString();    }    data->viewed = FALSE;}
corto_errThreadData *data = corto_getThreadData();
corto_errThreadData *data = corto_getThreadData();
corto_errThreadData
corto_errThreadData
*data = corto_getThreadData()
*
data
= corto_getThreadData()
corto_getThreadData()
corto_getThreadData
corto_getThreadData
if (!data->viewed && data->lastError) {        corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace);    }
!data->viewed && data->lastError
!data->viewed
data->viewed
data
data
viewed
data->lastError
data
data
lastError
{        corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace);    }
corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace);
corto_error("corto: uncatched error (use corto_lasterr): %s%s%s",          data->lastError, data->backtrace?"\n":"", data->backtrace)
corto_error
corto_error
"corto: uncatched error (use corto_lasterr): %s%s%s"
data->lastError
data
data
lastError
data->backtrace?"\n":""
data->backtrace
data
data
backtrace
"\n"
""
data->backtrace
data
data
backtrace
if (data->lastError) corto_dealloc(data->lastError);
data->lastError
data
data
lastError
corto_dealloc(data->lastError);
corto_dealloc(data->lastError)
corto_dealloc
corto_dealloc
data->lastError
data
data
lastError
if (data->backtrace) corto_dealloc(data->backtrace);
data->backtrace
data
data
backtrace
corto_dealloc(data->backtrace);
corto_dealloc(data->backtrace)
corto_dealloc
corto_dealloc
data->backtrace
data
data
backtrace
data->lastError = err ? corto_strdup(err) : NULL;
data->lastError = err ? corto_strdup(err) : NULL
data->lastError
data
data
lastError
err ? corto_strdup(err) : NULL
err
err
corto_strdup(err)
corto_strdup
corto_strdup
err
err
NULL
NULL
if (corto_verbosityGet() == CORTO_DEBUG) {        data->backtrace = corto_backtraceString();    }
corto_verbosityGet() == CORTO_DEBUG
corto_verbosityGet()
corto_verbosityGet
corto_verbosityGet
CORTO_DEBUG
CORTO_DEBUG
{        data->backtrace = corto_backtraceString();    }
data->backtrace = corto_backtraceString();
data->backtrace = corto_backtraceString()
data->backtrace
data
data
backtrace
corto_backtraceString()
corto_backtraceString
corto_backtraceString
data->viewed = FALSE;
data->viewed = FALSE
data->viewed
data
data
viewed
FALSE
FALSE
-----joern-----
(11,12,0)
(60,38,0)
(4,1,0)
(62,67,0)
(10,11,0)
(35,57,0)
(12,26,0)
(24,23,0)
(55,38,0)
(20,38,0)
(48,38,0)
(17,7,0)
(52,27,0)
(57,6,0)
(19,25,0)
(9,29,0)
(18,20,0)
(24,31,0)
(39,53,0)
(7,38,0)
(48,62,0)
(69,13,0)
(54,1,0)
(3,6,0)
(65,25,0)
(41,6,0)
(20,63,0)
(64,27,0)
(31,24,0)
(57,38,0)
(46,57,0)
(21,48,0)
(1,54,0)
(1,38,0)
(54,63,0)
(23,29,0)
(6,12,0)
(2,62,0)
(44,1,0)
(33,38,0)
(31,45,0)
(59,31,0)
(26,38,0)
(33,70,0)
(13,69,0)
(63,20,0)
(68,24,0)
(12,6,0)
(38,55,0)
(34,23,0)
(8,26,0)
(12,0,0)
(40,33,0)
(43,11,0)
(14,29,0)
(37,29,0)
(25,37,0)
(6,57,0)
(24,45,0)
(15,7,0)
(16,26,0)
(22,53,0)
(49,33,0)
(66,20,0)
(38,29,0)
(25,38,0)
(12,11,0)
(34,38,0)
(28,29,0)
(70,33,0)
(53,38,0)
(51,7,0)
(11,38,0)
(62,2,0)
(36,24,0)
(23,24,0)
(30,48,0)
(27,38,0)
(58,34,0)
(47,29,0)
(42,69,0)
(56,12,0)
(7,15,0)
(5,37,0)
(63,54,0)
(26,12,0)
(50,34,0)
(32,29,0)
(34,38,1)
(6,57,1)
(1,4,1)
(52,12,1)
(50,58,1)
(20,38,1)
(24,68,1)
(39,22,1)
(48,38,1)
(33,38,1)
(25,38,1)
(12,6,1)
(41,57,1)
(30,21,1)
(22,27,1)
(24,45,1)
(54,63,1)
(53,39,1)
(44,63,1)
(38,55,1)
(59,36,1)
(62,2,1)
(12,11,1)
(58,15,1)
(6,41,1)
(61,37,1)
(63,20,1)
(4,44,1)
(33,49,1)
(26,16,1)
(11,38,1)
(68,36,1)
(7,38,1)
(6,3,1)
(58,53,1)
(8,6,1)
(19,62,1)
(31,45,1)
(48,30,1)
(17,51,1)
(20,66,1)
(66,18,1)
(34,50,1)
(15,7,1)
(56,54,1)
(57,38,1)
(46,35,1)
(13,23,1)
(11,10,1)
(35,11,1)
(69,42,1)
(52,54,1)
(21,69,1)
(24,31,1)
(5,25,1)
(16,8,1)
(31,59,1)
(12,26,1)
(23,24,1)
(19,69,1)
(7,17,1)
(70,33,1)
(51,53,1)
(3,57,1)
(37,5,1)
(40,27,1)
(1,38,1)
(25,65,1)
(18,38,1)
(42,13,1)
(36,34,1)
(65,19,1)
(27,64,1)
(22,70,1)
(57,46,1)
(49,40,1)
(64,52,1)
(10,43,1)
(53,38,1)
(26,38,1)
(2,48,1)
(43,56,1)
(27,38,1)
(55,60,1)
(54,1,1)
(69,13,1)
(20,38,2)
(49,27,2)
(40,27,2)
(62,2,2)
(12,11,2)
(3,57,2)
(57,54,2)
(24,31,2)
(12,26,2)
(24,45,2)
(21,69,2)
(69,13,2)
(10,54,2)
(43,54,2)
(54,1,2)
(48,38,2)
(11,38,2)
(56,54,2)
(17,53,2)
(70,27,2)
(7,53,2)
(6,57,2)
(63,20,2)
(23,24,2)
(35,54,2)
(15,53,2)
(8,54,2)
(33,38,2)
(11,54,2)
(12,6,2)
(27,38,2)
(38,55,2)
(31,45,2)
(31,36,2)
(48,69,2)
(59,36,2)
(70,33,2)
(62,69,2)
(1,38,2)
(1,63,2)
(2,69,2)
(12,54,2)
(34,38,2)
(51,53,2)
(26,54,2)
(41,57,2)
(6,54,2)
(46,54,2)
(4,63,2)
(25,38,2)
(26,38,2)
(7,38,2)
(33,27,2)
(44,63,2)
(30,69,2)
(15,7,2)
(16,54,2)
(57,38,2)
(54,63,2)
(53,38,2)
(68,36,2)
-----------------------------------
(0,)
(1,data->lastError)
(2,corto_backtraceString()
(3,"\\n")
(4,lastError)
(5,FALSE)
(6,data->backtrace?"\\n":"")
(7,data->backtrace)
(8,data)
(9,if (corto_verbosityGet()
(10,lastError)
(11,data->lastError)
(12,corto_error("corto: uncatched error (use corto_lasterr)
(13,corto_verbosityGet()
(14,if (!data->viewed && data->lastError)
(15,corto_dealloc(data->backtrace)
(16,backtrace)
(17,backtrace)
(18,data)
(19,data)
(20,data->viewed)
(21,data)
(22,data)
(23,data->lastError = err ? corto_strdup(err)
(24,err ? corto_strdup(err)
(25,data->viewed)
(26,data->backtrace)
(27,data->lastError)
(28,if (data->lastError)
(29,)
(30,backtrace)
(31,corto_strdup(err)
(32,data)
(33,data->lastError)
(34,data->lastError)
(35,data)
(36,err)
(37,data->viewed = FALSE)
(38,*data = corto_getThreadData()
(39,backtrace)
(40,data)
(41,"")
(42,CORTO_DEBUG)
(43,data)
(44,data)
(45,char* err)
(46,backtrace)
(47,if (data->backtrace)
(48,data->backtrace)
(49,lastError)
(50,lastError)
(51,data)
(52,data)
(53,data->backtrace)
(54,!data->viewed && data->lastError)
(55,corto_getThreadData()
(56,"corto: uncatched error (use corto_lasterr)
(57,data->backtrace)
(58,data)
(59,err)
(60,data)
(61,RET)
(62,data->backtrace = corto_backtraceString()
(63,!data->viewed)
(64,lastError)
(65,viewed)
(66,viewed)
(67,)
(68,NULL)
(69,corto_verbosityGet()
(70,corto_dealloc(data->lastError)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^