-----label-----
1
-----code-----
struct pnp_resource *pnp_add_resource(struct pnp_dev *dev,
				      struct resource *res)
{
	struct pnp_resource *pnp_res;

	pnp_res = pnp_new_resource(dev);
	if (!pnp_res) {
		dev_err(&dev->dev, "can't add resource %pR\n", res);
		return NULL;
	}

	pnp_res->res = *res;
	dev_dbg(&dev->dev, "%pR\n", res);
	return pnp_res;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
7,8
7,9
8,9
10,11
10,12
13,14
13,15
14,15
16,17
16,18
19,20
19,21
19,22
19,23
19,24
19,25
20,21
21,22
21,23
22,23
24,25
24,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
34,35
36,37
36,38
37,38
38,39
40,41
40,42
41,42
42,43
42,44
42,45
42,46
43,44
45,46
46,47
46,48
47,48
51,52
53,54
54,55
56,57
57,58
57,59
58,59
58,60
59,60
62,63
63,64
65,66
66,67
66,68
66,69
66,70
67,68
69,70
70,71
70,72
71,72
75,76
77,78
78,79
-----nextToken-----
3,5,6,9,11,12,15,17,18,23,25,26,30,33,35,39,44,48,49,50,52,55,60,61,64,68,72,73,74,76,79
-----computeFrom-----
28,29
28,30
57,58
57,59
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct pnp_resource *pnp_add_resource(struct pnp_dev *dev,				      struct resource *res){	struct pnp_resource *pnp_res;	pnp_res = pnp_new_resource(dev);	if (!pnp_res) {		dev_err(&dev->dev, "can't add resource %pR\n", res);		return NULL;	}	pnp_res->res = *res;	dev_dbg(&dev->dev, "%pR\n", res);	return pnp_res;}
struct pnp_resource
pnp_resource
*pnp_add_resource(struct pnp_dev *dev,				      struct resource *res)
*
pnp_add_resource
struct pnp_dev *dev
struct pnp_dev
pnp_dev
*dev
*
dev
struct resource *res
struct resource
resource
*res
*
res
{	struct pnp_resource *pnp_res;	pnp_res = pnp_new_resource(dev);	if (!pnp_res) {		dev_err(&dev->dev, "can't add resource %pR\n", res);		return NULL;	}	pnp_res->res = *res;	dev_dbg(&dev->dev, "%pR\n", res);	return pnp_res;}
struct pnp_resource *pnp_res;
struct pnp_resource *pnp_res;
struct pnp_resource
pnp_resource
*pnp_res
*
pnp_res
pnp_res = pnp_new_resource(dev);
pnp_res = pnp_new_resource(dev)
pnp_res
pnp_res
pnp_new_resource(dev)
pnp_new_resource
pnp_new_resource
dev
dev
if (!pnp_res) {		dev_err(&dev->dev, "can't add resource %pR\n", res);		return NULL;	}
!pnp_res
pnp_res
pnp_res
{		dev_err(&dev->dev, "can't add resource %pR\n", res);		return NULL;	}
dev_err(&dev->dev, "can't add resource %pR\n", res);
dev_err(&dev->dev, "can't add resource %pR\n", res)
dev_err
dev_err
&dev->dev
dev->dev
dev
dev
dev
"can't add resource %pR\n"
res
res
return NULL;
NULL
NULL
pnp_res->res = *res;
pnp_res->res = *res
pnp_res->res
pnp_res
pnp_res
res
*res
res
res
dev_dbg(&dev->dev, "%pR\n", res);
dev_dbg(&dev->dev, "%pR\n", res)
dev_dbg
dev_dbg
&dev->dev
dev->dev
dev
dev
dev
"%pR\n"
res
res
return pnp_res;
pnp_res
pnp_res
-----joern-----
(16,26,0)
(10,5,0)
(28,6,0)
(7,29,0)
(10,26,0)
(27,24,0)
(29,26,0)
(18,13,0)
(35,25,0)
(31,13,0)
(13,30,0)
(32,35,0)
(18,27,0)
(4,34,0)
(24,20,0)
(6,24,0)
(17,25,0)
(17,20,0)
(32,20,0)
(29,14,0)
(12,24,0)
(16,24,0)
(2,35,0)
(17,5,0)
(11,10,0)
(6,32,0)
(21,16,0)
(33,17,0)
(3,25,0)
(14,29,0)
(36,17,0)
(8,3,0)
(1,6,0)
(3,14,0)
(19,27,0)
(5,10,0)
(15,20,0)
(22,3,0)
(5,17,0)
(24,16,0)
(14,3,0)
(0,10,0)
(23,20,0)
(34,24,0)
(9,29,0)
(35,32,0)
(27,20,0)
(3,30,0)
(22,14,1)
(16,21,1)
(16,26,1)
(34,24,1)
(17,25,1)
(36,33,1)
(31,3,1)
(10,0,1)
(18,27,1)
(6,28,1)
(9,7,1)
(5,10,1)
(3,14,1)
(13,31,1)
(24,16,1)
(14,29,1)
(7,34,1)
(17,5,1)
(18,13,1)
(35,25,1)
(21,12,1)
(19,17,1)
(4,24,1)
(29,9,1)
(1,34,1)
(27,24,1)
(8,22,1)
(3,8,1)
(17,36,1)
(28,1,1)
(6,24,1)
(10,26,1)
(3,25,1)
(32,35,1)
(33,5,1)
(29,26,1)
(0,11,1)
(2,6,1)
(35,2,1)
(27,19,1)
(11,32,1)
(34,4,1)
(5,34,2)
(32,34,2)
(6,24,2)
(8,34,2)
(5,10,2)
(32,35,2)
(0,34,2)
(14,29,2)
(22,34,2)
(18,27,2)
(1,34,2)
(34,24,2)
(17,34,2)
(16,26,2)
(3,14,2)
(33,34,2)
(35,25,2)
(35,34,2)
(17,5,2)
(3,34,2)
(10,26,2)
(28,34,2)
(24,16,2)
(29,26,2)
(6,34,2)
(7,34,2)
(29,34,2)
(36,34,2)
(3,25,2)
(10,34,2)
(11,34,2)
(2,34,2)
(18,13,2)
(17,25,2)
(14,34,2)
(19,34,2)
(31,34,2)
(27,34,2)
(9,34,2)
(13,34,2)
(27,24,2)
-----------------------------------
(0,dev)
(1,pnp_res)
(2,res)
(3,dev_err(&dev->dev, "can\'t add resource %pR\\n", res)
(4,pnp_res)
(5,&dev->dev)
(6,pnp_res->res)
(7,dev)
(8,res)
(9,dev)
(10,dev->dev)
(11,dev)
(12,pnp_res)
(13,return NULL;)
(14,&dev->dev)
(15,if (!pnp_res)
(16,pnp_new_resource(dev)
(17,dev_dbg(&dev->dev, "%pR\\n", res)
(18,RET)
(19,pnp_res)
(20,)
(21,dev)
(22,"can\'t add resource %pR\\n")
(23,pnp_res)
(24,pnp_res = pnp_new_resource(dev)
(25,struct resource *res)
(26,struct pnp_dev *dev)
(27,return pnp_res;)
(28,res)
(29,dev->dev)
(30,)
(31,NULL)
(32,pnp_res->res = *res)
(33,"%pR\\n")
(34,!pnp_res)
(35,*res)
(36,res)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^