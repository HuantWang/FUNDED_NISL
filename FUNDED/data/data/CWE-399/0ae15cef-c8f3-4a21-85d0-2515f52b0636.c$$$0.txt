-----label-----
1
-----code-----
static int hpt3x2n_use_dpll(struct ata_port *ap, int writing)
{
	long flags = (long)ap->host->private_data;

	/* See if we should use the DPLL */
	if (writing)
		return USE_DPLL;	/* Needed for write */
	if (flags & PCI66)
		return USE_DPLL;	/* Needed at 66Mhz */
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
15,19
16,17
17,18
17,19
19,20
19,21
21,22
22,23
22,24
23,24
23,25
26,27
26,28
27,28
27,29
28,29
32,33
32,34
33,34
35,36
36,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
47,48
-----nextToken-----
2,4,7,9,10,12,14,18,20,24,25,29,30,31,34,37,41,43,46,48
-----computeFrom-----
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;FieldReference;IdExpression;Name;Name;Name;IfStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
static int hpt3x2n_use_dpll(struct ata_port *ap, int writing){	long flags = (long)ap->host->private_data;	/* See if we should use the DPLL */	if (writing)		return USE_DPLL;	/* Needed for write */	if (flags & PCI66)		return USE_DPLL;	/* Needed at 66Mhz */	return 0;}
static int
hpt3x2n_use_dpll(struct ata_port *ap, int writing)
hpt3x2n_use_dpll
struct ata_port *ap
struct ata_port
ata_port
*ap
*
ap
int writing
int
writing
writing
{	long flags = (long)ap->host->private_data;	/* See if we should use the DPLL */	if (writing)		return USE_DPLL;	/* Needed for write */	if (flags & PCI66)		return USE_DPLL;	/* Needed at 66Mhz */	return 0;}
long flags = (long)ap->host->private_data;
long flags = (long)ap->host->private_data;
long
flags = (long)ap->host->private_data
flags
= (long)ap->host->private_data
(long)ap->host->private_data
long
long

ap->host->private_data
ap->host
ap
ap
host
private_data
if (writing)		return USE_DPLL;
writing
writing
return USE_DPLL;
USE_DPLL
USE_DPLL
if (flags & PCI66)		return USE_DPLL;
flags & PCI66
flags
flags
PCI66
PCI66
return USE_DPLL;
USE_DPLL
USE_DPLL
return 0;
0
-----joern-----
(18,1,0)
(19,24,0)
(1,9,0)
(5,20,0)
(7,21,0)
(17,9,0)
(11,9,0)
(0,9,0)
(15,19,0)
(6,13,0)
(8,19,0)
(13,18,0)
(1,18,0)
(23,21,0)
(23,0,0)
(23,20,0)
(16,1,0)
(22,16,0)
(10,16,0)
(18,13,0)
(13,19,0)
(2,1,0)
(4,18,0)
(19,13,0)
(12,0,0)
(18,4,0)
(3,9,0)
(20,5,1)
(16,22,1)
(7,16,1)
(23,20,1)
(6,19,1)
(13,6,1)
(19,24,1)
(0,12,1)
(18,4,1)
(23,0,1)
(14,1,1)
(21,7,1)
(18,13,1)
(23,21,1)
(8,15,1)
(1,18,1)
(5,14,1)
(22,10,1)
(19,8,1)
(15,2,1)
(12,16,1)
(10,14,1)
(13,19,1)
(16,1,1)
(10,14,2)
(5,14,2)
(19,24,2)
(23,20,2)
(22,14,2)
(0,16,2)
(18,13,2)
(20,14,2)
(13,19,2)
(23,0,2)
(16,1,2)
(21,16,2)
(16,14,2)
(12,16,2)
(23,21,2)
(1,18,2)
(18,4,2)
(7,16,2)
-----------------------------------
(0,return 0;)
(1,flags = (long)
(2,flags)
(3,if (flags & PCI66)
(4,long)
(5,USE_DPLL)
(6,private_data)
(7,USE_DPLL)
(8,host)
(9,)
(10,flags)
(11,flags)
(12,0)
(13,ap->host->private_data)
(14,writing)
(15,ap)
(16,flags & PCI66)
(17,if (writing)
(18,(long)
(19,ap->host)
(20,return USE_DPLL;)
(21,return USE_DPLL;)
(22,PCI66)
(23,RET)
(24,struct ata_port *ap)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^