-----label-----
0
-----code-----
static resource_size_t pcibios_io_size(const struct pci_controller *hose)
{
#ifdef CONFIG_PPC64
	return hose->pci_io_size;
#else
	return resource_size(&hose->io_resource);
#endif
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
9,11
12,13
13,14
14,15
14,16
15,16
17,18
18,19
18,20
19,20
-----nextToken-----
3,5,8,10,11,16,20,21
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ReturnStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static resource_size_t pcibios_io_size(const struct pci_controller *hose){#ifdef CONFIG_PPC64	return hose->pci_io_size;#else	return resource_size(&hose->io_resource);#endif}
static resource_size_t
resource_size_t
pcibios_io_size(const struct pci_controller *hose)
pcibios_io_size
const struct pci_controller *hose
const struct pci_controller
pci_controller
*hose
*
hose
{#ifdef CONFIG_PPC64	return hose->pci_io_size;#else	return resource_size(&hose->io_resource);#endif}
return resource_size(&hose->io_resource);
resource_size(&hose->io_resource)
resource_size
resource_size
&hose->io_resource
hose->io_resource
hose
hose
io_resource
-----joern-----
(5,3,0)
(1,0,0)
(4,5,0)
(6,5,0)
(0,2,0)
(5,0,0)
(6,4,1)
(0,5,1)
(1,0,1)
(5,3,1)
(5,6,1)
(5,3,2)
(1,0,2)
-----------------------------------
(0,return hose->pci_io_size;)
(1,RET)
(2,)
(3,const struct pci_controller *hose)
(4,hose)
(5,hose->pci_io_size)
(6,pci_io_size)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^