-----label-----
0
-----code-----
static void sig_handler(int sig)
{
	if (sig == SIGCHLD)
		child_finished = 1;
	else
		signr = sig;

	done = 1;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
10,12
10,13
11,12
11,13
12,13
14,15
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
27,28
28,29
28,30
29,30
-----nextToken-----
2,4,6,8,13,15,19,20,24,26,30,31
-----computeFrom-----
11,12
11,13
17,18
17,19
22,23
22,24
28,29
28,30
-----guardedBy-----
-----guardedByNegation-----
13,26
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void sig_handler(int sig){	if (sig == SIGCHLD)		child_finished = 1;	else		signr = sig;	done = 1;}
static void
sig_handler(int sig)
sig_handler
int sig
int
sig
sig
{	if (sig == SIGCHLD)		child_finished = 1;	else		signr = sig;	done = 1;}
if (sig == SIGCHLD)		child_finished = 1;	else		signr = sig;
sig == SIGCHLD
sig
sig
SIGCHLD
SIGCHLD
child_finished = 1;
child_finished = 1
child_finished
child_finished
1
signr = sig;
signr = sig
signr
signr
sig
sig
done = 1;
done = 1
done
done
1
-----joern-----
(3,12,0)
(14,5,0)
(5,15,0)
(9,1,0)
(2,1,0)
(8,5,0)
(4,0,0)
(7,12,0)
(11,13,0)
(12,15,0)
(0,13,0)
(10,0,0)
(12,3,1)
(10,4,1)
(8,14,1)
(9,2,1)
(2,5,1)
(5,8,1)
(4,12,1)
(1,9,1)
(12,15,1)
(4,1,1)
(5,15,1)
(7,5,1)
(6,0,1)
(3,7,1)
(0,10,1)
(3,5,2)
(12,5,2)
(2,5,2)
(9,5,2)
(1,5,2)
(7,5,2)
(12,15,2)
(5,15,2)
-----------------------------------
(0,done = 1)
(1,child_finished = 1)
(2,child_finished)
(3,sig)
(4,done)
(5,sig == SIGCHLD)
(6,RET)
(7,signr)
(8,SIGCHLD)
(9,1)
(10,1)
(11,if (sig == SIGCHLD)
(12,signr = sig)
(13,)
(14,sig)
(15,int sig)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^