-----label-----
0
-----code-----
static void nf_poweroff(void)
{
	long id = nf_get_id("NF_SHUTDOWN");

	if (id)
		nf_call(id);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
10,11
11,12
11,13
13,14
13,15
15,16
16,17
16,18
17,18
20,21
20,22
21,22
23,24
24,25
24,26
25,26
27,28
-----nextToken-----
2,4,6,8,12,14,18,19,22,26,28
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;LiteralExpression;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void nf_poweroff(void){	long id = nf_get_id("NF_SHUTDOWN");	if (id)		nf_call(id);}
static void
nf_poweroff(void)
nf_poweroff
void
void


{	long id = nf_get_id("NF_SHUTDOWN");	if (id)		nf_call(id);}
long id = nf_get_id("NF_SHUTDOWN");
long id = nf_get_id("NF_SHUTDOWN");
long
id = nf_get_id("NF_SHUTDOWN")
id
= nf_get_id("NF_SHUTDOWN")
nf_get_id("NF_SHUTDOWN")
nf_get_id
nf_get_id
"NF_SHUTDOWN"
if (id)		nf_call(id);
id
id
nf_call(id);
nf_call(id)
nf_call
nf_call
id
id
-----joern-----
(2,7,0)
(3,5,0)
(8,5,0)
(9,7,0)
(5,3,0)
(0,5,0)
(6,3,0)
(5,7,0)
(1,0,0)
(1,4,1)
(10,0,1)
(6,8,1)
(4,5,1)
(10,4,1)
(0,1,1)
(5,3,1)
(0,5,1)
(3,6,1)
(1,4,2)
(0,5,2)
(5,3,2)
(0,4,2)
-----------------------------------
(0,nf_call(id)
(1,id)
(2,id)
(3,nf_get_id("NF_SHUTDOWN")
(4,id)
(5,id = nf_get_id("NF_SHUTDOWN")
(6,"NF_SHUTDOWN")
(7,)
(8,id)
(9,if (id)
(10,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^