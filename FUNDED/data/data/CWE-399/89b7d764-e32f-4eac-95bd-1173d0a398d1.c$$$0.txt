-----label-----
0
-----code-----
static bool
_SPI_checktuples(void)
{
	uint64		processed = _SPI_current->processed;
	SPITupleTable *tuptable = _SPI_current->tuptable;
	bool		failed = false;

	if (tuptable == NULL)		/* spi_dest_startup was not called */
		failed = true;
	else if (processed != (tuptable->alloced - tuptable->free))
		failed = true;

	return failed;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
9,13
9,14
10,11
11,12
11,13
12,13
14,15
14,16
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
25,27
25,28
28,29
29,30
29,31
30,31
33,34
34,35
34,36
36,37
36,38
38,39
40,41
40,42
40,43
41,42
41,43
42,43
44,45
46,47
47,48
47,49
48,49
51,52
51,53
52,53
52,54
53,54
55,56
56,57
56,58
57,58
57,59
58,59
61,62
61,63
62,63
65,66
66,67
66,68
67,68
70,71
71,72
-----nextToken-----
2,4,6,8,13,15,19,20,24,26,27,31,32,35,37,39,43,45,49,50,54,59,60,63,64,68,69,72
-----computeFrom-----
41,42
41,43
47,48
47,49
52,53
52,54
56,57
56,58
66,67
66,68
-----guardedBy-----
-----guardedByNegation-----
43,63
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static bool_SPI_checktuples(void){	uint64		processed = _SPI_current->processed;	SPITupleTable *tuptable = _SPI_current->tuptable;	bool		failed = false;	if (tuptable == NULL)		/* spi_dest_startup was not called */		failed = true;	else if (processed != (tuptable->alloced - tuptable->free))		failed = true;	return failed;}
static bool
_SPI_checktuples(void)
_SPI_checktuples
void
void


{	uint64		processed = _SPI_current->processed;	SPITupleTable *tuptable = _SPI_current->tuptable;	bool		failed = false;	if (tuptable == NULL)		/* spi_dest_startup was not called */		failed = true;	else if (processed != (tuptable->alloced - tuptable->free))		failed = true;	return failed;}
uint64		processed = _SPI_current->processed;
uint64		processed = _SPI_current->processed;
uint64
uint64
processed = _SPI_current->processed
processed
= _SPI_current->processed
_SPI_current->processed
_SPI_current
_SPI_current
processed
SPITupleTable *tuptable = _SPI_current->tuptable;
SPITupleTable *tuptable = _SPI_current->tuptable;
SPITupleTable
SPITupleTable
*tuptable = _SPI_current->tuptable
*
tuptable
= _SPI_current->tuptable
_SPI_current->tuptable
_SPI_current
_SPI_current
tuptable
bool		failed = false;
bool		failed = false;
bool
failed = false
failed
= false
false
if (tuptable == NULL)		/* spi_dest_startup was not called */		failed = true;	else if (processed != (tuptable->alloced - tuptable->free))		failed = true;
tuptable == NULL
tuptable
tuptable
NULL
NULL
failed = true;
failed = true
failed
failed
true
if (processed != (tuptable->alloced - tuptable->free))		failed = true;
processed != (tuptable->alloced - tuptable->free)
processed
processed
(tuptable->alloced - tuptable->free)
tuptable->alloced - tuptable->free
tuptable->alloced
tuptable
tuptable
alloced
tuptable->free
tuptable
tuptable
free
failed = true;
failed = true
failed
failed
true
return failed;
failed
failed
-----joern-----
(8,18,0)
(28,37,0)
(27,38,0)
(20,9,0)
(19,11,0)
(37,29,0)
(23,32,0)
(32,23,0)
(36,15,0)
(11,8,0)
(3,0,0)
(1,4,0)
(32,8,0)
(23,0,0)
(31,4,0)
(0,29,0)
(5,15,0)
(2,9,0)
(35,37,0)
(5,18,0)
(17,29,0)
(29,18,0)
(25,11,0)
(4,8,0)
(23,11,0)
(14,8,0)
(12,15,0)
(13,21,0)
(6,5,0)
(34,18,0)
(8,9,0)
(7,32,0)
(22,18,0)
(38,18,0)
(11,23,0)
(5,21,0)
(5,38,0)
(24,5,0)
(9,8,0)
(26,21,0)
(29,37,0)
(33,18,0)
(10,38,0)
(16,32,0)
(0,23,0)
(30,18,0)
(29,37,1)
(19,3,1)
(14,29,1)
(37,35,1)
(38,27,1)
(11,25,1)
(15,36,1)
(5,24,1)
(6,5,1)
(24,21,1)
(24,0,1)
(11,8,1)
(16,7,1)
(24,15,1)
(8,9,1)
(13,0,1)
(23,11,1)
(2,14,1)
(0,29,1)
(7,11,1)
(1,38,1)
(3,4,1)
(5,15,1)
(5,38,1)
(20,2,1)
(26,13,1)
(5,21,1)
(4,8,1)
(25,19,1)
(36,12,1)
(31,1,1)
(12,4,1)
(35,28,1)
(32,8,1)
(27,10,1)
(10,8,1)
(32,16,1)
(4,31,1)
(23,32,1)
(21,26,1)
(28,17,1)
(9,20,1)
(0,23,1)
(21,0,2)
(19,4,2)
(0,4,2)
(32,4,2)
(15,4,2)
(23,32,2)
(5,15,2)
(16,4,2)
(4,8,2)
(0,29,2)
(6,5,2)
(23,4,2)
(29,37,2)
(13,0,2)
(36,4,2)
(11,4,2)
(12,4,2)
(0,23,2)
(8,9,2)
(11,8,2)
(5,38,2)
(26,0,2)
(3,4,2)
(25,4,2)
(5,21,2)
(32,8,2)
(7,4,2)
(23,11,2)
-----------------------------------
(0,processed != (tuptable->alloced - tuptable->free)
(1,tuptable)
(2,_SPI_current)
(3,processed)
(4,tuptable == NULL)
(5,return failed;)
(6,RET)
(7,tuptable)
(8,*tuptable = _SPI_current->tuptable)
(9,_SPI_current->tuptable)
(10,failed)
(11,tuptable->alloced)
(12,failed)
(13,failed)
(14,tuptable)
(15,failed = true)
(16,free)
(17,processed)
(18,)
(19,tuptable)
(20,tuptable)
(21,failed = true)
(22,failed)
(23,tuptable->alloced - tuptable->free)
(24,failed)
(25,alloced)
(26,true)
(27,false)
(28,_SPI_current)
(29,processed = _SPI_current->processed)
(30,tuptable)
(31,NULL)
(32,tuptable->free)
(33,if (tuptable == NULL)
(34,processed)
(35,processed)
(36,true)
(37,_SPI_current->processed)
(38,failed = false)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^