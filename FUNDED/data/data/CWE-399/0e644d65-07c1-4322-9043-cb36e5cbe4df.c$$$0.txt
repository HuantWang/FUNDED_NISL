-----label-----
1
-----code-----
static void __aer_print_error(struct pci_dev *dev,
			      struct aer_err_info *info)
{
	int i, status;
	const char *errmsg = NULL;
	status = (info->status & ~info->mask);

	for (i = 0; i < 32; i++) {
		if (!(status & (1 << i)))
			continue;

		if (info->severity == AER_CORRECTABLE)
			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?
				aer_correctable_error_string[i] : NULL;
		else
			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?
				aer_uncorrectable_error_string[i] : NULL;

		if (errmsg)
			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,
				info->first_error == i ? " (First)" : "");
		else
			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",
				i, info->first_error == i ? " (First)" : "");
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
19,20
19,21
19,22
21,22
23,24
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
34,35
35,36
35,37
36,37
38,39
39,40
39,41
40,41
40,42
41,42
44,45
45,46
45,47
46,47
49,50
49,51
49,52
49,53
50,51
51,52
51,53
52,53
55,56
55,57
56,57
59,60
60,61
62,63
62,64
62,65
63,64
63,65
64,65
65,66
66,67
66,68
67,68
69,70
70,71
70,72
72,73
75,76
75,77
75,78
76,77
76,78
77,78
77,79
78,79
81,82
83,84
84,85
84,86
85,86
87,88
87,89
87,90
88,89
88,90
89,90
91,92
91,93
92,93
94,95
96,97
96,98
97,98
99,100
101,102
103,104
104,105
104,106
105,106
107,108
107,109
107,110
108,109
108,110
109,110
111,112
111,113
112,113
114,115
116,117
116,118
117,118
119,120
121,122
123,124
123,125
123,126
124,125
126,127
127,128
127,129
127,130
127,131
127,132
127,133
128,129
130,131
131,132
131,133
132,133
136,137
138,139
140,141
140,142
140,143
141,142
141,143
142,143
142,144
143,144
146,147
150,151
151,152
151,153
151,154
151,155
151,156
152,153
154,155
155,156
155,157
156,157
160,161
162,163
162,164
162,165
163,164
163,165
164,165
164,166
165,166
168,169
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,24,27,29,30,33,37,42,43,47,48,53,54,57,58,61,68,71,73,74,79,80,82,86,90,93,95,98,100,102,106,110,113,115,118,120,122,125,129,133,134,135,137,139,144,145,147,148,149,153,157,158,159,161,166,167,169,170,171
-----computeFrom-----
35,36
35,37
39,40
39,41
51,52
51,53
55,56
55,57
66,67
66,68
70,71
70,72
76,77
76,78
84,85
84,86
88,89
88,90
104,105
104,106
108,109
108,110
141,142
141,143
163,164
163,165
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;ContinueStatement;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;ConditionalExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;ConditionalExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;ConditionalExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;IdExpression;Name;ConditionalExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;LiteralExpression;
-----ast_node-----
static void __aer_print_error(struct pci_dev *dev,			      struct aer_err_info *info){	int i, status;	const char *errmsg = NULL;	status = (info->status & ~info->mask);	for (i = 0; i < 32; i++) {		if (!(status & (1 << i)))			continue;		if (info->severity == AER_CORRECTABLE)			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;		else			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;		if (errmsg)			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");		else			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");	}}
static void
__aer_print_error(struct pci_dev *dev,			      struct aer_err_info *info)
__aer_print_error
struct pci_dev *dev
struct pci_dev
pci_dev
*dev
*
dev
struct aer_err_info *info
struct aer_err_info
aer_err_info
*info
*
info
{	int i, status;	const char *errmsg = NULL;	status = (info->status & ~info->mask);	for (i = 0; i < 32; i++) {		if (!(status & (1 << i)))			continue;		if (info->severity == AER_CORRECTABLE)			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;		else			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;		if (errmsg)			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");		else			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");	}}
int i, status;
int i, status;
int
i
i
status
status
const char *errmsg = NULL;
const char *errmsg = NULL;
const char
*errmsg = NULL
*
errmsg
= NULL
NULL
NULL
status = (info->status & ~info->mask);
status = (info->status & ~info->mask)
status
status
(info->status & ~info->mask)
info->status & ~info->mask
info->status
info
info
status
~info->mask
info->mask
info
info
mask
for (i = 0; i < 32; i++) {		if (!(status & (1 << i)))			continue;		if (info->severity == AER_CORRECTABLE)			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;		else			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;		if (errmsg)			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");		else			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");	}
i = 0;
i = 0
i
i
0
i < 32
i
i
32
i++
i
i
{		if (!(status & (1 << i)))			continue;		if (info->severity == AER_CORRECTABLE)			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;		else			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;		if (errmsg)			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");		else			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");	}
if (!(status & (1 << i)))			continue;
!(status & (1 << i))
(status & (1 << i))
status & (1 << i)
status
status
(1 << i)
1 << i
1
i
i
continue;
if (info->severity == AER_CORRECTABLE)			errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;		else			errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;
info->severity == AER_CORRECTABLE
info->severity
info
info
severity
AER_CORRECTABLE
AER_CORRECTABLE
errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL;
errmsg = i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL
errmsg
errmsg
i < ARRAY_SIZE(aer_correctable_error_string) ?				aer_correctable_error_string[i] : NULL
i < ARRAY_SIZE(aer_correctable_error_string)
i
i
ARRAY_SIZE(aer_correctable_error_string)
ARRAY_SIZE
ARRAY_SIZE
aer_correctable_error_string
aer_correctable_error_string
aer_correctable_error_string[i]
aer_correctable_error_string
aer_correctable_error_string
i
i
NULL
NULL
errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL;
errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL
errmsg
errmsg
i < ARRAY_SIZE(aer_uncorrectable_error_string) ?				aer_uncorrectable_error_string[i] : NULL
i < ARRAY_SIZE(aer_uncorrectable_error_string)
i
i
ARRAY_SIZE(aer_uncorrectable_error_string)
ARRAY_SIZE
ARRAY_SIZE
aer_uncorrectable_error_string
aer_uncorrectable_error_string
aer_uncorrectable_error_string[i]
aer_uncorrectable_error_string
aer_uncorrectable_error_string
i
i
NULL
NULL
if (errmsg)			dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");		else			dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");
errmsg
errmsg
dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "");
dev_err(&dev->dev, "   [%2d] %-22s%s\n", i, errmsg,				info->first_error == i ? " (First)" : "")
dev_err
dev_err
&dev->dev
dev->dev
dev
dev
dev
"   [%2d] %-22s%s\n"
i
i
errmsg
errmsg
info->first_error == i ? " (First)" : ""
info->first_error == i
info->first_error
info
info
first_error
i
i
" (First)"
""
dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "");
dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\n",				i, info->first_error == i ? " (First)" : "")
dev_err
dev_err
&dev->dev
dev->dev
dev
dev
dev
"   [%2d] Unknown Error Bit%s\n"
i
i
info->first_error == i ? " (First)" : ""
info->first_error == i
info->first_error
info
info
first_error
i
i
" (First)"
""
-----joern-----
(9,47,0)
(77,66,0)
(16,79,0)
(32,45,0)
(15,48,0)
(53,77,0)
(73,72,0)
(69,73,0)
(86,79,0)
(17,33,0)
(80,42,0)
(22,66,0)
(28,63,0)
(50,21,0)
(48,43,0)
(24,44,0)
(90,22,0)
(97,64,0)
(77,29,0)
(60,49,0)
(49,60,0)
(77,65,0)
(22,85,0)
(80,3,0)
(85,56,0)
(82,33,0)
(79,66,0)
(71,65,0)
(74,2,0)
(65,27,0)
(58,93,0)
(73,27,0)
(64,93,0)
(70,60,0)
(19,66,0)
(12,93,0)
(77,44,0)
(59,39,0)
(40,82,0)
(25,19,0)
(95,42,0)
(44,47,0)
(36,2,0)
(7,2,0)
(47,44,0)
(60,17,0)
(26,19,0)
(82,3,0)
(0,79,0)
(83,43,0)
(63,4,0)
(44,77,0)
(6,66,0)
(5,47,0)
(55,43,0)
(88,78,0)
(63,28,0)
(51,21,0)
(56,85,0)
(62,77,0)
(56,66,0)
(27,65,0)
(18,66,0)
(58,79,0)
(52,17,0)
(85,22,0)
(60,21,0)
(96,5,0)
(92,80,0)
(93,66,0)
(33,61,0)
(89,27,0)
(84,5,0)
(21,66,0)
(47,66,0)
(94,61,0)
(16,78,0)
(78,4,0)
(93,58,0)
(72,73,0)
(22,91,0)
(79,58,0)
(76,61,0)
(17,43,0)
(30,48,0)
(20,29,0)
(54,43,0)
(78,16,0)
(27,73,0)
(81,43,0)
(31,78,0)
(46,56,0)
(8,82,0)
(57,85,0)
(93,64,0)
(33,82,0)
(34,64,0)
(27,19,0)
(38,56,0)
(37,45,0)
(67,77,0)
(41,63,0)
(5,3,0)
(13,58,0)
(85,29,0)
(87,58,0)
(91,22,0)
(68,63,0)
(45,66,0)
(35,72,0)
(42,80,0)
(47,5,0)
(61,33,0)
(33,17,0)
(19,27,0)
(77,28,0)
(28,77,0)
(29,85,0)
(73,66,0)
(11,44,0)
(23,80,0)
(10,91,0)
(79,16,0)
(21,60,0)
(64,3,0)
(39,66,0)
(51,70,1)
(5,84,1)
(95,80,1)
(11,47,1)
(5,3,1)
(40,8,1)
(21,66,1)
(26,73,1)
(10,90,1)
(69,71,1)
(93,12,1)
(41,68,1)
(84,96,1)
(48,30,1)
(85,57,1)
(67,28,1)
(27,73,1)
(89,73,1)
(80,23,1)
(34,86,1)
(24,47,1)
(77,28,1)
(60,17,1)
(88,75,1)
(49,60,1)
(16,78,1)
(13,93,1)
(92,49,1)
(61,94,1)
(46,22,1)
(21,50,1)
(58,93,1)
(77,29,1)
(76,82,1)
(18,17,1)
(47,9,1)
(57,22,1)
(39,66,1)
(62,67,1)
(73,72,1)
(8,52,1)
(33,61,1)
(23,92,1)
(35,69,1)
(93,64,1)
(56,38,1)
(28,63,1)
(87,93,1)
(70,45,1)
(94,76,1)
(47,5,1)
(1,45,1)
(90,20,1)
(77,66,1)
(80,3,1)
(96,53,1)
(32,37,1)
(63,41,1)
(72,35,1)
(86,0,1)
(17,33,1)
(66,6,1)
(45,32,1)
(45,66,1)
(75,65,1)
(6,18,1)
(71,42,1)
(42,80,1)
(0,16,1)
(77,65,1)
(64,3,1)
(59,79,1)
(30,15,1)
(85,22,1)
(73,66,1)
(39,59,1)
(44,24,1)
(75,29,1)
(59,77,1)
(60,21,1)
(85,56,1)
(64,97,1)
(25,26,1)
(44,11,1)
(27,89,1)
(22,91,1)
(82,40,1)
(63,4,1)
(52,48,1)
(77,44,1)
(44,47,1)
(59,14,1)
(29,85,1)
(68,75,1)
(14,49,1)
(78,31,1)
(56,66,1)
(82,3,1)
(19,66,1)
(38,46,1)
(58,87,1)
(33,82,1)
(53,62,1)
(79,66,1)
(79,16,1)
(79,58,1)
(27,19,1)
(78,4,1)
(31,88,1)
(37,39,1)
(22,66,1)
(50,51,1)
(9,5,1)
(12,64,1)
(42,95,1)
(91,10,1)
(20,42,1)
(97,34,1)
(58,13,1)
(93,66,1)
(37,66,1)
(47,66,1)
(65,27,1)
(19,25,1)
(34,75,2)
(49,45,2)
(28,63,2)
(17,33,2)
(47,66,2)
(28,75,2)
(95,49,2)
(27,19,2)
(77,28,2)
(23,49,2)
(82,3,2)
(29,85,2)
(93,66,2)
(42,49,2)
(59,45,2)
(27,42,2)
(85,22,2)
(19,73,2)
(64,3,2)
(58,75,2)
(89,73,2)
(24,47,2)
(21,66,2)
(16,75,2)
(26,73,2)
(80,49,2)
(35,42,2)
(93,75,2)
(93,64,2)
(64,75,2)
(63,4,2)
(67,75,2)
(62,75,2)
(65,27,2)
(65,42,2)
(77,65,2)
(79,58,2)
(97,75,2)
(14,49,2)
(91,42,2)
(41,75,2)
(22,42,2)
(39,66,2)
(60,21,2)
(84,75,2)
(38,22,2)
(31,75,2)
(73,42,2)
(39,45,2)
(47,75,2)
(42,80,2)
(77,29,2)
(73,66,2)
(25,73,2)
(75,49,2)
(58,93,2)
(51,45,2)
(27,73,2)
(11,47,2)
(70,45,2)
(46,22,2)
(12,75,2)
(53,75,2)
(44,75,2)
(78,75,2)
(9,75,2)
(50,45,2)
(56,66,2)
(77,66,2)
(80,3,2)
(5,75,2)
(45,66,2)
(69,42,2)
(60,45,2)
(33,82,2)
(72,42,2)
(96,75,2)
(22,66,2)
(22,91,2)
(79,75,2)
(21,45,2)
(10,42,2)
(79,16,2)
(87,93,2)
(29,42,2)
(85,42,2)
(77,75,2)
(5,3,2)
(68,75,2)
(57,22,2)
(13,93,2)
(45,45,2)
(33,61,2)
(32,45,2)
(78,4,2)
(79,66,2)
(49,60,2)
(85,56,2)
(60,17,2)
(77,44,2)
(88,75,2)
(44,47,2)
(92,49,2)
(47,5,2)
(73,72,2)
(90,42,2)
(37,45,2)
(0,75,2)
(63,75,2)
(86,75,2)
(16,78,2)
(56,22,2)
(20,42,2)
(19,66,2)
(71,42,2)
-----------------------------------
(0,"   [%2d] Unknown Error Bit%s\\n")
(1,RET)
(2,)
(3,struct aer_err_info *info)
(4,struct pci_dev *dev)
(5,info->first_error)
(6,0)
(7,if (info->severity == AER_CORRECTABLE)
(8,info)
(9,i)
(10,aer_uncorrectable_error_string)
(11," (First)
(12,i)
(13," (First)
(14,continue;)
(15,errmsg)
(16,&dev->dev)
(17,status = (info->status & ~info->mask)
(18,i)
(19,aer_correctable_error_string[i])
(20,errmsg)
(21,1 << i)
(22,i < ARRAY_SIZE(aer_uncorrectable_error_string)
(23,severity)
(24,"")
(25,i)
(26,aer_correctable_error_string)
(27,i < ARRAY_SIZE(aer_correctable_error_string)
(28,&dev->dev)
(29,errmsg = i < ARRAY_SIZE(aer_uncorrectable_error_string)
(30,NULL)
(31,dev)
(32,32)
(33,info->status & ~info->mask)
(34,info)
(35,aer_correctable_error_string)
(36,if (!(status & (1 << i)
(37,i)
(38,i)
(39,i++)
(40,status)
(41,dev)
(42,info->severity == AER_CORRECTABLE)
(43,)
(44,info->first_error == i ? " (First)
(45,i < 32)
(46,aer_uncorrectable_error_string)
(47,info->first_error == i)
(48,*errmsg = NULL)
(49,!(status & (1 << i)
(50,i)
(51,1)
(52,status)
(53,errmsg)
(54,for (i = 0; i < 32; i++)
(55,status)
(56,aer_uncorrectable_error_string[i])
(57,NULL)
(58,info->first_error == i ? " (First)
(59,i)
(60,status & (1 << i)
(61,~info->mask)
(62,i)
(63,dev->dev)
(64,info->first_error)
(65,errmsg = i < ARRAY_SIZE(aer_correctable_error_string)
(66,i = 0)
(67,"   [%2d] %-22s%s\\n")
(68,dev)
(69,i)
(70,status)
(71,errmsg)
(72,ARRAY_SIZE(aer_correctable_error_string)
(73,i < ARRAY_SIZE(aer_correctable_error_string)
(74,if (errmsg)
(75,errmsg)
(76,~info)
(77,dev_err(&dev->dev, "   [%2d] %-22s%s\\n", i, errmsg,\n\\n\\t\\t\\t\\tinfo->first_error == i ? " (First)
(78,dev->dev)
(79,dev_err(&dev->dev, "   [%2d] Unknown Error Bit%s\\n",\n\\n\\t\\t\\t\\ti, info->first_error == i ? " (First)
(80,info->severity)
(81,errmsg)
(82,info->status)
(83,i)
(84,first_error)
(85,i < ARRAY_SIZE(aer_uncorrectable_error_string)
(86,i)
(87,"")
(88,dev)
(89,NULL)
(90,i)
(91,ARRAY_SIZE(aer_uncorrectable_error_string)
(92,info)
(93,info->first_error == i)
(94,mask)
(95,AER_CORRECTABLE)
(96,info)
(97,first_error)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^