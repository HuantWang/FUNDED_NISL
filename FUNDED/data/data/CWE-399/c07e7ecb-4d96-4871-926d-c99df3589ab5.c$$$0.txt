-----label-----
0
-----code-----
const timerHardware_t *timerGetByTagAndIndex(ioTag_t ioTag, unsigned timerIndex)
{
    if (!ioTag) {
        return NULL;
    }

#if TIMER_CHANNEL_COUNT > 0
    uint8_t index = 1;
    for (unsigned i = 0; i < TIMER_CHANNEL_COUNT; i++) {
        if (TIMER_HARDWARE[i].tag == ioTag) {
            if (index == timerIndex || timerIndex == 0) {
                return &TIMER_HARDWARE[i];
            }
            index++;
        }
    }
#else
    UNUSED(timerIndex);
#endif

    return NULL;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
7,8
7,9
8,9
10,11
12,13
12,14
14,15
16,17
16,18
16,19
17,18
17,19
18,19
19,20
21,22
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
-----nextToken-----
3,5,6,9,11,13,15,20,24,28,30,33
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;IfStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ReturnStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
const timerHardware_t *timerGetByTagAndIndex(ioTag_t ioTag, unsigned timerIndex){    if (!ioTag) {        return NULL;    }#if TIMER_CHANNEL_COUNT > 0    uint8_t index = 1;    for (unsigned i = 0; i < TIMER_CHANNEL_COUNT; i++) {        if (TIMER_HARDWARE[i].tag == ioTag) {            if (index == timerIndex || timerIndex == 0) {                return &TIMER_HARDWARE[i];            }            index++;        }    }#else    UNUSED(timerIndex);#endif    return NULL;}
const timerHardware_t
timerHardware_t
*timerGetByTagAndIndex(ioTag_t ioTag, unsigned timerIndex)
*
timerGetByTagAndIndex
ioTag_t ioTag
ioTag_t
ioTag_t
ioTag
ioTag
unsigned timerIndex
unsigned
timerIndex
timerIndex
{    if (!ioTag) {        return NULL;    }#if TIMER_CHANNEL_COUNT > 0    uint8_t index = 1;    for (unsigned i = 0; i < TIMER_CHANNEL_COUNT; i++) {        if (TIMER_HARDWARE[i].tag == ioTag) {            if (index == timerIndex || timerIndex == 0) {                return &TIMER_HARDWARE[i];            }            index++;        }    }#else    UNUSED(timerIndex);#endif    return NULL;}
if (!ioTag) {        return NULL;    }
!ioTag
ioTag
ioTag
{        return NULL;    }
return NULL;
NULL
NULL
UNUSED(timerIndex);
UNUSED(timerIndex)
UNUSED
UNUSED
timerIndex
timerIndex
return NULL;
NULL
NULL
-----joern-----
(11,13,0)
(4,30,0)
(13,2,0)
(12,22,0)
(31,30,0)
(2,13,0)
(8,9,0)
(26,25,0)
(27,17,0)
(13,22,0)
(33,22,0)
(17,5,0)
(14,3,0)
(30,22,0)
(0,13,0)
(9,18,0)
(7,9,0)
(0,11,1)
(31,22,1)
(30,22,1)
(13,0,1)
(9,18,1)
(16,3,1)
(22,33,1)
(2,13,1)
(11,30,1)
(29,23,1)
(3,14,1)
(4,31,1)
(32,1,1)
(13,22,1)
(6,2,1)
(17,27,1)
(33,12,1)
(7,8,1)
(9,7,1)
(30,4,1)
(30,22,2)
(6,30,2)
(2,30,2)
(0,30,2)
(22,3,2)
(30,3,2)
(2,13,2)
(33,3,2)
(16,3,2)
(31,3,2)
(4,3,2)
(24,3,2)
(12,3,2)
(10,30,2)
(13,22,2)
(9,18,2)
(11,30,2)
(13,30,2)
-----------------------------------
(0,i)
(1,index)
(2,TIMER_HARDWARE[i].tag)
(3,!ioTag)
(4,TIMER_CHANNEL_COUNT)
(5,)
(6,ioTag)
(7,0)
(8,timerIndex)
(9,timerIndex == 0)
(10,return NULL;)
(11,TIMER_HARDWARE)
(12,i)
(13,TIMER_HARDWARE[i])
(14,ioTag)
(15,TIMER_HARDWARE)
(16,NULL)
(17,return &TIMER_HARDWARE[i];)
(18,unsigned timerIndex)
(19,)
(20,index)
(21,for (unsigned i = 0; i < TIMER_CHANNEL_COUNT; i++)
(22,i = 0)
(23,index++)
(24,1)
(25,)
(26,if (TIMER_HARDWARE[i].tag == ioTag)
(27,&TIMER_HARDWARE[i])
(28,i)
(29,i)
(30,i < TIMER_CHANNEL_COUNT)
(31,i)
(32,timerIndex)
(33,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^