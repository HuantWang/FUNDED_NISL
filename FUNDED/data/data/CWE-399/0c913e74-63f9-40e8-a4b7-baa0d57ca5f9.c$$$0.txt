-----label-----
1
-----code-----
static void vmd_irq_disable(struct irq_data *data)
{
	struct vmd_irq *vmdirq = data->chip_data;
	unsigned long flags;

	data->chip->irq_mask(data);

	raw_spin_lock_irqsave(&list_lock, flags);
	if (vmdirq->enabled) {
		list_del_rcu(&vmdirq->node);
		vmdirq->enabled = false;
	}
	raw_spin_unlock_irqrestore(&list_lock, flags);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
31,33
32,33
32,34
33,34
37,38
39,40
40,41
40,42
40,43
41,42
43,44
44,45
46,47
48,49
48,50
49,50
49,51
50,51
53,54
53,55
54,55
55,56
55,57
56,57
58,59
59,60
59,61
60,61
63,64
64,65
64,66
65,66
65,67
66,67
70,71
71,72
71,73
71,74
72,73
74,75
75,76
77,78
-----nextToken-----
2,4,7,9,10,15,17,18,22,23,26,28,34,35,36,38,42,45,47,51,52,57,61,62,67,68,69,73,76,78
-----computeFrom-----
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void vmd_irq_disable(struct irq_data *data){	struct vmd_irq *vmdirq = data->chip_data;	unsigned long flags;	data->chip->irq_mask(data);	raw_spin_lock_irqsave(&list_lock, flags);	if (vmdirq->enabled) {		list_del_rcu(&vmdirq->node);		vmdirq->enabled = false;	}	raw_spin_unlock_irqrestore(&list_lock, flags);}
static void
vmd_irq_disable(struct irq_data *data)
vmd_irq_disable
struct irq_data *data
struct irq_data
irq_data
*data
*
data
{	struct vmd_irq *vmdirq = data->chip_data;	unsigned long flags;	data->chip->irq_mask(data);	raw_spin_lock_irqsave(&list_lock, flags);	if (vmdirq->enabled) {		list_del_rcu(&vmdirq->node);		vmdirq->enabled = false;	}	raw_spin_unlock_irqrestore(&list_lock, flags);}
struct vmd_irq *vmdirq = data->chip_data;
struct vmd_irq *vmdirq = data->chip_data;
struct vmd_irq
vmd_irq
*vmdirq = data->chip_data
*
vmdirq
= data->chip_data
data->chip_data
data
data
chip_data
unsigned long flags;
unsigned long flags;
unsigned long
flags
flags
data->chip->irq_mask(data);
data->chip->irq_mask(data)
data->chip->irq_mask
data->chip
data
data
chip
irq_mask
data
data
raw_spin_lock_irqsave(&list_lock, flags);
raw_spin_lock_irqsave(&list_lock, flags)
raw_spin_lock_irqsave
raw_spin_lock_irqsave
&list_lock
list_lock
list_lock
flags
flags
if (vmdirq->enabled) {		list_del_rcu(&vmdirq->node);		vmdirq->enabled = false;	}
vmdirq->enabled
vmdirq
vmdirq
enabled
{		list_del_rcu(&vmdirq->node);		vmdirq->enabled = false;	}
list_del_rcu(&vmdirq->node);
list_del_rcu(&vmdirq->node)
list_del_rcu
list_del_rcu
&vmdirq->node
vmdirq->node
vmdirq
vmdirq
node
vmdirq->enabled = false;
vmdirq->enabled = false
vmdirq->enabled
vmdirq
vmdirq
enabled
false
raw_spin_unlock_irqrestore(&list_lock, flags);
raw_spin_unlock_irqrestore(&list_lock, flags)
raw_spin_unlock_irqrestore
raw_spin_unlock_irqrestore
&list_lock
list_lock
list_lock
flags
flags
-----joern-----
(9,11,0)
(10,20,0)
(9,1,0)
(5,14,0)
(7,8,0)
(10,1,0)
(25,13,0)
(28,0,0)
(18,1,0)
(14,27,0)
(0,28,0)
(2,8,0)
(24,12,0)
(13,14,0)
(17,1,0)
(12,0,0)
(13,0,0)
(32,4,0)
(24,26,0)
(4,1,0)
(12,24,0)
(22,29,0)
(31,10,0)
(34,9,0)
(26,27,0)
(23,0,0)
(26,24,0)
(6,12,0)
(8,0,0)
(28,11,0)
(29,4,0)
(20,10,0)
(0,1,0)
(21,28,0)
(30,1,0)
(15,13,0)
(4,29,0)
(33,28,0)
(3,12,0)
(16,20,0)
(28,21,1)
(8,7,1)
(26,24,1)
(8,0,1)
(9,34,1)
(10,20,1)
(3,8,1)
(10,31,1)
(25,26,1)
(21,33,1)
(5,13,1)
(28,11,1)
(19,10,1)
(4,32,1)
(9,11,1)
(24,12,1)
(34,0,1)
(2,4,1)
(22,9,1)
(0,28,1)
(7,2,1)
(13,0,1)
(31,20,1)
(14,5,1)
(20,16,1)
(12,6,1)
(15,25,1)
(16,8,1)
(4,29,1)
(33,23,1)
(32,29,1)
(6,3,1)
(16,14,1)
(13,15,1)
(12,0,1)
(29,22,1)
(24,12,2)
(26,8,2)
(10,20,2)
(13,8,2)
(28,11,2)
(5,8,2)
(0,28,2)
(8,0,2)
(4,29,2)
(15,8,2)
(12,8,2)
(9,11,2)
(24,8,2)
(3,8,2)
(25,8,2)
(13,0,2)
(26,24,2)
(14,8,2)
(12,0,2)
(6,8,2)
-----------------------------------
(0,*vmdirq = data->chip_data)
(1,)
(2,vmdirq)
(3,vmdirq)
(4,raw_spin_lock_irqsave(&list_lock, flags)
(5,false)
(6,node)
(7,enabled)
(8,vmdirq->enabled)
(9,data->chip->irq_mask(data)
(10,raw_spin_unlock_irqrestore(&list_lock, flags)
(11,struct irq_data *data)
(12,vmdirq->node)
(13,vmdirq->enabled)
(14,vmdirq->enabled = false)
(15,enabled)
(16,list_lock)
(17,if (vmdirq->enabled)
(18,flags)
(19,RET)
(20,&list_lock)
(21,chip_data)
(22,list_lock)
(23,vmdirq)
(24,&vmdirq->node)
(25,vmdirq)
(26,list_del_rcu(&vmdirq->node)
(27,)
(28,data->chip_data)
(29,&list_lock)
(30,vmdirq)
(31,flags)
(32,flags)
(33,data)
(34,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^