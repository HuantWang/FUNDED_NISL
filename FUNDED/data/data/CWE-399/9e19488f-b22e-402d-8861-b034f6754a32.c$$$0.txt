-----label-----
0
-----code-----
Bool
compScreenInit (ScreenPtr pScreen)
{
    CompScreenPtr   cs;

    if (GetCompScreen (pScreen))
	return TRUE;
    cs = (CompScreenPtr) xalloc (sizeof (CompScreenRec));
    if (!cs)
	return FALSE;

    cs->damaged = FALSE;
    cs->pOverlayWin = NULL;
    cs->pOverlayClients = NULL;

    cs->numAlternateVisuals = 0;
    cs->alternateVisuals = NULL;

    if (!compAddAlternateVisuals (pScreen, cs))
    {
	xfree (cs);
	return FALSE;
    }

    cs->PositionWindow = pScreen->PositionWindow;
    pScreen->PositionWindow = compPositionWindow;

    cs->CopyWindow = pScreen->CopyWindow;
    pScreen->CopyWindow = compCopyWindow;

    cs->CreateWindow = pScreen->CreateWindow;
    pScreen->CreateWindow = compCreateWindow;

    cs->DestroyWindow = pScreen->DestroyWindow;
    pScreen->DestroyWindow = compDestroyWindow;

    cs->RealizeWindow = pScreen->RealizeWindow;
    pScreen->RealizeWindow = compRealizeWindow;

    cs->UnrealizeWindow = pScreen->UnrealizeWindow;
    pScreen->UnrealizeWindow = compUnrealizeWindow;

    cs->ClipNotify = pScreen->ClipNotify;
    pScreen->ClipNotify = compClipNotify;

    cs->MoveWindow = pScreen->MoveWindow;
    pScreen->MoveWindow = compMoveWindow;

    cs->ResizeWindow = pScreen->ResizeWindow;
    pScreen->ResizeWindow = compResizeWindow;

    cs->ChangeBorderWidth = pScreen->ChangeBorderWidth;
    pScreen->ChangeBorderWidth = compChangeBorderWidth;

    cs->ReparentWindow = pScreen->ReparentWindow;
    pScreen->ReparentWindow = compReparentWindow;

    cs->InstallColormap = pScreen->InstallColormap;
    pScreen->InstallColormap = compInstallColormap;

    cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes;
    pScreen->ChangeWindowAttributes = compChangeWindowAttributes;

    cs->BlockHandler = pScreen->BlockHandler;
    pScreen->BlockHandler = compBlockHandler;

    cs->CloseScreen = pScreen->CloseScreen;
    pScreen->CloseScreen = compCloseScreen;

    dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs);

    RegisterRealChildHeadProc(CompositeRealChildHead);

    return TRUE;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
6,7
6,8
7,8
9,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
11,26
11,27
11,28
11,29
11,30
11,31
11,32
11,33
11,34
11,35
11,36
11,37
11,38
11,39
11,40
11,41
11,42
11,43
11,44
11,45
11,46
11,47
11,48
11,49
11,50
11,51
11,52
11,53
11,54
12,13
13,14
13,15
14,15
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
31,33
32,33
32,34
33,34
36,37
36,38
37,38
39,40
40,41
40,42
41,42
44,45
44,46
45,46
46,47
48,49
49,50
51,52
52,53
52,54
53,54
53,55
54,55
57,58
59,60
60,61
60,62
61,62
61,63
62,63
65,66
67,68
68,69
68,70
69,70
69,71
70,71
73,74
75,76
76,77
76,78
77,78
77,79
78,79
82,83
83,84
83,85
84,85
84,86
85,86
88,89
90,91
90,92
91,92
92,93
92,94
92,95
93,94
95,96
97,98
99,100
99,101
100,101
101,102
101,103
102,103
104,105
106,107
107,108
109,110
110,111
110,112
111,112
111,113
112,113
115,116
115,117
116,117
119,120
120,121
120,122
121,122
121,123
122,123
125,126
127,128
128,129
128,130
129,130
129,131
130,131
133,134
133,135
134,135
137,138
138,139
138,140
139,140
139,141
140,141
143,144
145,146
146,147
146,148
147,148
147,149
148,149
151,152
151,153
152,153
155,156
156,157
156,158
157,158
157,159
158,159
161,162
163,164
164,165
164,166
165,166
165,167
166,167
169,170
169,171
170,171
173,174
174,175
174,176
175,176
175,177
176,177
179,180
181,182
182,183
182,184
183,184
183,185
184,185
187,188
187,189
188,189
191,192
192,193
192,194
193,194
193,195
194,195
197,198
199,200
200,201
200,202
201,202
201,203
202,203
205,206
205,207
206,207
209,210
210,211
210,212
211,212
211,213
212,213
215,216
217,218
218,219
218,220
219,220
219,221
220,221
223,224
223,225
224,225
227,228
228,229
228,230
229,230
229,231
230,231
233,234
235,236
236,237
236,238
237,238
237,239
238,239
241,242
241,243
242,243
245,246
246,247
246,248
247,248
247,249
248,249
251,252
253,254
254,255
254,256
255,256
255,257
256,257
259,260
259,261
260,261
263,264
264,265
264,266
265,266
265,267
266,267
269,270
271,272
272,273
272,274
273,274
273,275
274,275
277,278
277,279
278,279
281,282
282,283
282,284
283,284
283,285
284,285
287,288
289,290
290,291
290,292
291,292
291,293
292,293
295,296
295,297
296,297
299,300
300,301
300,302
301,302
301,303
302,303
305,306
307,308
308,309
308,310
309,310
309,311
310,311
313,314
313,315
314,315
317,318
318,319
318,320
319,320
319,321
320,321
323,324
325,326
326,327
326,328
327,328
327,329
328,329
331,332
331,333
332,333
335,336
336,337
336,338
337,338
337,339
338,339
341,342
343,344
344,345
344,346
345,346
345,347
346,347
349,350
349,351
350,351
353,354
354,355
354,356
355,356
355,357
356,357
359,360
361,362
362,363
362,364
363,364
363,365
364,365
367,368
367,369
368,369
371,372
372,373
372,374
373,374
373,375
374,375
377,378
379,380
380,381
380,382
380,383
380,384
381,382
383,384
384,385
384,386
385,386
388,389
390,391
392,393
393,394
393,395
394,395
396,397
397,398
399,400
400,401
-----nextToken-----
3,5,8,10,15,17,21,23,26,30,34,35,38,42,43,47,50,55,56,58,63,64,66,71,72,74,79,80,81,86,87,89,94,96,98,103,105,108,113,114,117,118,123,124,126,131,132,135,136,141,142,144,149,150,153,154,159,160,162,167,168,171,172,177,178,180,185,186,189,190,195,196,198,203,204,207,208,213,214,216,221,222,225,226,231,232,234,239,240,243,244,249,250,252,257,258,261,262,267,268,270,275,276,279,280,285,286,288,293,294,297,298,303,304,306,311,312,315,316,321,322,324,329,330,333,334,339,340,342,347,348,351,352,357,358,360,365,366,369,370,375,376,378,382,386,387,389,391,395,398,401
-----computeFrom-----
28,29
28,30
52,53
52,54
60,61
60,62
68,69
68,70
76,77
76,78
83,84
83,85
110,111
110,112
120,121
120,122
128,129
128,130
138,139
138,140
146,147
146,148
156,157
156,158
164,165
164,166
174,175
174,176
182,183
182,184
192,193
192,194
200,201
200,202
210,211
210,212
218,219
218,220
228,229
228,230
236,237
236,238
246,247
246,248
254,255
254,256
264,265
264,266
272,273
272,274
282,283
282,284
290,291
290,292
300,301
300,302
308,309
308,310
318,319
318,320
326,327
326,328
336,337
336,338
344,345
344,346
354,355
354,356
362,363
362,364
372,373
372,374
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FunctionCallExpression;IdExpression;Name;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
BoolcompScreenInit (ScreenPtr pScreen){    CompScreenPtr   cs;    if (GetCompScreen (pScreen))	return TRUE;    cs = (CompScreenPtr) xalloc (sizeof (CompScreenRec));    if (!cs)	return FALSE;    cs->damaged = FALSE;    cs->pOverlayWin = NULL;    cs->pOverlayClients = NULL;    cs->numAlternateVisuals = 0;    cs->alternateVisuals = NULL;    if (!compAddAlternateVisuals (pScreen, cs))    {	xfree (cs);	return FALSE;    }    cs->PositionWindow = pScreen->PositionWindow;    pScreen->PositionWindow = compPositionWindow;    cs->CopyWindow = pScreen->CopyWindow;    pScreen->CopyWindow = compCopyWindow;    cs->CreateWindow = pScreen->CreateWindow;    pScreen->CreateWindow = compCreateWindow;    cs->DestroyWindow = pScreen->DestroyWindow;    pScreen->DestroyWindow = compDestroyWindow;    cs->RealizeWindow = pScreen->RealizeWindow;    pScreen->RealizeWindow = compRealizeWindow;    cs->UnrealizeWindow = pScreen->UnrealizeWindow;    pScreen->UnrealizeWindow = compUnrealizeWindow;    cs->ClipNotify = pScreen->ClipNotify;    pScreen->ClipNotify = compClipNotify;    cs->MoveWindow = pScreen->MoveWindow;    pScreen->MoveWindow = compMoveWindow;    cs->ResizeWindow = pScreen->ResizeWindow;    pScreen->ResizeWindow = compResizeWindow;    cs->ChangeBorderWidth = pScreen->ChangeBorderWidth;    pScreen->ChangeBorderWidth = compChangeBorderWidth;    cs->ReparentWindow = pScreen->ReparentWindow;    pScreen->ReparentWindow = compReparentWindow;    cs->InstallColormap = pScreen->InstallColormap;    pScreen->InstallColormap = compInstallColormap;    cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes;    pScreen->ChangeWindowAttributes = compChangeWindowAttributes;    cs->BlockHandler = pScreen->BlockHandler;    pScreen->BlockHandler = compBlockHandler;    cs->CloseScreen = pScreen->CloseScreen;    pScreen->CloseScreen = compCloseScreen;    dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs);    RegisterRealChildHeadProc(CompositeRealChildHead);    return TRUE;}
Bool
Bool
compScreenInit (ScreenPtr pScreen)
compScreenInit
ScreenPtr pScreen
ScreenPtr
ScreenPtr
pScreen
pScreen
{    CompScreenPtr   cs;    if (GetCompScreen (pScreen))	return TRUE;    cs = (CompScreenPtr) xalloc (sizeof (CompScreenRec));    if (!cs)	return FALSE;    cs->damaged = FALSE;    cs->pOverlayWin = NULL;    cs->pOverlayClients = NULL;    cs->numAlternateVisuals = 0;    cs->alternateVisuals = NULL;    if (!compAddAlternateVisuals (pScreen, cs))    {	xfree (cs);	return FALSE;    }    cs->PositionWindow = pScreen->PositionWindow;    pScreen->PositionWindow = compPositionWindow;    cs->CopyWindow = pScreen->CopyWindow;    pScreen->CopyWindow = compCopyWindow;    cs->CreateWindow = pScreen->CreateWindow;    pScreen->CreateWindow = compCreateWindow;    cs->DestroyWindow = pScreen->DestroyWindow;    pScreen->DestroyWindow = compDestroyWindow;    cs->RealizeWindow = pScreen->RealizeWindow;    pScreen->RealizeWindow = compRealizeWindow;    cs->UnrealizeWindow = pScreen->UnrealizeWindow;    pScreen->UnrealizeWindow = compUnrealizeWindow;    cs->ClipNotify = pScreen->ClipNotify;    pScreen->ClipNotify = compClipNotify;    cs->MoveWindow = pScreen->MoveWindow;    pScreen->MoveWindow = compMoveWindow;    cs->ResizeWindow = pScreen->ResizeWindow;    pScreen->ResizeWindow = compResizeWindow;    cs->ChangeBorderWidth = pScreen->ChangeBorderWidth;    pScreen->ChangeBorderWidth = compChangeBorderWidth;    cs->ReparentWindow = pScreen->ReparentWindow;    pScreen->ReparentWindow = compReparentWindow;    cs->InstallColormap = pScreen->InstallColormap;    pScreen->InstallColormap = compInstallColormap;    cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes;    pScreen->ChangeWindowAttributes = compChangeWindowAttributes;    cs->BlockHandler = pScreen->BlockHandler;    pScreen->BlockHandler = compBlockHandler;    cs->CloseScreen = pScreen->CloseScreen;    pScreen->CloseScreen = compCloseScreen;    dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs);    RegisterRealChildHeadProc(CompositeRealChildHead);    return TRUE;}
CompScreenPtr   cs;
CompScreenPtr   cs;
CompScreenPtr
CompScreenPtr
cs
cs
if (GetCompScreen (pScreen))	return TRUE;
GetCompScreen (pScreen)
GetCompScreen
GetCompScreen
pScreen
pScreen
return TRUE;
TRUE
TRUE
cs = (CompScreenPtr) xalloc (sizeof (CompScreenRec));
cs = (CompScreenPtr) xalloc (sizeof (CompScreenRec))
cs
cs
(CompScreenPtr) xalloc (sizeof (CompScreenRec))
CompScreenPtr
CompScreenPtr
CompScreenPtr

xalloc (sizeof (CompScreenRec))
xalloc
xalloc
sizeof (CompScreenRec)
CompScreenRec
CompScreenRec
CompScreenRec

if (!cs)	return FALSE;
!cs
cs
cs
return FALSE;
FALSE
FALSE
cs->damaged = FALSE;
cs->damaged = FALSE
cs->damaged
cs
cs
damaged
FALSE
FALSE
cs->pOverlayWin = NULL;
cs->pOverlayWin = NULL
cs->pOverlayWin
cs
cs
pOverlayWin
NULL
NULL
cs->pOverlayClients = NULL;
cs->pOverlayClients = NULL
cs->pOverlayClients
cs
cs
pOverlayClients
NULL
NULL
cs->numAlternateVisuals = 0;
cs->numAlternateVisuals = 0
cs->numAlternateVisuals
cs
cs
numAlternateVisuals
0
cs->alternateVisuals = NULL;
cs->alternateVisuals = NULL
cs->alternateVisuals
cs
cs
alternateVisuals
NULL
NULL
if (!compAddAlternateVisuals (pScreen, cs))    {	xfree (cs);	return FALSE;    }
!compAddAlternateVisuals (pScreen, cs)
compAddAlternateVisuals (pScreen, cs)
compAddAlternateVisuals
compAddAlternateVisuals
pScreen
pScreen
cs
cs
{	xfree (cs);	return FALSE;    }
xfree (cs);
xfree (cs)
xfree
xfree
cs
cs
return FALSE;
FALSE
FALSE
cs->PositionWindow = pScreen->PositionWindow;
cs->PositionWindow = pScreen->PositionWindow
cs->PositionWindow
cs
cs
PositionWindow
pScreen->PositionWindow
pScreen
pScreen
PositionWindow
pScreen->PositionWindow = compPositionWindow;
pScreen->PositionWindow = compPositionWindow
pScreen->PositionWindow
pScreen
pScreen
PositionWindow
compPositionWindow
compPositionWindow
cs->CopyWindow = pScreen->CopyWindow;
cs->CopyWindow = pScreen->CopyWindow
cs->CopyWindow
cs
cs
CopyWindow
pScreen->CopyWindow
pScreen
pScreen
CopyWindow
pScreen->CopyWindow = compCopyWindow;
pScreen->CopyWindow = compCopyWindow
pScreen->CopyWindow
pScreen
pScreen
CopyWindow
compCopyWindow
compCopyWindow
cs->CreateWindow = pScreen->CreateWindow;
cs->CreateWindow = pScreen->CreateWindow
cs->CreateWindow
cs
cs
CreateWindow
pScreen->CreateWindow
pScreen
pScreen
CreateWindow
pScreen->CreateWindow = compCreateWindow;
pScreen->CreateWindow = compCreateWindow
pScreen->CreateWindow
pScreen
pScreen
CreateWindow
compCreateWindow
compCreateWindow
cs->DestroyWindow = pScreen->DestroyWindow;
cs->DestroyWindow = pScreen->DestroyWindow
cs->DestroyWindow
cs
cs
DestroyWindow
pScreen->DestroyWindow
pScreen
pScreen
DestroyWindow
pScreen->DestroyWindow = compDestroyWindow;
pScreen->DestroyWindow = compDestroyWindow
pScreen->DestroyWindow
pScreen
pScreen
DestroyWindow
compDestroyWindow
compDestroyWindow
cs->RealizeWindow = pScreen->RealizeWindow;
cs->RealizeWindow = pScreen->RealizeWindow
cs->RealizeWindow
cs
cs
RealizeWindow
pScreen->RealizeWindow
pScreen
pScreen
RealizeWindow
pScreen->RealizeWindow = compRealizeWindow;
pScreen->RealizeWindow = compRealizeWindow
pScreen->RealizeWindow
pScreen
pScreen
RealizeWindow
compRealizeWindow
compRealizeWindow
cs->UnrealizeWindow = pScreen->UnrealizeWindow;
cs->UnrealizeWindow = pScreen->UnrealizeWindow
cs->UnrealizeWindow
cs
cs
UnrealizeWindow
pScreen->UnrealizeWindow
pScreen
pScreen
UnrealizeWindow
pScreen->UnrealizeWindow = compUnrealizeWindow;
pScreen->UnrealizeWindow = compUnrealizeWindow
pScreen->UnrealizeWindow
pScreen
pScreen
UnrealizeWindow
compUnrealizeWindow
compUnrealizeWindow
cs->ClipNotify = pScreen->ClipNotify;
cs->ClipNotify = pScreen->ClipNotify
cs->ClipNotify
cs
cs
ClipNotify
pScreen->ClipNotify
pScreen
pScreen
ClipNotify
pScreen->ClipNotify = compClipNotify;
pScreen->ClipNotify = compClipNotify
pScreen->ClipNotify
pScreen
pScreen
ClipNotify
compClipNotify
compClipNotify
cs->MoveWindow = pScreen->MoveWindow;
cs->MoveWindow = pScreen->MoveWindow
cs->MoveWindow
cs
cs
MoveWindow
pScreen->MoveWindow
pScreen
pScreen
MoveWindow
pScreen->MoveWindow = compMoveWindow;
pScreen->MoveWindow = compMoveWindow
pScreen->MoveWindow
pScreen
pScreen
MoveWindow
compMoveWindow
compMoveWindow
cs->ResizeWindow = pScreen->ResizeWindow;
cs->ResizeWindow = pScreen->ResizeWindow
cs->ResizeWindow
cs
cs
ResizeWindow
pScreen->ResizeWindow
pScreen
pScreen
ResizeWindow
pScreen->ResizeWindow = compResizeWindow;
pScreen->ResizeWindow = compResizeWindow
pScreen->ResizeWindow
pScreen
pScreen
ResizeWindow
compResizeWindow
compResizeWindow
cs->ChangeBorderWidth = pScreen->ChangeBorderWidth;
cs->ChangeBorderWidth = pScreen->ChangeBorderWidth
cs->ChangeBorderWidth
cs
cs
ChangeBorderWidth
pScreen->ChangeBorderWidth
pScreen
pScreen
ChangeBorderWidth
pScreen->ChangeBorderWidth = compChangeBorderWidth;
pScreen->ChangeBorderWidth = compChangeBorderWidth
pScreen->ChangeBorderWidth
pScreen
pScreen
ChangeBorderWidth
compChangeBorderWidth
compChangeBorderWidth
cs->ReparentWindow = pScreen->ReparentWindow;
cs->ReparentWindow = pScreen->ReparentWindow
cs->ReparentWindow
cs
cs
ReparentWindow
pScreen->ReparentWindow
pScreen
pScreen
ReparentWindow
pScreen->ReparentWindow = compReparentWindow;
pScreen->ReparentWindow = compReparentWindow
pScreen->ReparentWindow
pScreen
pScreen
ReparentWindow
compReparentWindow
compReparentWindow
cs->InstallColormap = pScreen->InstallColormap;
cs->InstallColormap = pScreen->InstallColormap
cs->InstallColormap
cs
cs
InstallColormap
pScreen->InstallColormap
pScreen
pScreen
InstallColormap
pScreen->InstallColormap = compInstallColormap;
pScreen->InstallColormap = compInstallColormap
pScreen->InstallColormap
pScreen
pScreen
InstallColormap
compInstallColormap
compInstallColormap
cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes;
cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes
cs->ChangeWindowAttributes
cs
cs
ChangeWindowAttributes
pScreen->ChangeWindowAttributes
pScreen
pScreen
ChangeWindowAttributes
pScreen->ChangeWindowAttributes = compChangeWindowAttributes;
pScreen->ChangeWindowAttributes = compChangeWindowAttributes
pScreen->ChangeWindowAttributes
pScreen
pScreen
ChangeWindowAttributes
compChangeWindowAttributes
compChangeWindowAttributes
cs->BlockHandler = pScreen->BlockHandler;
cs->BlockHandler = pScreen->BlockHandler
cs->BlockHandler
cs
cs
BlockHandler
pScreen->BlockHandler
pScreen
pScreen
BlockHandler
pScreen->BlockHandler = compBlockHandler;
pScreen->BlockHandler = compBlockHandler
pScreen->BlockHandler
pScreen
pScreen
BlockHandler
compBlockHandler
compBlockHandler
cs->CloseScreen = pScreen->CloseScreen;
cs->CloseScreen = pScreen->CloseScreen
cs->CloseScreen
cs
cs
CloseScreen
pScreen->CloseScreen
pScreen
pScreen
CloseScreen
pScreen->CloseScreen = compCloseScreen;
pScreen->CloseScreen = compCloseScreen
pScreen->CloseScreen
pScreen
pScreen
CloseScreen
compCloseScreen
compCloseScreen
dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs);
dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs)
dixSetPrivate
dixSetPrivate
&pScreen->devPrivates
pScreen->devPrivates
pScreen
pScreen
devPrivates
CompScreenPrivateKey
CompScreenPrivateKey
cs
cs
RegisterRealChildHeadProc(CompositeRealChildHead);
RegisterRealChildHeadProc(CompositeRealChildHead);
RegisterRealChildHeadProc
RegisterRealChildHeadProc
(CompositeRealChildHead)
CompositeRealChildHead
CompositeRealChildHead
return TRUE;
TRUE
TRUE
-----joern-----
(151,112,0)
(96,125,0)
(65,2,0)
(94,33,0)
(134,232,0)
(94,11,0)
(212,3,0)
(29,208,0)
(230,8,0)
(45,206,0)
(63,193,0)
(72,193,0)
(234,193,0)
(154,189,0)
(206,60,0)
(211,208,0)
(164,229,0)
(13,181,0)
(235,126,0)
(30,143,0)
(94,8,0)
(188,207,0)
(166,79,0)
(200,181,0)
(25,50,0)
(57,193,0)
(189,239,0)
(106,169,0)
(185,220,0)
(36,193,0)
(79,166,0)
(113,5,0)
(203,193,0)
(32,94,0)
(14,208,0)
(19,181,0)
(84,136,0)
(75,193,0)
(163,29,0)
(94,179,0)
(233,14,0)
(46,208,0)
(179,123,0)
(174,126,0)
(94,81,0)
(170,39,0)
(62,150,0)
(205,221,0)
(244,178,0)
(178,86,0)
(29,38,0)
(9,85,0)
(85,193,0)
(4,0,0)
(5,208,0)
(202,181,0)
(3,225,0)
(24,178,0)
(84,46,0)
(21,102,0)
(38,10,0)
(220,207,0)
(66,107,0)
(216,217,0)
(129,193,0)
(58,217,0)
(7,213,0)
(100,53,0)
(226,203,0)
(225,193,0)
(208,193,0)
(43,208,0)
(105,20,0)
(127,200,0)
(94,194,0)
(243,166,0)
(209,85,0)
(61,208,0)
(22,211,0)
(77,13,0)
(133,2,0)
(200,145,0)
(101,208,0)
(236,31,0)
(10,181,0)
(169,181,0)
(218,143,0)
(71,243,0)
(220,181,0)
(98,116,0)
(112,151,0)
(35,8,0)
(145,193,0)
(128,193,0)
(78,102,0)
(172,240,0)
(19,75,0)
(194,91,0)
(242,43,0)
(94,136,0)
(140,84,0)
(94,39,0)
(125,181,0)
(142,208,0)
(103,226,0)
(46,63,0)
(94,169,0)
(102,21,0)
(141,179,0)
(94,220,0)
(151,193,0)
(180,91,0)
(94,29,0)
(245,144,0)
(41,37,0)
(169,204,0)
(8,208,0)
(15,11,0)
(69,193,0)
(201,202,0)
(42,180,0)
(84,176,0)
(122,69,0)
(94,92,0)
(111,181,0)
(112,181,0)
(56,92,0)
(236,208,0)
(39,181,0)
(84,211,0)
(94,193,0)
(79,181,0)
(208,232,0)
(33,50,0)
(107,208,0)
(195,200,0)
(184,176,0)
(246,193,0)
(177,193,0)
(38,193,0)
(198,193,0)
(109,81,0)
(26,41,0)
(214,13,0)
(20,186,0)
(150,225,0)
(194,208,0)
(165,150,0)
(186,135,0)
(97,194,0)
(153,36,0)
(120,189,0)
(94,14,0)
(158,135,0)
(192,36,0)
(10,38,0)
(132,39,0)
(91,180,0)
(149,46,0)
(73,53,0)
(140,94,0)
(211,82,0)
(57,126,0)
(232,100,0)
(13,214,0)
(12,13,0)
(33,181,0)
(137,194,0)
(68,79,0)
(84,179,0)
(116,145,0)
(144,181,0)
(23,112,0)
(186,193,0)
(41,181,0)
(81,231,0)
(124,29,0)
(94,142,0)
(95,139,0)
(94,189,0)
(27,84,0)
(180,181,0)
(94,116,0)
(221,193,0)
(187,43,0)
(227,55,0)
(229,119,0)
(81,181,0)
(49,75,0)
(156,131,0)
(239,193,0)
(0,246,0)
(28,33,0)
(160,82,0)
(224,204,0)
(82,193,0)
(52,92,0)
(102,181,0)
(146,222,0)
(34,11,0)
(90,63,0)
(126,181,0)
(92,69,0)
(178,181,0)
(228,0,0)
(204,193,0)
(89,216,0)
(199,76,0)
(136,139,0)
(166,193,0)
(210,19,0)
(94,30,0)
(94,46,0)
(125,72,0)
(94,107,0)
(206,181,0)
(51,199,0)
(94,243,0)
(143,193,0)
(3,181,0)
(216,181,0)
(229,181,0)
(18,169,0)
(191,243,0)
(60,193,0)
(43,151,0)
(50,193,0)
(168,193,0)
(147,55,0)
(222,193,0)
(54,123,0)
(240,193,0)
(17,231,0)
(115,10,0)
(94,150,0)
(232,208,0)
(94,5,0)
(152,72,0)
(39,129,0)
(94,211,0)
(232,134,0)
(53,100,0)
(239,2,0)
(64,3,0)
(223,199,0)
(2,239,0)
(176,222,0)
(94,0,0)
(94,43,0)
(197,30,0)
(94,111,0)
(183,116,0)
(150,208,0)
(213,119,0)
(198,144,0)
(14,57,0)
(76,193,0)
(207,193,0)
(5,198,0)
(142,21,0)
(231,193,0)
(116,208,0)
(111,240,0)
(213,208,0)
(30,181,0)
(99,9,0)
(92,181,0)
(16,79,0)
(94,20,0)
(139,193,0)
(8,37,0)
(74,46,0)
(70,179,0)
(153,55,0)
(159,206,0)
(114,236,0)
(130,76,0)
(199,181,0)
(83,229,0)
(161,41,0)
(36,208,0)
(100,232,0)
(215,14,0)
(226,181,0)
(155,111,0)
(94,176,0)
(118,125,0)
(175,101,0)
(104,30,0)
(243,208,0)
(11,203,0)
(157,9,0)
(94,125,0)
(1,136,0)
(123,193,0)
(145,200,0)
(179,208,0)
(60,206,0)
(119,229,0)
(88,129,0)
(94,9,0)
(203,226,0)
(40,112,0)
(91,193,0)
(59,213,0)
(107,60,0)
(9,181,0)
(108,102,0)
(94,213,0)
(13,208,0)
(135,186,0)
(144,198,0)
(2,181,0)
(140,241,0)
(162,20,0)
(55,181,0)
(121,211,0)
(87,144,0)
(190,142,0)
(36,153,0)
(182,136,0)
(140,131,0)
(20,208,0)
(94,19,0)
(37,193,0)
(48,10,0)
(126,57,0)
(80,81,0)
(237,19,0)
(238,241,0)
(196,107,0)
(37,41,0)
(117,33,0)
(21,193,0)
(44,86,0)
(148,226,0)
(6,5,0)
(86,193,0)
(11,208,0)
(84,31,0)
(189,208,0)
(0,181,0)
(47,216,0)
(136,208,0)
(167,142,0)
(119,193,0)
(94,199,0)
(173,220,0)
(55,153,0)
(176,208,0)
(94,178,0)
(171,36,0)
(94,216,0)
(138,135,0)
(219,246,0)
(67,176,0)
(93,111,0)
(135,181,0)
(225,3,0)
(217,193,0)
(110,180,0)
(179,208,1)
(69,122,1)
(125,181,1)
(94,199,1)
(126,174,1)
(20,208,1)
(182,222,1)
(94,211,1)
(151,112,1)
(95,136,1)
(140,241,1)
(178,24,1)
(171,153,1)
(233,217,1)
(46,208,1)
(43,242,1)
(94,5,1)
(42,194,1)
(216,89,1)
(102,108,1)
(88,39,1)
(94,81,1)
(115,29,1)
(48,115,1)
(94,11,1)
(94,125,1)
(142,208,1)
(29,163,1)
(140,94,1)
(94,116,1)
(223,51,1)
(142,167,1)
(44,178,1)
(34,15,1)
(161,26,1)
(163,124,1)
(153,55,1)
(0,228,1)
(112,23,1)
(7,246,1)
(49,19,1)
(232,134,1)
(169,18,1)
(213,59,1)
(205,36,1)
(91,180,1)
(170,166,1)
(4,239,1)
(173,57,1)
(154,85,1)
(61,202,1)
(68,243,1)
(27,236,1)
(141,63,1)
(25,33,1)
(102,181,1)
(94,33,1)
(94,0,1)
(210,91,1)
(124,214,1)
(149,82,1)
(0,181,1)
(57,126,1)
(226,103,1)
(94,179,1)
(54,179,1)
(213,208,1)
(208,232,1)
(94,176,1)
(94,43,1)
(89,47,1)
(29,208,1)
(220,185,1)
(150,165,1)
(123,54,1)
(192,171,1)
(130,199,1)
(101,208,1)
(94,136,1)
(155,93,1)
(224,169,1)
(55,181,1)
(209,9,1)
(108,78,1)
(84,27,1)
(94,107,1)
(10,48,1)
(45,159,1)
(101,175,1)
(200,181,1)
(94,20,1)
(32,221,1)
(94,8,1)
(135,158,1)
(84,46,1)
(60,206,1)
(94,32,1)
(83,164,1)
(17,81,1)
(117,145,1)
(162,143,1)
(63,90,1)
(146,176,1)
(217,58,1)
(169,181,1)
(158,138,1)
(75,49,1)
(14,215,1)
(30,104,1)
(64,150,1)
(199,181,1)
(36,208,1)
(36,153,1)
(126,181,1)
(30,181,1)
(176,67,1)
(207,188,1)
(94,46,1)
(199,223,1)
(11,34,1)
(105,162,1)
(12,77,1)
(94,39,1)
(18,106,1)
(33,28,1)
(121,101,1)
(236,114,1)
(143,218,1)
(2,133,1)
(33,181,1)
(140,131,1)
(145,200,1)
(14,208,1)
(187,76,1)
(19,237,1)
(160,211,1)
(13,181,1)
(242,187,1)
(225,3,1)
(94,220,1)
(228,4,1)
(119,229,1)
(107,66,1)
(144,87,1)
(125,96,1)
(226,181,1)
(245,5,1)
(79,181,1)
(20,105,1)
(92,181,1)
(2,181,1)
(39,181,1)
(185,173,1)
(94,29,1)
(94,194,1)
(53,73,1)
(218,30,1)
(132,170,1)
(43,208,1)
(211,22,1)
(94,189,1)
(87,245,1)
(51,21,1)
(78,142,1)
(104,197,1)
(195,116,1)
(237,210,1)
(120,154,1)
(66,196,1)
(103,148,1)
(23,40,1)
(36,192,1)
(46,74,1)
(150,208,1)
(16,68,1)
(194,208,1)
(28,117,1)
(107,208,1)
(9,181,1)
(127,195,1)
(50,25,1)
(35,231,1)
(15,69,1)
(236,208,1)
(204,224,1)
(86,44,1)
(239,2,1)
(157,186,1)
(84,211,1)
(137,207,1)
(211,208,1)
(215,233,1)
(147,227,1)
(58,216,1)
(93,203,1)
(206,45,1)
(114,214,1)
(241,238,1)
(74,149,1)
(198,144,1)
(230,35,1)
(136,208,1)
(111,181,1)
(39,132,1)
(84,179,1)
(144,181,1)
(166,79,1)
(94,142,1)
(55,147,1)
(197,37,1)
(140,84,1)
(188,220,1)
(3,212,1)
(189,120,1)
(56,60,1)
(26,8,1)
(8,230,1)
(81,109,1)
(94,19,1)
(203,226,1)
(81,181,1)
(180,181,1)
(94,169,1)
(84,136,1)
(41,181,1)
(196,50,1)
(159,107,1)
(184,123,1)
(97,137,1)
(52,56,1)
(67,184,1)
(106,38,1)
(243,208,1)
(94,150,1)
(109,80,1)
(94,14,1)
(94,30,1)
(122,92,1)
(72,152,1)
(240,172,1)
(3,181,1)
(47,119,1)
(152,125,1)
(94,9,1)
(5,208,1)
(94,216,1)
(77,139,1)
(94,178,1)
(179,70,1)
(10,181,1)
(133,65,1)
(22,121,1)
(94,92,1)
(190,240,1)
(220,181,1)
(24,244,1)
(148,11,1)
(243,191,1)
(100,53,1)
(135,181,1)
(13,12,1)
(85,209,1)
(21,102,1)
(221,205,1)
(202,201,1)
(38,10,1)
(6,113,1)
(191,71,1)
(76,130,1)
(96,118,1)
(9,99,1)
(156,202,1)
(118,225,1)
(174,235,1)
(71,204,1)
(206,181,1)
(139,95,1)
(70,141,1)
(194,97,1)
(13,208,1)
(65,189,1)
(136,1,1)
(116,208,1)
(19,181,1)
(111,155,1)
(73,61,1)
(11,208,1)
(37,41,1)
(219,0,1)
(131,156,1)
(214,13,1)
(176,208,1)
(216,181,1)
(212,64,1)
(116,183,1)
(189,208,1)
(113,75,1)
(229,181,1)
(164,213,1)
(94,243,1)
(84,176,1)
(62,86,1)
(92,52,1)
(231,17,1)
(129,88,1)
(5,6,1)
(227,72,1)
(1,182,1)
(40,43,1)
(175,208,1)
(232,100,1)
(79,16,1)
(235,14,1)
(94,213,1)
(94,111,1)
(238,101,1)
(112,181,1)
(138,20,1)
(202,181,1)
(180,110,1)
(244,198,1)
(80,151,1)
(82,160,1)
(8,208,1)
(59,7,1)
(98,129,1)
(110,42,1)
(246,219,1)
(99,157,1)
(172,111,1)
(178,181,1)
(41,161,1)
(229,83,1)
(90,46,1)
(183,98,1)
(186,135,1)
(222,146,1)
(165,62,1)
(167,190,1)
(200,127,1)
(198,214,2)
(185,214,2)
(67,101,2)
(96,214,2)
(237,214,2)
(120,214,2)
(135,214,2)
(203,214,2)
(189,214,2)
(246,214,2)
(171,214,2)
(140,94,2)
(232,202,2)
(153,55,2)
(94,14,2)
(153,214,2)
(40,214,2)
(87,214,2)
(14,208,2)
(43,208,2)
(98,214,2)
(94,189,2)
(21,102,2)
(150,214,2)
(213,214,2)
(65,214,2)
(84,136,2)
(148,214,2)
(88,214,2)
(6,214,2)
(163,214,2)
(35,214,2)
(94,5,2)
(109,214,2)
(55,181,2)
(192,214,2)
(92,214,2)
(66,214,2)
(54,101,2)
(102,181,2)
(103,214,2)
(145,200,2)
(23,214,2)
(127,214,2)
(81,214,2)
(164,214,2)
(152,214,2)
(64,214,2)
(223,214,2)
(183,214,2)
(90,101,2)
(179,101,2)
(52,214,2)
(178,214,2)
(186,135,2)
(226,214,2)
(208,202,2)
(151,214,2)
(220,181,2)
(101,202,2)
(116,208,2)
(112,181,2)
(25,214,2)
(217,214,2)
(178,181,2)
(13,181,2)
(71,214,2)
(1,101,2)
(0,214,2)
(9,181,2)
(226,181,2)
(182,101,2)
(229,181,2)
(218,214,2)
(36,208,2)
(42,214,2)
(38,10,2)
(94,0,2)
(57,214,2)
(200,181,2)
(94,111,2)
(82,101,2)
(21,214,2)
(154,214,2)
(56,214,2)
(176,208,2)
(94,179,2)
(197,214,2)
(116,214,2)
(45,214,2)
(169,181,2)
(170,214,2)
(194,214,2)
(22,101,2)
(94,20,2)
(243,208,2)
(94,39,2)
(140,131,2)
(130,214,2)
(49,214,2)
(20,214,2)
(145,214,2)
(2,181,2)
(125,181,2)
(156,202,2)
(94,46,2)
(29,214,2)
(59,214,2)
(94,30,2)
(209,214,2)
(53,202,2)
(11,208,2)
(33,181,2)
(213,208,2)
(94,220,2)
(79,214,2)
(132,214,2)
(172,214,2)
(111,181,2)
(142,208,2)
(189,208,2)
(8,214,2)
(219,214,2)
(39,214,2)
(205,214,2)
(13,101,2)
(60,206,2)
(15,214,2)
(169,214,2)
(232,100,2)
(107,214,2)
(19,214,2)
(84,211,2)
(84,179,2)
(26,214,2)
(91,180,2)
(94,33,2)
(140,84,2)
(75,214,2)
(243,214,2)
(94,92,2)
(160,101,2)
(215,214,2)
(93,214,2)
(94,211,2)
(61,202,2)
(81,181,2)
(101,208,2)
(51,214,2)
(214,101,2)
(162,214,2)
(149,101,2)
(221,214,2)
(94,213,2)
(83,214,2)
(37,214,2)
(235,214,2)
(4,214,2)
(135,181,2)
(55,214,2)
(239,214,2)
(131,202,2)
(50,214,2)
(203,226,2)
(84,176,2)
(165,214,2)
(244,214,2)
(9,214,2)
(220,214,2)
(206,181,2)
(60,214,2)
(125,214,2)
(123,101,2)
(94,107,2)
(94,199,2)
(19,181,2)
(36,153,2)
(10,214,2)
(94,9,2)
(11,214,2)
(94,29,2)
(239,2,2)
(110,214,2)
(227,214,2)
(206,214,2)
(100,53,2)
(105,214,2)
(3,181,2)
(32,214,2)
(241,101,2)
(95,101,2)
(97,214,2)
(230,214,2)
(229,214,2)
(108,214,2)
(94,150,2)
(5,208,2)
(34,214,2)
(10,181,2)
(136,101,2)
(12,101,2)
(174,214,2)
(74,101,2)
(94,116,2)
(242,214,2)
(222,101,2)
(46,208,2)
(77,101,2)
(99,214,2)
(0,181,2)
(199,214,2)
(63,101,2)
(28,214,2)
(94,19,2)
(30,214,2)
(62,214,2)
(188,214,2)
(24,214,2)
(84,214,2)
(7,214,2)
(102,214,2)
(38,214,2)
(30,181,2)
(94,43,2)
(69,214,2)
(195,214,2)
(48,214,2)
(68,214,2)
(180,214,2)
(2,214,2)
(41,181,2)
(238,101,2)
(198,144,2)
(126,181,2)
(94,142,2)
(146,101,2)
(180,181,2)
(225,3,2)
(13,208,2)
(86,214,2)
(3,214,2)
(236,214,2)
(216,214,2)
(85,214,2)
(122,214,2)
(100,202,2)
(94,178,2)
(117,214,2)
(179,208,2)
(14,214,2)
(151,112,2)
(41,214,2)
(211,208,2)
(29,208,2)
(39,181,2)
(167,214,2)
(114,214,2)
(80,214,2)
(144,181,2)
(158,214,2)
(191,214,2)
(115,214,2)
(196,214,2)
(94,243,2)
(111,214,2)
(121,101,2)
(232,134,2)
(161,214,2)
(79,181,2)
(18,214,2)
(142,214,2)
(233,214,2)
(231,214,2)
(118,214,2)
(91,214,2)
(240,214,2)
(94,11,2)
(106,214,2)
(94,169,2)
(27,214,2)
(94,216,2)
(210,214,2)
(70,101,2)
(73,202,2)
(236,208,2)
(124,214,2)
(92,181,2)
(166,79,2)
(58,214,2)
(57,126,2)
(76,214,2)
(212,214,2)
(20,208,2)
(173,214,2)
(5,214,2)
(150,208,2)
(84,46,2)
(16,214,2)
(113,214,2)
(199,181,2)
(245,214,2)
(138,214,2)
(224,214,2)
(155,214,2)
(36,214,2)
(202,181,2)
(94,136,2)
(143,214,2)
(94,176,2)
(225,214,2)
(214,13,2)
(94,125,2)
(43,214,2)
(187,214,2)
(89,214,2)
(208,232,2)
(94,214,2)
(126,214,2)
(136,208,2)
(144,214,2)
(175,202,2)
(139,101,2)
(200,214,2)
(157,214,2)
(129,214,2)
(8,208,2)
(47,214,2)
(72,214,2)
(190,214,2)
(119,229,2)
(159,214,2)
(211,101,2)
(94,8,2)
(78,214,2)
(141,101,2)
(140,241,2)
(119,214,2)
(186,214,2)
(46,101,2)
(194,208,2)
(112,214,2)
(184,101,2)
(94,194,2)
(137,214,2)
(133,214,2)
(94,81,2)
(37,41,2)
(44,214,2)
(228,214,2)
(104,214,2)
(107,208,2)
(17,214,2)
(33,214,2)
(204,214,2)
(207,214,2)
(147,214,2)
(166,214,2)
(216,181,2)
(176,101,2)
-----------------------------------
(0,pScreen->ChangeBorderWidth)
(1,alternateVisuals)
(2,pScreen->ChangeBorderWidth)
(3,pScreen->CloseScreen)
(4,pScreen)
(5,cs->BlockHandler)
(6,BlockHandler)
(7,cs)
(8,cs->MoveWindow)
(9,pScreen->ResizeWindow)
(10,pScreen->PositionWindow)
(11,cs->RealizeWindow)
(12,cs)
(13,compAddAlternateVisuals (pScreen, cs)
(14,cs->InstallColormap)
(15,cs)
(16,CopyWindow)
(17,compClipNotify)
(18,PositionWindow)
(19,pScreen->ChangeWindowAttributes)
(20,cs->ResizeWindow)
(21,cs->UnrealizeWindow = pScreen->UnrealizeWindow)
(22,damaged)
(23,ClipNotify)
(24,BlockHandler)
(25,compCreateWindow)
(26,pScreen)
(27,FALSE)
(28,CreateWindow)
(29,cs->PositionWindow)
(30,pScreen->MoveWindow)
(31,)
(32,TRUE)
(33,pScreen->CreateWindow)
(34,RealizeWindow)
(35,cs)
(36,dixSetPrivate(&pScreen->devPrivates, CompScreenPrivateKey, cs)
(37,cs->MoveWindow = pScreen->MoveWindow)
(38,cs->PositionWindow = pScreen->PositionWindow)
(39,pScreen->CopyWindow)
(40,pScreen)
(41,pScreen->MoveWindow)
(42,pScreen)
(43,cs->ClipNotify)
(44,compBlockHandler)
(45,DestroyWindow)
(46,cs->pOverlayWin)
(47,pScreen)
(48,PositionWindow)
(49,compChangeWindowAttributes)
(50,pScreen->CreateWindow = compCreateWindow)
(51,pScreen)
(52,DestroyWindow)
(53,sizeof (CompScreenRec)
(54,NULL)
(55,pScreen->devPrivates)
(56,pScreen)
(57,cs->InstallColormap = pScreen->InstallColormap)
(58,compReparentWindow)
(59,ReparentWindow)
(60,cs->DestroyWindow = pScreen->DestroyWindow)
(61,cs)
(62,cs)
(63,cs->pOverlayWin = NULL)
(64,pScreen)
(65,pScreen)
(66,DestroyWindow)
(67,numAlternateVisuals)
(68,pScreen)
(69,pScreen->DestroyWindow = compDestroyWindow)
(70,pOverlayClients)
(71,cs)
(72,pScreen->CloseScreen = compCloseScreen)
(73,CompScreenRec)
(74,pOverlayWin)
(75,pScreen->ChangeWindowAttributes = compChangeWindowAttributes)
(76,pScreen->UnrealizeWindow = compUnrealizeWindow)
(77,pScreen)
(78,pScreen)
(79,pScreen->CopyWindow)
(80,pScreen)
(81,pScreen->ClipNotify)
(82,cs->damaged = FALSE)
(83,ReparentWindow)
(84,return FALSE;)
(85,pScreen->ResizeWindow = compResizeWindow)
(86,pScreen->BlockHandler = compBlockHandler)
(87,BlockHandler)
(88,compCopyWindow)
(89,ReparentWindow)
(90,NULL)
(91,cs->ChangeWindowAttributes = pScreen->ChangeWindowAttributes)
(92,pScreen->DestroyWindow)
(93,pScreen)
(94,return TRUE;)
(95,NULL)
(96,CloseScreen)
(97,ChangeWindowAttributes)
(98,cs)
(99,ResizeWindow)
(100,xalloc (sizeof (CompScreenRec)
(101,!cs)
(102,pScreen->UnrealizeWindow)
(103,RealizeWindow)
(104,MoveWindow)
(105,ResizeWindow)
(106,pScreen)
(107,cs->DestroyWindow)
(108,UnrealizeWindow)
(109,ClipNotify)
(110,ChangeWindowAttributes)
(111,pScreen->RealizeWindow)
(112,pScreen->ClipNotify)
(113,cs)
(114,cs)
(115,pScreen)
(116,cs->CreateWindow)
(117,pScreen)
(118,pScreen)
(119,cs->ReparentWindow = pScreen->ReparentWindow)
(120,ChangeBorderWidth)
(121,cs)
(122,compDestroyWindow)
(123,cs->pOverlayClients = NULL)
(124,cs)
(125,pScreen->CloseScreen)
(126,pScreen->InstallColormap)
(127,CreateWindow)
(128,cs)
(129,pScreen->CopyWindow = compCopyWindow)
(130,compUnrealizeWindow)
(131,return TRUE;)
(132,CopyWindow)
(133,ChangeBorderWidth)
(134,CompScreenPtr)
(135,pScreen->ResizeWindow)
(136,cs->alternateVisuals)
(137,cs)
(138,pScreen)
(139,cs->alternateVisuals = NULL)
(140,RET)
(141,cs)
(142,cs->UnrealizeWindow)
(143,pScreen->MoveWindow = compMoveWindow)
(144,pScreen->BlockHandler)
(145,cs->CreateWindow = pScreen->CreateWindow)
(146,0)
(147,devPrivates)
(148,pScreen)
(149,cs)
(150,cs->CloseScreen)
(151,cs->ClipNotify = pScreen->ClipNotify)
(152,compCloseScreen)
(153,&pScreen->devPrivates)
(154,cs)
(155,RealizeWindow)
(156,TRUE)
(157,pScreen)
(158,ResizeWindow)
(159,pScreen)
(160,FALSE)
(161,MoveWindow)
(162,cs)
(163,PositionWindow)
(164,pScreen)
(165,CloseScreen)
(166,cs->CopyWindow = pScreen->CopyWindow)
(167,UnrealizeWindow)
(168,if (!cs)
(169,pScreen->PositionWindow)
(170,pScreen)
(171,CompScreenPrivateKey)
(172,compRealizeWindow)
(173,pScreen)
(174,InstallColormap)
(175,cs)
(176,cs->numAlternateVisuals)
(177,if (GetCompScreen (pScreen)
(178,pScreen->BlockHandler)
(179,cs->pOverlayClients)
(180,pScreen->ChangeWindowAttributes)
(181,ScreenPtr pScreen)
(182,cs)
(183,CreateWindow)
(184,cs)
(185,InstallColormap)
(186,cs->ResizeWindow = pScreen->ResizeWindow)
(187,cs)
(188,compInstallColormap)
(189,cs->ChangeBorderWidth)
(190,cs)
(191,CopyWindow)
(192,cs)
(193,)
(194,cs->ChangeWindowAttributes)
(195,pScreen)
(196,cs)
(197,pScreen)
(198,cs->BlockHandler = pScreen->BlockHandler)
(199,pScreen->UnrealizeWindow)
(200,pScreen->CreateWindow)
(201,pScreen)
(202,GetCompScreen (pScreen)
(203,cs->RealizeWindow = pScreen->RealizeWindow)
(204,pScreen->PositionWindow = compPositionWindow)
(205,CompositeRealChildHead)
(206,pScreen->DestroyWindow)
(207,pScreen->InstallColormap = compInstallColormap)
(208,cs = (CompScreenPtr)
(209,compResizeWindow)
(210,pScreen)
(211,cs->damaged)
(212,CloseScreen)
(213,cs->ReparentWindow)
(214,!compAddAlternateVisuals (pScreen, cs)
(215,InstallColormap)
(216,pScreen->ReparentWindow)
(217,pScreen->ReparentWindow = compReparentWindow)
(218,compMoveWindow)
(219,compChangeBorderWidth)
(220,pScreen->InstallColormap)
(221,RegisterRealChildHeadProc(CompositeRealChildHead)
(222,cs->numAlternateVisuals = 0)
(223,UnrealizeWindow)
(224,compPositionWindow)
(225,cs->CloseScreen = pScreen->CloseScreen)
(226,pScreen->RealizeWindow)
(227,pScreen)
(228,ChangeBorderWidth)
(229,pScreen->ReparentWindow)
(230,MoveWindow)
(231,pScreen->ClipNotify = compClipNotify)
(232,(CompScreenPtr)
(233,cs)
(234,if (!compAddAlternateVisuals (pScreen, cs)
(235,pScreen)
(236,xfree (cs)
(237,ChangeWindowAttributes)
(238,FALSE)
(239,cs->ChangeBorderWidth = pScreen->ChangeBorderWidth)
(240,pScreen->RealizeWindow = compRealizeWindow)
(241,return FALSE;)
(242,ClipNotify)
(243,cs->CopyWindow)
(244,pScreen)
(245,pScreen)
(246,pScreen->ChangeBorderWidth = compChangeBorderWidth)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^