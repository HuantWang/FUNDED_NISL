-----label-----
1
-----code-----
static void release_request(struct client *client,
			    struct client_resource *resource)
{
	struct request *request =
		container_of(resource, struct request, resource);

	fw_send_response(client->device->card, request->request,
			 RCODE_CONFLICT_ERROR);
	kfree(request);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
18,19
19,20
20,21
22,23
23,24
24,25
25,26
25,27
25,28
25,29
26,27
28,29
28,30
29,30
29,31
30,31
34,35
34,36
35,36
38,39
40,41
41,42
41,43
42,43
44,45
45,46
-----nextToken-----
2,4,7,9,10,13,15,16,21,27,31,32,33,36,37,39,43,46
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;ProblemStatement;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;
-----ast_node-----
static void release_request(struct client *client,			    struct client_resource *resource){	struct request *request =		container_of(resource, struct request, resource);	fw_send_response(client->device->card, request->request,			 RCODE_CONFLICT_ERROR);	kfree(request);}
static void
release_request(struct client *client,			    struct client_resource *resource)
release_request
struct client *client
struct client
client
*client
*
client
struct client_resource *resource
struct client_resource
client_resource
*resource
*
resource
{	struct request *request =		container_of(resource, struct request, resource);	fw_send_response(client->device->card, request->request,			 RCODE_CONFLICT_ERROR);	kfree(request);}
struct request
struct request
struct request
request
t
*request =		container_of(resource, struct request, resource);
fw_send_response(client->device->card, request->request,			 RCODE_CONFLICT_ERROR);
fw_send_response(client->device->card, request->request,			 RCODE_CONFLICT_ERROR)
fw_send_response
fw_send_response
client->device->card
client->device
client
client
device
card
request->request
request
request
request
RCODE_CONFLICT_ERROR
RCODE_CONFLICT_ERROR
kfree(request);
kfree(request);
kfree
kfree
(request)
request
request
-----joern-----
(5,14,0)
(10,8,0)
(0,8,0)
(2,5,0)
(13,8,0)
(7,12,0)
(4,13,0)
(9,7,0)
(8,10,0)
(6,10,0)
(3,10,0)
(8,12,0)
(8,13,0)
(5,13,0)
(1,5,0)
(13,5,0)
(5,14,1)
(8,10,1)
(3,13,1)
(4,5,1)
(6,3,1)
(5,1,1)
(8,0,1)
(11,7,1)
(9,8,1)
(1,2,1)
(8,13,1)
(10,6,1)
(7,9,1)
(13,4,1)
(0,10,1)
(13,5,1)
(8,10,2)
(5,14,2)
(13,5,2)
(8,13,2)
-----------------------------------
(0,RCODE_CONFLICT_ERROR)
(1,device)
(2,client)
(3,request)
(4,card)
(5,client->device)
(6,request)
(7,kfree(request)
(8,fw_send_response(client->device->card, request->request,\n\\n\\t\\t\\t RCODE_CONFLICT_ERROR)
(9,request)
(10,request->request)
(11,RET)
(12,)
(13,client->device->card)
(14,struct client *client)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^