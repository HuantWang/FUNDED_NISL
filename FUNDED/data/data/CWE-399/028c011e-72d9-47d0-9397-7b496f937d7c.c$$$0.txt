-----label-----
1
-----code-----
static void acpi_scan_bus_device_check(acpi_handle handle, u32 ost_source)
{
	struct acpi_device *device = NULL;
	u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
	int error;

	mutex_lock(&acpi_scan_lock);
	lock_device_hotplug();

	acpi_bus_get_device(handle, &device);
	if (device) {
		dev_warn(&device->dev, "Attempt to re-insert\n");
		goto out;
	}
	acpi_evaluate_hotplug_ost(handle, ost_source,
				  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL);
	error = acpi_bus_scan(handle);
	if (error) {
		acpi_handle_warn(handle, "Namespace scan failure\n");
		goto out;
	}
	error = acpi_bus_get_device(handle, &device);
	if (error) {
		acpi_handle_warn(handle, "Missing device node object\n");
		goto out;
	}
	ost_code = ACPI_OST_SC_SUCCESS;
	if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)
		kobject_uevent(&device->dev.kobj, KOBJ_ONLINE);

 out:
	unlock_device_hotplug();
	acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL);
	mutex_unlock(&acpi_scan_lock);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
10,11
10,12
11,12
13,14
15,16
15,17
15,18
15,19
15,20
15,21
15,22
15,23
15,24
15,25
15,26
15,27
15,28
15,29
15,30
15,31
15,32
16,17
17,18
17,19
18,19
20,21
20,22
20,23
23,24
24,25
26,27
27,28
27,29
28,29
30,31
30,32
32,33
33,34
35,36
36,37
36,38
38,39
40,41
41,42
41,43
42,43
44,45
45,46
45,47
48,49
49,50
50,51
52,53
53,54
53,55
53,56
54,55
56,57
58,59
59,60
61,62
61,63
62,63
64,65
64,66
65,66
66,67
66,68
66,69
67,68
69,70
70,71
70,72
71,72
75,76
77,78
78,79
78,80
78,81
78,82
78,83
79,80
81,82
83,84
85,86
87,88
89,90
90,91
90,92
91,92
93,94
93,95
94,95
96,97
98,99
98,100
99,100
101,102
101,103
102,103
103,104
103,105
103,106
104,105
106,107
109,110
111,112
112,113
112,114
113,114
115,116
115,117
115,118
116,117
118,119
120,121
121,122
123,124
123,125
124,125
126,127
126,128
127,128
128,129
128,130
128,131
129,130
131,132
134,135
136,137
137,138
137,139
138,139
140,141
142,143
142,144
143,144
143,145
144,145
144,146
145,146
148,149
148,150
149,150
149,151
150,151
150,152
151,152
151,153
152,153
157,158
159,160
160,161
160,162
160,163
161,162
163,164
164,165
164,166
165,166
165,167
166,167
170,171
172,173
172,174
174,175
175,176
176,177
178,179
179,180
179,181
179,182
179,183
179,184
180,181
182,183
184,185
186,187
188,189
190,191
191,192
191,193
192,193
194,195
195,196
-----nextToken-----
2,4,7,9,12,14,19,21,22,25,29,31,34,37,39,43,46,47,51,55,57,60,63,68,72,73,74,76,80,82,84,86,88,92,95,97,100,105,107,108,110,114,117,119,122,125,130,132,133,135,139,141,146,147,153,154,155,156,158,162,167,168,169,171,173,177,181,183,185,187,189,193,196
-----computeFrom-----
90,91
90,92
112,113
112,114
137,138
137,139
143,144
143,145
148,149
148,150
-----guardedBy-----
153,167
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;ReferenceOperator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;GotoStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void acpi_scan_bus_device_check(acpi_handle handle, u32 ost_source){	struct acpi_device *device = NULL;	u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;	int error;	mutex_lock(&acpi_scan_lock);	lock_device_hotplug();	acpi_bus_get_device(handle, &device);	if (device) {		dev_warn(&device->dev, "Attempt to re-insert\n");		goto out;	}	acpi_evaluate_hotplug_ost(handle, ost_source,				  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL);	error = acpi_bus_scan(handle);	if (error) {		acpi_handle_warn(handle, "Namespace scan failure\n");		goto out;	}	error = acpi_bus_get_device(handle, &device);	if (error) {		acpi_handle_warn(handle, "Missing device node object\n");		goto out;	}	ost_code = ACPI_OST_SC_SUCCESS;	if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)		kobject_uevent(&device->dev.kobj, KOBJ_ONLINE); out:	unlock_device_hotplug();	acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL);	mutex_unlock(&acpi_scan_lock);}
static void
acpi_scan_bus_device_check(acpi_handle handle, u32 ost_source)
acpi_scan_bus_device_check
acpi_handle handle
acpi_handle
acpi_handle
handle
handle
u32 ost_source
u32
u32
ost_source
ost_source
{	struct acpi_device *device = NULL;	u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;	int error;	mutex_lock(&acpi_scan_lock);	lock_device_hotplug();	acpi_bus_get_device(handle, &device);	if (device) {		dev_warn(&device->dev, "Attempt to re-insert\n");		goto out;	}	acpi_evaluate_hotplug_ost(handle, ost_source,				  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL);	error = acpi_bus_scan(handle);	if (error) {		acpi_handle_warn(handle, "Namespace scan failure\n");		goto out;	}	error = acpi_bus_get_device(handle, &device);	if (error) {		acpi_handle_warn(handle, "Missing device node object\n");		goto out;	}	ost_code = ACPI_OST_SC_SUCCESS;	if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)		kobject_uevent(&device->dev.kobj, KOBJ_ONLINE); out:	unlock_device_hotplug();	acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL);	mutex_unlock(&acpi_scan_lock);}
struct acpi_device *device = NULL;
struct acpi_device *device = NULL;
struct acpi_device
acpi_device
*device = NULL
*
device
= NULL
NULL
NULL
u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
u32
u32
ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE
ost_code
= ACPI_OST_SC_NON_SPECIFIC_FAILURE
ACPI_OST_SC_NON_SPECIFIC_FAILURE
ACPI_OST_SC_NON_SPECIFIC_FAILURE
int error;
int error;
int
error
error
mutex_lock(&acpi_scan_lock);
mutex_lock(&acpi_scan_lock);
mutex_lock
mutex_lock
(&acpi_scan_lock)
&acpi_scan_lock
&
acpi_scan_lock
lock_device_hotplug();
lock_device_hotplug()
lock_device_hotplug
lock_device_hotplug
acpi_bus_get_device(handle, &device);
acpi_bus_get_device(handle, &device)
acpi_bus_get_device
acpi_bus_get_device
handle
handle
&device
device
device
if (device) {		dev_warn(&device->dev, "Attempt to re-insert\n");		goto out;	}
device
device
{		dev_warn(&device->dev, "Attempt to re-insert\n");		goto out;	}
dev_warn(&device->dev, "Attempt to re-insert\n");
dev_warn(&device->dev, "Attempt to re-insert\n")
dev_warn
dev_warn
&device->dev
device->dev
device
device
dev
"Attempt to re-insert\n"
goto out;
out
acpi_evaluate_hotplug_ost(handle, ost_source,				  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL);
acpi_evaluate_hotplug_ost(handle, ost_source,				  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL)
acpi_evaluate_hotplug_ost
acpi_evaluate_hotplug_ost
handle
handle
ost_source
ost_source
ACPI_OST_SC_INSERT_IN_PROGRESS
ACPI_OST_SC_INSERT_IN_PROGRESS
NULL
NULL
error = acpi_bus_scan(handle);
error = acpi_bus_scan(handle)
error
error
acpi_bus_scan(handle)
acpi_bus_scan
acpi_bus_scan
handle
handle
if (error) {		acpi_handle_warn(handle, "Namespace scan failure\n");		goto out;	}
error
error
{		acpi_handle_warn(handle, "Namespace scan failure\n");		goto out;	}
acpi_handle_warn(handle, "Namespace scan failure\n");
acpi_handle_warn(handle, "Namespace scan failure\n")
acpi_handle_warn
acpi_handle_warn
handle
handle
"Namespace scan failure\n"
goto out;
out
error = acpi_bus_get_device(handle, &device);
error = acpi_bus_get_device(handle, &device)
error
error
acpi_bus_get_device(handle, &device)
acpi_bus_get_device
acpi_bus_get_device
handle
handle
&device
device
device
if (error) {		acpi_handle_warn(handle, "Missing device node object\n");		goto out;	}
error
error
{		acpi_handle_warn(handle, "Missing device node object\n");		goto out;	}
acpi_handle_warn(handle, "Missing device node object\n");
acpi_handle_warn(handle, "Missing device node object\n")
acpi_handle_warn
acpi_handle_warn
handle
handle
"Missing device node object\n"
goto out;
out
ost_code = ACPI_OST_SC_SUCCESS;
ost_code = ACPI_OST_SC_SUCCESS
ost_code
ost_code
ACPI_OST_SC_SUCCESS
ACPI_OST_SC_SUCCESS
if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)		kobject_uevent(&device->dev.kobj, KOBJ_ONLINE);
device->handler && device->handler->hotplug.mode == AHM_CONTAINER
device->handler
device
device
handler
device->handler->hotplug.mode == AHM_CONTAINER
device->handler->hotplug.mode
device->handler->hotplug
device->handler
device
device
handler
hotplug
mode
AHM_CONTAINER
AHM_CONTAINER
kobject_uevent(&device->dev.kobj, KOBJ_ONLINE);
kobject_uevent(&device->dev.kobj, KOBJ_ONLINE)
kobject_uevent
kobject_uevent
&device->dev.kobj
device->dev.kobj
device->dev
device
device
dev
kobj
KOBJ_ONLINE
KOBJ_ONLINE
out:	unlock_device_hotplug();
out
unlock_device_hotplug();
unlock_device_hotplug()
unlock_device_hotplug
unlock_device_hotplug
acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL);
acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL)
acpi_evaluate_hotplug_ost
acpi_evaluate_hotplug_ost
handle
handle
ost_source
ost_source
ost_code
ost_code
NULL
NULL
mutex_unlock(&acpi_scan_lock);
mutex_unlock(&acpi_scan_lock)
mutex_unlock
mutex_unlock
&acpi_scan_lock
acpi_scan_lock
acpi_scan_lock
-----joern-----
(44,61,0)
(89,31,0)
(66,59,0)
(27,12,0)
(0,26,0)
(48,26,0)
(15,26,0)
(35,13,0)
(54,26,0)
(25,26,0)
(59,69,0)
(57,78,0)
(74,13,0)
(39,85,0)
(50,89,0)
(52,21,0)
(43,76,0)
(70,20,0)
(76,43,0)
(46,56,0)
(81,52,0)
(56,71,0)
(93,5,0)
(49,39,0)
(64,67,0)
(32,26,0)
(13,74,0)
(3,90,0)
(76,12,0)
(34,27,0)
(52,26,0)
(80,38,0)
(22,26,0)
(48,29,0)
(16,28,0)
(92,48,0)
(2,56,0)
(88,32,0)
(29,48,0)
(90,5,0)
(63,90,0)
(41,26,0)
(61,55,0)
(27,5,0)
(29,78,0)
(79,32,0)
(85,39,0)
(38,6,0)
(68,41,0)
(5,26,0)
(20,60,0)
(3,45,0)
(84,26,0)
(24,74,0)
(43,60,0)
(78,29,0)
(20,5,0)
(9,21,0)
(55,26,0)
(28,23,0)
(60,43,0)
(40,89,0)
(23,13,0)
(41,32,0)
(23,28,0)
(41,69,0)
(64,31,0)
(41,45,0)
(12,76,0)
(51,59,0)
(90,3,0)
(31,64,0)
(13,23,0)
(7,59,0)
(62,26,0)
(56,45,0)
(86,0,0)
(33,26,0)
(21,52,0)
(14,3,0)
(83,41,0)
(31,89,0)
(11,26,0)
(41,0,0)
(65,59,0)
(94,41,0)
(82,26,0)
(78,5,0)
(36,64,0)
(12,27,0)
(3,26,0)
(37,38,0)
(53,27,0)
(38,45,0)
(4,43,0)
(18,60,0)
(75,67,0)
(85,26,0)
(17,6,0)
(87,0,0)
(8,71,0)
(89,5,0)
(73,76,0)
(47,29,0)
(59,26,0)
(55,61,0)
(1,20,0)
(19,41,0)
(29,45,0)
(10,26,0)
(58,5,0)
(21,45,0)
(60,20,0)
(74,5,0)
(77,74,0)
(59,45,0)
(5,93,1)
(79,5,1)
(63,14,1)
(14,15,1)
(48,29,1)
(62,12,1)
(43,60,1)
(68,94,1)
(41,32,1)
(92,72,1)
(41,68,1)
(62,8,1)
(74,77,1)
(44,41,1)
(47,92,1)
(19,83,1)
(34,53,1)
(66,42,1)
(16,23,1)
(41,69,1)
(23,13,1)
(64,36,1)
(20,1,1)
(13,35,1)
(87,86,1)
(29,45,1)
(27,34,1)
(35,74,1)
(55,61,1)
(12,27,1)
(62,75,1)
(91,48,1)
(78,57,1)
(18,20,1)
(3,45,1)
(73,43,1)
(13,74,1)
(57,47,1)
(21,9,1)
(76,43,1)
(86,91,1)
(59,69,1)
(56,46,1)
(89,5,1)
(62,17,1)
(39,49,1)
(15,85,1)
(9,81,1)
(8,56,1)
(40,50,1)
(28,16,1)
(0,87,1)
(61,44,1)
(51,65,1)
(93,58,1)
(30,55,1)
(36,31,1)
(70,27,1)
(42,3,1)
(78,5,1)
(88,79,1)
(59,45,1)
(65,7,1)
(74,5,1)
(17,38,1)
(81,59,1)
(12,76,1)
(4,60,1)
(2,72,1)
(64,31,1)
(27,5,1)
(59,51,1)
(49,32,1)
(72,52,1)
(21,45,1)
(52,21,1)
(83,62,1)
(80,91,1)
(56,45,1)
(89,40,1)
(1,70,1)
(20,5,1)
(53,0,1)
(7,66,1)
(32,88,1)
(31,89,1)
(50,42,1)
(75,64,1)
(38,37,1)
(60,20,1)
(62,28,1)
(41,0,1)
(94,19,1)
(41,45,1)
(90,5,1)
(60,18,1)
(24,12,1)
(38,45,1)
(46,2,1)
(37,80,1)
(90,63,1)
(28,23,1)
(3,90,1)
(43,4,1)
(85,39,1)
(76,73,1)
(29,78,1)
(77,24,1)
(89,5,2)
(12,91,2)
(13,74,2)
(59,45,2)
(34,91,2)
(48,29,2)
(87,91,2)
(60,27,2)
(77,12,2)
(73,27,2)
(50,42,2)
(3,45,2)
(7,42,2)
(21,42,2)
(48,72,2)
(89,42,2)
(41,69,2)
(75,42,2)
(74,5,2)
(56,45,2)
(86,91,2)
(53,91,2)
(2,72,2)
(12,76,2)
(85,39,2)
(12,27,2)
(20,5,2)
(74,12,2)
(20,27,2)
(41,0,2)
(29,78,2)
(38,91,2)
(76,43,2)
(46,72,2)
(66,42,2)
(9,42,2)
(28,12,2)
(80,91,2)
(60,20,2)
(43,27,2)
(29,72,2)
(0,91,2)
(43,60,2)
(41,32,2)
(91,72,2)
(52,42,2)
(17,91,2)
(65,42,2)
(40,42,2)
(56,72,2)
(29,45,2)
(24,12,2)
(64,42,2)
(37,91,2)
(47,72,2)
(57,72,2)
(21,45,2)
(28,23,2)
(35,12,2)
(55,61,2)
(13,12,2)
(92,72,2)
(4,27,2)
(64,31,2)
(59,69,2)
(27,5,2)
(16,12,2)
(27,91,2)
(52,21,2)
(78,5,2)
(51,42,2)
(70,27,2)
(78,72,2)
(59,42,2)
(23,12,2)
(31,89,2)
(76,27,2)
(72,42,2)
(8,72,2)
(18,27,2)
(31,42,2)
(1,27,2)
(41,45,2)
(90,5,2)
(38,45,2)
(3,90,2)
(36,42,2)
(81,42,2)
(23,13,2)
-----------------------------------
(0,ost_code = ACPI_OST_SC_SUCCESS)
(1,handler)
(2,handle)
(3,acpi_bus_get_device(handle, &device)
(4,mode)
(5,*device = NULL)
(6,)
(7,ost_source)
(8,goto out;)
(9,handle)
(10,if (error)
(11,ost_code)
(12,device->handler && device->handler->hotplug.mode == AHM_CONTAINER)
(13,device->dev.kobj)
(14,handle)
(15,lock_device_hotplug()
(16,KOBJ_ONLINE)
(17,goto out;)
(18,hotplug)
(19,ost_source)
(20,device->handler)
(21,acpi_bus_scan(handle)
(22,error)
(23,&device->dev.kobj)
(24,device)
(25,if (device->handler && device->handler->hotplug.mode == AHM_CONTAINER)
(26,)
(27,device->handler)
(28,kobject_uevent(&device->dev.kobj, KOBJ_ONLINE)
(29,acpi_bus_get_device(handle, &device)
(30,RET)
(31,&device->dev)
(32,ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE)
(33,if (device)
(34,handler)
(35,kobj)
(36,"Attempt to re-insert\\n")
(37,"Missing device node object\\n")
(38,acpi_handle_warn(handle, "Missing device node object\\n")
(39,&acpi_scan_lock)
(40,dev)
(41,acpi_evaluate_hotplug_ost(handle, ost_source, ost_code, NULL)
(42,device)
(43,device->handler->hotplug.mode)
(44,acpi_scan_lock)
(45,acpi_handle handle)
(46,"Namespace scan failure\\n")
(47,handle)
(48,error = acpi_bus_get_device(handle, &device)
(49,acpi_scan_lock)
(50,device)
(51,NULL)
(52,error = acpi_bus_scan(handle)
(53,device)
(54,device)
(55,mutex_unlock(&acpi_scan_lock)
(56,acpi_handle_warn(handle, "Namespace scan failure\\n")
(57,device)
(58,device)
(59,acpi_evaluate_hotplug_ost(handle, ost_source,\n\\n\\t\\t\\t\\t  ACPI_OST_SC_INSERT_IN_PROGRESS, NULL)
(60,device->handler->hotplug)
(61,&acpi_scan_lock)
(62,unlock_device_hotplug()
(63,device)
(64,dev_warn(&device->dev, "Attempt to re-insert\\n")
(65,ACPI_OST_SC_INSERT_IN_PROGRESS)
(66,handle)
(67,)
(68,NULL)
(69,u32 ost_source)
(70,device)
(71,)
(72,error)
(73,AHM_CONTAINER)
(74,device->dev)
(75,goto out;)
(76,device->handler->hotplug.mode == AHM_CONTAINER)
(77,dev)
(78,&device)
(79,ost_code)
(80,handle)
(81,error)
(82,if (error)
(83,handle)
(84,out:)
(85,mutex_lock(&acpi_scan_lock)
(86,ost_code)
(87,ACPI_OST_SC_SUCCESS)
(88,ACPI_OST_SC_NON_SPECIFIC_FAILURE)
(89,device->dev)
(90,&device)
(91,error)
(92,error)
(93,NULL)
(94,ost_code)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^