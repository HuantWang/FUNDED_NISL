-----label-----
1
-----code-----
void pnp_init_resources(struct pnp_resource_table *table)
{
	int idx;
	down(&pnp_res_mutex);
	for (idx = 0; idx < PNP_MAX_IRQ; idx++) {
		table->irq_resource[idx].name = NULL;
		table->irq_resource[idx].start = -1;
		table->irq_resource[idx].end = -1;
		table->irq_resource[idx].flags = IORESOURCE_AUTO;
	}
	for (idx = 0; idx < PNP_MAX_DMA; idx++) {
		table->dma_resource[idx].name = NULL;
		table->dma_resource[idx].start = -1;
		table->dma_resource[idx].end = -1;
		table->dma_resource[idx].flags = IORESOURCE_AUTO;
	}
	for (idx = 0; idx < PNP_MAX_PORT; idx++) {
		table->port_resource[idx].name = NULL;
		table->port_resource[idx].start = 0;
		table->port_resource[idx].end = 0;
		table->port_resource[idx].flags = IORESOURCE_AUTO;
	}
	for (idx = 0; idx < PNP_MAX_MEM; idx++) {
		table->mem_resource[idx].name = NULL;
		table->mem_resource[idx].start = 0;
		table->mem_resource[idx].end = 0;
		table->mem_resource[idx].flags = IORESOURCE_AUTO;
	}
	up(&pnp_res_mutex);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
12,13
13,14
13,15
15,16
17,18
18,19
18,20
19,20
21,22
22,23
22,24
25,26
25,27
25,28
25,29
26,27
27,28
27,29
28,29
31,32
31,33
32,33
34,35
36,37
37,38
39,40
39,41
39,42
39,43
40,41
41,42
41,43
42,43
42,44
43,44
43,45
44,45
44,46
45,46
48,49
51,52
53,54
54,55
54,56
55,56
55,57
56,57
56,58
57,58
57,59
58,59
61,62
64,65
66,67
67,68
67,69
68,69
68,70
69,70
69,71
70,71
70,72
71,72
74,75
77,78
79,80
80,81
80,82
81,82
81,83
82,83
82,84
83,84
83,85
84,85
87,88
90,91
92,93
92,94
92,95
92,96
93,94
94,95
94,96
95,96
98,99
98,100
99,100
101,102
103,104
104,105
106,107
106,108
106,109
106,110
107,108
108,109
108,110
109,110
109,111
110,111
110,112
111,112
111,113
112,113
115,116
118,119
120,121
121,122
121,123
122,123
122,124
123,124
123,125
124,125
124,126
125,126
128,129
131,132
133,134
134,135
134,136
135,136
135,137
136,137
136,138
137,138
137,139
138,139
141,142
144,145
146,147
147,148
147,149
148,149
148,150
149,150
149,151
150,151
150,152
151,152
154,155
157,158
159,160
159,161
159,162
159,163
160,161
161,162
161,163
162,163
165,166
165,167
166,167
168,169
170,171
171,172
173,174
173,175
173,176
173,177
174,175
175,176
175,177
176,177
176,178
177,178
177,179
178,179
178,180
179,180
182,183
185,186
187,188
188,189
188,190
189,190
189,191
190,191
190,192
191,192
191,193
192,193
195,196
199,200
200,201
200,202
201,202
201,203
202,203
202,204
203,204
203,205
204,205
207,208
211,212
212,213
212,214
213,214
213,215
214,215
214,216
215,216
215,217
216,217
219,220
222,223
224,225
224,226
224,227
224,228
225,226
226,227
226,228
227,228
230,231
230,232
231,232
233,234
235,236
236,237
238,239
238,240
238,241
238,242
239,240
240,241
240,242
241,242
241,243
242,243
242,244
243,244
243,245
244,245
247,248
250,251
252,253
253,254
253,255
254,255
254,256
255,256
255,257
256,257
256,258
257,258
260,261
264,265
265,266
265,267
266,267
266,268
267,268
267,269
268,269
268,270
269,270
272,273
276,277
277,278
277,279
278,279
278,280
279,280
279,281
280,281
280,282
281,282
284,285
287,288
289,290
290,291
290,292
291,292
293,294
294,295
-----nextToken-----
2,4,7,9,10,14,16,20,23,24,29,30,33,35,38,46,47,49,50,52,59,60,62,63,65,72,73,75,76,78,85,86,88,89,91,96,97,100,102,105,113,114,116,117,119,126,127,129,130,132,139,140,142,143,145,152,153,155,156,158,163,164,167,169,172,180,181,183,184,186,193,194,196,197,198,205,206,208,209,210,217,218,220,221,223,228,229,232,234,237,245,246,248,249,251,258,259,261,262,263,270,271,273,274,275,282,283,285,286,288,292,295
-----computeFrom-----
27,28
27,29
31,32
31,33
41,42
41,43
54,55
54,56
67,68
67,69
80,81
80,82
94,95
94,96
98,99
98,100
108,109
108,110
121,122
121,123
134,135
134,136
147,148
147,149
161,162
161,163
165,166
165,167
175,176
175,177
188,189
188,190
200,201
200,202
212,213
212,214
226,227
226,228
230,231
230,232
240,241
240,242
253,254
253,255
265,266
265,267
277,278
277,279
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;ReferenceOperator;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void pnp_init_resources(struct pnp_resource_table *table){	int idx;	down(&pnp_res_mutex);	for (idx = 0; idx < PNP_MAX_IRQ; idx++) {		table->irq_resource[idx].name = NULL;		table->irq_resource[idx].start = -1;		table->irq_resource[idx].end = -1;		table->irq_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_DMA; idx++) {		table->dma_resource[idx].name = NULL;		table->dma_resource[idx].start = -1;		table->dma_resource[idx].end = -1;		table->dma_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_PORT; idx++) {		table->port_resource[idx].name = NULL;		table->port_resource[idx].start = 0;		table->port_resource[idx].end = 0;		table->port_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_MEM; idx++) {		table->mem_resource[idx].name = NULL;		table->mem_resource[idx].start = 0;		table->mem_resource[idx].end = 0;		table->mem_resource[idx].flags = IORESOURCE_AUTO;	}	up(&pnp_res_mutex);}
void
pnp_init_resources(struct pnp_resource_table *table)
pnp_init_resources
struct pnp_resource_table *table
struct pnp_resource_table
pnp_resource_table
*table
*
table
{	int idx;	down(&pnp_res_mutex);	for (idx = 0; idx < PNP_MAX_IRQ; idx++) {		table->irq_resource[idx].name = NULL;		table->irq_resource[idx].start = -1;		table->irq_resource[idx].end = -1;		table->irq_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_DMA; idx++) {		table->dma_resource[idx].name = NULL;		table->dma_resource[idx].start = -1;		table->dma_resource[idx].end = -1;		table->dma_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_PORT; idx++) {		table->port_resource[idx].name = NULL;		table->port_resource[idx].start = 0;		table->port_resource[idx].end = 0;		table->port_resource[idx].flags = IORESOURCE_AUTO;	}	for (idx = 0; idx < PNP_MAX_MEM; idx++) {		table->mem_resource[idx].name = NULL;		table->mem_resource[idx].start = 0;		table->mem_resource[idx].end = 0;		table->mem_resource[idx].flags = IORESOURCE_AUTO;	}	up(&pnp_res_mutex);}
int idx;
int idx;
int
idx
idx
down(&pnp_res_mutex);
down(&pnp_res_mutex);
down
down
(&pnp_res_mutex)
&pnp_res_mutex
&
pnp_res_mutex
for (idx = 0; idx < PNP_MAX_IRQ; idx++) {		table->irq_resource[idx].name = NULL;		table->irq_resource[idx].start = -1;		table->irq_resource[idx].end = -1;		table->irq_resource[idx].flags = IORESOURCE_AUTO;	}
idx = 0;
idx = 0
idx
idx
0
idx < PNP_MAX_IRQ
idx
idx
PNP_MAX_IRQ
PNP_MAX_IRQ
idx++
idx
idx
{		table->irq_resource[idx].name = NULL;		table->irq_resource[idx].start = -1;		table->irq_resource[idx].end = -1;		table->irq_resource[idx].flags = IORESOURCE_AUTO;	}
table->irq_resource[idx].name = NULL;
table->irq_resource[idx].name = NULL
table->irq_resource[idx].name
table->irq_resource[idx]
table->irq_resource
table
table
irq_resource
idx
idx
name
NULL
NULL
table->irq_resource[idx].start = -1;
table->irq_resource[idx].start = -1
table->irq_resource[idx].start
table->irq_resource[idx]
table->irq_resource
table
table
irq_resource
idx
idx
start
-1
1
table->irq_resource[idx].end = -1;
table->irq_resource[idx].end = -1
table->irq_resource[idx].end
table->irq_resource[idx]
table->irq_resource
table
table
irq_resource
idx
idx
end
-1
1
table->irq_resource[idx].flags = IORESOURCE_AUTO;
table->irq_resource[idx].flags = IORESOURCE_AUTO
table->irq_resource[idx].flags
table->irq_resource[idx]
table->irq_resource
table
table
irq_resource
idx
idx
flags
IORESOURCE_AUTO
IORESOURCE_AUTO
for (idx = 0; idx < PNP_MAX_DMA; idx++) {		table->dma_resource[idx].name = NULL;		table->dma_resource[idx].start = -1;		table->dma_resource[idx].end = -1;		table->dma_resource[idx].flags = IORESOURCE_AUTO;	}
idx = 0;
idx = 0
idx
idx
0
idx < PNP_MAX_DMA
idx
idx
PNP_MAX_DMA
PNP_MAX_DMA
idx++
idx
idx
{		table->dma_resource[idx].name = NULL;		table->dma_resource[idx].start = -1;		table->dma_resource[idx].end = -1;		table->dma_resource[idx].flags = IORESOURCE_AUTO;	}
table->dma_resource[idx].name = NULL;
table->dma_resource[idx].name = NULL
table->dma_resource[idx].name
table->dma_resource[idx]
table->dma_resource
table
table
dma_resource
idx
idx
name
NULL
NULL
table->dma_resource[idx].start = -1;
table->dma_resource[idx].start = -1
table->dma_resource[idx].start
table->dma_resource[idx]
table->dma_resource
table
table
dma_resource
idx
idx
start
-1
1
table->dma_resource[idx].end = -1;
table->dma_resource[idx].end = -1
table->dma_resource[idx].end
table->dma_resource[idx]
table->dma_resource
table
table
dma_resource
idx
idx
end
-1
1
table->dma_resource[idx].flags = IORESOURCE_AUTO;
table->dma_resource[idx].flags = IORESOURCE_AUTO
table->dma_resource[idx].flags
table->dma_resource[idx]
table->dma_resource
table
table
dma_resource
idx
idx
flags
IORESOURCE_AUTO
IORESOURCE_AUTO
for (idx = 0; idx < PNP_MAX_PORT; idx++) {		table->port_resource[idx].name = NULL;		table->port_resource[idx].start = 0;		table->port_resource[idx].end = 0;		table->port_resource[idx].flags = IORESOURCE_AUTO;	}
idx = 0;
idx = 0
idx
idx
0
idx < PNP_MAX_PORT
idx
idx
PNP_MAX_PORT
PNP_MAX_PORT
idx++
idx
idx
{		table->port_resource[idx].name = NULL;		table->port_resource[idx].start = 0;		table->port_resource[idx].end = 0;		table->port_resource[idx].flags = IORESOURCE_AUTO;	}
table->port_resource[idx].name = NULL;
table->port_resource[idx].name = NULL
table->port_resource[idx].name
table->port_resource[idx]
table->port_resource
table
table
port_resource
idx
idx
name
NULL
NULL
table->port_resource[idx].start = 0;
table->port_resource[idx].start = 0
table->port_resource[idx].start
table->port_resource[idx]
table->port_resource
table
table
port_resource
idx
idx
start
0
table->port_resource[idx].end = 0;
table->port_resource[idx].end = 0
table->port_resource[idx].end
table->port_resource[idx]
table->port_resource
table
table
port_resource
idx
idx
end
0
table->port_resource[idx].flags = IORESOURCE_AUTO;
table->port_resource[idx].flags = IORESOURCE_AUTO
table->port_resource[idx].flags
table->port_resource[idx]
table->port_resource
table
table
port_resource
idx
idx
flags
IORESOURCE_AUTO
IORESOURCE_AUTO
for (idx = 0; idx < PNP_MAX_MEM; idx++) {		table->mem_resource[idx].name = NULL;		table->mem_resource[idx].start = 0;		table->mem_resource[idx].end = 0;		table->mem_resource[idx].flags = IORESOURCE_AUTO;	}
idx = 0;
idx = 0
idx
idx
0
idx < PNP_MAX_MEM
idx
idx
PNP_MAX_MEM
PNP_MAX_MEM
idx++
idx
idx
{		table->mem_resource[idx].name = NULL;		table->mem_resource[idx].start = 0;		table->mem_resource[idx].end = 0;		table->mem_resource[idx].flags = IORESOURCE_AUTO;	}
table->mem_resource[idx].name = NULL;
table->mem_resource[idx].name = NULL
table->mem_resource[idx].name
table->mem_resource[idx]
table->mem_resource
table
table
mem_resource
idx
idx
name
NULL
NULL
table->mem_resource[idx].start = 0;
table->mem_resource[idx].start = 0
table->mem_resource[idx].start
table->mem_resource[idx]
table->mem_resource
table
table
mem_resource
idx
idx
start
0
table->mem_resource[idx].end = 0;
table->mem_resource[idx].end = 0
table->mem_resource[idx].end
table->mem_resource[idx]
table->mem_resource
table
table
mem_resource
idx
idx
end
0
table->mem_resource[idx].flags = IORESOURCE_AUTO;
table->mem_resource[idx].flags = IORESOURCE_AUTO
table->mem_resource[idx].flags
table->mem_resource[idx]
table->mem_resource
table
table
mem_resource
idx
idx
flags
IORESOURCE_AUTO
IORESOURCE_AUTO
up(&pnp_res_mutex);
up(&pnp_res_mutex)
up
up
&pnp_res_mutex
pnp_res_mutex
pnp_res_mutex
-----joern-----
(94,185,0)
(106,18,0)
(92,31,0)
(38,15,0)
(167,164,0)
(135,145,0)
(21,172,0)
(106,15,0)
(8,67,0)
(48,112,0)
(149,74,0)
(52,79,0)
(93,77,0)
(184,149,0)
(18,185,0)
(138,144,0)
(154,91,0)
(18,106,0)
(147,137,0)
(102,74,0)
(33,57,0)
(7,145,0)
(142,104,0)
(122,136,0)
(143,187,0)
(97,100,0)
(159,168,0)
(17,157,0)
(69,121,0)
(75,157,0)
(74,102,0)
(150,120,0)
(143,36,0)
(84,29,0)
(161,183,0)
(31,49,0)
(16,50,0)
(99,195,0)
(98,56,0)
(6,136,0)
(134,50,0)
(117,175,0)
(1,187,0)
(193,195,0)
(113,99,0)
(29,36,0)
(11,100,0)
(7,33,0)
(74,139,0)
(55,99,0)
(160,145,0)
(147,152,0)
(178,11,0)
(77,27,0)
(185,18,0)
(110,193,0)
(152,145,0)
(151,124,0)
(72,108,0)
(165,61,0)
(157,191,0)
(168,159,0)
(62,143,0)
(64,51,0)
(4,139,0)
(51,139,0)
(0,27,0)
(61,165,0)
(73,57,0)
(65,175,0)
(9,33,0)
(176,46,0)
(13,147,0)
(10,182,0)
(119,11,0)
(63,189,0)
(128,7,0)
(159,36,0)
(28,108,0)
(181,156,0)
(190,34,0)
(34,145,0)
(132,36,0)
(81,139,0)
(183,105,0)
(121,100,0)
(153,189,0)
(14,177,0)
(111,51,0)
(91,145,0)
(116,145,0)
(39,74,0)
(80,145,0)
(169,7,0)
(186,60,0)
(35,90,0)
(44,191,0)
(35,160,0)
(65,80,0)
(40,152,0)
(188,116,0)
(191,78,0)
(61,78,0)
(42,151,0)
(24,91,0)
(82,71,0)
(192,65,0)
(195,177,0)
(175,65,0)
(83,48,0)
(105,183,0)
(109,113,0)
(43,163,0)
(160,35,0)
(185,145,0)
(95,106,0)
(26,124,0)
(102,104,0)
(165,145,0)
(96,164,0)
(86,112,0)
(113,57,0)
(42,179,0)
(170,61,0)
(103,80,0)
(105,36,0)
(167,50,0)
(155,150,0)
(189,78,0)
(168,31,0)
(27,49,0)
(18,57,0)
(70,165,0)
(124,151,0)
(162,185,0)
(67,60,0)
(12,116,0)
(89,97,0)
(53,30,0)
(137,147,0)
(46,14,0)
(20,159,0)
(74,149,0)
(178,12,0)
(196,160,0)
(182,49,0)
(56,14,0)
(166,146,0)
(99,113,0)
(179,78,0)
(146,49,0)
(30,36,0)
(56,33,0)
(135,143,0)
(183,145,0)
(87,34,0)
(197,186,0)
(126,28,0)
(90,35,0)
(80,65,0)
(85,50,0)
(35,78,0)
(5,135,0)
(143,135,0)
(67,163,0)
(157,145,0)
(120,50,0)
(152,147,0)
(33,56,0)
(37,179,0)
(159,34,0)
(131,135,0)
(179,42,0)
(120,150,0)
(180,152,0)
(140,160,0)
(61,28,0)
(76,57,0)
(14,46,0)
(174,36,0)
(130,48,0)
(86,182,0)
(114,112,0)
(191,8,0)
(45,141,0)
(127,57,0)
(41,105,0)
(172,177,0)
(2,78,0)
(115,78,0)
(141,57,0)
(112,86,0)
(54,29,0)
(151,60,0)
(136,145,0)
(104,100,0)
(3,50,0)
(187,146,0)
(48,145,0)
(175,97,0)
(65,139,0)
(108,60,0)
(164,167,0)
(12,178,0)
(112,48,0)
(47,12,0)
(12,139,0)
(68,79,0)
(8,191,0)
(195,193,0)
(101,165,0)
(147,139,0)
(123,18,0)
(137,121,0)
(148,102,0)
(136,113,0)
(34,159,0)
(58,73,0)
(191,157,0)
(149,145,0)
(163,67,0)
(173,80,0)
(118,172,0)
(116,12,0)
(156,57,0)
(194,86,0)
(156,79,0)
(179,91,0)
(25,168,0)
(133,8,0)
(77,105,0)
(33,7,0)
(156,21,0)
(105,77,0)
(91,179,0)
(187,143,0)
(71,78,0)
(23,50,0)
(144,139,0)
(113,136,0)
(112,36,0)
(21,156,0)
(15,177,0)
(22,73,0)
(88,21,0)
(32,35,0)
(28,61,0)
(66,183,0)
(79,156,0)
(19,178,0)
(107,137,0)
(79,145,0)
(90,186,0)
(158,90,0)
(171,149,0)
(125,42,0)
(59,116,0)
(62,135,1)
(58,57,1)
(4,189,1)
(33,7,1)
(94,14,1)
(79,145,1)
(12,139,1)
(167,164,1)
(182,10,1)
(191,157,1)
(121,69,1)
(191,78,1)
(25,159,1)
(157,145,1)
(61,78,1)
(92,168,1)
(78,2,1)
(65,80,1)
(197,90,1)
(98,33,1)
(194,112,1)
(48,145,1)
(193,110,1)
(138,121,1)
(173,51,1)
(71,82,1)
(102,148,1)
(147,13,1)
(51,139,1)
(113,57,1)
(56,98,1)
(109,136,1)
(141,45,1)
(107,147,1)
(160,145,1)
(143,36,1)
(170,165,1)
(42,179,1)
(168,159,1)
(124,26,1)
(77,105,1)
(189,63,1)
(71,78,1)
(6,172,1)
(10,86,1)
(143,62,1)
(45,15,1)
(136,145,1)
(150,155,1)
(185,145,1)
(57,127,1)
(53,31,1)
(156,181,1)
(0,77,1)
(153,71,1)
(42,125,1)
(13,152,1)
(7,145,1)
(74,139,1)
(146,166,1)
(157,17,1)
(55,113,1)
(74,39,1)
(136,122,1)
(40,180,1)
(80,145,1)
(8,191,1)
(114,48,1)
(111,144,1)
(68,52,1)
(122,6,1)
(112,48,1)
(58,141,1)
(21,156,1)
(195,193,1)
(66,182,1)
(130,83,1)
(61,165,1)
(110,99,1)
(30,36,1)
(91,24,1)
(74,149,1)
(56,33,1)
(79,68,1)
(126,61,1)
(83,146,1)
(30,53,1)
(113,109,1)
(123,185,1)
(96,29,1)
(86,194,1)
(139,81,1)
(65,139,1)
(84,36,1)
(80,103,1)
(59,188,1)
(116,145,1)
(95,18,1)
(166,187,1)
(187,143,1)
(20,34,1)
(191,44,1)
(2,115,1)
(61,170,1)
(105,36,1)
(26,42,1)
(163,43,1)
(188,97,1)
(184,171,1)
(116,59,1)
(196,140,1)
(162,94,1)
(174,51,1)
(35,32,1)
(144,139,1)
(164,96,1)
(14,46,1)
(190,87,1)
(106,18,1)
(175,117,1)
(179,78,1)
(37,91,1)
(31,92,1)
(76,120,1)
(186,197,1)
(22,58,1)
(87,27,1)
(187,1,1)
(137,107,1)
(70,101,1)
(34,145,1)
(112,114,1)
(183,145,1)
(143,135,1)
(90,35,1)
(43,8,1)
(153,78,1)
(149,145,1)
(46,176,1)
(141,57,1)
(27,0,1)
(21,88,1)
(159,34,1)
(148,74,1)
(67,163,1)
(154,108,1)
(15,38,1)
(159,20,1)
(165,70,1)
(128,195,1)
(35,78,1)
(176,56,1)
(89,175,1)
(82,186,1)
(180,104,1)
(135,5,1)
(115,73,1)
(72,28,1)
(156,79,1)
(172,118,1)
(125,179,1)
(142,102,1)
(113,136,1)
(19,12,1)
(64,111,1)
(131,29,1)
(152,145,1)
(158,35,1)
(99,113,1)
(171,11,1)
(18,185,1)
(133,191,1)
(179,91,1)
(189,78,1)
(156,57,1)
(88,156,1)
(175,65,1)
(183,161,1)
(105,41,1)
(117,65,1)
(84,30,1)
(97,89,1)
(169,128,1)
(41,183,1)
(132,174,1)
(9,7,1)
(135,145,1)
(93,105,1)
(28,126,1)
(52,73,1)
(38,106,1)
(73,22,1)
(151,124,1)
(12,47,1)
(29,54,1)
(54,84,1)
(51,64,1)
(91,145,1)
(185,162,1)
(90,158,1)
(65,192,1)
(159,36,1)
(86,112,1)
(118,21,1)
(75,151,1)
(127,76,1)
(12,116,1)
(33,57,1)
(129,167,1)
(152,40,1)
(32,160,1)
(11,119,1)
(48,130,1)
(147,152,1)
(120,150,1)
(101,189,1)
(137,147,1)
(35,160,1)
(111,139,1)
(168,25,1)
(105,183,1)
(24,154,1)
(178,12,1)
(104,142,1)
(18,123,1)
(5,131,1)
(149,184,1)
(99,55,1)
(112,36,1)
(178,19,1)
(63,153,1)
(192,80,1)
(36,132,1)
(160,196,1)
(140,67,1)
(102,74,1)
(73,57,1)
(181,79,1)
(108,72,1)
(144,138,1)
(165,145,1)
(77,93,1)
(161,66,1)
(47,116,1)
(29,36,1)
(179,37,1)
(147,139,1)
(33,9,1)
(28,61,1)
(17,75,1)
(44,157,1)
(103,173,1)
(18,57,1)
(1,143,1)
(81,4,1)
(34,190,1)
(69,137,1)
(119,178,1)
(8,133,1)
(106,95,1)
(39,149,1)
(7,169,1)
(168,29,2)
(32,189,2)
(61,78,2)
(34,145,2)
(29,29,2)
(65,80,2)
(141,73,2)
(25,29,2)
(73,73,2)
(116,51,2)
(105,183,2)
(165,189,2)
(186,189,2)
(147,152,2)
(159,34,2)
(30,36,2)
(62,29,2)
(5,29,2)
(165,145,2)
(119,51,2)
(102,51,2)
(66,29,2)
(12,51,2)
(117,51,2)
(64,51,2)
(35,78,2)
(195,73,2)
(61,189,2)
(179,91,2)
(149,51,2)
(82,189,2)
(79,145,2)
(58,73,2)
(97,51,2)
(102,74,2)
(103,51,2)
(178,12,2)
(7,73,2)
(113,136,2)
(135,145,2)
(90,189,2)
(112,36,2)
(146,29,2)
(105,29,2)
(121,51,2)
(140,189,2)
(15,73,2)
(154,189,2)
(135,29,2)
(55,73,2)
(113,57,2)
(71,189,2)
(123,73,2)
(33,7,2)
(109,73,2)
(42,179,2)
(149,145,2)
(28,189,2)
(161,29,2)
(51,51,2)
(122,73,2)
(14,46,2)
(147,139,2)
(99,73,2)
(41,29,2)
(34,29,2)
(10,29,2)
(113,73,2)
(71,78,2)
(12,116,2)
(183,29,2)
(54,29,2)
(17,189,2)
(94,73,2)
(79,73,2)
(56,73,2)
(152,145,2)
(74,149,2)
(125,189,2)
(187,29,2)
(14,73,2)
(187,143,2)
(157,189,2)
(30,29,2)
(43,189,2)
(18,73,2)
(89,51,2)
(156,57,2)
(171,51,2)
(143,135,2)
(68,73,2)
(13,51,2)
(8,191,2)
(31,29,2)
(47,51,2)
(169,73,2)
(101,189,2)
(87,29,2)
(167,164,2)
(168,159,2)
(53,29,2)
(194,29,2)
(80,145,2)
(191,189,2)
(144,139,2)
(175,65,2)
(61,165,2)
(20,29,2)
(45,73,2)
(162,73,2)
(35,189,2)
(52,73,2)
(18,185,2)
(158,189,2)
(126,189,2)
(42,189,2)
(138,51,2)
(179,189,2)
(191,157,2)
(141,57,2)
(191,78,2)
(56,33,2)
(11,51,2)
(98,73,2)
(29,36,2)
(112,48,2)
(130,29,2)
(185,145,2)
(175,51,2)
(59,51,2)
(22,73,2)
(159,36,2)
(163,189,2)
(193,73,2)
(137,51,2)
(181,73,2)
(12,139,2)
(88,73,2)
(40,51,2)
(137,147,2)
(65,51,2)
(189,78,2)
(72,189,2)
(179,78,2)
(120,150,2)
(6,73,2)
(83,29,2)
(160,189,2)
(157,145,2)
(151,189,2)
(0,29,2)
(178,51,2)
(19,51,2)
(147,51,2)
(192,51,2)
(92,29,2)
(106,18,2)
(107,51,2)
(128,73,2)
(197,189,2)
(21,73,2)
(111,51,2)
(91,145,2)
(8,189,2)
(9,73,2)
(84,29,2)
(173,51,2)
(166,29,2)
(27,29,2)
(188,51,2)
(189,189,2)
(160,145,2)
(170,189,2)
(46,73,2)
(1,29,2)
(38,73,2)
(108,189,2)
(77,105,2)
(74,51,2)
(39,51,2)
(110,73,2)
(185,73,2)
(114,29,2)
(37,189,2)
(51,139,2)
(70,189,2)
(182,29,2)
(112,29,2)
(106,73,2)
(159,29,2)
(153,189,2)
(90,35,2)
(67,189,2)
(80,51,2)
(18,57,2)
(148,51,2)
(86,29,2)
(151,124,2)
(33,57,2)
(73,57,2)
(33,73,2)
(91,189,2)
(131,29,2)
(156,73,2)
(75,189,2)
(156,79,2)
(118,73,2)
(143,36,2)
(184,51,2)
(143,29,2)
(144,51,2)
(196,189,2)
(133,189,2)
(93,29,2)
(176,73,2)
(136,73,2)
(183,145,2)
(28,61,2)
(48,145,2)
(172,73,2)
(69,51,2)
(7,145,2)
(142,51,2)
(105,36,2)
(104,51,2)
(26,189,2)
(24,189,2)
(67,163,2)
(86,112,2)
(74,139,2)
(77,29,2)
(124,189,2)
(136,145,2)
(63,189,2)
(48,29,2)
(44,189,2)
(190,29,2)
(195,193,2)
(180,51,2)
(35,160,2)
(21,156,2)
(65,139,2)
(95,73,2)
(152,51,2)
(99,113,2)
(116,145,2)
-----------------------------------
(0,0)
(1,name)
(2,0)
(3,for (idx = 0; idx < PNP_MAX_MEM; idx++)
(4,idx)
(5,mem_resource)
(6,table)
(7,table->irq_resource)
(8,table->dma_resource[idx].end)
(9,idx)
(10,0)
(11,table->port_resource[idx].start = 0)
(12,table->port_resource[idx])
(13,idx)
(14,table->irq_resource[idx].end = -1)
(15,table->irq_resource[idx].flags = IORESOURCE_AUTO)
(16,for (idx = 0; idx < PNP_MAX_PORT; idx++)
(17,dma_resource)
(18,table->irq_resource[idx])
(19,start)
(20,idx)
(21,table->irq_resource[idx].name)
(22,PNP_MAX_IRQ)
(23,for (idx = 0; idx < PNP_MAX_DMA; idx++)
(24,dma_resource)
(25,flags)
(26,1)
(27,table->mem_resource[idx].end = 0)
(28,table->dma_resource[idx].name)
(29,idx < PNP_MAX_MEM)
(30,idx++)
(31,table->mem_resource[idx].flags = IORESOURCE_AUTO)
(32,idx)
(33,table->irq_resource[idx])
(34,table->mem_resource)
(35,table->dma_resource[idx])
(36,idx = 0)
(37,idx)
(38,IORESOURCE_AUTO)
(39,idx)
(40,port_resource)
(41,idx)
(42,table->dma_resource[idx].start)
(43,1)
(44,idx)
(45,idx)
(46,-1)
(47,idx)
(48,table->mem_resource)
(49,)
(50,)
(51,idx < PNP_MAX_PORT)
(52,table)
(53,idx)
(54,PNP_MAX_MEM)
(55,start)
(56,table->irq_resource[idx].end)
(57,idx = 0)
(58,idx)
(59,port_resource)
(60,)
(61,table->dma_resource[idx])
(62,idx)
(63,PNP_MAX_DMA)
(64,PNP_MAX_PORT)
(65,table->port_resource[idx])
(66,table)
(67,table->dma_resource[idx].end = -1)
(68,irq_resource)
(69,IORESOURCE_AUTO)
(70,dma_resource)
(71,idx++)
(72,NULL)
(73,idx < PNP_MAX_IRQ)
(74,table->port_resource[idx])
(75,table)
(76,idx)
(77,table->mem_resource[idx].end)
(78,idx = 0)
(79,table->irq_resource)
(80,table->port_resource)
(81,0)
(82,idx)
(83,table)
(84,idx)
(85,idx)
(86,table->mem_resource[idx].start)
(87,table)
(88,name)
(89,NULL)
(90,table->dma_resource[idx].flags)
(91,table->dma_resource)
(92,IORESOURCE_AUTO)
(93,end)
(94,table)
(95,flags)
(96,pnp_res_mutex)
(97,table->port_resource[idx].name = NULL)
(98,end)
(99,table->irq_resource[idx].start)
(100,)
(101,table)
(102,table->port_resource[idx].end)
(103,port_resource)
(104,table->port_resource[idx].end = 0)
(105,table->mem_resource[idx])
(106,table->irq_resource[idx].flags)
(107,flags)
(108,table->dma_resource[idx].name = NULL)
(109,idx)
(110,1)
(111,idx)
(112,table->mem_resource[idx])
(113,table->irq_resource[idx])
(114,idx)
(115,idx)
(116,table->port_resource)
(117,name)
(118,NULL)
(119,0)
(120,down(&pnp_res_mutex)
(121,table->port_resource[idx].flags = IORESOURCE_AUTO)
(122,irq_resource)
(123,idx)
(124,-1)
(125,start)
(126,name)
(127,0)
(128,table)
(129,RET)
(130,mem_resource)
(131,table)
(132,0)
(133,end)
(134,for (idx = 0; idx < PNP_MAX_IRQ; idx++)
(135,table->mem_resource)
(136,table->irq_resource)
(137,table->port_resource[idx].flags)
(138,idx)
(139,idx = 0)
(140,table)
(141,idx++)
(142,0)
(143,table->mem_resource[idx])
(144,idx++)
(145,struct pnp_resource_table *table)
(146,table->mem_resource[idx].name = NULL)
(147,table->port_resource[idx])
(148,end)
(149,table->port_resource)
(150,&pnp_res_mutex)
(151,table->dma_resource[idx].start = -1)
(152,table->port_resource)
(153,idx)
(154,table)
(155,pnp_res_mutex)
(156,table->irq_resource[idx])
(157,table->dma_resource)
(158,flags)
(159,table->mem_resource[idx])
(160,table->dma_resource)
(161,mem_resource)
(162,irq_resource)
(163,-1)
(164,&pnp_res_mutex)
(165,table->dma_resource)
(166,NULL)
(167,up(&pnp_res_mutex)
(168,table->mem_resource[idx].flags)
(169,irq_resource)
(170,idx)
(171,table)
(172,table->irq_resource[idx].name = NULL)
(173,table)
(174,idx)
(175,table->port_resource[idx].name)
(176,1)
(177,)
(178,table->port_resource[idx].start)
(179,table->dma_resource[idx])
(180,table)
(181,idx)
(182,table->mem_resource[idx].start = 0)
(183,table->mem_resource)
(184,port_resource)
(185,table->irq_resource)
(186,table->dma_resource[idx].flags = IORESOURCE_AUTO)
(187,table->mem_resource[idx].name)
(188,table)
(189,idx < PNP_MAX_DMA)
(190,mem_resource)
(191,table->dma_resource[idx])
(192,idx)
(193,-1)
(194,start)
(195,table->irq_resource[idx].start = -1)
(196,dma_resource)
(197,IORESOURCE_AUTO)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^