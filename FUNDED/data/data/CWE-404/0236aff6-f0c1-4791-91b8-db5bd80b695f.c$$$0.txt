-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink(int * * dataPtr)
{
    int * data = *dataPtr;
    printIntLine(data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
23,24
23,25
24,25
26,27
26,28
27,28
30,31
31,32
31,33
32,33
34,35
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,25,28,29,33,35
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink(int * * dataPtr){    int * data = *dataPtr;    printIntLine(data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink(int * * dataPtr)
CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink
int * * dataPtr
int
* * dataPtr
*
*
dataPtr
{    int * data = *dataPtr;    printIntLine(data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
int * data = *dataPtr;
int * data = *dataPtr;
int
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(5,13,0)
(4,2,0)
(2,12,0)
(3,10,0)
(1,2,0)
(13,0,0)
(10,7,0)
(9,2,0)
(11,12,0)
(13,12,0)
(10,12,0)
(8,7,0)
(2,1,0)
(12,7,0)
(12,13,0)
(1,7,0)
(10,3,1)
(13,5,1)
(9,12,1)
(13,0,1)
(2,4,1)
(5,11,1)
(1,2,1)
(12,13,1)
(3,1,1)
(10,12,1)
(2,12,1)
(6,10,1)
(4,9,1)
(10,12,2)
(12,13,2)
(13,0,2)
(2,12,2)
(1,2,2)
-----------------------------------
(0,int * * dataPtr)
(1,printIntLine(data[0])
(2,data[0])
(3,data)
(4,0)
(5,dataPtr)
(6,RET)
(7,)
(8,data)
(9,data)
(10,free(data)
(11,data)
(12,* data = *dataPtr)
(13,*dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^