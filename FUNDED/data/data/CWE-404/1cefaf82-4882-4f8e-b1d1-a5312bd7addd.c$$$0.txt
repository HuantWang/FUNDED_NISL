-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_static_63b_badSink(twoIntsStruct * * dataPtr)
{
    twoIntsStruct * data = *dataPtr;
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
8,11
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
22,23
24,25
25,26
25,27
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
-----nextToken-----
2,4,7,9,10,11,16,18,19,23,27,31,32,36,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_static_63b_badSink(twoIntsStruct * * dataPtr){    twoIntsStruct * data = *dataPtr;    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_struct_static_63b_badSink(twoIntsStruct * * dataPtr)
CWE590_Free_Memory_Not_on_Heap__free_struct_static_63b_badSink
twoIntsStruct * * dataPtr
twoIntsStruct
twoIntsStruct
* * dataPtr
*
*
dataPtr
{    twoIntsStruct * data = *dataPtr;    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
twoIntsStruct * data = *dataPtr;
twoIntsStruct * data = *dataPtr;
twoIntsStruct
twoIntsStruct
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(12,14,0)
(3,2,0)
(14,2,0)
(8,1,0)
(1,10,0)
(0,4,0)
(13,0,0)
(14,12,0)
(0,1,0)
(5,4,0)
(12,4,0)
(9,2,0)
(2,14,0)
(6,13,0)
(7,0,0)
(13,4,0)
(1,0,0)
(2,0,0)
(6,12,1)
(13,0,1)
(1,8,1)
(0,1,1)
(3,0,1)
(12,14,1)
(8,7,1)
(9,3,1)
(2,0,1)
(13,6,1)
(2,9,1)
(14,2,1)
(11,13,1)
(1,10,1)
(2,0,2)
(1,10,2)
(14,2,2)
(0,1,2)
(13,0,2)
(12,14,2)
-----------------------------------
(0,* data = *dataPtr)
(1,*dataPtr)
(2,data[0])
(3,data)
(4,)
(5,data)
(6,data)
(7,data)
(8,dataPtr)
(9,0)
(10,twoIntsStruct * * dataPtr)
(11,RET)
(12,printStructLine(&data[0])
(13,free(data)
(14,&data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^