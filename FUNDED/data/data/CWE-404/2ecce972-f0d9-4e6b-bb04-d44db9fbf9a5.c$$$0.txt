-----label-----
1
-----code-----
void arch_pick_mmap_layout(struct mm_struct *mm)
{
	unsigned long random_factor = 0UL;

	if ((current->flags & PF_RANDOMIZE) &&
	    !(current->personality & ADDR_NO_RANDOMIZE))
		random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT;

	if (mmap_is_legacy()) {
		mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;
		mm->get_unmapped_area = arch_get_unmapped_area;
	} else {
		mm->mmap_base = mmap_base(random_factor);
		mm->get_unmapped_area = arch_get_unmapped_area_topdown;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
17,18
19,20
19,21
20,21
20,22
21,22
22,23
22,24
23,24
23,25
24,25
27,28
29,30
30,31
31,32
31,33
32,33
32,34
33,34
36,37
38,39
39,40
39,41
40,41
42,43
42,44
43,44
44,45
44,46
45,46
46,47
48,49
49,50
49,51
50,51
51,52
51,53
53,54
56,57
58,59
58,60
58,61
59,60
60,61
62,63
62,64
63,64
64,65
64,66
65,66
65,67
66,67
69,70
69,71
70,71
72,73
74,75
75,76
75,77
76,77
76,78
77,78
80,81
82,83
82,84
83,84
84,85
84,86
85,86
85,87
86,87
89,90
89,91
90,91
92,93
94,95
95,96
95,97
96,97
96,98
97,98
100,101
-----nextToken-----
2,4,7,9,10,14,16,18,25,26,28,34,35,37,41,47,52,54,55,57,61,67,68,71,73,78,79,81,87,88,91,93,98,99,101
-----computeFrom-----
20,21
20,22
22,23
22,24
31,32
31,33
39,40
39,41
42,43
42,44
44,45
44,46
49,50
49,51
51,52
51,53
64,65
64,66
69,70
69,71
75,76
75,77
84,85
84,86
95,96
95,97
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;
-----ast_node-----
void arch_pick_mmap_layout(struct mm_struct *mm){	unsigned long random_factor = 0UL;	if ((current->flags & PF_RANDOMIZE) &&	    !(current->personality & ADDR_NO_RANDOMIZE))		random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT;	if (mmap_is_legacy()) {		mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;		mm->get_unmapped_area = arch_get_unmapped_area;	} else {		mm->mmap_base = mmap_base(random_factor);		mm->get_unmapped_area = arch_get_unmapped_area_topdown;	}}
void
arch_pick_mmap_layout(struct mm_struct *mm)
arch_pick_mmap_layout
struct mm_struct *mm
struct mm_struct
mm_struct
*mm
*
mm
{	unsigned long random_factor = 0UL;	if ((current->flags & PF_RANDOMIZE) &&	    !(current->personality & ADDR_NO_RANDOMIZE))		random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT;	if (mmap_is_legacy()) {		mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;		mm->get_unmapped_area = arch_get_unmapped_area;	} else {		mm->mmap_base = mmap_base(random_factor);		mm->get_unmapped_area = arch_get_unmapped_area_topdown;	}}
unsigned long random_factor = 0UL;
unsigned long random_factor = 0UL;
unsigned long
random_factor = 0UL
random_factor
= 0UL
0UL
if ((current->flags & PF_RANDOMIZE) &&	    !(current->personality & ADDR_NO_RANDOMIZE))		random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT;
(current->flags & PF_RANDOMIZE) &&	    !(current->personality & ADDR_NO_RANDOMIZE)
(current->flags & PF_RANDOMIZE)
current->flags & PF_RANDOMIZE
current->flags
current
current
flags
PF_RANDOMIZE
PF_RANDOMIZE
!(current->personality & ADDR_NO_RANDOMIZE)
(current->personality & ADDR_NO_RANDOMIZE)
current->personality & ADDR_NO_RANDOMIZE
current->personality
current
current
personality
ADDR_NO_RANDOMIZE
ADDR_NO_RANDOMIZE
random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT;
random_factor = (get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT
random_factor
random_factor
(get_random_long() & ((1UL << mmap_rnd_bits) - 1)) << PAGE_SHIFT
(get_random_long() & ((1UL << mmap_rnd_bits) - 1))
get_random_long() & ((1UL << mmap_rnd_bits) - 1)
get_random_long()
get_random_long
get_random_long
((1UL << mmap_rnd_bits) - 1)
(1UL << mmap_rnd_bits) - 1
(1UL << mmap_rnd_bits)
1UL << mmap_rnd_bits
1UL
mmap_rnd_bits
mmap_rnd_bits
1
PAGE_SHIFT
PAGE_SHIFT
if (mmap_is_legacy()) {		mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;		mm->get_unmapped_area = arch_get_unmapped_area;	} else {		mm->mmap_base = mmap_base(random_factor);		mm->get_unmapped_area = arch_get_unmapped_area_topdown;	}
mmap_is_legacy()
mmap_is_legacy
mmap_is_legacy
{		mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;		mm->get_unmapped_area = arch_get_unmapped_area;	}
mm->mmap_base = TASK_UNMAPPED_BASE + random_factor;
mm->mmap_base = TASK_UNMAPPED_BASE + random_factor
mm->mmap_base
mm
mm
mmap_base
TASK_UNMAPPED_BASE + random_factor
TASK_UNMAPPED_BASE
TASK_UNMAPPED_BASE
random_factor
random_factor
mm->get_unmapped_area = arch_get_unmapped_area;
mm->get_unmapped_area = arch_get_unmapped_area
mm->get_unmapped_area
mm
mm
get_unmapped_area
arch_get_unmapped_area
arch_get_unmapped_area
{		mm->mmap_base = mmap_base(random_factor);		mm->get_unmapped_area = arch_get_unmapped_area_topdown;	}
mm->mmap_base = mmap_base(random_factor);
mm->mmap_base = mmap_base(random_factor)
mm->mmap_base
mm
mm
mmap_base
mmap_base(random_factor)
mmap_base
mmap_base
random_factor
random_factor
mm->get_unmapped_area = arch_get_unmapped_area_topdown;
mm->get_unmapped_area = arch_get_unmapped_area_topdown
mm->get_unmapped_area
mm
mm
get_unmapped_area
arch_get_unmapped_area_topdown
arch_get_unmapped_area_topdown
-----joern-----
(5,14,0)
(43,22,0)
(20,54,0)
(41,39,0)
(44,38,0)
(12,13,0)
(56,50,0)
(8,6,0)
(33,54,0)
(25,44,0)
(55,38,0)
(54,20,0)
(19,56,0)
(19,1,0)
(23,27,0)
(40,14,0)
(29,26,0)
(34,37,0)
(47,26,0)
(54,28,0)
(3,8,0)
(33,13,0)
(49,21,0)
(2,45,0)
(32,1,0)
(26,37,0)
(14,30,0)
(45,55,0)
(15,37,0)
(0,20,0)
(20,1,0)
(7,1,0)
(41,17,0)
(53,8,0)
(9,32,0)
(44,21,0)
(32,26,0)
(14,17,0)
(52,6,0)
(48,22,0)
(18,27,0)
(46,41,0)
(8,17,0)
(38,55,0)
(27,45,0)
(22,17,0)
(30,32,0)
(19,26,0)
(22,56,0)
(6,4,0)
(30,4,0)
(51,13,0)
(45,27,0)
(21,44,0)
(39,50,0)
(1,20,0)
(57,21,0)
(13,33,0)
(54,33,0)
(31,19,0)
(16,41,0)
(38,44,0)
(55,45,0)
(56,19,0)
(35,37,0)
(10,33,0)
(32,30,0)
(28,54,0)
(42,19,0)
(24,39,0)
(39,24,1)
(46,16,1)
(9,14,1)
(53,30,1)
(31,42,1)
(33,10,1)
(30,32,1)
(55,45,1)
(52,8,1)
(2,27,1)
(1,20,1)
(20,0,1)
(18,26,1)
(36,39,1)
(12,28,1)
(28,7,1)
(0,54,1)
(25,21,1)
(11,1,1)
(44,25,1)
(6,52,1)
(27,23,1)
(19,1,1)
(45,27,1)
(57,49,1)
(19,26,1)
(23,18,1)
(7,55,1)
(3,53,1)
(21,57,1)
(32,1,1)
(16,56,1)
(8,17,1)
(13,51,1)
(20,54,1)
(36,6,1)
(5,40,1)
(32,26,1)
(41,17,1)
(56,19,1)
(55,38,1)
(40,11,1)
(43,48,1)
(38,44,1)
(41,46,1)
(14,17,1)
(11,55,1)
(45,2,1)
(19,31,1)
(48,11,1)
(22,43,1)
(44,21,1)
(24,41,1)
(51,12,1)
(14,5,1)
(49,45,1)
(54,28,1)
(8,3,1)
(32,9,1)
(33,13,1)
(10,13,1)
(26,47,1)
(22,17,1)
(47,29,1)
(54,33,1)
(42,22,1)
(56,11,2)
(38,45,2)
(13,55,2)
(44,21,2)
(52,11,2)
(22,17,2)
(32,1,2)
(30,32,2)
(41,17,2)
(5,11,2)
(24,11,2)
(55,45,2)
(46,11,2)
(8,17,2)
(32,26,2)
(54,55,2)
(49,45,2)
(38,44,2)
(45,27,2)
(43,11,2)
(14,11,2)
(56,19,2)
(32,11,2)
(16,11,2)
(57,45,2)
(54,33,2)
(42,11,2)
(41,11,2)
(30,11,2)
(39,11,2)
(54,28,2)
(33,55,2)
(25,45,2)
(40,11,2)
(21,45,2)
(48,11,2)
(22,11,2)
(19,11,2)
(19,26,2)
(8,11,2)
(9,11,2)
(3,11,2)
(51,55,2)
(14,17,2)
(10,55,2)
(33,13,2)
(53,11,2)
(28,55,2)
(44,45,2)
(31,11,2)
(19,1,2)
(0,55,2)
(1,20,2)
(6,11,2)
(20,54,2)
(20,55,2)
(12,55,2)
(1,55,2)
(55,38,2)
(7,55,2)
-----------------------------------
(0,PAGE_SHIFT)
(1,random_factor = (get_random_long()
(2,PF_RANDOMIZE)
(3,get_unmapped_area)
(4,)
(5,mmap_base)
(6,mm->get_unmapped_area = arch_get_unmapped_area_topdown)
(7,random_factor)
(8,mm->get_unmapped_area)
(9,random_factor)
(10,1)
(11,mmap_is_legacy()
(12,1UL)
(13,1UL << mmap_rnd_bits)
(14,mm->mmap_base)
(15,random_factor)
(16,mm)
(17,struct mm_struct *mm)
(18,current)
(19,TASK_UNMAPPED_BASE + random_factor)
(20,(get_random_long()
(21,current->personality)
(22,mm->mmap_base)
(23,flags)
(24,arch_get_unmapped_area)
(25,ADDR_NO_RANDOMIZE)
(26,random_factor = 0UL)
(27,current->flags)
(28,get_random_long()
(29,random_factor)
(30,mm->mmap_base = mmap_base(random_factor)
(31,random_factor)
(32,mmap_base(random_factor)
(33,(1UL << mmap_rnd_bits)
(34,if ((current->flags & PF_RANDOMIZE)
(35,if (mmap_is_legacy()
(36,RET)
(37,)
(38,!(current->personality & ADDR_NO_RANDOMIZE)
(39,mm->get_unmapped_area = arch_get_unmapped_area)
(40,mm)
(41,mm->get_unmapped_area)
(42,TASK_UNMAPPED_BASE)
(43,mmap_base)
(44,current->personality & ADDR_NO_RANDOMIZE)
(45,current->flags & PF_RANDOMIZE)
(46,get_unmapped_area)
(47,0UL)
(48,mm)
(49,current)
(50,)
(51,mmap_rnd_bits)
(52,arch_get_unmapped_area_topdown)
(53,mm)
(54,get_random_long()
(55,(current->flags & PF_RANDOMIZE)
(56,mm->mmap_base = TASK_UNMAPPED_BASE + random_factor)
(57,personality)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^