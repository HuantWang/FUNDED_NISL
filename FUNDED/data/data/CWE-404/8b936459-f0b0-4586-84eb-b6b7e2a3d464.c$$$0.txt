-----label-----
1
-----code-----
void sa11x0_restart(enum reboot_mode mode, const char *cmd)
{
	clear_reset_status(RESET_STATUS_ALL);
	if (mode == 's') {
		/* Jump into ROM at address 0 */
		soft_restart(0);
	} else {
		/* Use on-chip reset capability */
		RSRR = RSRR_SWR;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
10,11
10,12
12,13
12,14
15,16
15,17
16,17
17,18
17,19
18,19
20,21
21,22
23,24
23,25
23,26
24,25
24,26
25,26
28,29
29,30
30,31
30,32
31,32
34,35
35,36
36,37
36,38
37,38
39,40
-----nextToken-----
2,4,7,9,11,13,14,19,22,26,27,32,33,38,40
-----computeFrom-----
24,25
24,26
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void sa11x0_restart(enum reboot_mode mode, const char *cmd){	clear_reset_status(RESET_STATUS_ALL);	if (mode == 's') {		/* Jump into ROM at address 0 */		soft_restart(0);	} else {		/* Use on-chip reset capability */		RSRR = RSRR_SWR;	}}
void
sa11x0_restart(enum reboot_mode mode, const char *cmd)
sa11x0_restart
enum reboot_mode mode
enum reboot_mode
reboot_mode
mode
mode
const char *cmd
const char
*cmd
*
cmd
{	clear_reset_status(RESET_STATUS_ALL);	if (mode == 's') {		/* Jump into ROM at address 0 */		soft_restart(0);	} else {		/* Use on-chip reset capability */		RSRR = RSRR_SWR;	}}
clear_reset_status(RESET_STATUS_ALL);
clear_reset_status(RESET_STATUS_ALL);
clear_reset_status
clear_reset_status
(RESET_STATUS_ALL)
RESET_STATUS_ALL
RESET_STATUS_ALL
if (mode == 's') {		/* Jump into ROM at address 0 */		soft_restart(0);	} else {		/* Use on-chip reset capability */		RSRR = RSRR_SWR;	}
mode == 's'
mode
mode
's'
{		/* Jump into ROM at address 0 */		soft_restart(0);	}
soft_restart(0);
soft_restart(0)
soft_restart
soft_restart
0
{		/* Use on-chip reset capability */		RSRR = RSRR_SWR;	}
RSRR = RSRR_SWR;
RSRR = RSRR_SWR
RSRR
RSRR
RSRR_SWR
RSRR_SWR
-----joern-----
(5,4,0)
(0,2,0)
(12,5,0)
(1,10,0)
(7,1,0)
(13,11,0)
(8,1,0)
(11,9,0)
(3,14,0)
(6,11,0)
(2,14,0)
(15,1,1)
(6,2,1)
(2,0,1)
(7,11,1)
(5,12,1)
(13,6,1)
(12,11,1)
(11,9,1)
(1,8,1)
(8,7,1)
(15,5,1)
(11,13,1)
(5,11,2)
(8,11,2)
(7,11,2)
(12,11,2)
(1,11,2)
(11,9,2)
-----------------------------------
(0,RESET_STATUS_ALL)
(1,RSRR = RSRR_SWR)
(2,clear_reset_status(RESET_STATUS_ALL)
(3,if (mode == 's')
(4,)
(5,soft_restart(0)
(6,mode)
(7,RSRR)
(8,RSRR_SWR)
(9,enum reboot_mode mode)
(10,)
(11,mode == 's')
(12,0)
(13,'s')
(14,)
(15,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^