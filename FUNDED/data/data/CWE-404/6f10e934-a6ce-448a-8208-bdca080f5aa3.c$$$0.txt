-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink(char * dataArray[])
{
    /* copy data out of dataArray */
    char * data = dataArray[2];
    printLine(data);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,22,26,28,32,34
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink(char * dataArray[]){    /* copy data out of dataArray */    char * data = dataArray[2];    printLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink(char * dataArray[])
CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink
char * dataArray[]
char
* dataArray[]
*
dataArray
[]
{    /* copy data out of dataArray */    char * data = dataArray[2];    printLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
char * data = dataArray[2];
char * data = dataArray[2];
char
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(12,7,0)
(6,4,0)
(0,2,0)
(3,7,0)
(6,7,0)
(2,7,0)
(3,5,0)
(10,6,0)
(2,5,0)
(7,5,0)
(7,6,0)
(1,6,0)
(9,5,0)
(11,3,0)
(3,11,1)
(2,0,1)
(8,2,1)
(1,12,1)
(6,10,1)
(3,7,1)
(11,7,1)
(0,3,1)
(10,1,1)
(2,7,1)
(6,4,1)
(7,6,1)
(6,4,2)
(2,7,2)
(3,7,2)
(7,6,2)
-----------------------------------
(0,data)
(1,dataArray)
(2,free(data)
(3,printLine(data)
(4,char * dataArray[])
(5,)
(6,dataArray[2])
(7,* data = dataArray[2])
(8,RET)
(9,data)
(10,2)
(11,data)
(12,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^