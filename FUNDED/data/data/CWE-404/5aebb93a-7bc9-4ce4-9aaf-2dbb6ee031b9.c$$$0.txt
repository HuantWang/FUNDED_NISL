-----label-----
1
-----code-----
void
pmap_release(struct pmap *pmap)
{
	vm_page_t p,n,ptdpg;
	vm_object_t object = pmap->pm_pteobj;
	int curgeneration;

#if defined(DIAGNOSTIC)
	if (object->ref_count != 1)
		panic("pmap_release: pteobj reference count != 1");
#endif

	ptdpg = NULL;
retry:
	crit_enter();
	curgeneration = object->generation;
	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {
		n = TAILQ_NEXT(p, listq);
		if (p->pindex == PTDPTDI) {
			ptdpg = p;
			continue;
		}
		while (1) {
			if (!pmap_release_free_page(pmap, p) &&
			    (object->generation != curgeneration)) {
				crit_exit();
				goto retry;
			}
		}
	}
	crit_exit();

	if (ptdpg && !pmap_release_free_page(pmap, ptdpg))
		goto retry;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
12,13
13,14
13,15
13,16
13,17
14,15
16,17
18,19
20,21
22,23
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
34,35
34,36
36,37
38,39
39,40
39,41
40,41
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
58,59
58,60
58,61
58,62
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
67,68
67,69
68,69
71,72
71,73
72,73
74,75
76,77
76,78
77,78
79,80
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
86,89
87,88
89,90
91,92
93,94
93,95
94,95
94,96
95,96
95,97
96,97
99,100
101,102
101,103
102,103
103,104
103,105
104,105
106,107
109,110
109,111
111,112
112,113
112,114
113,114
113,115
114,115
115,116
115,117
115,118
116,117
118,119
120,121
122,123
123,124
123,125
124,125
124,126
125,126
128,129
130,131
130,132
131,132
132,133
133,134
135,136
137,138
138,139
139,140
141,142
141,143
142,143
142,144
143,144
145,146
146,147
146,148
146,149
147,148
149,150
151,152
153,154
-----nextToken-----
2,4,7,9,10,15,17,19,21,25,27,31,32,35,37,41,43,45,49,53,56,57,62,65,69,70,73,75,78,80,85,88,90,92,97,98,100,105,107,108,110,117,119,121,126,127,129,134,136,140,144,148,150,152,154
-----computeFrom-----
39,40
39,41
51,52
51,53
60,61
60,62
71,72
71,73
76,77
76,78
83,84
83,85
94,95
94,96
103,104
103,105
113,114
113,115
123,124
123,125
142,143
142,144
-----guardedBy-----
97,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ContinueStatement;WhileStatement;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;GotoStatement;Name;
-----ast_node-----
voidpmap_release(struct pmap *pmap){	vm_page_t p,n,ptdpg;	vm_object_t object = pmap->pm_pteobj;	int curgeneration;#if defined(DIAGNOSTIC)	if (object->ref_count != 1)		panic("pmap_release: pteobj reference count != 1");#endif	ptdpg = NULL;retry:	crit_enter();	curgeneration = object->generation;	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		while (1) {			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}	}	crit_exit();	if (ptdpg && !pmap_release_free_page(pmap, ptdpg))		goto retry;}
void
pmap_release(struct pmap *pmap)
pmap_release
struct pmap *pmap
struct pmap
pmap
*pmap
*
pmap
{	vm_page_t p,n,ptdpg;	vm_object_t object = pmap->pm_pteobj;	int curgeneration;#if defined(DIAGNOSTIC)	if (object->ref_count != 1)		panic("pmap_release: pteobj reference count != 1");#endif	ptdpg = NULL;retry:	crit_enter();	curgeneration = object->generation;	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		while (1) {			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}	}	crit_exit();	if (ptdpg && !pmap_release_free_page(pmap, ptdpg))		goto retry;}
vm_page_t p,n,ptdpg;
vm_page_t p,n,ptdpg;
vm_page_t
vm_page_t
p
p
n
n
ptdpg
ptdpg
vm_object_t object = pmap->pm_pteobj;
vm_object_t object = pmap->pm_pteobj;
vm_object_t
vm_object_t
object = pmap->pm_pteobj
object
= pmap->pm_pteobj
pmap->pm_pteobj
pmap
pmap
pm_pteobj
int curgeneration;
int curgeneration;
int
curgeneration
curgeneration
ptdpg = NULL;
ptdpg = NULL
ptdpg
ptdpg
NULL
NULL
retry:	crit_enter();
retry
crit_enter();
crit_enter()
crit_enter
crit_enter
curgeneration = object->generation;
curgeneration = object->generation
curgeneration
curgeneration
object->generation
object
object
generation
for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		while (1) {			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}	}
p = TAILQ_FIRST(&object->memq);
p = TAILQ_FIRST(&object->memq)
p
p
TAILQ_FIRST(&object->memq)
TAILQ_FIRST
TAILQ_FIRST
&object->memq
object->memq
object
object
memq
p != NULL
p
p
NULL
NULL
p = n
p
p
n
n
{		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		while (1) {			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}	}
n = TAILQ_NEXT(p, listq);
n = TAILQ_NEXT(p, listq)
n
n
TAILQ_NEXT(p, listq)
TAILQ_NEXT
TAILQ_NEXT
p
p
listq
listq
if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}
p->pindex == PTDPTDI
p->pindex
p
p
pindex
PTDPTDI
PTDPTDI
{			ptdpg = p;			continue;		}
ptdpg = p;
ptdpg = p
ptdpg
ptdpg
p
p
continue;
while (1) {			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}
1
{			if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}		}
if (!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)) {				crit_exit();				goto retry;			}
!pmap_release_free_page(pmap, p) &&			    (object->generation != curgeneration)
!pmap_release_free_page(pmap, p)
pmap_release_free_page(pmap, p)
pmap_release_free_page
pmap_release_free_page
pmap
pmap
p
p
(object->generation != curgeneration)
object->generation != curgeneration
object->generation
object
object
generation
curgeneration
curgeneration
{				crit_exit();				goto retry;			}
crit_exit();
crit_exit()
crit_exit
crit_exit
goto retry;
retry
crit_exit();
crit_exit()
crit_exit
crit_exit
if (ptdpg && !pmap_release_free_page(pmap, ptdpg))		goto retry;
ptdpg && !pmap_release_free_page(pmap, ptdpg)
ptdpg
ptdpg
!pmap_release_free_page(pmap, ptdpg)
pmap_release_free_page(pmap, ptdpg)
pmap_release_free_page
pmap_release_free_page
pmap
pmap
ptdpg
ptdpg
goto retry;
retry
-----joern-----
(68,63,0)
(64,10,0)
(75,68,0)
(15,70,0)
(47,46,0)
(33,30,0)
(65,1,0)
(1,68,0)
(7,75,0)
(14,76,0)
(19,45,0)
(49,27,0)
(57,31,0)
(76,68,0)
(69,27,0)
(86,27,0)
(76,25,0)
(10,64,0)
(40,32,0)
(37,79,0)
(81,71,0)
(44,84,0)
(56,46,0)
(75,25,0)
(83,10,0)
(6,51,0)
(21,46,0)
(34,45,0)
(31,50,0)
(36,25,0)
(81,66,0)
(63,75,0)
(72,46,0)
(9,81,0)
(16,54,0)
(10,50,0)
(86,9,0)
(25,6,0)
(13,46,0)
(51,80,0)
(51,6,0)
(86,71,0)
(50,54,0)
(74,54,0)
(80,50,0)
(22,64,0)
(1,25,0)
(76,33,0)
(5,46,0)
(12,86,0)
(27,25,0)
(61,31,0)
(17,23,0)
(39,71,0)
(54,50,0)
(67,76,0)
(55,31,0)
(30,32,0)
(62,36,0)
(43,68,0)
(53,63,0)
(24,46,0)
(79,36,0)
(71,46,0)
(81,27,0)
(20,73,0)
(28,80,0)
(58,10,0)
(75,63,0)
(87,71,0)
(2,46,0)
(30,33,0)
(32,64,0)
(50,46,0)
(31,57,0)
(33,76,0)
(80,51,0)
(85,46,0)
(60,36,0)
(11,80,0)
(41,75,0)
(4,70,0)
(45,50,0)
(76,66,0)
(6,25,0)
(38,81,0)
(8,46,0)
(29,68,0)
(18,57,0)
(42,1,0)
(32,30,0)
(59,46,0)
(64,46,0)
(77,50,0)
(9,86,0)
(0,48,0)
(45,32,0)
(81,9,0)
(26,73,0)
(82,25,0)
(32,45,0)
(27,84,0)
(3,81,0)
(36,68,0)
(54,66,0)
(36,79,0)
(63,70,0)
(27,68,0)
(53,1,1)
(42,65,1)
(86,12,1)
(60,63,1)
(76,68,1)
(32,40,1)
(20,26,1)
(12,2,1)
(79,37,1)
(58,22,1)
(67,14,1)
(34,19,1)
(37,36,1)
(71,39,1)
(54,16,1)
(36,68,1)
(39,87,1)
(23,17,1)
(64,10,1)
(87,23,1)
(68,63,1)
(31,61,1)
(3,12,1)
(24,71,1)
(75,41,1)
(27,69,1)
(31,50,1)
(1,42,1)
(1,68,1)
(81,71,1)
(19,33,1)
(24,20,1)
(80,50,1)
(6,51,1)
(63,75,1)
(86,27,1)
(35,86,1)
(11,82,1)
(24,52,1)
(81,27,1)
(55,50,1)
(33,76,1)
(7,53,1)
(57,18,1)
(79,36,1)
(57,31,1)
(29,43,1)
(76,25,1)
(51,80,1)
(45,50,1)
(83,58,1)
(32,45,1)
(82,64,1)
(45,34,1)
(9,81,1)
(10,50,1)
(43,44,1)
(27,25,1)
(10,83,1)
(62,60,1)
(87,57,1)
(40,45,1)
(61,55,1)
(76,66,1)
(32,64,1)
(30,33,1)
(2,1,1)
(30,32,1)
(38,3,1)
(25,6,1)
(80,28,1)
(65,68,1)
(76,67,1)
(86,9,1)
(75,68,1)
(68,29,1)
(14,78,1)
(54,66,1)
(41,7,1)
(36,25,1)
(50,54,1)
(75,25,1)
(18,31,1)
(16,74,1)
(43,78,1)
(44,27,1)
(26,30,1)
(28,11,1)
(27,68,1)
(78,79,1)
(81,66,1)
(74,77,1)
(36,62,1)
(65,25,1)
(22,24,1)
(49,79,1)
(17,57,1)
(69,49,1)
(52,86,1)
(86,71,1)
(1,25,1)
(81,38,1)
(78,30,1)
(81,12,2)
(60,1,2)
(51,30,2)
(64,30,2)
(69,79,2)
(20,30,2)
(32,33,2)
(25,6,2)
(33,78,2)
(31,50,2)
(82,86,2)
(32,45,2)
(81,27,2)
(29,79,2)
(49,79,2)
(86,27,2)
(51,86,2)
(75,68,2)
(51,80,2)
(68,79,2)
(76,66,2)
(7,1,2)
(65,1,2)
(86,71,2)
(25,30,2)
(57,31,2)
(14,78,2)
(10,50,2)
(78,30,2)
(36,25,2)
(1,86,2)
(10,30,2)
(52,86,2)
(40,33,2)
(58,86,2)
(22,30,2)
(65,86,2)
(76,25,2)
(30,33,2)
(80,30,2)
(41,1,2)
(24,30,2)
(83,30,2)
(6,86,2)
(24,86,2)
(6,30,2)
(79,36,2)
(81,71,2)
(3,12,2)
(11,86,2)
(63,1,2)
(32,64,2)
(9,81,2)
(75,25,2)
(68,63,2)
(64,10,2)
(27,79,2)
(82,30,2)
(38,12,2)
(58,30,2)
(45,50,2)
(63,75,2)
(10,86,2)
(43,79,2)
(2,86,2)
(64,86,2)
(67,78,2)
(17,57,2)
(86,86,2)
(80,86,2)
(79,1,2)
(45,33,2)
(80,50,2)
(36,68,2)
(1,25,2)
(30,78,2)
(62,1,2)
(1,68,2)
(29,78,2)
(25,86,2)
(28,30,2)
(6,51,2)
(28,86,2)
(19,33,2)
(9,12,2)
(22,86,2)
(42,1,2)
(12,86,2)
(76,68,2)
(78,79,2)
(34,33,2)
(26,30,2)
(50,54,2)
(75,1,2)
(42,86,2)
(37,1,2)
(33,76,2)
(30,32,2)
(68,78,2)
(44,79,2)
(43,78,2)
(54,66,2)
(81,66,2)
(1,1,2)
(83,86,2)
(86,9,2)
(27,68,2)
(76,78,2)
(36,1,2)
(53,1,2)
(11,30,2)
(27,25,2)
(23,57,2)
-----------------------------------
(0,if (!pmap_release_free_page(pmap, p)
(1,p != NULL)
(2,crit_exit()
(3,pmap)
(4,if (p->pindex == PTDPTDI)
(5,n)
(6,TAILQ_FIRST(&object->memq)
(7,p)
(8,object)
(9,!pmap_release_free_page(pmap, ptdpg)
(10,object->generation)
(11,object)
(12,ptdpg)
(13,if (object->ref_count != 1)
(14,pmap)
(15,while (1)
(16,pm_pteobj)
(17,"pmap_release: pteobj reference count != 1")
(18,1)
(19,object)
(20,goto retry;)
(21,p)
(22,curgeneration)
(23,panic("pmap_release: pteobj reference count != 1")
(24,crit_enter()
(25,p = TAILQ_FIRST(&object->memq)
(26,crit_exit()
(27,ptdpg = p)
(28,memq)
(29,n)
(30,!pmap_release_free_page(pmap, p)
(31,object->ref_count)
(32,object->generation != curgeneration)
(33,!pmap_release_free_page(pmap, p)
(34,generation)
(35,RET)
(36,p->pindex)
(37,PTDPTDI)
(38,ptdpg)
(39,NULL)
(40,curgeneration)
(41,listq)
(42,NULL)
(43,p)
(44,continue;)
(45,object->generation)
(46,)
(47,for (p = TAILQ_FIRST(&object->memq)
(48,)
(49,ptdpg)
(50,object = pmap->pm_pteobj)
(51,&object->memq)
(52,goto retry;)
(53,n)
(54,pmap->pm_pteobj)
(55,object)
(56,curgeneration)
(57,object->ref_count != 1)
(58,object)
(59,if (ptdpg && !pmap_release_free_page(pmap, ptdpg)
(60,p)
(61,ref_count)
(62,pindex)
(63,n = TAILQ_NEXT(p, listq)
(64,curgeneration = object->generation)
(65,p)
(66,struct pmap *pmap)
(67,p)
(68,p = n)
(69,p)
(70,)
(71,ptdpg = NULL)
(72,retry:)
(73,)
(74,pmap)
(75,TAILQ_NEXT(p, listq)
(76,pmap_release_free_page(pmap, p)
(77,object)
(78,1)
(79,p->pindex == PTDPTDI)
(80,object->memq)
(81,pmap_release_free_page(pmap, ptdpg)
(82,p)
(83,generation)
(84,)
(85,ptdpg)
(86,ptdpg && !pmap_release_free_page(pmap, ptdpg)
(87,ptdpg)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^