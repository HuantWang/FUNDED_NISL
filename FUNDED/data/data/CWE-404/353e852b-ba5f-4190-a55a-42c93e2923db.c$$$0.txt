-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = fopen("BadSource_fopen.txt", "w+");
    if(globalFive==5)
    {
        if (data != NULL)
        {
            /* FIX: Close the file using fclose() */
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,31,32,37,39,44,46
-----computeFrom-----
14,15
14,16
20,21
20,22
29,30
29,31
35,36
35,37
-----guardedBy-----
37,46
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    if(globalFive==5)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    if(globalFive==5)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(globalFive==5)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
globalFive==5
globalFive
globalFive
5
{        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            /* FIX: Close the file using fclose() */            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(18,12,0)
(9,14,0)
(6,14,0)
(16,5,0)
(4,18,0)
(11,12,0)
(17,7,0)
(22,21,0)
(8,18,0)
(12,18,0)
(0,11,0)
(14,5,0)
(12,5,0)
(19,5,0)
(10,12,0)
(3,12,0)
(13,11,0)
(2,7,0)
(1,3,0)
(3,15,0)
(17,2,1)
(2,12,1)
(12,18,1)
(10,14,1)
(0,7,1)
(4,8,1)
(8,10,1)
(3,12,1)
(6,9,1)
(1,11,1)
(3,1,1)
(20,11,1)
(14,6,1)
(11,12,1)
(11,13,1)
(20,7,1)
(20,3,1)
(18,4,1)
(7,17,1)
(13,0,1)
(0,7,2)
(13,7,2)
(3,12,2)
(12,18,2)
(3,11,2)
(1,11,2)
(11,12,2)
(11,7,2)
-----------------------------------
(0,data)
(1,data)
(2,globalFive)
(3,fclose(data)
(4,"w+")
(5,)
(6,NULL)
(7,globalFive==5)
(8,"BadSource_fopen.txt")
(9,data)
(10,data)
(11,data != NULL)
(12,data = fopen("BadSource_fopen.txt", "w+")
(13,NULL)
(14,data = NULL)
(15,)
(16,data)
(17,5)
(18,fopen("BadSource_fopen.txt", "w+")
(19,if(globalFive==5)
(20,RET)
(21,)
(22,if (data != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^