-----label-----
1
-----code-----
double
getpcpu(const KINFO *k)
{
	const struct proc *p;
	static int failure;

	if (!nlistread)
		failure = donlist();
	if (failure)
		return (0.0);

	p = KI_PROC(k);
#define	fxtofl(fixpt)	((double)(fixpt) / fscale)

	/* XXX - I don't like this */
	if (p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT))
		return (0.0);
	if (rawcpu)
		return (100.0 * fxtofl(p->p_pctcpu));
	return (100.0 * fxtofl(p->p_pctcpu) /
		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))));
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
22,23
24,25
24,26
25,26
26,27
28,29
29,30
29,31
30,31
32,33
33,34
35,36
35,37
36,37
38,39
39,40
41,42
42,43
42,44
43,44
45,46
45,47
46,47
48,49
50,51
50,52
51,52
51,53
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
60,62
61,62
64,65
66,67
67,68
69,70
69,71
70,71
72,73
73,74
74,75
74,76
76,77
77,78
77,79
78,79
78,80
79,80
79,81
82,83
83,84
83,85
84,85
87,88
89,90
90,91
91,92
91,93
92,93
92,94
94,95
95,96
95,97
96,97
96,98
97,98
97,99
100,101
101,102
101,103
102,103
105,106
107,108
108,109
108,110
110,111
110,112
111,112
113,114
113,115
114,115
114,116
115,116
118,119
118,120
119,120
121,122
122,123
122,124
123,124
123,125
124,125
124,126
127,128
128,129
130,131
-----nextToken-----
2,4,7,9,10,15,17,18,21,23,27,31,34,37,40,44,47,49,55,56,57,62,63,65,68,71,75,80,81,85,86,88,93,98,99,103,104,106,109,112,116,117,120,125,126,129,131
-----computeFrom-----
29,30
29,31
42,43
42,44
51,52
51,53
52,53
52,54
59,60
59,61
74,75
74,76
77,78
77,79
91,92
91,93
92,93
92,94
95,96
95,97
108,109
108,110
113,114
113,115
122,123
122,124
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;UnaryExpression;LiteralExpression;IfStatement;IdExpression;Name;ReturnStatement;UnaryExpression;BinaryExpression;LiteralExpression;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;UnaryExpression;BinaryExpression;BinaryExpression;LiteralExpression;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
doublegetpcpu(const KINFO *k){	const struct proc *p;	static int failure;	if (!nlistread)		failure = donlist();	if (failure)		return (0.0);	p = KI_PROC(k);#define	fxtofl(fixpt)	((double)(fixpt) / fscale)	/* XXX - I don't like this */	if (p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT))		return (0.0);	if (rawcpu)		return (100.0 * fxtofl(p->p_pctcpu));	return (100.0 * fxtofl(p->p_pctcpu) /		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))));}
double
getpcpu(const KINFO *k)
getpcpu
const KINFO *k
const KINFO
KINFO
*k
*
k
{	const struct proc *p;	static int failure;	if (!nlistread)		failure = donlist();	if (failure)		return (0.0);	p = KI_PROC(k);#define	fxtofl(fixpt)	((double)(fixpt) / fscale)	/* XXX - I don't like this */	if (p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT))		return (0.0);	if (rawcpu)		return (100.0 * fxtofl(p->p_pctcpu));	return (100.0 * fxtofl(p->p_pctcpu) /		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))));}
const struct proc *p;
const struct proc *p;
const struct proc
proc
*p
*
p
static int failure;
static int failure;
static int
failure
failure
if (!nlistread)		failure = donlist();
!nlistread
nlistread
nlistread
failure = donlist();
failure = donlist()
failure
failure
donlist()
donlist
donlist
if (failure)		return (0.0);
failure
failure
return (0.0);
(0.0)
0.0
p = KI_PROC(k);
p = KI_PROC(k)
p
p
KI_PROC(k)
KI_PROC
KI_PROC
k
k
if (p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT))		return (0.0);
p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT)
p->p_swtime == 0
p->p_swtime
p
p
p_swtime
0
(p->p_flag & P_SWAPPEDOUT)
p->p_flag & P_SWAPPEDOUT
p->p_flag
p
p
p_flag
P_SWAPPEDOUT
P_SWAPPEDOUT
return (0.0);
(0.0)
0.0
if (rawcpu)		return (100.0 * fxtofl(p->p_pctcpu));
rawcpu
rawcpu
return (100.0 * fxtofl(p->p_pctcpu));
(100.0 * fxtofl(p->p_pctcpu))
100.0 * fxtofl(p->p_pctcpu)
100.0
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
return (100.0 * fxtofl(p->p_pctcpu) /		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))));
(100.0 * fxtofl(p->p_pctcpu) /		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))))
100.0 * fxtofl(p->p_pctcpu) /		(1.0 - exp(p->p_swtime * log(fxtofl(ccpu))))
100.0 * fxtofl(p->p_pctcpu)
100.0
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
fxtofl(p->p_pctcpu)
(1.0 - exp(p->p_swtime * log(fxtofl(ccpu))))
1.0 - exp(p->p_swtime * log(fxtofl(ccpu)))
1.0
exp(p->p_swtime * log(fxtofl(ccpu)))
exp
exp
p->p_swtime * log(fxtofl(ccpu))
p->p_swtime
p
p
p_swtime
log(fxtofl(ccpu))
log
log
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
fxtofl(ccpu)
-----joern-----
(28,51,0)
(13,49,0)
(35,22,0)
(4,43,0)
(17,0,0)
(18,5,0)
(44,6,0)
(10,33,0)
(43,50,0)
(41,22,0)
(55,59,0)
(10,21,0)
(22,41,0)
(1,50,0)
(44,12,0)
(52,19,0)
(3,50,0)
(54,53,0)
(51,40,0)
(10,59,0)
(58,36,0)
(14,1,0)
(40,41,0)
(19,1,0)
(45,11,0)
(59,10,0)
(20,6,0)
(0,43,0)
(40,18,0)
(25,36,0)
(29,53,0)
(8,3,0)
(39,38,0)
(31,36,0)
(51,21,0)
(47,50,0)
(41,40,0)
(24,36,0)
(23,36,0)
(38,39,0)
(42,1,0)
(39,53,0)
(53,50,0)
(43,0,0)
(27,56,0)
(22,50,0)
(11,16,0)
(40,51,0)
(1,19,0)
(21,51,0)
(26,59,0)
(5,36,0)
(50,36,0)
(19,52,0)
(34,18,0)
(44,49,0)
(57,36,0)
(33,30,0)
(59,50,0)
(15,30,0)
(0,52,0)
(32,22,0)
(44,5,0)
(48,43,0)
(53,39,0)
(50,3,0)
(30,33,0)
(21,10,0)
(38,12,0)
(16,11,0)
(3,2,0)
(33,10,0)
(46,38,0)
(9,19,0)
(52,0,0)
(18,40,0)
(14,42,1)
(22,50,1)
(51,21,1)
(42,0,1)
(10,33,1)
(47,7,1)
(44,12,1)
(54,29,1)
(52,19,1)
(41,22,1)
(5,18,1)
(3,8,1)
(53,54,1)
(19,1,1)
(38,39,1)
(13,7,1)
(52,0,1)
(1,14,1)
(37,52,1)
(7,11,1)
(0,43,1)
(15,59,1)
(21,10,1)
(46,37,1)
(48,50,1)
(44,6,1)
(19,9,1)
(59,50,1)
(43,4,1)
(59,55,1)
(1,50,1)
(34,37,1)
(16,45,1)
(39,53,1)
(28,41,1)
(40,41,1)
(43,50,1)
(18,40,1)
(7,56,1)
(56,27,1)
(11,16,1)
(49,13,1)
(6,20,1)
(33,30,1)
(10,59,1)
(44,5,1)
(12,38,1)
(29,46,1)
(55,26,1)
(35,32,1)
(40,51,1)
(0,17,1)
(8,47,1)
(4,48,1)
(3,2,1)
(44,49,1)
(30,15,1)
(20,52,1)
(50,3,1)
(22,35,1)
(53,50,1)
(45,56,1)
(17,43,1)
(32,34,1)
(26,28,1)
(9,1,1)
(14,0,2)
(53,37,2)
(18,40,2)
(21,10,2)
(10,33,2)
(34,37,2)
(3,2,2)
(47,7,2)
(10,37,2)
(16,56,2)
(55,37,2)
(40,41,2)
(10,59,2)
(40,37,2)
(35,37,2)
(1,0,2)
(44,6,2)
(59,37,2)
(5,37,2)
(11,56,2)
(22,50,2)
(8,7,2)
(21,37,2)
(22,37,2)
(50,7,2)
(44,5,2)
(43,7,2)
(30,37,2)
(51,37,2)
(4,7,2)
(44,12,2)
(41,22,2)
(6,52,2)
(39,53,2)
(13,7,2)
(38,37,2)
(42,0,2)
(19,0,2)
(12,37,2)
(33,30,2)
(0,43,2)
(48,7,2)
(44,49,2)
(26,37,2)
(52,0,2)
(39,37,2)
(59,50,2)
(54,37,2)
(49,7,2)
(0,7,2)
(20,52,2)
(18,37,2)
(41,37,2)
(15,37,2)
(52,19,2)
(29,37,2)
(45,56,2)
(43,50,2)
(33,37,2)
(32,37,2)
(40,51,2)
(46,37,2)
(38,39,2)
(50,3,2)
(19,1,2)
(3,7,2)
(52,7,2)
(1,50,2)
(53,50,2)
(37,52,2)
(9,0,2)
(51,21,2)
(28,37,2)
(11,16,2)
(17,7,2)
-----------------------------------
(0,p->p_swtime == 0)
(1,p->p_flag)
(2,const KINFO *k)
(3,KI_PROC(k)
(4,p_swtime)
(5,return (100.0 * fxtofl(p->p_pctcpu)
(6,return (0.0)
(7,failure)
(8,k)
(9,P_SWAPPEDOUT)
(10,p->p_swtime * log(fxtofl(ccpu)
(11,failure = donlist()
(12,return (100.0 * fxtofl(p->p_pctcpu)
(13,0.0)
(14,p_flag)
(15,ccpu)
(16,donlist()
(17,0)
(18,100.0 * fxtofl(p->p_pctcpu)
(19,p->p_flag & P_SWAPPEDOUT)
(20,0.0)
(21,exp(p->p_swtime * log(fxtofl(ccpu)
(22,p->p_pctcpu)
(23,if (failure)
(24,if (rawcpu)
(25,if (p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT)
(26,p)
(27,nlistread)
(28,1.0)
(29,p)
(30,fxtofl(ccpu)
(31,p)
(32,p)
(33,log(fxtofl(ccpu)
(34,100.0)
(35,p_pctcpu)
(36,)
(37,rawcpu)
(38,100.0 * fxtofl(p->p_pctcpu)
(39,fxtofl(p->p_pctcpu)
(40,fxtofl(p->p_pctcpu)
(41,fxtofl(p->p_pctcpu)
(42,p)
(43,p->p_swtime)
(44,RET)
(45,failure)
(46,100.0)
(47,p)
(48,p)
(49,return (0.0)
(50,p = KI_PROC(k)
(51,1.0 - exp(p->p_swtime * log(fxtofl(ccpu)
(52,p->p_swtime == 0 || (p->p_flag & P_SWAPPEDOUT)
(53,p->p_pctcpu)
(54,p_pctcpu)
(55,p_swtime)
(56,!nlistread)
(57,failure)
(58,if (!nlistread)
(59,p->p_swtime)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^