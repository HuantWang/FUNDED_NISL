-----label-----
0
-----code-----
static __inline int
getscheduler(register_t *ret, struct ksched *ksched, struct proc *p)
{
	int e = 0;

	switch (p->p_rtprio.type)
	{
		case RTP_PRIO_FIFO:
		*ret = SCHED_FIFO;
		break;

		case RTP_PRIO_REALTIME:
		*ret = SCHED_RR;
		break;

		default:
		*ret = SCHED_OTHER;
		break;
	}

	return e;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
23,26
24,25
25,26
25,27
27,28
27,29
29,30
31,32
31,33
32,33
32,34
33,34
33,35
34,35
38,39
38,40
38,41
38,42
38,43
38,44
38,45
38,46
38,47
39,40
40,41
42,43
43,44
43,45
44,45
45,46
47,48
50,51
51,52
53,54
54,55
54,56
55,56
56,57
58,59
62,63
63,64
63,65
64,65
65,66
67,68
70,71
71,72
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,26,28,30,35,36,37,41,46,48,49,52,57,59,60,61,66,68,69,72
-----computeFrom-----
43,44
43,45
54,55
54,56
63,64
63,65
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;SwitchStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;CompoundStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;ReturnStatement;IdExpression;Name;
-----ast_node-----
static __inline intgetscheduler(register_t *ret, struct ksched *ksched, struct proc *p){	int e = 0;	switch (p->p_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}	return e;}
static __inline int
getscheduler(register_t *ret, struct ksched *ksched, struct proc *p)
getscheduler
register_t *ret
register_t
register_t
*ret
*
ret
struct ksched *ksched
struct ksched
ksched
*ksched
*
ksched
struct proc *p
struct proc
proc
*p
*
p
{	int e = 0;	switch (p->p_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}	return e;}
int e = 0;
int e = 0;
int
e = 0
e
= 0
0
switch (p->p_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}
p->p_rtprio.type
p->p_rtprio
p
p
p_rtprio
type
{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}
case RTP_PRIO_FIFO:
RTP_PRIO_FIFO
RTP_PRIO_FIFO
*ret = SCHED_FIFO;
*ret = SCHED_FIFO
*ret
ret
ret
SCHED_FIFO
SCHED_FIFO
break;
case RTP_PRIO_REALTIME:
RTP_PRIO_REALTIME
RTP_PRIO_REALTIME
*ret = SCHED_RR;
*ret = SCHED_RR
*ret
ret
ret
SCHED_RR
SCHED_RR
break;
default:
*ret = SCHED_OTHER;
*ret = SCHED_OTHER
*ret
ret
ret
SCHED_OTHER
SCHED_OTHER
break;
return e;
e
e
-----joern-----
(10,17,0)
(25,11,0)
(23,18,0)
(28,31,0)
(30,12,0)
(33,21,0)
(13,17,0)
(7,12,0)
(1,30,0)
(10,11,0)
(28,29,0)
(3,21,0)
(19,4,0)
(8,4,0)
(0,4,0)
(18,27,0)
(34,28,0)
(15,4,0)
(21,20,0)
(18,29,0)
(5,4,0)
(9,4,0)
(21,3,0)
(22,10,0)
(6,21,0)
(32,10,0)
(30,29,0)
(26,3,0)
(12,4,0)
(31,4,0)
(16,31,0)
(11,17,0)
(27,4,0)
(24,11,0)
(14,17,0)
(2,27,0)
(2,18,1)
(16,28,1)
(25,24,1)
(18,23,1)
(19,12,1)
(28,29,1)
(12,7,1)
(18,29,1)
(28,34,1)
(10,11,1)
(22,19,1)
(3,21,1)
(6,11,1)
(23,3,1)
(7,30,1)
(8,27,1)
(33,6,1)
(30,29,1)
(1,3,1)
(0,31,1)
(30,1,1)
(34,3,1)
(21,33,1)
(22,8,1)
(27,2,1)
(31,16,1)
(3,26,1)
(21,20,1)
(26,21,1)
(22,0,1)
(32,10,1)
(10,22,1)
(11,25,1)
(10,11,2)
(28,29,2)
(3,21,2)
(18,3,2)
(32,10,2)
(16,3,2)
(7,3,2)
(34,3,2)
(30,3,2)
(27,3,2)
(18,29,2)
(28,3,2)
(1,3,2)
(12,3,2)
(2,3,2)
(8,3,2)
(23,3,2)
(30,29,2)
(31,3,2)
(19,3,2)
(0,3,2)
(21,20,2)
-----------------------------------
(0,break;)
(1,ret)
(2,SCHED_RR)
(3,p->p_rtprio.type)
(4,)
(5,case RTP_PRIO_REALTIME:)
(6,p)
(7,SCHED_FIFO)
(8,break;)
(9,default:)
(10,return e;)
(11,e = 0)
(12,*ret = SCHED_FIFO)
(13,e)
(14,switch (p->p_rtprio.type)
(15,case RTP_PRIO_FIFO:)
(16,SCHED_OTHER)
(17,)
(18,*ret)
(19,break;)
(20,struct proc *p)
(21,p->p_rtprio)
(22,e)
(23,ret)
(24,e)
(25,0)
(26,type)
(27,*ret = SCHED_RR)
(28,*ret)
(29,register_t *ret)
(30,*ret)
(31,*ret = SCHED_OTHER)
(32,RET)
(33,p_rtprio)
(34,ret)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^