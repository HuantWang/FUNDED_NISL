-----label-----
0
-----code-----
static int64_t * goodB2GSource(int64_t * data)
{
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (int64_t *)realloc(data, 100*sizeof(int64_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    data[0] = 5LL;
    printLongLongLine(data[0]);
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
14,15
15,16
15,17
16,17
18,19
18,20
19,20
19,21
20,21
22,23
24,25
24,26
24,27
25,26
27,28
29,30
29,31
31,32
32,33
32,34
33,34
36,37
36,38
37,38
37,39
38,39
40,41
42,43
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
51,53
52,53
56,57
57,58
57,59
58,59
60,61
60,62
61,62
64,65
65,66
-----nextToken-----
3,5,6,9,11,12,17,21,23,26,28,30,34,35,39,41,46,48,53,54,55,59,62,63,66
-----computeFrom-----
15,16
15,17
29,30
29,31
37,38
37,39
50,51
50,52
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;NamedTypeSpecifier;Name;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int64_t * goodB2GSource(int64_t * data){    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    return data;}
static int64_t
int64_t
* goodB2GSource(int64_t * data)
*
goodB2GSource
int64_t * data
int64_t
int64_t
* data
*
data
{    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (int64_t *)realloc(data, 100*sizeof(int64_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    data[0] = 5LL;    printLongLongLine(data[0]);    return data;}
data = (int64_t *)realloc(data, 100*sizeof(int64_t));
data = (int64_t *)realloc(data, 100*sizeof(int64_t))
data
data
(int64_t *)realloc(data, 100*sizeof(int64_t))
int64_t *
int64_t
int64_t
*
*
realloc(data, 100*sizeof(int64_t))
realloc
realloc
data
data
100*sizeof(int64_t)
100
sizeof(int64_t)
int64_t
int64_t
int64_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
data[0] = 5LL;
data[0] = 5LL
data[0]
data
data
0
5LL
printLongLongLine(data[0]);
printLongLongLine(data[0])
printLongLongLine
printLongLongLine
data[0]
data
data
0
return data;
data
data
-----joern-----
(5,10,0)
(15,26,0)
(18,27,0)
(24,16,0)
(3,4,0)
(14,10,0)
(4,27,0)
(12,27,0)
(7,16,0)
(9,2,0)
(12,5,0)
(19,12,0)
(18,12,0)
(5,12,0)
(22,5,0)
(16,24,0)
(4,12,0)
(20,0,0)
(21,2,0)
(16,27,0)
(26,10,0)
(13,1,0)
(10,27,0)
(11,4,0)
(8,18,0)
(1,6,0)
(17,13,0)
(0,26,0)
(4,2,0)
(10,5,0)
(10,26,0)
(12,2,0)
(16,12,0)
(26,0,0)
(5,22,0)
(25,18,0)
(1,13,0)
(23,16,0)
(24,2,0)
(18,27,1)
(1,13,1)
(23,21,1)
(25,12,1)
(10,26,1)
(4,27,1)
(8,25,1)
(13,17,1)
(10,27,1)
(16,27,1)
(14,19,1)
(18,8,1)
(16,7,1)
(21,1,1)
(7,23,1)
(15,14,1)
(4,11,1)
(0,20,1)
(17,18,1)
(18,12,1)
(4,12,1)
(5,10,1)
(12,5,1)
(20,15,1)
(21,18,1)
(11,24,1)
(16,12,1)
(12,27,1)
(26,0,1)
(24,16,1)
(5,22,1)
(3,4,1)
(1,18,2)
(18,12,2)
(3,4,2)
(16,12,2)
(10,27,2)
(12,27,2)
(5,10,2)
(1,13,2)
(13,18,2)
(26,0,2)
(10,26,2)
(24,16,2)
(5,22,2)
(16,27,2)
(4,12,2)
(18,27,2)
(17,18,2)
(4,27,2)
(12,5,2)
-----------------------------------
(0,sizeof(int64_t)
(1,exit(-1)
(2,)
(3,RET)
(4,return data;)
(5,(int64_t *)
(6,)
(7,0)
(8,NULL)
(9,if (data == NULL)
(10,realloc(data, 100*sizeof(int64_t)
(11,data)
(12,data = (int64_t *)
(13,-1)
(14,data)
(15,100)
(16,data[0])
(17,1)
(18,data == NULL)
(19,data)
(20,int64_t)
(21,L)
(22,int64_t *)
(23,data)
(24,printLongLongLine(data[0])
(25,data)
(26,100*sizeof(int64_t)
(27,int64_t * data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^