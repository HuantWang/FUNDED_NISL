-----label-----
0
-----code-----
static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
{
	struct t4_cqe cqe = {};
	struct c4iw_cq *rchp;
	unsigned long flag;
	struct t4_cq *cq;

	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);
	cq = &rchp->cq;

	cqe.u.drain_cookie = wr->wr_id;
	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |
				 CQE_OPCODE_V(FW_RI_SEND) |
				 CQE_TYPE_V(0) |
				 CQE_SWCQE_V(1) |
				 CQE_DRAIN_V(1) |
				 CQE_QPID_V(qhp->wq.sq.qid));

	spin_lock_irqsave(&rchp->lock, flag);
	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));
	cq->sw_queue[cq->sw_pidx] = cqe;
	t4_swcq_produce(cq);
	spin_unlock_irqrestore(&rchp->lock, flag);

	if (t4_clear_cq_armed(&rchp->cq)) {
		spin_lock_irqsave(&rchp->comp_handler_lock, flag);
		(*rchp->ibcq.comp_handler)(&rchp->ibcq,
					   rchp->ibcq.cq_context);
		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
17,25
17,26
17,27
17,28
17,29
17,30
17,31
18,19
19,20
19,21
20,21
22,23
22,24
24,25
26,27
27,28
27,29
28,29
30,31
30,32
33,34
34,35
34,36
36,37
38,39
39,40
39,41
40,41
42,43
42,44
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
70,72
71,72
75,76
75,77
76,77
79,80
80,81
80,82
81,82
81,83
82,83
85,86
85,87
86,87
88,89
88,90
89,90
89,91
90,91
90,92
91,92
91,93
92,93
92,94
93,94
93,95
94,95
96,97
98,99
98,100
99,100
101,102
103,104
103,105
104,105
107,108
107,109
108,109
111,112
111,113
112,113
115,116
115,117
116,117
118,119
118,120
119,120
119,121
120,121
120,122
121,122
126,127
127,128
127,129
127,130
128,129
130,131
131,132
131,133
132,133
135,136
137,138
138,139
138,140
139,140
139,141
140,141
143,144
143,145
144,145
146,147
146,148
147,148
149,150
149,151
150,151
150,152
151,152
154,155
154,156
155,156
158,159
159,160
159,161
160,161
160,162
161,162
161,163
162,163
165,166
165,167
166,167
169,170
171,172
172,173
172,174
173,174
175,176
177,178
178,179
178,180
178,181
179,180
181,182
182,183
182,184
183,184
186,187
188,189
188,190
189,190
189,191
190,191
192,193
193,194
193,195
194,195
197,198
197,199
197,200
198,199
199,200
199,201
199,202
200,201
202,203
203,204
203,205
204,205
207,208
209,210
210,211
210,212
210,213
211,212
212,213
213,214
213,215
214,215
214,216
215,216
219,220
220,221
220,222
221,222
224,225
224,226
225,226
225,227
226,227
230,231
231,232
231,233
231,234
232,233
234,235
235,236
235,237
236,237
239,240
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,25,29,31,32,35,37,41,43,44,48,51,55,56,57,61,65,66,72,73,74,77,78,83,84,87,95,97,100,102,105,106,109,110,113,114,117,122,123,124,125,129,133,134,136,141,142,145,148,152,153,156,157,163,164,167,168,170,174,176,180,184,185,187,191,195,196,201,205,206,208,216,217,218,222,223,227,228,229,233,237,238,240
-----computeFrom-----
46,47
46,48
59,60
59,61
68,69
68,70
80,81
80,82
88,89
88,90
89,90
89,91
90,91
90,92
91,92
91,93
92,93
92,94
138,139
138,140
159,160
159,161
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;InitializerList;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;
-----ast_node-----
static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr){	struct t4_cqe cqe = {};	struct c4iw_cq *rchp;	unsigned long flag;	struct t4_cq *cq;	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);	cq = &rchp->cq;	cqe.u.drain_cookie = wr->wr_id;	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));	spin_lock_irqsave(&rchp->lock, flag);	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));	cq->sw_queue[cq->sw_pidx] = cqe;	t4_swcq_produce(cq);	spin_unlock_irqrestore(&rchp->lock, flag);	if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}}
static void
complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
complete_rq_drain_wr
struct c4iw_qp *qhp
struct c4iw_qp
c4iw_qp
*qhp
*
qhp
struct ib_recv_wr *wr
struct ib_recv_wr
ib_recv_wr
*wr
*
wr
{	struct t4_cqe cqe = {};	struct c4iw_cq *rchp;	unsigned long flag;	struct t4_cq *cq;	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);	cq = &rchp->cq;	cqe.u.drain_cookie = wr->wr_id;	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));	spin_lock_irqsave(&rchp->lock, flag);	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));	cq->sw_queue[cq->sw_pidx] = cqe;	t4_swcq_produce(cq);	spin_unlock_irqrestore(&rchp->lock, flag);	if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}}
struct t4_cqe cqe = {};
struct t4_cqe cqe = {};
struct t4_cqe
t4_cqe
cqe = {}
cqe
= {}
{}
struct c4iw_cq *rchp;
struct c4iw_cq *rchp;
struct c4iw_cq
c4iw_cq
*rchp
*
rchp
unsigned long flag;
unsigned long flag;
unsigned long
flag
flag
struct t4_cq *cq;
struct t4_cq *cq;
struct t4_cq
t4_cq
*cq
*
cq
rchp = to_c4iw_cq(qhp->ibqp.recv_cq);
rchp = to_c4iw_cq(qhp->ibqp.recv_cq)
rchp
rchp
to_c4iw_cq(qhp->ibqp.recv_cq)
to_c4iw_cq
to_c4iw_cq
qhp->ibqp.recv_cq
qhp->ibqp
qhp
qhp
ibqp
recv_cq
cq = &rchp->cq;
cq = &rchp->cq
cq
cq
&rchp->cq
rchp->cq
rchp
rchp
cq
cqe.u.drain_cookie = wr->wr_id;
cqe.u.drain_cookie = wr->wr_id
cqe.u.drain_cookie
cqe.u
cqe
cqe
u
drain_cookie
wr->wr_id
wr
wr
wr_id
cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));
cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid))
cqe.header
cqe
cqe
header
cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid))
cpu_to_be32
cpu_to_be32
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_DRAIN_V(1)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND) |				 CQE_TYPE_V(0)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(FW_RI_SEND)
CQE_STATUS_V(T4_ERR_SWFLUSH)
CQE_STATUS_V
CQE_STATUS_V
T4_ERR_SWFLUSH
T4_ERR_SWFLUSH
CQE_OPCODE_V(FW_RI_SEND)
CQE_OPCODE_V
CQE_OPCODE_V
FW_RI_SEND
FW_RI_SEND
CQE_TYPE_V(0)
CQE_TYPE_V
CQE_TYPE_V
0
CQE_SWCQE_V(1)
CQE_SWCQE_V
CQE_SWCQE_V
1
CQE_DRAIN_V(1)
CQE_DRAIN_V
CQE_DRAIN_V
1
CQE_QPID_V(qhp->wq.sq.qid)
CQE_QPID_V
CQE_QPID_V
qhp->wq.sq.qid
qhp->wq.sq
qhp->wq
qhp
qhp
wq
sq
qid
spin_lock_irqsave(&rchp->lock, flag);
spin_lock_irqsave(&rchp->lock, flag)
spin_lock_irqsave
spin_lock_irqsave
&rchp->lock
rchp->lock
rchp
rchp
lock
flag
flag
cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));
cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen))
cqe.bits_type_ts
cqe
cqe
bits_type_ts
cpu_to_be64(CQE_GENBIT_V((u64)cq->gen))
cpu_to_be64
cpu_to_be64
CQE_GENBIT_V((u64)cq->gen)
CQE_GENBIT_V
CQE_GENBIT_V
(u64)cq->gen
u64
u64
u64

cq->gen
cq
cq
gen
cq->sw_queue[cq->sw_pidx] = cqe;
cq->sw_queue[cq->sw_pidx] = cqe
cq->sw_queue[cq->sw_pidx]
cq->sw_queue
cq
cq
sw_queue
cq->sw_pidx
cq
cq
sw_pidx
cqe
cqe
t4_swcq_produce(cq);
t4_swcq_produce(cq)
t4_swcq_produce
t4_swcq_produce
cq
cq
spin_unlock_irqrestore(&rchp->lock, flag);
spin_unlock_irqrestore(&rchp->lock, flag)
spin_unlock_irqrestore
spin_unlock_irqrestore
&rchp->lock
rchp->lock
rchp
rchp
lock
flag
flag
if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}
t4_clear_cq_armed(&rchp->cq)
t4_clear_cq_armed
t4_clear_cq_armed
&rchp->cq
rchp->cq
rchp
rchp
cq
{		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}
spin_lock_irqsave(&rchp->comp_handler_lock, flag);
spin_lock_irqsave(&rchp->comp_handler_lock, flag)
spin_lock_irqsave
spin_lock_irqsave
&rchp->comp_handler_lock
rchp->comp_handler_lock
rchp
rchp
comp_handler_lock
flag
flag
(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);
(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context)
(*rchp->ibcq.comp_handler)
*rchp->ibcq.comp_handler
rchp->ibcq.comp_handler
rchp->ibcq
rchp
rchp
ibcq
comp_handler
&rchp->ibcq
rchp->ibcq
rchp
rchp
ibcq
rchp->ibcq.cq_context
rchp->ibcq
rchp
rchp
ibcq
cq_context
spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);
spin_unlock_irqrestore(&rchp->comp_handler_lock, flag)
spin_unlock_irqrestore
spin_unlock_irqrestore
&rchp->comp_handler_lock
rchp->comp_handler_lock
rchp
rchp
comp_handler_lock
flag
flag
-----joern-----
(103,66,0)
(48,113,0)
(112,54,0)
(78,113,0)
(100,85,0)
(36,13,0)
(81,46,0)
(85,100,0)
(115,21,0)
(76,25,0)
(0,57,0)
(23,58,0)
(0,33,0)
(30,14,0)
(45,100,0)
(116,27,0)
(46,1,0)
(110,22,0)
(1,46,0)
(113,115,0)
(93,102,0)
(95,85,0)
(4,70,0)
(6,58,0)
(5,102,0)
(26,90,0)
(91,9,0)
(89,95,0)
(37,12,0)
(105,61,0)
(111,91,0)
(22,33,0)
(70,4,0)
(101,58,0)
(55,20,0)
(117,119,0)
(13,47,0)
(31,28,0)
(90,26,0)
(35,115,0)
(39,109,0)
(6,53,0)
(93,95,0)
(100,115,0)
(21,66,0)
(21,115,0)
(70,1,0)
(114,115,0)
(119,87,0)
(95,58,0)
(80,58,0)
(3,101,0)
(57,0,0)
(77,40,0)
(62,26,0)
(34,14,0)
(40,63,0)
(46,61,0)
(63,58,0)
(36,70,0)
(104,20,0)
(8,68,0)
(106,13,0)
(48,79,0)
(63,40,0)
(0,16,0)
(57,114,0)
(118,58,0)
(86,68,0)
(19,35,0)
(59,36,0)
(79,58,0)
(74,83,0)
(102,5,0)
(18,88,0)
(81,91,0)
(107,57,0)
(7,98,0)
(54,95,0)
(120,83,0)
(73,40,0)
(60,106,0)
(33,22,0)
(50,31,0)
(1,88,0)
(64,62,0)
(12,98,0)
(82,20,0)
(115,58,0)
(38,68,0)
(49,60,0)
(25,58,0)
(14,6,0)
(87,35,0)
(51,79,0)
(53,6,0)
(29,59,0)
(75,7,0)
(102,94,0)
(42,4,0)
(20,115,0)
(36,59,0)
(113,48,0)
(47,13,0)
(71,93,0)
(83,63,0)
(44,7,0)
(94,53,0)
(96,93,0)
(87,119,0)
(114,57,0)
(31,115,0)
(108,47,0)
(20,104,0)
(26,62,0)
(33,0,0)
(15,49,0)
(9,91,0)
(11,113,0)
(10,114,0)
(91,81,0)
(65,31,0)
(61,46,0)
(53,94,0)
(88,1,0)
(83,120,0)
(79,48,0)
(94,102,0)
(102,93,0)
(69,58,0)
(85,95,0)
(41,58,0)
(62,115,0)
(27,16,0)
(99,120,0)
(72,115,0)
(60,58,0)
(86,109,0)
(86,54,0)
(109,58,0)
(25,95,0)
(66,21,0)
(35,87,0)
(66,12,0)
(121,22,0)
(7,9,0)
(68,86,0)
(97,54,0)
(40,43,0)
(119,16,0)
(27,28,0)
(32,9,0)
(46,81,0)
(70,36,0)
(13,106,0)
(56,120,0)
(106,60,0)
(22,115,0)
(68,95,0)
(104,101,0)
(12,66,0)
(67,62,0)
(9,7,0)
(52,12,0)
(2,100,0)
(84,49,0)
(28,27,0)
(13,36,0)
(17,35,0)
(101,104,0)
(1,70,0)
(28,31,0)
(54,86,0)
(24,114,0)
(54,112,1)
(0,33,1)
(116,28,1)
(95,85,1)
(40,43,1)
(42,59,1)
(117,87,1)
(13,36,1)
(51,48,1)
(70,4,1)
(46,61,1)
(36,59,1)
(77,83,1)
(32,7,1)
(37,72,1)
(61,105,1)
(106,13,1)
(11,25,1)
(35,17,1)
(48,113,1)
(20,115,1)
(3,104,1)
(27,116,1)
(25,95,1)
(1,88,1)
(67,64,1)
(82,55,1)
(57,114,1)
(85,100,1)
(12,52,1)
(20,82,1)
(1,46,1)
(115,21,1)
(9,32,1)
(86,54,1)
(66,12,1)
(84,15,1)
(93,95,1)
(31,115,1)
(119,87,1)
(92,27,1)
(83,74,1)
(15,63,1)
(71,96,1)
(114,10,1)
(110,119,1)
(53,94,1)
(111,9,1)
(99,95,1)
(62,115,1)
(6,53,1)
(101,104,1)
(76,109,1)
(46,81,1)
(4,42,1)
(121,110,1)
(35,115,1)
(68,95,1)
(114,115,1)
(24,33,1)
(112,97,1)
(75,44,1)
(49,84,1)
(92,90,1)
(13,47,1)
(39,86,1)
(7,75,1)
(54,95,1)
(107,114,1)
(40,73,1)
(63,40,1)
(91,9,1)
(12,98,1)
(52,37,1)
(26,62,1)
(8,54,1)
(17,19,1)
(104,20,1)
(105,88,1)
(29,47,1)
(79,51,1)
(100,115,1)
(87,35,1)
(14,30,1)
(0,57,1)
(28,31,1)
(62,67,1)
(38,8,1)
(90,26,1)
(89,115,1)
(68,38,1)
(113,78,1)
(83,120,1)
(102,93,1)
(74,120,1)
(65,0,1)
(55,60,1)
(22,115,1)
(22,121,1)
(108,49,1)
(36,70,1)
(45,89,1)
(59,29,1)
(97,6,1)
(78,11,1)
(86,68,1)
(10,24,1)
(7,98,1)
(93,71,1)
(50,65,1)
(79,48,1)
(91,111,1)
(21,66,1)
(100,2,1)
(18,4,1)
(73,77,1)
(120,56,1)
(70,1,1)
(47,108,1)
(109,39,1)
(19,90,1)
(113,115,1)
(31,50,1)
(44,61,1)
(101,3,1)
(96,14,1)
(119,117,1)
(103,12,1)
(2,45,1)
(56,99,1)
(60,106,1)
(88,18,1)
(25,76,1)
(30,34,1)
(66,103,1)
(81,91,1)
(102,5,1)
(57,107,1)
(27,28,1)
(33,22,1)
(34,101,1)
(64,79,1)
(9,7,1)
(94,102,1)
(0,57,2)
(66,12,2)
(83,120,2)
(85,100,2)
(35,90,2)
(102,5,2)
(10,90,2)
(60,106,2)
(1,88,2)
(0,90,2)
(13,36,2)
(107,90,2)
(40,43,2)
(35,115,2)
(17,90,2)
(25,95,2)
(13,47,2)
(7,98,2)
(20,115,2)
(48,113,2)
(100,115,2)
(86,68,2)
(95,85,2)
(104,20,2)
(93,95,2)
(12,98,2)
(65,90,2)
(54,95,2)
(53,94,2)
(27,90,2)
(101,104,2)
(36,59,2)
(62,115,2)
(1,46,2)
(24,90,2)
(33,90,2)
(79,48,2)
(6,53,2)
(114,90,2)
(70,4,2)
(110,90,2)
(117,90,2)
(36,70,2)
(46,81,2)
(121,90,2)
(57,114,2)
(63,40,2)
(31,90,2)
(119,87,2)
(46,61,2)
(116,90,2)
(119,90,2)
(50,90,2)
(90,26,2)
(91,9,2)
(68,95,2)
(102,93,2)
(106,13,2)
(81,91,2)
(86,54,2)
(87,35,2)
(22,90,2)
(113,115,2)
(27,28,2)
(22,115,2)
(9,7,2)
(70,1,2)
(33,22,2)
(0,33,2)
(57,90,2)
(28,90,2)
(28,31,2)
(19,90,2)
(31,115,2)
(115,21,2)
(26,62,2)
(21,66,2)
(87,90,2)
(114,115,2)
(94,102,2)
-----------------------------------
(0,(*rchp->ibcq.comp_handler)
(1,CQE_SWCQE_V(1)
(2,cq)
(3,flag)
(4,CQE_TYPE_V(0)
(5,u64)
(6,cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)
(7,qhp->wq)
(8,cq)
(9,qhp->wq.sq)
(10,ibcq)
(11,rchp)
(12,qhp->ibqp)
(13,CQE_STATUS_V(T4_ERR_SWFLUSH)
(14,cqe.bits_type_ts)
(15,cqe)
(16,)
(17,comp_handler_lock)
(18,1)
(19,rchp)
(20,rchp->lock)
(21,to_c4iw_cq(qhp->ibqp.recv_cq)
(22,rchp->ibcq)
(23,if (t4_clear_cq_armed(&rchp->cq)
(24,rchp)
(25,t4_swcq_produce(cq)
(26,&rchp->cq)
(27,spin_unlock_irqrestore(&rchp->comp_handler_lock, flag)
(28,&rchp->comp_handler_lock)
(29,FW_RI_SEND)
(30,bits_type_ts)
(31,rchp->comp_handler_lock)
(32,sq)
(33,&rchp->ibcq)
(34,cqe)
(35,rchp->comp_handler_lock)
(36,CQE_OPCODE_V(FW_RI_SEND)
(37,qhp)
(38,sw_pidx)
(39,cqe)
(40,wr->wr_id)
(41,cq)
(42,0)
(43,struct ib_recv_wr *wr)
(44,qhp)
(45,rchp)
(46,CQE_DRAIN_V(1)
(47,CQE_STATUS_V(T4_ERR_SWFLUSH)
(48,&rchp->lock)
(49,cqe.header)
(50,comp_handler_lock)
(51,flag)
(52,ibqp)
(53,cpu_to_be64(CQE_GENBIT_V((u64)
(54,cq->sw_queue)
(55,rchp)
(56,u)
(57,rchp->ibcq.cq_context)
(58,)
(59,CQE_OPCODE_V(FW_RI_SEND)
(60,cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH)
(61,CQE_DRAIN_V(1)
(62,rchp->cq)
(63,cqe.u.drain_cookie = wr->wr_id)
(64,rchp)
(65,rchp)
(66,qhp->ibqp.recv_cq)
(67,cq)
(68,cq->sw_pidx)
(69,)
(70,CQE_TYPE_V(0)
(71,gen)
(72,rchp)
(73,wr_id)
(74,drain_cookie)
(75,wq)
(76,cq)
(77,wr)
(78,lock)
(79,spin_unlock_irqrestore(&rchp->lock, flag)
(80,rchp)
(81,CQE_QPID_V(qhp->wq.sq.qid)
(82,lock)
(83,cqe.u.drain_cookie)
(84,header)
(85,&rchp->cq)
(86,cq->sw_queue[cq->sw_pidx])
(87,&rchp->comp_handler_lock)
(88,CQE_SWCQE_V(1)
(89,cq)
(90,t4_clear_cq_armed(&rchp->cq)
(91,qhp->wq.sq.qid)
(92,RET)
(93,cq->gen)
(94,CQE_GENBIT_V((u64)
(95,cq = &rchp->cq)
(96,cq)
(97,cq)
(98,struct c4iw_qp *qhp)
(99,cqe)
(100,rchp->cq)
(101,spin_lock_irqsave(&rchp->lock, flag)
(102,(u64)
(103,recv_cq)
(104,&rchp->lock)
(105,1)
(106,cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH)
(107,cq_context)
(108,T4_ERR_SWFLUSH)
(109,cq->sw_queue[cq->sw_pidx] = cqe)
(110,rchp)
(111,qid)
(112,sw_queue)
(113,rchp->lock)
(114,rchp->ibcq)
(115,rchp = to_c4iw_cq(qhp->ibqp.recv_cq)
(116,flag)
(117,flag)
(118,flag)
(119,spin_lock_irqsave(&rchp->comp_handler_lock, flag)
(120,cqe.u)
(121,ibcq)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^