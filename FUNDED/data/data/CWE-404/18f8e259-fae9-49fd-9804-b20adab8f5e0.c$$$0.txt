-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = freopen("BadSource_freopen.txt","w+",stdin);
    if(GLOBAL_CONST_TRUE)
    {
        if (data != NULL)
        {
            /* FIX: Close the file using fclose() */
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
23,27
24,25
28,29
30,31
30,32
31,32
33,34
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,29,32,37,39,44,46
-----computeFrom-----
14,15
14,16
20,21
20,22
35,36
35,37
-----guardedBy-----
37,46
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(GLOBAL_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(GLOBAL_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = freopen("BadSource_freopen.txt","w+",stdin);
data = freopen("BadSource_freopen.txt","w+",stdin)
data
data
freopen("BadSource_freopen.txt","w+",stdin)
freopen
freopen
"BadSource_freopen.txt"
"w+"
stdin
stdin
if(GLOBAL_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            /* FIX: Close the file using fclose() */            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(18,10,0)
(9,14,0)
(13,14,0)
(6,3,0)
(21,12,0)
(20,19,0)
(15,4,0)
(18,12,0)
(17,4,0)
(16,19,0)
(1,4,0)
(5,7,0)
(11,3,0)
(4,12,0)
(0,18,0)
(12,19,0)
(12,4,0)
(14,19,0)
(3,12,0)
(2,18,1)
(12,4,1)
(3,12,1)
(0,3,1)
(1,15,1)
(2,8,1)
(11,8,1)
(6,11,1)
(8,12,1)
(18,0,1)
(21,14,1)
(3,6,1)
(4,1,1)
(9,13,1)
(17,21,1)
(14,9,1)
(18,12,1)
(15,17,1)
(2,3,1)
(12,4,2)
(18,12,2)
(3,12,2)
(11,8,2)
(0,3,2)
(6,8,2)
(3,8,2)
(18,3,2)
-----------------------------------
(0,data)
(1,stdin)
(2,RET)
(3,data != NULL)
(4,freopen("BadSource_freopen.txt","w+",stdin)
(5,if (data != NULL)
(6,NULL)
(7,)
(8,GLOBAL_CONST_TRUE)
(9,NULL)
(10,)
(11,data)
(12,data = freopen("BadSource_freopen.txt","w+",stdin)
(13,data)
(14,data = NULL)
(15,"w+")
(16,data)
(17,"BadSource_freopen.txt")
(18,fclose(data)
(19,)
(20,if(GLOBAL_CONST_TRUE)
(21,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^