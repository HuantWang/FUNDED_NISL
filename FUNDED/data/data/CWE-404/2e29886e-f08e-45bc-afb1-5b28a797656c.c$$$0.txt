-----label-----
1
-----code-----
static int
linux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
{
	int error;

	error = 0;
	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))
		error = EIO;
	else
		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,
		    fpxregs, sizeof(*fpxregs));
	return (error);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
28,29
28,30
28,31
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
36,37
36,38
37,38
40,41
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
53,54
53,55
54,55
54,56
55,56
55,57
56,57
56,58
57,58
63,64
65,66
66,67
67,68
68,69
70,71
71,72
72,73
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,26,27,32,33,38,39,41,45,47,51,58,59,60,61,62,64,69,73
-----computeFrom-----
24,25
24,26
29,30
29,31
30,31
30,32
35,36
35,37
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
38,58
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static intlinux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs){	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));	return (error);}
static int
linux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
linux_proc_read_fpxregs
struct proc *p
struct proc
proc
*p
*
p
struct linux_pt_fpxreg *fpxregs
struct linux_pt_fpxreg
linux_pt_fpxreg
*fpxregs
*
fpxregs
{	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));	return (error);}
int error;
int error;
int
error
error
error = 0;
error = 0
error
error
0
if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));
cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
cpu_fxsr == 0
cpu_fxsr
cpu_fxsr
0
(p->p_flag & P_SWAPPEDOUT)
p->p_flag & P_SWAPPEDOUT
p->p_flag
p
p
p_flag
P_SWAPPEDOUT
P_SWAPPEDOUT
error = EIO;
error = EIO
error
error
EIO
EIO
bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));
bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs))
bcopy
bcopy
&p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save
p->p_thread->td_pcb
p->p_thread
p
p
p_thread
td_pcb
pcb_save
sv_xmm
fpxregs
fpxregs
sizeof(*fpxregs)
(*fpxregs)
*fpxregs
fpxregs
fpxregs
return (error);
(error)
error
error
-----joern-----
(13,31,0)
(23,1,0)
(31,26,0)
(15,34,0)
(21,20,0)
(31,17,0)
(5,36,0)
(1,26,0)
(20,37,0)
(34,33,0)
(22,26,0)
(28,17,0)
(19,15,0)
(37,20,0)
(29,3,0)
(37,32,0)
(32,5,0)
(8,2,0)
(5,32,0)
(30,34,0)
(15,36,0)
(11,31,0)
(34,15,0)
(8,10,0)
(14,32,0)
(10,12,0)
(32,37,0)
(12,7,0)
(12,10,0)
(31,1,0)
(35,33,0)
(4,1,0)
(24,15,0)
(12,2,0)
(0,8,0)
(16,26,0)
(6,17,0)
(3,7,0)
(9,5,0)
(25,5,0)
(27,12,0)
(33,3,0)
(10,8,0)
(7,12,0)
(33,34,0)
(18,20,0)
(3,33,0)
(7,3,0)
(37,32,1)
(29,33,1)
(17,28,1)
(11,17,1)
(31,11,1)
(5,36,1)
(33,34,1)
(0,27,1)
(6,37,1)
(31,17,1)
(9,20,1)
(34,15,1)
(24,37,1)
(19,24,1)
(37,20,1)
(25,9,1)
(3,33,1)
(15,36,1)
(33,35,1)
(32,5,1)
(32,14,1)
(35,34,1)
(12,10,1)
(5,25,1)
(28,6,1)
(23,4,1)
(12,7,1)
(20,18,1)
(7,3,1)
(1,23,1)
(30,15,1)
(34,30,1)
(15,19,1)
(8,0,1)
(21,1,1)
(3,29,1)
(13,31,1)
(12,2,1)
(14,5,1)
(8,2,1)
(31,1,1)
(10,8,1)
(27,7,1)
(11,12,1)
(18,21,1)
(24,37,2)
(31,1,2)
(5,20,2)
(35,37,2)
(7,37,2)
(13,31,2)
(34,15,2)
(12,37,2)
(10,8,2)
(37,20,2)
(3,37,2)
(5,36,2)
(29,37,2)
(3,33,2)
(31,17,2)
(19,37,2)
(8,2,2)
(28,37,2)
(12,10,2)
(8,37,2)
(10,37,2)
(33,34,2)
(9,20,2)
(34,37,2)
(25,20,2)
(0,37,2)
(7,3,2)
(12,2,2)
(32,5,2)
(30,37,2)
(32,20,2)
(17,37,2)
(15,37,2)
(14,20,2)
(12,7,2)
(15,36,2)
(27,37,2)
(33,37,2)
(37,32,2)
(6,37,2)
-----------------------------------
(0,fpxregs)
(1,error = 0)
(2,struct linux_pt_fpxreg *fpxregs)
(3,p->p_thread->td_pcb->pcb_save.sv_xmm)
(4,error)
(5,p->p_flag)
(6,error)
(7,&p->p_thread->td_pcb->pcb_save.sv_xmm)
(8,*fpxregs)
(9,p)
(10,sizeof(*fpxregs)
(11,error)
(12,bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,\n\\n\\t\\t    fpxregs, sizeof(*fpxregs)
(13,RET)
(14,P_SWAPPEDOUT)
(15,p->p_thread)
(16,error)
(17,error = EIO)
(18,0)
(19,p_thread)
(20,cpu_fxsr == 0)
(21,cpu_fxsr)
(22,if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
(23,0)
(24,p)
(25,p_flag)
(26,)
(27,fpxregs)
(28,EIO)
(29,sv_xmm)
(30,td_pcb)
(31,return (error)
(32,p->p_flag & P_SWAPPEDOUT)
(33,p->p_thread->td_pcb->pcb_save)
(34,p->p_thread->td_pcb)
(35,pcb_save)
(36,struct proc *p)
(37,cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^