-----label-----
0
-----code-----
static int wait_pciephy_busy(void)
{
	unsigned long reg_value = 0x0, retry = 0;

	while (1) {
		reg_value = pcie_r32(PCIEPHY0_CFG);

		if (reg_value & BUSY)
			mdelay(100);
		else
			break;
		if (retry++ > WAITRETRY_MAX) {
			printk(KERN_WARN "PCIE-PHY retry failed.\n");
			return -1;
		}
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
10,11
11,12
11,13
11,14
13,14
13,15
15,16
17,18
17,19
19,20
21,22
21,23
23,24
23,25
23,26
24,25
25,26
25,27
26,27
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
45,46
45,47
46,47
46,48
47,48
48,49
50,51
52,53
52,54
53,54
54,55
55,56
57,58
-----nextToken-----
2,4,6,8,12,14,16,18,20,22,27,30,32,36,38,42,43,44,49,51,56,58
-----computeFrom-----
25,26
25,27
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;Declarator;Name;EqualsInitializer;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ProblemStatement;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static int wait_pciephy_busy(void){	unsigned long reg_value = 0x0, retry = 0;	while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}	}	return 0;}
static int
wait_pciephy_busy(void)
wait_pciephy_busy
void
void


{	unsigned long reg_value = 0x0, retry = 0;	while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}	}	return 0;}
unsigned long reg_value = 0x0, retry = 0;
unsigned long reg_value = 0x0, retry = 0;
unsigned long
reg_value = 0x0
reg_value
= 0x0
0x0
retry = 0
retry
= 0
0
while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}	}
1
{		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}	}
reg_value = pcie_r32(PCIEPHY0_CFG);
reg_value = pcie_r32(PCIEPHY0_CFG)
reg_value
reg_value
pcie_r32(PCIEPHY0_CFG)
pcie_r32
pcie_r32
PCIEPHY0_CFG
PCIEPHY0_CFG
if (reg_value & BUSY)			mdelay(100);		else			break;
reg_value & BUSY
reg_value
reg_value
BUSY
BUSY
mdelay(100);
mdelay(100)
mdelay
mdelay
100
break;
if (retry++ > WAITRETRY_MAX) {			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}
retry++ > WAITRETRY_MAX
retry++
retry
retry
WAITRETRY_MAX
WAITRETRY_MAX
{			printk(KERN_WARN "PCIE-PHY retry failed.\n");			return -1;		}
printk(KERN_WARN "PCIE-PHY retry failed.\n");
return -1;
-1
1
return 0;
0
-----joern-----
(20,1,0)
(3,7,0)
(0,1,0)
(31,10,0)
(34,19,0)
(9,12,0)
(12,5,0)
(28,2,0)
(15,20,0)
(10,20,0)
(22,11,0)
(23,11,0)
(19,2,0)
(11,23,0)
(26,1,0)
(25,20,0)
(11,7,0)
(6,7,0)
(29,10,0)
(21,14,0)
(27,9,0)
(20,15,0)
(7,2,0)
(4,23,0)
(32,2,0)
(30,19,0)
(16,17,0)
(17,2,0)
(24,15,0)
(18,2,0)
(8,17,0)
(34,12,0)
(24,25,1)
(3,6,1)
(10,31,1)
(21,10,1)
(9,27,1)
(15,24,1)
(23,11,1)
(13,7,1)
(34,12,1)
(29,20,1)
(6,17,1)
(27,23,1)
(19,30,1)
(12,9,1)
(17,16,1)
(30,13,1)
(11,7,1)
(10,20,1)
(23,4,1)
(30,33,1)
(31,29,1)
(34,19,1)
(11,22,1)
(13,23,1)
(20,15,1)
(7,3,1)
(14,21,1)
(33,10,1)
(16,8,1)
(22,14,1)
(4,11,1)
(25,13,1)
(9,23,2)
(19,13,2)
(33,10,2)
(23,10,2)
(30,10,2)
(15,13,2)
(23,11,2)
(4,10,2)
(31,13,2)
(25,13,2)
(34,12,2)
(20,13,2)
(24,13,2)
(34,19,2)
(10,13,2)
(10,20,2)
(22,10,2)
(27,23,2)
(12,23,2)
(19,10,2)
(14,10,2)
(29,13,2)
(21,10,2)
(11,10,2)
(11,7,2)
(30,13,2)
(13,23,2)
(20,15,2)
-----------------------------------
(0,if (reg_value & BUSY)
(1,)
(2,)
(3,0)
(4,WAITRETRY_MAX)
(5,)
(6,retry)
(7,retry = 0)
(8,reg_value)
(9,-1)
(10,reg_value & BUSY)
(11,retry++)
(12,return -1;)
(13,1)
(14,mdelay(100)
(15,pcie_r32(PCIEPHY0_CFG)
(16,0x0)
(17,reg_value = 0x0)
(18,while (1)
(19,return 0;)
(20,reg_value = pcie_r32(PCIEPHY0_CFG)
(21,100)
(22,retry)
(23,retry++ > WAITRETRY_MAX)
(24,PCIEPHY0_CFG)
(25,reg_value)
(26,if (retry++ > WAITRETRY_MAX)
(27,1)
(28,retry)
(29,reg_value)
(30,0)
(31,BUSY)
(32,reg_value)
(33,break;)
(34,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^