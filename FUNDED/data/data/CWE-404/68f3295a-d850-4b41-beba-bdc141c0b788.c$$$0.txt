-----label-----
0
-----code-----
static __inline int
getscheduler(register_t *ret, struct ksched *ksched, struct proc *p)
{
	int e = 0;

	switch (p->p_lwp.lwp_rtprio.type)
	{
		case RTP_PRIO_FIFO:
		*ret = SCHED_FIFO;
		break;

		case RTP_PRIO_REALTIME:
		*ret = SCHED_RR;
		break;

		default:
		*ret = SCHED_OTHER;
		break;
	}

	return e;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
23,26
24,25
25,26
25,27
27,28
27,29
29,30
31,32
31,33
32,33
32,34
33,34
33,35
34,35
34,36
35,36
40,41
40,42
40,43
40,44
40,45
40,46
40,47
40,48
40,49
41,42
42,43
44,45
45,46
45,47
46,47
47,48
49,50
52,53
53,54
55,56
56,57
56,58
57,58
58,59
60,61
64,65
65,66
65,67
66,67
67,68
69,70
72,73
73,74
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,26,28,30,36,37,38,39,43,48,50,51,54,59,61,62,63,68,70,71,74
-----computeFrom-----
45,46
45,47
56,57
56,58
65,66
65,67
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;SwitchStatement;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;CompoundStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;CaseStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;DefaultStatement;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;BreakStatement;ReturnStatement;IdExpression;Name;
-----ast_node-----
static __inline intgetscheduler(register_t *ret, struct ksched *ksched, struct proc *p){	int e = 0;	switch (p->p_lwp.lwp_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}	return e;}
static __inline int
getscheduler(register_t *ret, struct ksched *ksched, struct proc *p)
getscheduler
register_t *ret
register_t
register_t
*ret
*
ret
struct ksched *ksched
struct ksched
ksched
*ksched
*
ksched
struct proc *p
struct proc
proc
*p
*
p
{	int e = 0;	switch (p->p_lwp.lwp_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}	return e;}
int e = 0;
int e = 0;
int
e = 0
e
= 0
0
switch (p->p_lwp.lwp_rtprio.type)	{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}
p->p_lwp.lwp_rtprio.type
p->p_lwp.lwp_rtprio
p->p_lwp
p
p
p_lwp
lwp_rtprio
type
{		case RTP_PRIO_FIFO:		*ret = SCHED_FIFO;		break;		case RTP_PRIO_REALTIME:		*ret = SCHED_RR;		break;		default:		*ret = SCHED_OTHER;		break;	}
case RTP_PRIO_FIFO:
RTP_PRIO_FIFO
RTP_PRIO_FIFO
*ret = SCHED_FIFO;
*ret = SCHED_FIFO
*ret
ret
ret
SCHED_FIFO
SCHED_FIFO
break;
case RTP_PRIO_REALTIME:
RTP_PRIO_REALTIME
RTP_PRIO_REALTIME
*ret = SCHED_RR;
*ret = SCHED_RR
*ret
ret
ret
SCHED_RR
SCHED_RR
break;
default:
*ret = SCHED_OTHER;
*ret = SCHED_OTHER
*ret
ret
ret
SCHED_OTHER
SCHED_OTHER
break;
return e;
e
e
-----joern-----
(26,21,0)
(30,12,0)
(4,23,0)
(29,21,0)
(28,0,0)
(20,34,0)
(0,21,0)
(19,25,0)
(5,0,0)
(28,9,0)
(3,21,0)
(18,34,0)
(15,20,0)
(1,25,0)
(23,21,0)
(24,21,0)
(10,19,0)
(36,18,0)
(33,25,0)
(27,34,0)
(25,19,0)
(19,11,0)
(7,34,0)
(25,1,0)
(18,20,0)
(35,9,0)
(8,21,0)
(32,18,0)
(35,23,0)
(6,1,0)
(22,20,0)
(2,28,0)
(31,21,0)
(13,35,0)
(14,30,0)
(16,12,0)
(17,19,0)
(12,21,0)
(30,9,0)
(18,20,1)
(36,18,1)
(22,15,1)
(33,19,1)
(35,9,1)
(5,28,1)
(19,10,1)
(0,5,1)
(28,2,1)
(16,30,1)
(26,23,1)
(10,17,1)
(18,32,1)
(1,25,1)
(30,9,1)
(23,4,1)
(32,3,1)
(19,11,1)
(3,0,1)
(17,20,1)
(30,14,1)
(4,35,1)
(6,25,1)
(1,6,1)
(2,1,1)
(25,33,1)
(12,16,1)
(25,19,1)
(29,12,1)
(32,26,1)
(32,29,1)
(14,1,1)
(28,9,1)
(13,1,1)
(35,13,1)
(20,22,1)
(0,1,2)
(18,20,2)
(25,19,2)
(29,1,2)
(14,1,2)
(35,1,2)
(30,1,2)
(35,9,2)
(28,9,2)
(2,1,2)
(28,1,2)
(12,1,2)
(13,1,2)
(3,1,2)
(4,1,2)
(23,1,2)
(30,9,2)
(26,1,2)
(16,1,2)
(5,1,2)
(36,18,2)
(1,25,2)
(19,11,2)
-----------------------------------
(0,*ret = SCHED_FIFO)
(1,p->p_lwp.lwp_rtprio.type)
(2,ret)
(3,break;)
(4,SCHED_RR)
(5,SCHED_FIFO)
(6,type)
(7,e)
(8,case RTP_PRIO_REALTIME:)
(9,register_t *ret)
(10,p_lwp)
(11,struct proc *p)
(12,*ret = SCHED_OTHER)
(13,ret)
(14,ret)
(15,e)
(16,SCHED_OTHER)
(17,p)
(18,return e;)
(19,p->p_lwp)
(20,e = 0)
(21,)
(22,0)
(23,*ret = SCHED_RR)
(24,default:)
(25,p->p_lwp.lwp_rtprio)
(26,break;)
(27,switch (p->p_lwp.lwp_rtprio.type)
(28,*ret)
(29,break;)
(30,*ret)
(31,case RTP_PRIO_FIFO:)
(32,e)
(33,lwp_rtprio)
(34,)
(35,*ret)
(36,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^