-----label-----
0
-----code-----
static void goodB2G()
{
    char * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (char *)malloc(100*sizeof(char));
    /* Initialize and make use of data */
    strcpy(data, "A String");
    printLine(data);
    CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
37,40
38,39
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
54,55
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,42,46,48,52,55
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data);}
static void
goodB2G()
goodB2G
{    char * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (char *)malloc(100*sizeof(char));    /* Initialize and make use of data */    strcpy(data, "A String");    printLine(data);    CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data);}
char * data;
char * data;
char
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (char *)malloc(100*sizeof(char));
data = (char *)malloc(100*sizeof(char))
data
data
(char *)malloc(100*sizeof(char))
char *
char
*
*
malloc(100*sizeof(char))
malloc
malloc
100*sizeof(char)
100
sizeof(char)
char
char

strcpy(data, "A String");
strcpy(data, "A String")
strcpy
strcpy
data
data
"A String"
printLine(data);
printLine(data)
printLine
printLine
data
data
CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data);
CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data)
CWE401_Memory_Leak__char_malloc_63b_goodB2GSink
CWE401_Memory_Leak__char_malloc_63b_goodB2GSink
&data
data
data
-----joern-----
(10,12,0)
(20,7,0)
(16,19,0)
(18,3,0)
(19,4,0)
(7,12,0)
(2,4,0)
(15,11,0)
(11,12,0)
(7,16,0)
(6,4,0)
(10,7,0)
(19,16,0)
(16,17,0)
(3,12,0)
(17,16,0)
(13,10,0)
(4,19,0)
(9,12,0)
(11,15,0)
(15,7,0)
(1,6,0)
(22,15,0)
(8,7,0)
(20,12,0)
(5,3,0)
(4,6,0)
(16,7,0)
(21,20,0)
(0,10,0)
(4,6,1)
(22,20,1)
(8,3,1)
(1,2,1)
(15,22,1)
(0,7,1)
(10,7,1)
(16,17,1)
(20,21,1)
(3,18,1)
(11,15,1)
(21,10,1)
(16,19,1)
(15,7,1)
(6,1,1)
(19,4,1)
(2,8,1)
(14,11,1)
(10,13,1)
(20,7,1)
(18,5,1)
(13,0,1)
(7,16,1)
(19,4,2)
(4,6,2)
(10,7,2)
(16,19,2)
(20,7,2)
(16,17,2)
(11,15,2)
(15,7,2)
(7,16,2)
-----------------------------------
(0,data)
(1,char)
(2,100)
(3,data = NULL)
(4,100*sizeof(char)
(5,data)
(6,sizeof(char)
(7,data = (char *)
(8,data)
(9,data)
(10,strcpy(data, "A String")
(11,CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(&data)
(12,)
(13,"A String")
(14,RET)
(15,&data)
(16,(char *)
(17,char *)
(18,NULL)
(19,malloc(100*sizeof(char)
(20,printLine(data)
(21,data)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^