-----label-----
1
-----code-----
static int
linux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
{
	int error;

	error = 0;
	if (cpu_fxsr == 0 || (p->p_flag & P_INMEM) == 0)
		error = EIO;
	else
		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,
		    fpxregs, sizeof(*fpxregs));
	return (error);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
28,29
28,30
28,31
29,30
29,31
30,31
30,32
31,32
34,35
34,36
35,36
36,37
36,38
37,38
37,39
38,39
41,42
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
51,54
51,55
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
58,60
59,60
65,66
67,68
68,69
69,70
70,71
72,73
73,74
74,75
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,26,27,32,33,39,40,42,43,47,49,53,60,61,62,63,64,66,71,75
-----computeFrom-----
24,25
24,26
29,30
29,31
30,31
30,32
34,35
34,36
36,37
36,38
45,46
45,47
-----guardedBy-----
-----guardedByNegation-----
39,60
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;Name;IdExpression;Name;UnaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static intlinux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs){	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_INMEM) == 0)		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));	return (error);}
static int
linux_proc_read_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
linux_proc_read_fpxregs
struct proc *p
struct proc
proc
*p
*
p
struct linux_pt_fpxreg *fpxregs
struct linux_pt_fpxreg
linux_pt_fpxreg
*fpxregs
*
fpxregs
{	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_INMEM) == 0)		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));	return (error);}
int error;
int error;
int
error
error
error = 0;
error = 0
error
error
0
if (cpu_fxsr == 0 || (p->p_flag & P_INMEM) == 0)		error = EIO;	else		bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));
cpu_fxsr == 0 || (p->p_flag & P_INMEM) == 0
cpu_fxsr == 0
cpu_fxsr
cpu_fxsr
0
(p->p_flag & P_INMEM) == 0
(p->p_flag & P_INMEM)
p->p_flag & P_INMEM
p->p_flag
p
p
p_flag
P_INMEM
P_INMEM
0
error = EIO;
error = EIO
error
error
EIO
EIO
bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs));
bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,		    fpxregs, sizeof(*fpxregs))
bcopy
bcopy
&p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save
p->p_thread->td_pcb
p->p_thread
p
p
p_thread
td_pcb
pcb_save
sv_xmm
fpxregs
fpxregs
sizeof(*fpxregs)
(*fpxregs)
*fpxregs
fpxregs
fpxregs
return (error);
(error)
error
error
-----joern-----
(20,9,0)
(12,10,0)
(27,28,0)
(10,23,0)
(22,33,0)
(7,22,0)
(27,23,0)
(13,3,0)
(30,3,0)
(25,35,0)
(14,28,0)
(29,35,0)
(23,10,0)
(26,34,0)
(14,9,0)
(16,24,0)
(32,37,0)
(3,36,0)
(11,27,0)
(0,18,0)
(21,10,0)
(3,30,0)
(4,31,0)
(9,36,0)
(18,0,0)
(38,0,0)
(34,35,0)
(34,37,0)
(17,37,0)
(22,31,0)
(34,24,0)
(9,14,0)
(2,34,0)
(30,9,0)
(4,18,0)
(39,24,0)
(28,27,0)
(24,35,0)
(28,14,0)
(8,0,0)
(10,33,0)
(9,30,0)
(18,4,0)
(31,4,0)
(6,22,0)
(23,27,0)
(5,28,0)
(31,22,0)
(1,4,0)
(15,31,0)
(19,23,0)
(5,27,1)
(6,0,1)
(17,18,1)
(2,34,1)
(34,24,1)
(4,31,1)
(20,14,1)
(9,14,1)
(0,38,1)
(38,8,1)
(23,10,1)
(27,23,1)
(22,7,1)
(11,23,1)
(28,27,1)
(1,31,1)
(7,6,1)
(34,37,1)
(10,33,1)
(18,4,1)
(12,21,1)
(9,30,1)
(24,39,1)
(34,26,1)
(9,36,1)
(31,22,1)
(3,13,1)
(14,28,1)
(22,33,1)
(18,0,1)
(3,36,1)
(37,32,1)
(8,24,1)
(26,9,1)
(21,18,1)
(15,22,1)
(32,17,1)
(30,3,1)
(4,1,1)
(10,12,1)
(13,20,1)
(19,10,1)
(23,19,1)
(27,11,1)
(39,16,1)
(28,5,1)
(26,37,1)
(31,15,1)
(7,0,2)
(28,27,2)
(37,18,2)
(31,0,2)
(10,18,2)
(30,18,2)
(17,18,2)
(27,23,2)
(11,18,2)
(18,0,2)
(15,0,2)
(20,18,2)
(21,18,2)
(27,18,2)
(9,36,2)
(12,18,2)
(9,14,2)
(22,0,2)
(34,37,2)
(6,0,2)
(10,33,2)
(19,18,2)
(13,18,2)
(4,0,2)
(23,18,2)
(22,33,2)
(14,28,2)
(32,18,2)
(23,10,2)
(34,24,2)
(4,31,2)
(28,18,2)
(18,4,2)
(1,0,2)
(9,18,2)
(3,36,2)
(9,30,2)
(14,18,2)
(31,22,2)
(30,3,2)
(3,18,2)
(2,34,2)
(5,18,2)
-----------------------------------
(0,cpu_fxsr == 0)
(1,0)
(2,RET)
(3,*fpxregs)
(4,(p->p_flag & P_INMEM)
(5,sv_xmm)
(6,p)
(7,p_flag)
(8,cpu_fxsr)
(9,bcopy(&p->p_thread->td_pcb->pcb_save.sv_xmm,\n\\n\\t\\t    fpxregs, sizeof(*fpxregs)
(10,p->p_thread)
(11,pcb_save)
(12,p_thread)
(13,fpxregs)
(14,&p->p_thread->td_pcb->pcb_save.sv_xmm)
(15,P_INMEM)
(16,error)
(17,error)
(18,cpu_fxsr == 0 || (p->p_flag & P_INMEM)
(19,td_pcb)
(20,fpxregs)
(21,p)
(22,p->p_flag)
(23,p->p_thread->td_pcb)
(24,error = 0)
(25,if (cpu_fxsr == 0 || (p->p_flag & P_INMEM)
(26,error)
(27,p->p_thread->td_pcb->pcb_save)
(28,p->p_thread->td_pcb->pcb_save.sv_xmm)
(29,error)
(30,sizeof(*fpxregs)
(31,p->p_flag & P_INMEM)
(32,EIO)
(33,struct proc *p)
(34,return (error)
(35,)
(36,struct linux_pt_fpxreg *fpxregs)
(37,error = EIO)
(38,0)
(39,0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^