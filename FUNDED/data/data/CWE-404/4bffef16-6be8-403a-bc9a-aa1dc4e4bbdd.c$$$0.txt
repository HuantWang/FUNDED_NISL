-----label-----
1
-----code-----
int restore_pci_variables(struct hfi1_devdata *dd)
{
	int ret = 0;

	ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,
				     dd->pcibar0);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,
				     dd->pcibar1);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom);
	if (ret)
		goto error;

	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,
					 dd->pcie_devctl);
	if (ret)
		goto error;

	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,
					 dd->pcie_lnkctl);
	if (ret)
		goto error;

	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,
					 dd->pcie_devctl2);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,
				     dd->pci_lnkctl3);
	if (ret)
		goto error;

	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2);
	if (ret)
		goto error;

	return 0;

error:
	dd_dev_err(dd, "Unable to write to PCI config\n");
	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
11,26
11,27
11,28
11,29
11,30
11,31
11,32
11,33
11,34
11,35
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
23,27
24,25
26,27
26,28
27,28
30,31
32,33
32,34
33,34
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
45,49
46,47
48,49
48,50
49,50
52,53
54,55
54,56
55,56
58,59
58,60
59,60
61,62
63,64
64,65
64,66
65,66
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
74,75
76,77
76,78
77,78
80,81
80,82
81,82
83,84
85,86
86,87
86,88
87,88
89,90
89,91
89,92
89,93
90,91
92,93
92,94
93,94
96,97
98,99
98,100
99,100
102,103
102,104
103,104
105,106
107,108
108,109
108,110
109,110
111,112
111,113
111,114
111,115
112,113
114,115
114,116
115,116
118,119
120,121
120,122
121,122
124,125
124,126
125,126
127,128
129,130
130,131
130,132
131,132
133,134
133,135
133,136
133,137
134,135
136,137
136,138
137,138
140,141
142,143
142,144
143,144
146,147
146,148
147,148
149,150
151,152
152,153
152,154
153,154
155,156
155,157
155,158
155,159
156,157
158,159
158,160
159,160
162,163
164,165
164,166
165,166
168,169
168,170
169,170
171,172
173,174
174,175
174,176
175,176
177,178
177,179
177,180
177,181
178,179
180,181
180,182
181,182
184,185
186,187
186,188
187,188
190,191
190,192
191,192
193,194
195,196
196,197
196,198
197,198
199,200
199,201
199,202
199,203
200,201
202,203
202,204
203,204
206,207
208,209
208,210
209,210
212,213
212,214
213,214
215,216
217,218
218,219
218,220
219,220
221,222
221,223
221,224
221,225
222,223
224,225
224,226
225,226
228,229
230,231
230,232
231,232
234,235
234,236
235,236
237,238
239,240
241,242
241,243
243,244
244,245
244,246
244,247
245,246
247,248
250,251
251,252
-----nextToken-----
2,4,7,9,10,14,16,18,22,25,28,29,31,34,35,38,40,44,47,50,51,53,56,57,60,62,66,69,72,73,75,78,79,82,84,88,91,94,95,97,100,101,104,106,110,113,116,117,119,122,123,126,128,132,135,138,139,141,144,145,148,150,154,157,160,161,163,166,167,170,172,176,179,182,183,185,188,189,192,194,198,201,204,205,207,210,211,214,216,220,223,226,227,229,232,233,236,238,240,242,246,248,249,252
-----computeFrom-----
20,21
20,22
42,43
42,44
64,65
64,66
86,87
86,88
108,109
108,110
130,131
130,132
152,153
152,154
174,175
174,176
196,197
196,198
218,219
218,220
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ReturnStatement;LiteralExpression;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int restore_pci_variables(struct hfi1_devdata *dd){	int ret = 0;	ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				     dd->pcibar0);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				     dd->pcibar1);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,					 dd->pcie_devctl);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,					 dd->pcie_lnkctl);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,					 dd->pcie_devctl2);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				     dd->pci_lnkctl3);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2);	if (ret)		goto error;	return 0;error:	dd_dev_err(dd, "Unable to write to PCI config\n");	return ret;}
int
restore_pci_variables(struct hfi1_devdata *dd)
restore_pci_variables
struct hfi1_devdata *dd
struct hfi1_devdata
hfi1_devdata
*dd
*
dd
{	int ret = 0;	ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				     dd->pcibar0);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				     dd->pcibar1);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,					 dd->pcie_devctl);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,					 dd->pcie_lnkctl);	if (ret)		goto error;	ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,					 dd->pcie_devctl2);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				     dd->pci_lnkctl3);	if (ret)		goto error;	ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2);	if (ret)		goto error;	return 0;error:	dd_dev_err(dd, "Unable to write to PCI config\n");	return ret;}
int ret = 0;
int ret = 0;
int
ret = 0
ret
= 0
0
ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command);
ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command)
ret
ret
pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command)
pci_write_config_word
pci_write_config_word
dd->pcidev
dd
dd
pcidev
PCI_COMMAND
PCI_COMMAND
dd->pci_command
dd
dd
pci_command
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				     dd->pcibar0);
ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				     dd->pcibar0)
ret
ret
pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				     dd->pcibar0)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCI_BASE_ADDRESS_0
PCI_BASE_ADDRESS_0
dd->pcibar0
dd
dd
pcibar0
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				     dd->pcibar1);
ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				     dd->pcibar1)
ret
ret
pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				     dd->pcibar1)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCI_BASE_ADDRESS_1
PCI_BASE_ADDRESS_1
dd->pcibar1
dd
dd
pcibar1
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom);
ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom)
ret
ret
pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCI_ROM_ADDRESS
PCI_ROM_ADDRESS
dd->pci_rom
dd
dd
pci_rom
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,					 dd->pcie_devctl);
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,					 dd->pcie_devctl)
ret
ret
pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,					 dd->pcie_devctl)
pcie_capability_write_word
pcie_capability_write_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_DEVCTL
PCI_EXP_DEVCTL
dd->pcie_devctl
dd
dd
pcie_devctl
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,					 dd->pcie_lnkctl);
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,					 dd->pcie_lnkctl)
ret
ret
pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,					 dd->pcie_lnkctl)
pcie_capability_write_word
pcie_capability_write_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_LNKCTL
PCI_EXP_LNKCTL
dd->pcie_lnkctl
dd
dd
pcie_lnkctl
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,					 dd->pcie_devctl2);
ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,					 dd->pcie_devctl2)
ret
ret
pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,					 dd->pcie_devctl2)
pcie_capability_write_word
pcie_capability_write_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_DEVCTL2
PCI_EXP_DEVCTL2
dd->pcie_devctl2
dd
dd
pcie_devctl2
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0);
ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0)
ret
ret
pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCI_CFG_MSIX0
PCI_CFG_MSIX0
dd->pci_msix0
dd
dd
pci_msix0
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				     dd->pci_lnkctl3);
ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				     dd->pci_lnkctl3)
ret
ret
pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				     dd->pci_lnkctl3)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCIE_CFG_SPCIE1
PCIE_CFG_SPCIE1
dd->pci_lnkctl3
dd
dd
pci_lnkctl3
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2);
ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2)
ret
ret
pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2)
pci_write_config_dword
pci_write_config_dword
dd->pcidev
dd
dd
pcidev
PCIE_CFG_TPH2
PCIE_CFG_TPH2
dd->pci_tph2
dd
dd
pci_tph2
if (ret)		goto error;
ret
ret
goto error;
error
return 0;
0
error:	dd_dev_err(dd, "Unable to write to PCI config\n");
error
dd_dev_err(dd, "Unable to write to PCI config\n");
dd_dev_err(dd, "Unable to write to PCI config\n")
dd_dev_err
dd_dev_err
dd
dd
"Unable to write to PCI config\n"
return ret;
ret
ret
-----joern-----
(143,76,0)
(72,54,0)
(53,97,0)
(11,101,0)
(83,86,0)
(9,76,0)
(103,1,0)
(101,86,0)
(12,142,0)
(124,54,0)
(18,106,0)
(123,64,0)
(114,86,0)
(89,122,0)
(11,71,0)
(117,59,0)
(0,64,0)
(5,74,0)
(76,54,0)
(121,41,0)
(67,72,0)
(106,54,0)
(47,64,0)
(39,65,0)
(104,122,0)
(119,86,0)
(30,54,0)
(91,52,0)
(41,121,0)
(65,39,0)
(110,28,0)
(6,73,0)
(77,30,0)
(35,124,0)
(71,54,0)
(109,121,0)
(74,3,0)
(71,11,0)
(61,47,0)
(121,32,0)
(4,144,0)
(22,56,0)
(61,86,0)
(10,8,0)
(56,54,0)
(39,106,0)
(33,144,0)
(92,72,0)
(66,124,0)
(59,112,0)
(28,79,0)
(138,106,0)
(70,28,0)
(30,122,0)
(41,54,0)
(15,112,0)
(31,86,0)
(112,98,0)
(143,56,0)
(139,143,0)
(1,47,0)
(136,15,0)
(28,107,0)
(126,1,0)
(28,70,0)
(8,86,0)
(60,86,0)
(20,3,0)
(46,101,0)
(3,124,0)
(16,86,0)
(3,74,0)
(88,32,0)
(118,41,0)
(93,86,0)
(125,47,0)
(75,54,0)
(102,52,0)
(115,16,0)
(51,86,0)
(8,65,0)
(142,54,0)
(113,112,0)
(97,54,0)
(59,54,0)
(69,21,0)
(73,54,0)
(121,99,0)
(58,91,0)
(106,39,0)
(23,32,0)
(64,47,0)
(44,73,0)
(135,65,0)
(134,119,0)
(52,86,0)
(73,122,0)
(3,142,0)
(98,112,0)
(91,72,0)
(140,107,0)
(8,74,0)
(84,39,0)
(72,91,0)
(26,71,0)
(124,3,0)
(122,30,0)
(45,107,0)
(70,86,0)
(139,86,0)
(38,99,0)
(100,16,0)
(129,97,0)
(47,61,0)
(79,28,0)
(108,86,0)
(76,143,0)
(122,73,0)
(57,76,0)
(36,104,0)
(21,91,0)
(8,61,0)
(90,142,0)
(64,54,0)
(99,121,0)
(112,15,0)
(128,71,0)
(68,86,0)
(8,104,0)
(132,21,0)
(14,86,0)
(8,70,0)
(47,1,0)
(87,41,0)
(8,101,0)
(63,75,0)
(15,86,0)
(74,86,0)
(100,8,0)
(107,28,0)
(112,59,0)
(75,39,0)
(137,30,0)
(2,139,0)
(97,86,0)
(42,86,0)
(1,54,0)
(98,54,0)
(82,11,0)
(32,121,0)
(62,75,0)
(141,119,0)
(11,144,0)
(101,11,0)
(32,54,0)
(39,75,0)
(91,21,0)
(111,70,0)
(8,99,0)
(131,56,0)
(56,143,0)
(34,143,0)
(37,79,0)
(107,54,0)
(127,61,0)
(48,98,0)
(143,139,0)
(144,11,0)
(144,54,0)
(52,91,0)
(142,3,0)
(122,104,0)
(65,86,0)
(104,86,0)
(96,59,0)
(40,86,0)
(8,139,0)
(116,79,0)
(99,86,0)
(8,15,0)
(19,98,0)
(21,54,0)
(95,86,0)
(79,54,0)
(8,52,0)
(63,62,1)
(38,130,1)
(74,3,1)
(21,54,1)
(101,11,1)
(1,103,1)
(116,110,1)
(100,8,1)
(33,4,1)
(144,33,1)
(53,78,1)
(107,45,1)
(115,80,1)
(62,135,1)
(53,133,1)
(64,54,1)
(82,71,1)
(91,21,1)
(110,107,1)
(122,30,1)
(143,56,1)
(118,87,1)
(125,64,1)
(140,111,1)
(8,74,1)
(78,120,1)
(120,99,1)
(8,52,1)
(131,22,1)
(16,115,1)
(52,91,1)
(35,20,1)
(66,35,1)
(106,18,1)
(8,139,1)
(8,10,1)
(119,134,1)
(47,1,1)
(134,141,1)
(12,90,1)
(91,72,1)
(72,92,1)
(56,131,1)
(126,125,1)
(3,142,1)
(34,76,1)
(112,59,1)
(98,19,1)
(24,27,1)
(28,79,1)
(87,38,1)
(43,65,1)
(79,54,1)
(46,105,1)
(139,143,1)
(96,113,1)
(39,106,1)
(50,13,1)
(59,54,1)
(30,77,1)
(45,140,1)
(27,101,1)
(98,54,1)
(29,130,1)
(128,26,1)
(59,117,1)
(144,54,1)
(15,112,1)
(124,66,1)
(136,43,1)
(9,2,1)
(127,13,1)
(58,21,1)
(41,118,1)
(76,54,1)
(17,49,1)
(99,121,1)
(71,128,1)
(6,89,1)
(73,44,1)
(11,71,1)
(8,99,1)
(79,37,1)
(53,17,1)
(32,23,1)
(8,61,1)
(53,94,1)
(1,54,1)
(41,54,1)
(88,109,1)
(111,55,1)
(20,142,1)
(21,69,1)
(30,54,1)
(53,81,1)
(4,82,1)
(94,43,1)
(97,54,1)
(55,61,1)
(121,32,1)
(64,123,1)
(81,85,1)
(8,65,1)
(106,54,1)
(57,9,1)
(61,47,1)
(92,67,1)
(107,54,1)
(3,124,1)
(105,74,1)
(133,80,1)
(53,50,1)
(142,12,1)
(117,96,1)
(102,120,1)
(129,53,1)
(56,54,1)
(103,126,1)
(49,104,1)
(28,107,1)
(71,54,1)
(121,41,1)
(39,75,1)
(8,15,1)
(75,54,1)
(97,129,1)
(36,27,1)
(100,16,1)
(84,75,1)
(8,101,1)
(25,105,1)
(11,144,1)
(22,34,1)
(8,104,1)
(7,55,1)
(75,63,1)
(76,57,1)
(112,98,1)
(85,70,1)
(10,97,1)
(130,139,1)
(23,88,1)
(109,41,1)
(47,64,1)
(53,25,1)
(48,136,1)
(67,58,1)
(122,73,1)
(137,36,1)
(132,102,1)
(32,54,1)
(8,70,1)
(138,84,1)
(142,54,1)
(44,6,1)
(124,54,1)
(143,76,1)
(80,15,1)
(90,5,1)
(0,127,1)
(5,85,1)
(104,122,1)
(73,54,1)
(65,39,1)
(37,116,1)
(53,29,1)
(77,137,1)
(18,138,1)
(123,0,1)
(70,28,1)
(2,119,1)
(113,98,1)
(72,54,1)
(53,7,1)
(26,46,1)
(53,24,1)
(19,48,1)
(89,30,1)
(13,52,1)
(69,132,1)
(135,49,1)
(8,52,2)
(56,54,2)
(11,144,2)
(64,54,2)
(100,16,2)
(19,43,2)
(47,64,2)
(115,80,2)
(26,105,2)
(99,130,2)
(10,85,2)
(97,43,2)
(8,104,2)
(73,27,2)
(111,55,2)
(15,43,2)
(8,70,2)
(41,54,2)
(59,54,2)
(11,105,2)
(142,85,2)
(30,27,2)
(47,1,2)
(53,130,2)
(8,13,2)
(103,13,2)
(8,105,2)
(117,43,2)
(70,55,2)
(7,55,2)
(121,130,2)
(10,80,2)
(120,130,2)
(129,130,2)
(10,49,2)
(24,27,2)
(10,27,2)
(72,54,2)
(10,13,2)
(4,105,2)
(39,106,2)
(129,49,2)
(6,27,2)
(137,27,2)
(140,55,2)
(36,27,2)
(97,27,2)
(139,143,2)
(10,130,2)
(91,120,2)
(125,13,2)
(79,54,2)
(35,85,2)
(21,54,2)
(32,54,2)
(10,55,2)
(143,56,2)
(97,105,2)
(8,55,2)
(65,39,2)
(78,120,2)
(143,76,2)
(97,130,2)
(8,139,2)
(104,27,2)
(55,13,2)
(101,105,2)
(52,120,2)
(84,49,2)
(17,49,2)
(112,59,2)
(18,49,2)
(105,85,2)
(88,130,2)
(8,15,2)
(129,105,2)
(106,49,2)
(28,79,2)
(97,80,2)
(107,55,2)
(110,55,2)
(122,73,2)
(63,49,2)
(102,120,2)
(96,43,2)
(132,120,2)
(135,49,2)
(61,13,2)
(129,85,2)
(71,54,2)
(77,27,2)
(64,13,2)
(91,72,2)
(122,27,2)
(85,55,2)
(53,43,2)
(67,120,2)
(133,80,2)
(97,13,2)
(25,105,2)
(89,27,2)
(47,13,2)
(8,61,2)
(129,43,2)
(128,105,2)
(5,85,2)
(8,120,2)
(48,43,2)
(107,54,2)
(53,105,2)
(72,120,2)
(129,27,2)
(8,85,2)
(144,105,2)
(8,43,2)
(74,85,2)
(27,105,2)
(23,130,2)
(69,120,2)
(21,120,2)
(53,49,2)
(122,30,2)
(38,130,2)
(91,21,2)
(45,55,2)
(112,43,2)
(97,120,2)
(97,55,2)
(20,85,2)
(75,49,2)
(126,13,2)
(37,55,2)
(29,130,2)
(1,54,2)
(10,105,2)
(76,54,2)
(8,27,2)
(8,101,2)
(0,13,2)
(136,43,2)
(43,49,2)
(100,8,2)
(11,71,2)
(106,54,2)
(32,130,2)
(97,54,2)
(71,105,2)
(138,49,2)
(99,121,2)
(8,49,2)
(70,28,2)
(30,54,2)
(53,55,2)
(94,43,2)
(58,120,2)
(82,105,2)
(142,54,2)
(1,13,2)
(15,112,2)
(53,13,2)
(104,122,2)
(53,120,2)
(8,130,2)
(44,27,2)
(3,142,2)
(53,80,2)
(121,41,2)
(33,105,2)
(61,47,2)
(124,85,2)
(97,85,2)
(10,120,2)
(90,85,2)
(53,27,2)
(129,55,2)
(73,54,2)
(79,55,2)
(3,85,2)
(112,98,2)
(39,49,2)
(53,85,2)
(49,27,2)
(129,120,2)
(144,54,2)
(109,130,2)
(74,3,2)
(129,80,2)
(98,43,2)
(87,130,2)
(97,49,2)
(98,54,2)
(13,120,2)
(92,120,2)
(8,99,2)
(39,75,2)
(116,55,2)
(65,49,2)
(3,124,2)
(46,105,2)
(127,13,2)
(52,91,2)
(8,65,2)
(8,80,2)
(124,54,2)
(59,43,2)
(113,43,2)
(101,11,2)
(16,80,2)
(50,13,2)
(62,49,2)
(41,130,2)
(8,74,2)
(129,13,2)
(80,43,2)
(28,55,2)
(81,85,2)
(118,130,2)
(12,85,2)
(10,43,2)
(66,85,2)
(75,54,2)
(28,107,2)
(123,13,2)
(121,32,2)
-----------------------------------
(0,dd)
(1,dd->pci_rom)
(2,ret)
(3,pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,\n\\n\\t\\t\\t\\t\\t dd->pcie_lnkctl)
(4,dd)
(5,ret)
(6,dd)
(7,goto error;)
(8,return ret;)
(9,dd)
(10,ret)
(11,pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,\n\\n\\t\\t\\t\\t\\t dd->pcie_devctl2)
(12,pcidev)
(13,ret)
(14,if (ret)
(15,ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2)
(16,return 0;)
(17,goto error;)
(18,pci_lnkctl3)
(19,pcidev)
(20,PCI_EXP_LNKCTL)
(21,dd->pcidev)
(22,dd)
(23,pcibar0)
(24,goto error;)
(25,goto error;)
(26,dd)
(27,ret)
(28,pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,\n\\n\\t\\t\\t\\t\\t dd->pcie_devctl)
(29,goto error;)
(30,dd->pcidev)
(31,if (ret)
(32,dd->pcibar0)
(33,pcie_devctl2)
(34,PCI_COMMAND)
(35,dd)
(36,ret)
(37,pcie_devctl)
(38,ret)
(39,pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,\n\\n\\t\\t\\t\\t     dd->pci_lnkctl3)
(40,if (ret)
(41,dd->pcidev)
(42,if (ret)
(43,ret)
(44,pci_msix0)
(45,pcidev)
(46,ret)
(47,pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom)
(48,dd)
(49,ret)
(50,goto error;)
(51,if (ret)
(52,ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,\n\\n\\t\\t\\t\\t     dd->pcibar1)
(53,dd)
(54,struct hfi1_devdata *dd)
(55,ret)
(56,dd->pci_command)
(57,pcidev)
(58,PCI_BASE_ADDRESS_1)
(59,dd->pci_tph2)
(60,if (ret)
(61,ret = pci_write_config_dword(dd->pcidev, PCI_ROM_ADDRESS, dd->pci_rom)
(62,dd)
(63,pcidev)
(64,dd->pcidev)
(65,ret = pci_write_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,\n\\n\\t\\t\\t\\t     dd->pci_lnkctl3)
(66,pcie_lnkctl)
(67,dd)
(68,if (ret)
(69,pcidev)
(70,ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL,\n\\n\\t\\t\\t\\t\\t dd->pcie_devctl)
(71,dd->pcidev)
(72,dd->pcibar1)
(73,dd->pci_msix0)
(74,ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_LNKCTL,\n\\n\\t\\t\\t\\t\\t dd->pcie_lnkctl)
(75,dd->pcidev)
(76,dd->pcidev)
(77,pcidev)
(78,goto error;)
(79,dd->pcie_devctl)
(80,ret)
(81,goto error;)
(82,PCI_EXP_DEVCTL2)
(83,if (ret)
(84,PCIE_CFG_SPCIE1)
(85,ret)
(86,)
(87,dd)
(88,dd)
(89,PCI_CFG_MSIX0)
(90,dd)
(91,pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,\n\\n\\t\\t\\t\\t     dd->pcibar1)
(92,pcibar1)
(93,error:)
(94,goto error;)
(95,ret)
(96,dd)
(97,dd_dev_err(dd, "Unable to write to PCI config\\n")
(98,dd->pcidev)
(99,ret = pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,\n\\n\\t\\t\\t\\t     dd->pcibar0)
(100,RET)
(101,ret = pcie_capability_write_word(dd->pcidev, PCI_EXP_DEVCTL2,\n\\n\\t\\t\\t\\t\\t dd->pcie_devctl2)
(102,ret)
(103,pci_rom)
(104,ret = pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0)
(105,ret)
(106,dd->pci_lnkctl3)
(107,dd->pcidev)
(108,if (ret)
(109,PCI_BASE_ADDRESS_0)
(110,PCI_EXP_DEVCTL)
(111,ret)
(112,pci_write_config_dword(dd->pcidev, PCIE_CFG_TPH2, dd->pci_tph2)
(113,PCIE_CFG_TPH2)
(114,if (ret)
(115,0)
(116,dd)
(117,pci_tph2)
(118,pcidev)
(119,ret = 0)
(120,ret)
(121,pci_write_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,\n\\n\\t\\t\\t\\t     dd->pcibar0)
(122,pci_write_config_dword(dd->pcidev, PCI_CFG_MSIX0, dd->pci_msix0)
(123,pcidev)
(124,dd->pcie_lnkctl)
(125,PCI_ROM_ADDRESS)
(126,dd)
(127,ret)
(128,pcidev)
(129,"Unable to write to PCI config\\n")
(130,ret)
(131,pci_command)
(132,dd)
(133,goto error;)
(134,0)
(135,ret)
(136,ret)
(137,dd)
(138,dd)
(139,ret = pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command)
(140,dd)
(141,ret)
(142,dd->pcidev)
(143,pci_write_config_word(dd->pcidev, PCI_COMMAND, dd->pci_command)
(144,dd->pcie_devctl2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^