-----label-----
1
-----code-----
int save_pci_variables(struct hfi1_devdata *dd)
{
	int ret = 0;

	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,
				    &dd->pcibar0);
	if (ret)
		goto error;

	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,
				    &dd->pcibar1);
	if (ret)
		goto error;

	ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom);
	if (ret)
		goto error;

	ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command);
	if (ret)
		goto error;

	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,
					&dd->pcie_devctl);
	if (ret)
		goto error;

	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,
					&dd->pcie_lnkctl);
	if (ret)
		goto error;

	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,
					&dd->pcie_devctl2);
	if (ret)
		goto error;

	ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0);
	if (ret)
		goto error;

	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,
				    &dd->pci_lnkctl3);
	if (ret)
		goto error;

	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2);
	if (ret)
		goto error;

	return 0;

error:
	dd_dev_err(dd, "Unable to read from PCI config\n");
	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
11,26
11,27
11,28
11,29
11,30
11,31
11,32
11,33
11,34
11,35
12,13
13,14
13,15
15,16
15,17
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
23,27
24,25
26,27
26,28
27,28
30,31
32,33
33,34
33,35
34,35
37,38
37,39
38,39
40,41
42,43
43,44
43,45
44,45
46,47
46,48
46,49
46,50
47,48
49,50
49,51
50,51
53,54
55,56
56,57
56,58
57,58
60,61
60,62
61,62
63,64
65,66
66,67
66,68
67,68
69,70
69,71
69,72
69,73
70,71
72,73
72,74
73,74
76,77
78,79
79,80
79,81
80,81
83,84
83,85
84,85
86,87
88,89
89,90
89,91
90,91
92,93
92,94
92,95
92,96
93,94
95,96
95,97
96,97
99,100
101,102
102,103
102,104
103,104
106,107
106,108
107,108
109,110
111,112
112,113
112,114
113,114
115,116
115,117
115,118
115,119
116,117
118,119
118,120
119,120
122,123
124,125
125,126
125,127
126,127
129,130
129,131
130,131
132,133
134,135
135,136
135,137
136,137
138,139
138,140
138,141
138,142
139,140
141,142
141,143
142,143
145,146
147,148
148,149
148,150
149,150
152,153
152,154
153,154
155,156
157,158
158,159
158,160
159,160
161,162
161,163
161,164
161,165
162,163
164,165
164,166
165,166
168,169
170,171
171,172
171,173
172,173
175,176
175,177
176,177
178,179
180,181
181,182
181,183
182,183
184,185
184,186
184,187
184,188
185,186
187,188
187,189
188,189
191,192
193,194
194,195
194,196
195,196
198,199
198,200
199,200
201,202
203,204
204,205
204,206
205,206
207,208
207,209
207,210
207,211
208,209
210,211
210,212
211,212
214,215
216,217
217,218
217,219
218,219
221,222
221,223
222,223
224,225
226,227
227,228
227,229
228,229
230,231
230,232
230,233
230,234
231,232
233,234
233,235
234,235
237,238
239,240
240,241
240,242
241,242
244,245
244,246
245,246
247,248
249,250
251,252
251,253
253,254
254,255
254,256
254,257
255,256
257,258
260,261
261,262
-----nextToken-----
2,4,7,9,10,14,16,18,22,25,28,29,31,35,36,39,41,45,48,51,52,54,58,59,62,64,68,71,74,75,77,81,82,85,87,91,94,97,98,100,104,105,108,110,114,117,120,121,123,127,128,131,133,137,140,143,144,146,150,151,154,156,160,163,166,167,169,173,174,177,179,183,186,189,190,192,196,197,200,202,206,209,212,213,215,219,220,223,225,229,232,235,236,238,242,243,246,248,250,252,256,258,259,262
-----computeFrom-----
20,21
20,22
43,44
43,45
66,67
66,68
89,90
89,91
112,113
112,114
135,136
135,137
158,159
158,160
181,182
181,183
204,205
204,206
227,228
227,229
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ReturnStatement;LiteralExpression;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
int save_pci_variables(struct hfi1_devdata *dd){	int ret = 0;	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				    &dd->pcibar0);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				    &dd->pcibar1);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom);	if (ret)		goto error;	ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,					&dd->pcie_devctl);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,					&dd->pcie_lnkctl);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,					&dd->pcie_devctl2);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				    &dd->pci_lnkctl3);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2);	if (ret)		goto error;	return 0;error:	dd_dev_err(dd, "Unable to read from PCI config\n");	return ret;}
int
save_pci_variables(struct hfi1_devdata *dd)
save_pci_variables
struct hfi1_devdata *dd
struct hfi1_devdata
hfi1_devdata
*dd
*
dd
{	int ret = 0;	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				    &dd->pcibar0);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				    &dd->pcibar1);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom);	if (ret)		goto error;	ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,					&dd->pcie_devctl);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,					&dd->pcie_lnkctl);	if (ret)		goto error;	ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,					&dd->pcie_devctl2);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				    &dd->pci_lnkctl3);	if (ret)		goto error;	ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2);	if (ret)		goto error;	return 0;error:	dd_dev_err(dd, "Unable to read from PCI config\n");	return ret;}
int ret = 0;
int ret = 0;
int
ret = 0
ret
= 0
0
ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				    &dd->pcibar0);
ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				    &dd->pcibar0)
ret
ret
pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,				    &dd->pcibar0)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCI_BASE_ADDRESS_0
PCI_BASE_ADDRESS_0
&dd->pcibar0
dd->pcibar0
dd
dd
pcibar0
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				    &dd->pcibar1);
ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				    &dd->pcibar1)
ret
ret
pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,				    &dd->pcibar1)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCI_BASE_ADDRESS_1
PCI_BASE_ADDRESS_1
&dd->pcibar1
dd->pcibar1
dd
dd
pcibar1
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom);
ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom)
ret
ret
pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCI_ROM_ADDRESS
PCI_ROM_ADDRESS
&dd->pci_rom
dd->pci_rom
dd
dd
pci_rom
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command);
ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command)
ret
ret
pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command)
pci_read_config_word
pci_read_config_word
dd->pcidev
dd
dd
pcidev
PCI_COMMAND
PCI_COMMAND
&dd->pci_command
dd->pci_command
dd
dd
pci_command
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,					&dd->pcie_devctl);
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,					&dd->pcie_devctl)
ret
ret
pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,					&dd->pcie_devctl)
pcie_capability_read_word
pcie_capability_read_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_DEVCTL
PCI_EXP_DEVCTL
&dd->pcie_devctl
dd->pcie_devctl
dd
dd
pcie_devctl
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,					&dd->pcie_lnkctl);
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,					&dd->pcie_lnkctl)
ret
ret
pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,					&dd->pcie_lnkctl)
pcie_capability_read_word
pcie_capability_read_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_LNKCTL
PCI_EXP_LNKCTL
&dd->pcie_lnkctl
dd->pcie_lnkctl
dd
dd
pcie_lnkctl
if (ret)		goto error;
ret
ret
goto error;
error
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,					&dd->pcie_devctl2);
ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,					&dd->pcie_devctl2)
ret
ret
pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,					&dd->pcie_devctl2)
pcie_capability_read_word
pcie_capability_read_word
dd->pcidev
dd
dd
pcidev
PCI_EXP_DEVCTL2
PCI_EXP_DEVCTL2
&dd->pcie_devctl2
dd->pcie_devctl2
dd
dd
pcie_devctl2
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0);
ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0)
ret
ret
pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCI_CFG_MSIX0
PCI_CFG_MSIX0
&dd->pci_msix0
dd->pci_msix0
dd
dd
pci_msix0
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				    &dd->pci_lnkctl3);
ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				    &dd->pci_lnkctl3)
ret
ret
pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,				    &dd->pci_lnkctl3)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCIE_CFG_SPCIE1
PCIE_CFG_SPCIE1
&dd->pci_lnkctl3
dd->pci_lnkctl3
dd
dd
pci_lnkctl3
if (ret)		goto error;
ret
ret
goto error;
error
ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2);
ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2)
ret
ret
pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2)
pci_read_config_dword
pci_read_config_dword
dd->pcidev
dd
dd
pcidev
PCIE_CFG_TPH2
PCIE_CFG_TPH2
&dd->pci_tph2
dd->pci_tph2
dd
dd
pci_tph2
if (ret)		goto error;
ret
ret
goto error;
error
return 0;
0
error:	dd_dev_err(dd, "Unable to read from PCI config\n");
error
dd_dev_err(dd, "Unable to read from PCI config\n");
dd_dev_err(dd, "Unable to read from PCI config\n")
dd_dev_err
dd_dev_err
dd
dd
"Unable to read from PCI config\n"
return ret;
ret
ret
-----joern-----
(26,76,0)
(64,128,0)
(58,133,0)
(129,51,0)
(91,48,0)
(46,133,0)
(49,147,0)
(39,91,0)
(128,143,0)
(22,104,0)
(126,129,0)
(128,3,0)
(101,128,0)
(4,27,0)
(56,13,0)
(55,105,0)
(91,78,0)
(108,119,0)
(55,116,0)
(28,7,0)
(15,5,0)
(2,90,0)
(60,32,0)
(91,118,0)
(136,76,0)
(145,28,0)
(68,107,0)
(43,90,0)
(119,147,0)
(117,4,0)
(29,107,0)
(92,147,0)
(13,147,0)
(97,73,0)
(116,78,0)
(87,78,0)
(119,133,0)
(30,143,0)
(70,82,0)
(75,18,0)
(31,5,0)
(35,98,0)
(41,95,0)
(39,104,0)
(139,123,0)
(101,82,0)
(75,133,0)
(107,13,0)
(113,73,0)
(44,147,0)
(149,147,0)
(107,29,0)
(106,48,0)
(66,112,0)
(81,105,0)
(95,147,0)
(100,4,0)
(1,133,0)
(16,14,0)
(2,46,0)
(112,35,0)
(27,123,0)
(76,95,0)
(62,91,0)
(151,147,0)
(58,113,0)
(38,119,0)
(35,51,0)
(88,116,0)
(127,82,0)
(110,133,0)
(90,2,0)
(91,13,0)
(84,7,0)
(117,147,0)
(105,133,0)
(73,32,0)
(118,147,0)
(132,90,0)
(95,76,0)
(73,97,0)
(97,147,0)
(35,112,0)
(79,147,0)
(93,86,0)
(104,147,0)
(128,101,0)
(84,135,0)
(18,151,0)
(33,147,0)
(78,147,0)
(17,73,0)
(4,117,0)
(34,154,0)
(43,133,0)
(91,151,0)
(148,3,0)
(134,26,0)
(146,140,0)
(129,133,0)
(105,55,0)
(5,29,0)
(86,4,0)
(82,101,0)
(37,105,0)
(135,84,0)
(144,46,0)
(91,97,0)
(24,135,0)
(116,110,0)
(4,86,0)
(121,123,0)
(18,75,0)
(134,133,0)
(138,14,0)
(53,147,0)
(131,118,0)
(96,129,0)
(27,4,0)
(99,97,0)
(91,98,0)
(80,147,0)
(5,133,0)
(42,140,0)
(0,7,0)
(28,133,0)
(90,48,0)
(69,1,0)
(51,129,0)
(25,58,0)
(111,147,0)
(11,28,0)
(48,147,0)
(46,2,0)
(29,5,0)
(73,113,0)
(48,90,0)
(98,147,0)
(143,128,0)
(116,55,0)
(142,147,0)
(36,135,0)
(26,134,0)
(7,84,0)
(90,43,0)
(110,116,0)
(140,107,0)
(118,7,0)
(115,1,0)
(57,75,0)
(91,95,0)
(65,86,0)
(6,154,0)
(3,128,0)
(76,1,0)
(114,43,0)
(9,134,0)
(13,107,0)
(20,46,0)
(82,133,0)
(7,28,0)
(154,147,0)
(151,18,0)
(113,58,0)
(12,151,0)
(109,110,0)
(51,35,0)
(125,35,0)
(107,140,0)
(135,133,0)
(83,18,0)
(32,133,0)
(8,3,0)
(18,83,0)
(140,133,0)
(86,133,0)
(91,143,0)
(91,117,0)
(32,73,0)
(83,14,0)
(3,133,0)
(123,133,0)
(137,147,0)
(72,18,0)
(77,147,0)
(52,134,0)
(153,75,0)
(7,118,0)
(78,116,0)
(143,147,0)
(76,26,0)
(150,110,0)
(98,35,0)
(91,147,0)
(124,112,0)
(1,76,0)
(123,27,0)
(103,32,0)
(141,58,0)
(14,133,0)
(112,133,0)
(19,117,0)
(14,83,0)
(40,43,0)
(10,98,0)
(139,100,1)
(110,133,1)
(89,21,1)
(106,63,1)
(74,122,1)
(90,43,1)
(67,13,1)
(51,129,1)
(38,50,1)
(38,94,1)
(50,67,1)
(122,95,1)
(124,10,1)
(152,98,1)
(141,25,1)
(82,127,1)
(103,60,1)
(43,114,1)
(14,133,1)
(143,128,1)
(29,5,1)
(82,133,1)
(35,112,1)
(46,20,1)
(73,113,1)
(91,151,1)
(10,45,1)
(85,118,1)
(72,75,1)
(24,36,1)
(148,8,1)
(138,16,1)
(126,125,1)
(26,134,1)
(91,117,1)
(2,46,1)
(60,99,1)
(43,133,1)
(59,63,1)
(75,153,1)
(127,70,1)
(134,9,1)
(129,133,1)
(96,126,1)
(31,68,1)
(117,4,1)
(11,131,1)
(86,133,1)
(38,74,1)
(57,12,1)
(69,115,1)
(130,151,1)
(32,103,1)
(35,51,1)
(76,26,1)
(0,28,1)
(38,54,1)
(25,17,1)
(104,22,1)
(38,59,1)
(114,40,1)
(91,143,1)
(101,82,1)
(1,133,1)
(56,120,1)
(91,97,1)
(83,14,1)
(36,0,1)
(140,133,1)
(38,47,1)
(38,23,1)
(5,15,1)
(102,117,1)
(86,65,1)
(73,32,1)
(91,98,1)
(115,41,1)
(145,11,1)
(63,97,1)
(107,29,1)
(146,42,1)
(38,71,1)
(81,37,1)
(135,133,1)
(48,90,1)
(112,133,1)
(39,91,1)
(112,66,1)
(27,123,1)
(87,85,1)
(154,6,1)
(12,102,1)
(38,89,1)
(52,136,1)
(68,140,1)
(37,88,1)
(110,150,1)
(99,21,1)
(91,13,1)
(105,81,1)
(28,133,1)
(120,48,1)
(119,108,1)
(14,138,1)
(54,102,1)
(16,72,1)
(13,107,1)
(1,69,1)
(62,119,1)
(116,110,1)
(3,133,1)
(58,133,1)
(66,124,1)
(4,86,1)
(123,121,1)
(108,38,1)
(113,58,1)
(90,2,1)
(94,45,1)
(61,130,1)
(46,133,1)
(64,3,1)
(28,145,1)
(129,96,1)
(93,19,1)
(151,18,1)
(150,109,1)
(144,132,1)
(18,83,1)
(125,112,1)
(118,7,1)
(105,133,1)
(15,31,1)
(95,76,1)
(107,140,1)
(7,84,1)
(84,135,1)
(70,64,1)
(153,57,1)
(128,3,1)
(4,27,1)
(131,154,1)
(55,105,1)
(40,106,1)
(98,35,1)
(134,133,1)
(39,104,1)
(9,52,1)
(128,101,1)
(91,118,1)
(140,146,1)
(109,87,1)
(17,32,1)
(91,48,1)
(100,86,1)
(45,143,1)
(5,133,1)
(116,55,1)
(8,30,1)
(88,110,1)
(32,133,1)
(58,141,1)
(21,78,1)
(75,133,1)
(3,148,1)
(65,93,1)
(23,152,1)
(38,61,1)
(18,75,1)
(121,139,1)
(42,56,1)
(20,144,1)
(132,43,1)
(97,73,1)
(76,1,1)
(47,120,1)
(7,28,1)
(41,67,1)
(123,133,1)
(91,95,1)
(22,152,1)
(119,133,1)
(6,34,1)
(136,1,1)
(78,116,1)
(30,130,1)
(71,85,1)
(91,62,1)
(19,122,1)
(135,24,1)
(91,78,1)
(2,46,2)
(4,122,2)
(127,130,2)
(91,48,2)
(46,133,2)
(107,120,2)
(91,63,2)
(81,85,2)
(69,67,2)
(38,152,2)
(151,18,2)
(105,133,2)
(151,102,2)
(118,7,2)
(46,63,2)
(130,102,2)
(73,113,2)
(96,45,2)
(73,21,2)
(113,21,2)
(129,45,2)
(112,45,2)
(62,122,2)
(57,102,2)
(150,85,2)
(58,133,2)
(140,133,2)
(89,21,2)
(119,130,2)
(121,122,2)
(14,102,2)
(37,85,2)
(132,63,2)
(141,21,2)
(152,45,2)
(91,122,2)
(62,102,2)
(100,122,2)
(29,5,2)
(51,129,2)
(62,85,2)
(98,35,2)
(144,63,2)
(42,120,2)
(140,120,2)
(43,133,2)
(87,85,2)
(35,51,2)
(64,130,2)
(128,130,2)
(112,133,2)
(7,84,2)
(13,107,2)
(75,133,2)
(128,3,2)
(27,122,2)
(136,67,2)
(38,102,2)
(94,45,2)
(129,133,2)
(84,135,2)
(113,58,2)
(116,110,2)
(107,140,2)
(108,102,2)
(123,133,2)
(45,130,2)
(86,122,2)
(26,67,2)
(78,85,2)
(115,67,2)
(120,63,2)
(35,45,2)
(101,82,2)
(18,102,2)
(38,45,2)
(17,21,2)
(9,67,2)
(30,130,2)
(126,45,2)
(146,120,2)
(76,26,2)
(1,67,2)
(91,67,2)
(101,130,2)
(48,63,2)
(108,152,2)
(48,90,2)
(38,67,2)
(148,130,2)
(119,67,2)
(97,73,2)
(62,67,2)
(16,102,2)
(39,91,2)
(119,120,2)
(39,104,2)
(83,14,2)
(63,21,2)
(124,45,2)
(21,85,2)
(123,122,2)
(55,85,2)
(67,120,2)
(75,102,2)
(110,133,2)
(50,67,2)
(35,112,2)
(91,85,2)
(119,63,2)
(122,67,2)
(119,122,2)
(91,117,2)
(102,122,2)
(116,85,2)
(4,86,2)
(108,120,2)
(91,95,2)
(61,130,2)
(18,75,2)
(108,63,2)
(119,152,2)
(62,21,2)
(76,67,2)
(12,102,2)
(54,102,2)
(143,130,2)
(74,122,2)
(107,29,2)
(18,83,2)
(58,21,2)
(15,120,2)
(23,152,2)
(91,120,2)
(128,101,2)
(91,98,2)
(78,116,2)
(32,133,2)
(1,133,2)
(20,63,2)
(29,120,2)
(71,85,2)
(60,21,2)
(91,118,2)
(62,63,2)
(70,130,2)
(59,63,2)
(26,134,2)
(62,45,2)
(73,32,2)
(83,102,2)
(108,130,2)
(114,63,2)
(119,133,2)
(116,55,2)
(22,152,2)
(125,45,2)
(41,67,2)
(31,120,2)
(72,102,2)
(91,13,2)
(40,63,2)
(109,85,2)
(119,21,2)
(139,122,2)
(28,133,2)
(27,123,2)
(10,45,2)
(4,27,2)
(110,85,2)
(3,133,2)
(106,63,2)
(14,133,2)
(143,128,2)
(104,152,2)
(108,45,2)
(90,2,2)
(13,120,2)
(91,143,2)
(91,78,2)
(82,133,2)
(38,21,2)
(88,85,2)
(32,21,2)
(119,102,2)
(138,102,2)
(5,133,2)
(38,85,2)
(95,67,2)
(76,1,2)
(134,67,2)
(38,130,2)
(56,120,2)
(108,85,2)
(117,4,2)
(82,130,2)
(97,21,2)
(86,133,2)
(19,122,2)
(91,97,2)
(134,133,2)
(7,28,2)
(91,130,2)
(8,130,2)
(38,122,2)
(93,122,2)
(90,63,2)
(99,21,2)
(90,43,2)
(98,45,2)
(38,120,2)
(68,120,2)
(3,130,2)
(105,85,2)
(108,21,2)
(91,152,2)
(62,130,2)
(91,102,2)
(66,45,2)
(91,45,2)
(2,63,2)
(153,102,2)
(117,122,2)
(108,122,2)
(119,45,2)
(52,67,2)
(95,76,2)
(62,120,2)
(5,120,2)
(135,133,2)
(51,45,2)
(65,122,2)
(43,63,2)
(25,21,2)
(47,120,2)
(119,85,2)
(55,105,2)
(38,63,2)
(62,152,2)
(91,151,2)
(91,21,2)
(108,67,2)
(103,21,2)
-----------------------------------
(0,PCI_BASE_ADDRESS_0)
(1,dd->pcidev)
(2,&dd->pci_command)
(3,dd->pcidev)
(4,pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,\n\\n\\t\\t\\t\\t\\t&dd->pcie_devctl2)
(5,dd->pcie_devctl)
(6,0)
(7,pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,\n\\n\\t\\t\\t\\t    &dd->pcibar0)
(8,dd)
(9,pcie_lnkctl)
(10,ret)
(11,dd)
(12,ret)
(13,ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,\n\\n\\t\\t\\t\\t\\t&dd->pcie_devctl)
(14,dd->pci_msix0)
(15,pcie_devctl)
(16,dd)
(17,PCI_ROM_ADDRESS)
(18,pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0)
(19,ret)
(20,pci_command)
(21,ret)
(22,0)
(23,goto error;)
(24,pcibar0)
(25,dd)
(26,&dd->pcie_lnkctl)
(27,&dd->pcie_devctl2)
(28,dd->pcidev)
(29,&dd->pcie_devctl)
(30,ret)
(31,dd)
(32,dd->pcidev)
(33,if (ret)
(34,ret)
(35,pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2)
(36,dd)
(37,dd)
(38,dd)
(39,RET)
(40,dd)
(41,ret)
(42,dd)
(43,dd->pcidev)
(44,if (ret)
(45,ret)
(46,dd->pci_command)
(47,goto error;)
(48,ret = pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command)
(49,if (ret)
(50,goto error;)
(51,&dd->pci_tph2)
(52,dd)
(53,if (ret)
(54,goto error;)
(55,&dd->pcibar1)
(56,ret)
(57,dd)
(58,dd->pci_rom)
(59,goto error;)
(60,dd)
(61,goto error;)
(62,ret)
(63,ret)
(64,PCIE_CFG_SPCIE1)
(65,pcidev)
(66,pcidev)
(67,ret)
(68,PCI_EXP_DEVCTL)
(69,pcidev)
(70,dd)
(71,goto error;)
(72,PCI_CFG_MSIX0)
(73,pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom)
(74,goto error;)
(75,dd->pcidev)
(76,pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,\n\\n\\t\\t\\t\\t\\t&dd->pcie_lnkctl)
(77,if (ret)
(78,ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,\n\\n\\t\\t\\t\\t    &dd->pcibar1)
(79,if (ret)
(80,if (ret)
(81,pcibar1)
(82,dd->pci_lnkctl3)
(83,&dd->pci_msix0)
(84,&dd->pcibar0)
(85,ret)
(86,dd->pcidev)
(87,ret)
(88,PCI_BASE_ADDRESS_1)
(89,goto error;)
(90,pci_read_config_word(dd->pcidev, PCI_COMMAND, &dd->pci_command)
(91,return ret;)
(92,ret)
(93,dd)
(94,goto error;)
(95,ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_LNKCTL,\n\\n\\t\\t\\t\\t\\t&dd->pcie_lnkctl)
(96,pci_tph2)
(97,ret = pci_read_config_dword(dd->pcidev, PCI_ROM_ADDRESS, &dd->pci_rom)
(98,ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_TPH2, &dd->pci_tph2)
(99,ret)
(100,PCI_EXP_DEVCTL2)
(101,&dd->pci_lnkctl3)
(102,ret)
(103,pcidev)
(104,return 0;)
(105,dd->pcibar1)
(106,ret)
(107,pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL,\n\\n\\t\\t\\t\\t\\t&dd->pcie_devctl)
(108,"Unable to read from PCI config\\n")
(109,dd)
(110,dd->pcidev)
(111,if (ret)
(112,dd->pcidev)
(113,&dd->pci_rom)
(114,pcidev)
(115,dd)
(116,pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_1,\n\\n\\t\\t\\t\\t    &dd->pcibar1)
(117,ret = pcie_capability_read_word(dd->pcidev, PCI_EXP_DEVCTL2,\n\\n\\t\\t\\t\\t\\t&dd->pcie_devctl2)
(118,ret = pci_read_config_dword(dd->pcidev, PCI_BASE_ADDRESS_0,\n\\n\\t\\t\\t\\t    &dd->pcibar0)
(119,dd_dev_err(dd, "Unable to read from PCI config\\n")
(120,ret)
(121,pcie_devctl2)
(122,ret)
(123,dd->pcie_devctl2)
(124,dd)
(125,PCIE_CFG_TPH2)
(126,dd)
(127,pci_lnkctl3)
(128,pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,\n\\n\\t\\t\\t\\t    &dd->pci_lnkctl3)
(129,dd->pci_tph2)
(130,ret)
(131,ret)
(132,PCI_COMMAND)
(133,struct hfi1_devdata *dd)
(134,dd->pcie_lnkctl)
(135,dd->pcibar0)
(136,PCI_EXP_LNKCTL)
(137,if (ret)
(138,pci_msix0)
(139,dd)
(140,dd->pcidev)
(141,pci_rom)
(142,if (ret)
(143,ret = pci_read_config_dword(dd->pcidev, PCIE_CFG_SPCIE1,\n\\n\\t\\t\\t\\t    &dd->pci_lnkctl3)
(144,dd)
(145,pcidev)
(146,pcidev)
(147,)
(148,pcidev)
(149,error:)
(150,pcidev)
(151,ret = pci_read_config_dword(dd->pcidev, PCI_CFG_MSIX0, &dd->pci_msix0)
(152,ret)
(153,pcidev)
(154,ret = 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^