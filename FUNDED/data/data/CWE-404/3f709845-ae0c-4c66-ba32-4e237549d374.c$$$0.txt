-----label-----
1
-----code-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the
     * memory block not at the start of the buffer */
    for (; *data != L'\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
24,25
24,26
25,26
26,27
29,30
30,31
32,33
33,34
33,35
34,35
34,36
35,36
36,37
38,39
40,41
40,42
41,42
42,43
42,44
43,44
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,23,27,28,31,37,39,44,45,46,50,52
-----computeFrom-----
24,25
24,26
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ForStatement;NullStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
void
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_63b_badSink(wchar_t * * dataPtr)
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
;
*data != L'\0'
*data
data
data
L'\0'
data++
data
data
{        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }
*data == SEARCH_CHAR
*data
data
data
SEARCH_CHAR
SEARCH_CHAR
{            printLine("We have a match!");            break;        }
printLine("We have a match!");
printLine("We have a match!")
printLine
printLine
"We have a match!"
break;
free(data);
free(data)
free
free
data
data
-----joern-----
(9,17,0)
(3,12,0)
(20,17,0)
(2,18,0)
(13,12,0)
(7,12,0)
(15,3,0)
(4,16,0)
(0,18,0)
(16,4,0)
(11,12,0)
(6,16,0)
(14,2,0)
(1,20,0)
(2,12,0)
(18,8,0)
(18,2,0)
(4,2,0)
(5,7,0)
(19,4,0)
(3,2,0)
(4,19,1)
(20,1,1)
(6,4,1)
(3,2,1)
(9,20,1)
(15,9,1)
(2,18,1)
(13,2,1)
(0,14,1)
(1,16,1)
(15,16,1)
(16,6,1)
(10,3,1)
(18,8,1)
(18,0,1)
(4,2,1)
(19,13,1)
(16,4,1)
(3,15,1)
(4,2,2)
(9,16,2)
(18,8,2)
(1,16,2)
(20,16,2)
(16,4,2)
(3,2,2)
(2,18,2)
-----------------------------------
(0,dataPtr)
(1,"We have a match!")
(2,* data = *dataPtr)
(3,free(data)
(4,*data)
(5,if (*data == SEARCH_CHAR)
(6,SEARCH_CHAR)
(7,)
(8,wchar_t * * dataPtr)
(9,break;)
(10,RET)
(11,data)
(12,)
(13,\'\\0\')
(14,data)
(15,data)
(16,*data == SEARCH_CHAR)
(17,)
(18,*dataPtr)
(19,data)
(20,printLine("We have a match!")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^