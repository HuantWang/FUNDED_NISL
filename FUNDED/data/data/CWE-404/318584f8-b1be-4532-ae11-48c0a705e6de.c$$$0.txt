-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = freopen("BadSource_freopen.txt","w+",stdin);
    if(globalReturnsTrue())
    {
        if (data != NULL)
        {
            /* FIX: Close the file using fclose() */
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
23,27
24,25
28,29
30,31
30,32
31,32
32,33
34,35
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,29,33,38,40,45,47
-----computeFrom-----
14,15
14,16
20,21
20,22
36,37
36,38
-----guardedBy-----
38,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = freopen("BadSource_freopen.txt","w+",stdin);
data = freopen("BadSource_freopen.txt","w+",stdin)
data
data
freopen("BadSource_freopen.txt","w+",stdin)
freopen
freopen
"BadSource_freopen.txt"
"w+"
stdin
stdin
if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            /* FIX: Close the file using fclose() */            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(13,10,0)
(7,13,0)
(2,21,0)
(9,4,0)
(6,10,0)
(20,13,0)
(16,6,0)
(8,10,0)
(12,16,0)
(3,11,0)
(0,10,0)
(14,16,0)
(11,19,0)
(5,21,0)
(15,21,0)
(17,6,0)
(6,21,0)
(21,6,0)
(11,6,0)
(18,1,1)
(2,15,1)
(15,5,1)
(16,12,1)
(17,13,1)
(11,6,1)
(12,14,1)
(18,11,1)
(7,20,1)
(16,6,1)
(1,6,1)
(3,16,1)
(6,21,1)
(14,1,1)
(11,3,1)
(18,16,1)
(5,17,1)
(13,7,1)
(21,2,1)
(3,16,2)
(12,1,2)
(16,6,2)
(16,1,2)
(11,6,2)
(6,21,2)
(11,16,2)
(14,1,2)
-----------------------------------
(0,if(globalReturnsTrue()
(1,globalReturnsTrue()
(2,stdin)
(3,data)
(4,)
(5,"BadSource_freopen.txt")
(6,data = freopen("BadSource_freopen.txt","w+",stdin)
(7,NULL)
(8,data)
(9,if (data != NULL)
(10,)
(11,fclose(data)
(12,NULL)
(13,data = NULL)
(14,data)
(15,"w+")
(16,data != NULL)
(17,data)
(18,RET)
(19,)
(20,data)
(21,freopen("BadSource_freopen.txt","w+",stdin)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^