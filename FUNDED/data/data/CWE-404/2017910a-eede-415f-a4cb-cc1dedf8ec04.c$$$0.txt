-----label-----
0
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_64b_goodG2BSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
    /* dereference dataPtr into data */
    twoIntsStruct * data = (*dataPtr);
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
11,12
12,13
12,14
13,14
15,16
15,17
15,18
15,19
19,20
20,21
20,22
21,22
21,23
22,23
24,25
24,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
33,36
36,37
37,38
38,39
39,40
41,42
42,43
42,44
43,44
45,46
46,47
46,48
47,48
50,51
51,52
51,53
52,53
54,55
-----nextToken-----
2,4,6,8,9,14,16,17,18,23,25,26,28,32,34,35,40,44,48,49,53,55
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_64b_goodG2BSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;    /* dereference dataPtr into data */    twoIntsStruct * data = (*dataPtr);    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_64b_goodG2BSink(void * dataVoidPtr)
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_64b_goodG2BSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;    /* dereference dataPtr into data */    twoIntsStruct * data = (*dataPtr);    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
twoIntsStruct
twoIntsStruct
* * dataPtr = (twoIntsStruct * *)dataVoidPtr
*
*
dataPtr
= (twoIntsStruct * *)dataVoidPtr
(twoIntsStruct * *)dataVoidPtr
twoIntsStruct * *
twoIntsStruct
twoIntsStruct
* *
*
*
dataVoidPtr
dataVoidPtr
twoIntsStruct * data = (*dataPtr);
twoIntsStruct * data = (*dataPtr);
twoIntsStruct
twoIntsStruct
* data = (*dataPtr)
*
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(1,3,0)
(13,5,0)
(5,13,0)
(9,20,0)
(2,20,0)
(4,20,0)
(12,20,0)
(5,16,0)
(11,8,0)
(0,1,0)
(10,20,0)
(6,16,0)
(16,8,0)
(16,20,0)
(8,16,0)
(1,2,0)
(8,2,0)
(14,1,0)
(1,0,0)
(9,13,0)
(13,9,0)
(19,5,0)
(15,2,0)
(12,16,0)
(7,12,0)
(2,1,0)
(17,5,0)
(2,1,1)
(7,9,1)
(18,12,1)
(14,15,1)
(5,16,1)
(8,2,1)
(9,13,1)
(19,16,1)
(12,16,1)
(13,5,1)
(6,2,1)
(1,0,1)
(16,8,1)
(1,14,1)
(17,19,1)
(12,7,1)
(8,11,1)
(1,3,1)
(5,17,1)
(11,6,1)
(8,2,2)
(1,3,2)
(2,1,2)
(1,0,2)
(12,16,2)
(9,13,2)
(13,5,2)
(16,8,2)
(5,16,2)
-----------------------------------
(0,twoIntsStruct * *)
(1,(twoIntsStruct * *)
(2,* * dataPtr = (twoIntsStruct * *)
(3,void * dataVoidPtr)
(4,dataPtr)
(5,data[0])
(6,data)
(7,data)
(8,*dataPtr)
(9,printStructLine(&data[0])
(10,data)
(11,dataPtr)
(12,free(data)
(13,&data[0])
(14,dataVoidPtr)
(15,dataPtr)
(16,* data = (*dataPtr)
(17,0)
(18,RET)
(19,data)
(20,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^