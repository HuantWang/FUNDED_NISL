-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = fopen("BadSource_fopen.txt", "w+");
    if(STATIC_CONST_TRUE)
    {
        /* FIX: If the file is still opened, close it */
        if (data != NULL)
        {
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
31,32
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,30,35,37,42,44
-----computeFrom-----
14,15
14,16
20,21
20,22
33,34
33,35
-----guardedBy-----
35,44
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_TRUE)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_TRUE)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(STATIC_CONST_TRUE)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(8,9,0)
(13,0,0)
(10,1,0)
(14,5,0)
(2,8,0)
(8,12,0)
(1,8,0)
(15,0,0)
(0,12,0)
(16,18,0)
(4,9,0)
(18,8,0)
(9,8,0)
(6,9,0)
(20,1,0)
(17,12,0)
(18,3,0)
(19,12,0)
(15,13,1)
(9,4,1)
(1,8,1)
(11,8,1)
(4,6,1)
(16,1,1)
(2,0,1)
(8,9,1)
(18,8,1)
(7,1,1)
(1,10,1)
(6,2,1)
(10,20,1)
(0,15,1)
(7,11,1)
(18,16,1)
(7,18,1)
(20,11,1)
(18,8,2)
(18,1,2)
(10,11,2)
(1,8,2)
(8,9,2)
(20,11,2)
(16,1,2)
(1,11,2)
-----------------------------------
(0,data = NULL)
(1,data != NULL)
(2,data)
(3,)
(4,"w+")
(5,)
(6,"BadSource_fopen.txt")
(7,RET)
(8,data = fopen("BadSource_fopen.txt", "w+")
(9,fopen("BadSource_fopen.txt", "w+")
(10,NULL)
(11,STATIC_CONST_TRUE)
(12,)
(13,data)
(14,if (data != NULL)
(15,NULL)
(16,data)
(17,data)
(18,fclose(data)
(19,if(STATIC_CONST_TRUE)
(20,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^