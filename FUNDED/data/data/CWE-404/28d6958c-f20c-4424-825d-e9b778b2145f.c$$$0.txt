-----label-----
1
-----code-----
static int _open(const char *path)
{
    int fd;

    fd = open(path, O_RDONLY | O_NOFOLLOW);
    if (fd < 0)
        fd = open(path, O_WRONLY | O_NOFOLLOW);

    return fd;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
10,14
11,12
12,13
12,14
14,15
16,17
17,18
17,19
18,19
20,21
20,22
20,23
21,22
23,24
25,26
25,27
26,27
28,29
30,31
30,32
31,32
31,33
32,33
35,36
36,37
36,38
37,38
39,40
39,41
39,42
40,41
42,43
44,45
44,46
45,46
47,48
49,50
50,51
-----nextToken-----
2,4,6,8,9,13,15,19,22,24,27,29,33,34,38,41,43,46,48,51
-----computeFrom-----
17,18
17,19
25,26
25,27
31,32
31,33
36,37
36,38
44,45
44,46
-----guardedBy-----
33,38
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int _open(const char *path){    int fd;    fd = open(path, O_RDONLY | O_NOFOLLOW);    if (fd < 0)        fd = open(path, O_WRONLY | O_NOFOLLOW);    return fd;}
static int
_open(const char *path)
_open
const char *path
const char
*path
*
path
{    int fd;    fd = open(path, O_RDONLY | O_NOFOLLOW);    if (fd < 0)        fd = open(path, O_WRONLY | O_NOFOLLOW);    return fd;}
int fd;
int fd;
int
fd
fd
fd = open(path, O_RDONLY | O_NOFOLLOW);
fd = open(path, O_RDONLY | O_NOFOLLOW)
fd
fd
open(path, O_RDONLY | O_NOFOLLOW)
open
open
path
path
O_RDONLY | O_NOFOLLOW
O_RDONLY
O_RDONLY
O_NOFOLLOW
O_NOFOLLOW
if (fd < 0)        fd = open(path, O_WRONLY | O_NOFOLLOW);
fd < 0
fd
fd
0
fd = open(path, O_WRONLY | O_NOFOLLOW);
fd = open(path, O_WRONLY | O_NOFOLLOW)
fd
fd
open(path, O_WRONLY | O_NOFOLLOW)
open
open
path
path
O_WRONLY | O_NOFOLLOW
O_WRONLY
O_WRONLY
O_NOFOLLOW
O_NOFOLLOW
return fd;
fd
fd
-----joern-----
(11,10,0)
(1,22,0)
(9,15,0)
(3,20,0)
(1,16,0)
(2,11,0)
(17,5,0)
(13,5,0)
(16,1,0)
(15,11,0)
(5,17,0)
(12,17,0)
(1,11,0)
(8,5,0)
(23,10,0)
(19,20,0)
(5,13,0)
(20,10,0)
(6,1,0)
(0,13,0)
(18,16,0)
(14,13,0)
(5,22,0)
(11,1,0)
(21,10,0)
(4,16,0)
(7,15,0)
(20,17,0)
(20,11,0)
(5,13,1)
(3,15,1)
(6,2,1)
(9,7,1)
(5,22,1)
(12,15,1)
(18,4,1)
(20,11,1)
(15,9,1)
(1,16,1)
(19,20,1)
(14,8,1)
(3,17,1)
(15,11,1)
(17,5,1)
(7,11,1)
(0,14,1)
(16,18,1)
(1,22,1)
(13,0,1)
(4,6,1)
(20,17,1)
(8,12,1)
(20,3,1)
(11,1,1)
(0,15,2)
(8,15,2)
(12,15,2)
(19,20,2)
(17,15,2)
(17,5,2)
(5,15,2)
(20,17,2)
(1,16,2)
(15,11,2)
(14,15,2)
(11,1,2)
(1,22,2)
(13,15,2)
(5,22,2)
(20,11,2)
(5,13,2)
-----------------------------------
(0,O_NOFOLLOW)
(1,open(path, O_RDONLY | O_NOFOLLOW)
(2,fd)
(3,fd)
(4,O_RDONLY)
(5,open(path, O_WRONLY | O_NOFOLLOW)
(6,path)
(7,fd)
(8,path)
(9,0)
(10,)
(11,fd = open(path, O_RDONLY | O_NOFOLLOW)
(12,fd)
(13,O_WRONLY | O_NOFOLLOW)
(14,O_WRONLY)
(15,fd < 0)
(16,O_RDONLY | O_NOFOLLOW)
(17,fd = open(path, O_WRONLY | O_NOFOLLOW)
(18,O_NOFOLLOW)
(19,RET)
(20,return fd;)
(21,fd)
(22,const char *path)
(23,if (fd < 0)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^