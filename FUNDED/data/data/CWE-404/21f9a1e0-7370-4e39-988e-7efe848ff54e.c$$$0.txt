-----label-----
0
-----code-----
static void goodB2G()
{
    int data;
    void (*funcPtr) (int) = goodB2GSink;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
14,17
15,16
15,17
18,19
18,20
20,21
22,23
23,24
25,26
26,27
26,28
27,28
29,30
31,32
32,33
32,34
33,34
35,36
35,37
35,38
35,39
36,37
39,40
39,41
40,41
42,43
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
-----nextToken-----
2,4,8,10,13,16,17,19,21,24,28,30,34,37,38,41,43,46,48,52,54
-----computeFrom-----
26,27
26,28
32,33
32,34
39,40
39,41
44,45
44,46
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int data;    void (*funcPtr) (int) = goodB2GSink;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    funcPtr(data);}
static void
goodB2G()
goodB2G
{    int data;    void (*funcPtr) (int) = goodB2GSink;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    funcPtr(data);}
int data;
int data;
int
data
data
void (*funcPtr) (int) = goodB2GSink;
void (*funcPtr) (int) = goodB2GSink;
void
(*funcPtr) (int) = goodB2GSink
*funcPtr
*
funcPtr
int
int


= goodB2GSink
goodB2GSink
goodB2GSink
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(11,0,0)
(3,13,0)
(15,3,0)
(9,14,0)
(1,4,0)
(13,3,0)
(18,17,0)
(13,0,0)
(5,2,0)
(13,17,0)
(17,13,0)
(0,13,0)
(14,4,0)
(21,4,0)
(12,19,0)
(20,21,0)
(2,0,0)
(14,19,0)
(16,13,0)
(8,17,0)
(22,4,0)
(19,14,0)
(2,4,0)
(10,21,0)
(7,3,0)
(0,4,0)
(15,7,1)
(13,17,1)
(13,3,1)
(12,9,1)
(0,13,1)
(14,19,1)
(19,12,1)
(8,3,1)
(2,5,1)
(18,8,1)
(3,15,1)
(17,18,1)
(9,21,1)
(16,11,1)
(6,2,1)
(21,10,1)
(11,14,1)
(5,0,1)
(7,16,1)
(2,0,1)
(10,20,1)
(0,13,2)
(14,19,2)
(2,0,2)
(13,17,2)
(13,3,2)
-----------------------------------
(0,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(1,funcPtr)
(2,funcPtr(data)
(3,O_RDWR|O_CREAT)
(4,)
(5,data)
(6,RET)
(7,O_RDWR)
(8,S_IREAD)
(9,data)
(10,goodB2GSink)
(11,data)
(12,1)
(13,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(14,data = -1)
(15,O_CREAT)
(16,"BadSource_open.txt")
(17,S_IREAD|S_IWRITE)
(18,S_IWRITE)
(19,-1)
(20,funcPtr)
(21,(*funcPtr)
(22,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^