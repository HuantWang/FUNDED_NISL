-----label-----
1
-----code-----
static int
linux_proc_write_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
{
	int error;

	error = 0;
	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))
		error = EIO;
	else
		bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,
		    sizeof(*fpxregs));
	return (error);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
18,19
19,20
19,21
21,22
23,24
24,25
24,26
25,26
28,29
28,30
28,31
29,30
29,31
30,31
30,32
31,32
34,35
35,36
35,37
36,37
36,38
37,38
40,41
42,43
43,44
43,45
44,45
46,47
48,49
49,50
49,51
49,52
49,53
50,51
52,53
54,55
55,56
55,57
56,57
56,58
57,58
57,59
58,59
58,60
59,60
65,66
66,67
67,68
68,69
70,71
71,72
72,73
-----nextToken-----
2,4,7,9,10,13,15,16,20,22,26,27,32,33,38,39,41,45,47,51,53,60,61,62,63,64,69,73
-----computeFrom-----
24,25
24,26
29,30
29,31
30,31
30,32
35,36
35,37
43,44
43,45
-----guardedBy-----
-----guardedByNegation-----
38,60
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;Name;UnaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static intlinux_proc_write_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs){	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,		    sizeof(*fpxregs));	return (error);}
static int
linux_proc_write_fpxregs(struct proc *p, struct linux_pt_fpxreg *fpxregs)
linux_proc_write_fpxregs
struct proc *p
struct proc
proc
*p
*
p
struct linux_pt_fpxreg *fpxregs
struct linux_pt_fpxreg
linux_pt_fpxreg
*fpxregs
*
fpxregs
{	int error;	error = 0;	if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,		    sizeof(*fpxregs));	return (error);}
int error;
int error;
int
error
error
error = 0;
error = 0
error
error
0
if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT))		error = EIO;	else		bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,		    sizeof(*fpxregs));
cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
cpu_fxsr == 0
cpu_fxsr
cpu_fxsr
0
(p->p_flag & P_SWAPPEDOUT)
p->p_flag & P_SWAPPEDOUT
p->p_flag
p
p
p_flag
P_SWAPPEDOUT
P_SWAPPEDOUT
error = EIO;
error = EIO
error
error
EIO
EIO
bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,		    sizeof(*fpxregs));
bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,		    sizeof(*fpxregs))
bcopy
bcopy
fpxregs
fpxregs
&p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save.sv_xmm
p->p_thread->td_pcb->pcb_save
p->p_thread->td_pcb
p->p_thread
p
p
p_thread
td_pcb
pcb_save
sv_xmm
sizeof(*fpxregs)
(*fpxregs)
*fpxregs
fpxregs
fpxregs
return (error);
(error)
error
error
-----joern-----
(0,9,0)
(28,34,0)
(36,22,0)
(1,22,0)
(20,29,0)
(34,11,0)
(13,27,0)
(29,11,0)
(32,15,0)
(5,9,0)
(7,2,0)
(6,27,0)
(10,19,0)
(17,5,0)
(9,23,0)
(5,17,0)
(19,14,0)
(9,5,0)
(22,15,0)
(27,22,0)
(8,18,0)
(16,35,0)
(24,15,0)
(34,2,0)
(37,35,0)
(12,29,0)
(2,21,0)
(30,19,0)
(4,17,0)
(3,18,0)
(27,35,0)
(11,34,0)
(3,14,0)
(17,23,0)
(25,18,0)
(2,34,0)
(14,19,0)
(18,25,0)
(33,2,0)
(26,14,0)
(14,3,0)
(11,29,0)
(25,17,0)
(17,25,0)
(19,21,0)
(18,3,0)
(27,15,0)
(31,3,0)
(14,26,1)
(34,2,1)
(30,10,1)
(10,4,1)
(29,12,1)
(35,16,1)
(17,25,1)
(3,14,1)
(4,11,1)
(13,27,1)
(18,8,1)
(26,19,1)
(12,20,1)
(16,37,1)
(22,36,1)
(37,11,1)
(25,18,1)
(18,3,1)
(6,17,1)
(6,35,1)
(3,31,1)
(9,23,1)
(33,7,1)
(17,23,1)
(27,6,1)
(19,21,1)
(28,2,1)
(36,1,1)
(0,25,1)
(5,9,1)
(8,3,1)
(11,34,1)
(31,14,1)
(2,33,1)
(7,29,1)
(14,19,1)
(19,30,1)
(27,35,1)
(2,21,1)
(27,22,1)
(34,28,1)
(17,5,1)
(9,0,1)
(11,29,1)
(20,22,1)
(10,11,2)
(27,35,2)
(3,14,2)
(19,11,2)
(18,3,2)
(17,11,2)
(17,23,2)
(19,21,2)
(11,34,2)
(30,11,2)
(5,9,2)
(17,5,2)
(9,23,2)
(34,2,2)
(35,11,2)
(16,11,2)
(18,11,2)
(4,11,2)
(2,29,2)
(8,11,2)
(13,27,2)
(28,29,2)
(0,11,2)
(14,19,2)
(27,22,2)
(3,11,2)
(7,29,2)
(26,11,2)
(17,25,2)
(25,18,2)
(2,21,2)
(37,11,2)
(31,11,2)
(25,11,2)
(5,11,2)
(34,29,2)
(14,11,2)
(33,29,2)
(9,11,2)
(11,29,2)
-----------------------------------
(0,fpxregs)
(1,error)
(2,p->p_flag)
(3,p->p_thread->td_pcb->pcb_save)
(4,fpxregs)
(5,sizeof(*fpxregs)
(6,error)
(7,p)
(8,sv_xmm)
(9,*fpxregs)
(10,p)
(11,cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
(12,0)
(13,RET)
(14,p->p_thread->td_pcb)
(15,)
(16,EIO)
(17,bcopy(fpxregs, &p->p_thread->td_pcb->pcb_save.sv_xmm,\n\\n\\t\\t    sizeof(*fpxregs)
(18,p->p_thread->td_pcb->pcb_save.sv_xmm)
(19,p->p_thread)
(20,cpu_fxsr)
(21,struct proc *p)
(22,error = 0)
(23,struct linux_pt_fpxreg *fpxregs)
(24,if (cpu_fxsr == 0 || (p->p_flag & P_SWAPPEDOUT)
(25,&p->p_thread->td_pcb->pcb_save.sv_xmm)
(26,td_pcb)
(27,return (error)
(28,P_SWAPPEDOUT)
(29,cpu_fxsr == 0)
(30,p_thread)
(31,pcb_save)
(32,error)
(33,p_flag)
(34,p->p_flag & P_SWAPPEDOUT)
(35,error = EIO)
(36,0)
(37,error)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^