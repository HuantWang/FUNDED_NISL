-----label-----
0
-----code-----
static void goodB2G()
{
    wchar_t * data;
    data = NULL;
    /* POTENTIAL FLAW: Allocate memory on the heap */
    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
    if (data == NULL) {exit(-1);}
    /* Initialize and make use of data */
    wcscpy(data, L"A String");
    printWLine(data);
    goodB2GSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
27,30
28,29
30,31
32,33
32,34
34,35
35,36
35,37
38,39
38,40
39,40
39,41
40,41
42,43
44,45
45,46
46,47
46,48
47,48
49,50
51,52
52,53
52,54
52,55
53,54
55,56
58,59
59,60
59,61
60,61
62,63
64,65
65,66
65,67
66,67
68,69
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,33,36,37,41,43,48,50,54,56,57,61,63,67,69
-----computeFrom-----
13,14
13,15
19,20
19,21
32,33
32,34
39,40
39,41
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goodB2GSink(data);}
static void
goodB2G()
goodB2G
{    wchar_t * data;    data = NULL;    /* POTENTIAL FLAW: Allocate memory on the heap */    data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));    if (data == NULL) {exit(-1);}    /* Initialize and make use of data */    wcscpy(data, L"A String");    printWLine(data);    goodB2GSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));
data = (wchar_t *)realloc(data, 100*sizeof(wchar_t))
data
data
(wchar_t *)realloc(data, 100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
realloc(data, 100*sizeof(wchar_t))
realloc
realloc
data
data
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

if (data == NULL) {exit(-1);}
data == NULL
data
data
NULL
NULL
{exit(-1);}
exit(-1);
exit(-1)
exit
exit
-1
1
wcscpy(data, L"A String");
wcscpy(data, L"A String")
wcscpy
wcscpy
data
data
L"A String"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
goodB2GSink(data);
goodB2GSink(data)
goodB2GSink
goodB2GSink
data
data
-----joern-----
(0,14,0)
(12,3,0)
(20,26,0)
(1,3,0)
(7,26,0)
(20,0,0)
(16,0,0)
(14,0,0)
(27,12,0)
(22,26,0)
(19,22,0)
(20,1,0)
(22,3,0)
(26,7,0)
(15,3,0)
(25,22,0)
(2,19,0)
(26,20,0)
(10,6,0)
(13,1,0)
(24,14,0)
(9,3,0)
(12,22,0)
(18,1,0)
(26,22,0)
(25,3,0)
(11,10,0)
(4,11,0)
(5,22,0)
(8,20,0)
(23,19,0)
(21,25,0)
(0,20,0)
(10,11,0)
(21,10,1)
(26,20,1)
(26,7,1)
(19,23,1)
(12,22,1)
(10,11,1)
(21,19,1)
(11,4,1)
(20,1,1)
(20,0,1)
(14,24,1)
(22,26,1)
(12,27,1)
(2,22,1)
(0,14,1)
(5,1,1)
(27,25,1)
(4,19,1)
(1,18,1)
(24,16,1)
(25,21,1)
(19,22,1)
(17,12,1)
(23,2,1)
(25,22,1)
(8,5,1)
(16,8,1)
(18,13,1)
(26,7,2)
(22,26,2)
(20,1,2)
(11,19,2)
(20,0,2)
(0,14,2)
(4,19,2)
(19,22,2)
(26,20,2)
(10,11,2)
(25,22,2)
(10,19,2)
(12,22,2)
-----------------------------------
(0,100*sizeof(wchar_t)
(1,data = NULL)
(2,data)
(3,)
(4,1)
(5,data)
(6,)
(7,wchar_t *)
(8,data)
(9,data)
(10,exit(-1)
(11,-1)
(12,goodB2GSink(data)
(13,data)
(14,sizeof(wchar_t)
(15,if (data == NULL)
(16,100)
(17,RET)
(18,NULL)
(19,data == NULL)
(20,realloc(data, 100*sizeof(wchar_t)
(21,data)
(22,data = (wchar_t *)
(23,NULL)
(24,wchar_t)
(25,printWLine(data)
(26,(wchar_t *)
(27,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^