-----label-----
1
-----code-----
void flush_kernel_dcache_page(struct page *page)
{
	if (cache_is_vivt() || cache_is_vipt_aliasing()) {
		struct address_space *mapping;

		mapping = page_mapping(page);

		if (!mapping || mapping_mapped(mapping)) {
			void *addr;

			addr = page_address(page);
			/*
			 * kmap_atomic() doesn't set the page virtual
			 * address for highmem pages, and
			 * kunmap_atomic() takes care of cache
			 * flushing already.
			 */
			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)
				__cpuc_flush_dcache_area(addr, PAGE_SIZE);
		}
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
15,16
17,18
18,19
20,21
20,22
20,23
21,22
22,23
22,24
23,24
25,26
25,27
28,29
29,30
29,31
30,31
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
40,41
42,43
42,44
43,44
45,46
47,48
47,49
47,50
48,49
49,50
49,51
51,52
51,53
54,55
55,56
55,57
56,57
58,59
58,60
59,60
61,62
63,64
63,65
64,65
64,66
65,66
66,67
66,68
67,68
69,70
71,72
73,74
74,75
74,76
74,77
75,76
77,78
79,80
-----nextToken-----
2,4,7,9,10,16,19,24,26,27,31,34,36,41,44,46,50,52,53,57,60,62,68,70,72,76,78,80
-----computeFrom-----
13,14
13,15
29,30
29,31
38,39
38,40
55,56
55,57
64,65
64,66
-----guardedBy-----
72,78
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void flush_kernel_dcache_page(struct page *page){	if (cache_is_vivt() || cache_is_vipt_aliasing()) {		struct address_space *mapping;		mapping = page_mapping(page);		if (!mapping || mapping_mapped(mapping)) {			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}	}}
void
flush_kernel_dcache_page(struct page *page)
flush_kernel_dcache_page
struct page *page
struct page
page
*page
*
page
{	if (cache_is_vivt() || cache_is_vipt_aliasing()) {		struct address_space *mapping;		mapping = page_mapping(page);		if (!mapping || mapping_mapped(mapping)) {			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}	}}
if (cache_is_vivt() || cache_is_vipt_aliasing()) {		struct address_space *mapping;		mapping = page_mapping(page);		if (!mapping || mapping_mapped(mapping)) {			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}	}
cache_is_vivt() || cache_is_vipt_aliasing()
cache_is_vivt()
cache_is_vivt
cache_is_vivt
cache_is_vipt_aliasing()
cache_is_vipt_aliasing
cache_is_vipt_aliasing
{		struct address_space *mapping;		mapping = page_mapping(page);		if (!mapping || mapping_mapped(mapping)) {			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}	}
struct address_space *mapping;
struct address_space *mapping;
struct address_space
address_space
*mapping
*
mapping
mapping = page_mapping(page);
mapping = page_mapping(page)
mapping
mapping
page_mapping(page)
page_mapping
page_mapping
page
page
if (!mapping || mapping_mapped(mapping)) {			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}
!mapping || mapping_mapped(mapping)
!mapping
mapping
mapping
mapping_mapped(mapping)
mapping_mapped
mapping_mapped
mapping
mapping
{			void *addr;			addr = page_address(page);			/*			 * kmap_atomic() doesn't set the page virtual			 * address for highmem pages, and			 * kunmap_atomic() takes care of cache			 * flushing already.			 */			if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);		}
void *addr;
void *addr;
void
*addr
*
addr
addr = page_address(page);
addr = page_address(page)
addr
addr
page_address(page)
page_address
page_address
page
page
if (!IS_ENABLED(CONFIG_HIGHMEM) || addr)				__cpuc_flush_dcache_area(addr, PAGE_SIZE);
!IS_ENABLED(CONFIG_HIGHMEM) || addr
!IS_ENABLED(CONFIG_HIGHMEM)
IS_ENABLED(CONFIG_HIGHMEM)
IS_ENABLED
IS_ENABLED
CONFIG_HIGHMEM
CONFIG_HIGHMEM
addr
addr
__cpuc_flush_dcache_area(addr, PAGE_SIZE);
__cpuc_flush_dcache_area(addr, PAGE_SIZE)
__cpuc_flush_dcache_area
__cpuc_flush_dcache_area
addr
addr
PAGE_SIZE
PAGE_SIZE
-----joern-----
(17,5,0)
(12,31,0)
(4,14,0)
(3,17,0)
(31,19,0)
(3,30,0)
(28,18,0)
(20,14,0)
(5,17,0)
(19,10,0)
(8,29,0)
(23,30,0)
(8,30,0)
(10,19,0)
(17,3,0)
(31,16,0)
(25,2,0)
(16,18,0)
(30,2,0)
(15,29,0)
(14,4,0)
(33,5,0)
(7,16,0)
(15,16,0)
(13,8,0)
(21,23,0)
(11,2,0)
(9,10,0)
(10,16,0)
(16,15,0)
(14,20,0)
(32,23,0)
(0,3,0)
(30,8,0)
(6,18,0)
(26,30,0)
(24,15,0)
(19,31,0)
(27,22,0)
(0,17,1)
(19,31,1)
(1,19,1)
(12,10,1)
(16,15,1)
(15,24,1)
(1,23,1)
(14,20,1)
(24,7,1)
(14,4,1)
(3,17,1)
(3,0,1)
(8,13,1)
(1,3,1)
(15,29,1)
(32,3,1)
(21,32,1)
(8,29,1)
(23,21,1)
(19,10,1)
(33,30,1)
(9,16,1)
(23,30,1)
(30,8,1)
(20,4,1)
(7,14,1)
(31,12,1)
(17,5,1)
(3,30,1)
(31,16,1)
(26,19,1)
(13,26,1)
(10,9,1)
(1,14,1)
(10,16,1)
(5,33,1)
(10,16,2)
(23,3,2)
(17,19,2)
(16,15,2)
(19,31,2)
(9,14,2)
(17,5,2)
(26,19,2)
(10,14,2)
(0,17,2)
(14,4,2)
(12,10,2)
(8,19,2)
(31,10,2)
(33,19,2)
(3,19,2)
(8,29,2)
(14,20,2)
(21,3,2)
(30,8,2)
(31,16,2)
(15,14,2)
(19,10,2)
(15,29,2)
(24,14,2)
(3,17,2)
(16,14,2)
(7,14,2)
(13,19,2)
(23,30,2)
(20,4,2)
(30,19,2)
(5,19,2)
(32,3,2)
(19,14,2)
(3,30,2)
-----------------------------------
(0,addr)
(1,RET)
(2,)
(3,!IS_ENABLED(CONFIG_HIGHMEM)
(4,cache_is_vivt()
(5,IS_ENABLED(CONFIG_HIGHMEM)
(6,if (!mapping || mapping_mapped(mapping)
(7,mapping)
(8,page_address(page)
(9,mapping)
(10,!mapping)
(11,if (!IS_ENABLED(CONFIG_HIGHMEM)
(12,mapping)
(13,page)
(14,cache_is_vivt()
(15,page_mapping(page)
(16,mapping = page_mapping(page)
(17,!IS_ENABLED(CONFIG_HIGHMEM)
(18,)
(19,!mapping || mapping_mapped(mapping)
(20,cache_is_vipt_aliasing()
(21,PAGE_SIZE)
(22,)
(23,__cpuc_flush_dcache_area(addr, PAGE_SIZE)
(24,page)
(25,addr)
(26,addr)
(27,if (cache_is_vivt()
(28,mapping)
(29,struct page *page)
(30,addr = page_address(page)
(31,mapping_mapped(mapping)
(32,addr)
(33,CONFIG_HIGHMEM)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^