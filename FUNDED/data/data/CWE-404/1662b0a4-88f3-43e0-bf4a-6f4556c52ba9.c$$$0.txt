-----label-----
0
-----code-----
static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
{
	struct t4_cqe cqe = {};
	struct c4iw_cq *rchp;
	unsigned long flag;
	struct t4_cq *cq;

	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);
	cq = &rchp->cq;

	cqe.u.drain_cookie = wr->wr_id;
	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |
				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |
				 CQE_TYPE_V(0) |
				 CQE_SWCQE_V(1) |
				 CQE_QPID_V(qhp->wq.sq.qid));

	spin_lock_irqsave(&rchp->lock, flag);
	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));
	cq->sw_queue[cq->sw_pidx] = cqe;
	t4_swcq_produce(cq);
	spin_unlock_irqrestore(&rchp->lock, flag);

	if (t4_clear_cq_armed(&rchp->cq)) {
		spin_lock_irqsave(&rchp->comp_handler_lock, flag);
		(*rchp->ibcq.comp_handler)(&rchp->ibcq,
					   rchp->ibcq.cq_context);
		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
17,24
17,25
17,26
17,27
17,28
17,29
17,30
17,31
18,19
19,20
19,21
20,21
22,23
22,24
24,25
26,27
27,28
27,29
28,29
30,31
30,32
33,34
34,35
34,36
36,37
38,39
39,40
39,41
40,41
42,43
42,44
45,46
46,47
46,48
47,48
49,50
49,51
50,51
52,53
52,54
53,54
53,55
54,55
58,59
59,60
59,61
60,61
62,63
63,64
63,65
64,65
67,68
68,69
68,70
69,70
69,71
70,71
70,72
71,72
75,76
75,77
76,77
79,80
80,81
80,82
81,82
81,83
82,83
85,86
85,87
86,87
88,89
88,90
89,90
89,91
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
97,98
97,99
98,99
100,101
102,103
102,104
103,104
106,107
106,108
107,108
110,111
110,112
111,112
113,114
113,115
114,115
114,116
115,116
115,117
116,117
121,122
122,123
122,124
122,125
123,124
125,126
126,127
126,128
127,128
130,131
132,133
133,134
133,135
134,135
134,136
135,136
138,139
138,140
139,140
141,142
141,143
142,143
144,145
144,146
145,146
145,147
146,147
149,150
149,151
150,151
153,154
154,155
154,156
155,156
155,157
156,157
156,158
157,158
160,161
160,162
161,162
164,165
166,167
167,168
167,169
168,169
170,171
172,173
173,174
173,175
173,176
174,175
176,177
177,178
177,179
178,179
181,182
183,184
183,185
184,185
184,186
185,186
187,188
188,189
188,190
189,190
192,193
192,194
192,195
193,194
194,195
194,196
194,197
195,196
197,198
198,199
198,200
199,200
202,203
204,205
205,206
205,207
205,208
206,207
207,208
208,209
208,210
209,210
209,211
210,211
214,215
215,216
215,217
216,217
219,220
219,221
220,221
220,222
221,222
225,226
226,227
226,228
226,229
227,228
229,230
230,231
230,232
231,232
234,235
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,25,29,31,32,35,37,41,43,44,48,51,55,56,57,61,65,66,72,73,74,77,78,83,84,87,94,96,99,101,104,105,108,109,112,117,118,119,120,124,128,129,131,136,137,140,143,147,148,151,152,158,159,162,163,165,169,171,175,179,180,182,186,190,191,196,200,201,203,211,212,213,217,218,222,223,224,228,232,233,235
-----computeFrom-----
46,47
46,48
59,60
59,61
68,69
68,70
80,81
80,82
88,89
88,90
89,90
89,91
90,91
90,92
91,92
91,93
133,134
133,135
154,155
154,156
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;InitializerList;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;LiteralExpression;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;
-----ast_node-----
static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr){	struct t4_cqe cqe = {};	struct c4iw_cq *rchp;	unsigned long flag;	struct t4_cq *cq;	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);	cq = &rchp->cq;	cqe.u.drain_cookie = wr->wr_id;	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));	spin_lock_irqsave(&rchp->lock, flag);	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));	cq->sw_queue[cq->sw_pidx] = cqe;	t4_swcq_produce(cq);	spin_unlock_irqrestore(&rchp->lock, flag);	if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}}
static void
complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
complete_rq_drain_wr
struct c4iw_qp *qhp
struct c4iw_qp
c4iw_qp
*qhp
*
qhp
struct ib_recv_wr *wr
struct ib_recv_wr
ib_recv_wr
*wr
*
wr
{	struct t4_cqe cqe = {};	struct c4iw_cq *rchp;	unsigned long flag;	struct t4_cq *cq;	rchp = to_c4iw_cq(qhp->ibqp.recv_cq);	cq = &rchp->cq;	cqe.u.drain_cookie = wr->wr_id;	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));	spin_lock_irqsave(&rchp->lock, flag);	cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));	cq->sw_queue[cq->sw_pidx] = cqe;	t4_swcq_produce(cq);	spin_unlock_irqrestore(&rchp->lock, flag);	if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}}
struct t4_cqe cqe = {};
struct t4_cqe cqe = {};
struct t4_cqe
t4_cqe
cqe = {}
cqe
= {}
{}
struct c4iw_cq *rchp;
struct c4iw_cq *rchp;
struct c4iw_cq
c4iw_cq
*rchp
*
rchp
unsigned long flag;
unsigned long flag;
unsigned long
flag
flag
struct t4_cq *cq;
struct t4_cq *cq;
struct t4_cq
t4_cq
*cq
*
cq
rchp = to_c4iw_cq(qhp->ibqp.recv_cq);
rchp = to_c4iw_cq(qhp->ibqp.recv_cq)
rchp
rchp
to_c4iw_cq(qhp->ibqp.recv_cq)
to_c4iw_cq
to_c4iw_cq
qhp->ibqp.recv_cq
qhp->ibqp
qhp
qhp
ibqp
recv_cq
cq = &rchp->cq;
cq = &rchp->cq
cq
cq
&rchp->cq
rchp->cq
rchp
rchp
cq
cqe.u.drain_cookie = wr->wr_id;
cqe.u.drain_cookie = wr->wr_id
cqe.u.drain_cookie
cqe.u
cqe
cqe
u
drain_cookie
wr->wr_id
wr
wr
wr_id
cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid));
cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid))
cqe.header
cqe
cqe
header
cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid))
cpu_to_be32
cpu_to_be32
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1) |				 CQE_QPID_V(qhp->wq.sq.qid)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0) |				 CQE_SWCQE_V(1)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE) |				 CQE_TYPE_V(0)
CQE_STATUS_V(T4_ERR_SWFLUSH) |				 CQE_OPCODE_V(C4IW_DRAIN_OPCODE)
CQE_STATUS_V(T4_ERR_SWFLUSH)
CQE_STATUS_V
CQE_STATUS_V
T4_ERR_SWFLUSH
T4_ERR_SWFLUSH
CQE_OPCODE_V(C4IW_DRAIN_OPCODE)
CQE_OPCODE_V
CQE_OPCODE_V
C4IW_DRAIN_OPCODE
C4IW_DRAIN_OPCODE
CQE_TYPE_V(0)
CQE_TYPE_V
CQE_TYPE_V
0
CQE_SWCQE_V(1)
CQE_SWCQE_V
CQE_SWCQE_V
1
CQE_QPID_V(qhp->wq.sq.qid)
CQE_QPID_V
CQE_QPID_V
qhp->wq.sq.qid
qhp->wq.sq
qhp->wq
qhp
qhp
wq
sq
qid
spin_lock_irqsave(&rchp->lock, flag);
spin_lock_irqsave(&rchp->lock, flag)
spin_lock_irqsave
spin_lock_irqsave
&rchp->lock
rchp->lock
rchp
rchp
lock
flag
flag
cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen));
cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)cq->gen))
cqe.bits_type_ts
cqe
cqe
bits_type_ts
cpu_to_be64(CQE_GENBIT_V((u64)cq->gen))
cpu_to_be64
cpu_to_be64
CQE_GENBIT_V((u64)cq->gen)
CQE_GENBIT_V
CQE_GENBIT_V
(u64)cq->gen
u64
u64
u64

cq->gen
cq
cq
gen
cq->sw_queue[cq->sw_pidx] = cqe;
cq->sw_queue[cq->sw_pidx] = cqe
cq->sw_queue[cq->sw_pidx]
cq->sw_queue
cq
cq
sw_queue
cq->sw_pidx
cq
cq
sw_pidx
cqe
cqe
t4_swcq_produce(cq);
t4_swcq_produce(cq)
t4_swcq_produce
t4_swcq_produce
cq
cq
spin_unlock_irqrestore(&rchp->lock, flag);
spin_unlock_irqrestore(&rchp->lock, flag)
spin_unlock_irqrestore
spin_unlock_irqrestore
&rchp->lock
rchp->lock
rchp
rchp
lock
flag
flag
if (t4_clear_cq_armed(&rchp->cq)) {		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}
t4_clear_cq_armed(&rchp->cq)
t4_clear_cq_armed
t4_clear_cq_armed
&rchp->cq
rchp->cq
rchp
rchp
cq
{		spin_lock_irqsave(&rchp->comp_handler_lock, flag);		(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);		spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);	}
spin_lock_irqsave(&rchp->comp_handler_lock, flag);
spin_lock_irqsave(&rchp->comp_handler_lock, flag)
spin_lock_irqsave
spin_lock_irqsave
&rchp->comp_handler_lock
rchp->comp_handler_lock
rchp
rchp
comp_handler_lock
flag
flag
(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context);
(*rchp->ibcq.comp_handler)(&rchp->ibcq,					   rchp->ibcq.cq_context)
(*rchp->ibcq.comp_handler)
*rchp->ibcq.comp_handler
rchp->ibcq.comp_handler
rchp->ibcq
rchp
rchp
ibcq
comp_handler
&rchp->ibcq
rchp->ibcq
rchp
rchp
ibcq
rchp->ibcq.cq_context
rchp->ibcq
rchp
rchp
ibcq
cq_context
spin_unlock_irqrestore(&rchp->comp_handler_lock, flag);
spin_unlock_irqrestore(&rchp->comp_handler_lock, flag)
spin_unlock_irqrestore
spin_unlock_irqrestore
&rchp->comp_handler_lock
rchp->comp_handler_lock
rchp
rchp
comp_handler_lock
flag
flag
-----joern-----
(4,2,0)
(55,87,0)
(21,46,0)
(91,0,0)
(56,36,0)
(16,20,0)
(18,45,0)
(2,21,0)
(12,117,0)
(104,63,0)
(68,88,0)
(24,28,0)
(47,46,0)
(26,113,0)
(115,20,0)
(88,21,0)
(53,92,0)
(92,53,0)
(27,48,0)
(56,103,0)
(92,10,0)
(116,99,0)
(37,46,0)
(87,37,0)
(10,92,0)
(99,33,0)
(114,21,0)
(101,84,0)
(3,18,0)
(22,117,0)
(18,3,0)
(64,3,0)
(87,71,0)
(20,44,0)
(30,73,0)
(52,28,0)
(81,63,0)
(16,114,0)
(36,78,0)
(10,89,0)
(19,58,0)
(53,39,0)
(72,82,0)
(80,71,0)
(48,21,0)
(45,46,0)
(54,46,0)
(93,3,0)
(28,24,0)
(42,82,0)
(90,72,0)
(32,0,0)
(97,8,0)
(25,88,0)
(40,46,0)
(75,13,0)
(107,50,0)
(24,30,0)
(109,113,0)
(66,46,0)
(89,10,0)
(90,73,0)
(90,23,0)
(53,59,0)
(43,107,0)
(62,48,0)
(33,46,0)
(14,117,0)
(94,65,0)
(63,56,0)
(82,116,0)
(70,26,0)
(30,24,0)
(9,79,0)
(82,42,0)
(98,103,0)
(13,21,0)
(61,101,0)
(109,68,0)
(83,36,0)
(105,58,0)
(110,45,0)
(57,59,0)
(112,109,0)
(50,113,0)
(88,68,0)
(8,33,0)
(48,62,0)
(41,31,0)
(118,30,0)
(102,111,0)
(78,62,0)
(77,36,0)
(59,78,0)
(68,109,0)
(73,30,0)
(116,82,0)
(63,78,0)
(23,90,0)
(111,102,0)
(22,26,0)
(33,99,0)
(28,44,0)
(11,8,0)
(73,90,0)
(3,21,0)
(95,28,0)
(72,31,0)
(34,42,0)
(56,63,0)
(60,48,0)
(107,2,0)
(85,16,0)
(74,20,0)
(65,89,0)
(49,24,0)
(45,18,0)
(114,16,0)
(39,53,0)
(15,101,0)
(62,78,0)
(20,16,0)
(58,21,0)
(0,32,0)
(78,46,0)
(69,88,0)
(50,107,0)
(100,76,0)
(50,32,0)
(2,107,0)
(79,116,0)
(1,102,0)
(72,90,0)
(29,21,0)
(76,58,0)
(101,37,0)
(106,46,0)
(17,46,0)
(0,21,0)
(76,100,0)
(96,17,0)
(36,56,0)
(26,22,0)
(21,114,0)
(102,46,0)
(89,46,0)
(108,71,0)
(99,116,0)
(51,2,0)
(117,22,0)
(17,78,0)
(111,13,0)
(117,21,0)
(58,76,0)
(71,87,0)
(103,46,0)
(67,0,0)
(116,79,0)
(13,111,0)
(37,101,0)
(86,13,0)
(38,65,0)
(32,50,0)
(35,23,0)
(7,78,0)
(31,72,0)
(82,72,0)
(59,53,0)
(5,59,0)
(109,112,1)
(33,99,1)
(41,42,1)
(26,22,1)
(95,52,1)
(62,48,1)
(58,19,1)
(24,28,1)
(101,15,1)
(88,69,1)
(102,1,1)
(59,5,1)
(70,22,1)
(53,59,1)
(28,95,1)
(30,24,1)
(51,32,1)
(98,56,1)
(2,4,1)
(96,103,1)
(26,70,1)
(35,31,1)
(90,73,1)
(75,86,1)
(115,74,1)
(48,27,1)
(27,60,1)
(82,72,1)
(5,57,1)
(11,37,1)
(36,78,1)
(118,24,1)
(13,21,1)
(88,21,1)
(91,109,1)
(6,26,1)
(99,116,1)
(30,118,1)
(17,96,1)
(22,117,1)
(97,11,1)
(117,12,1)
(8,97,1)
(25,100,1)
(64,93,1)
(72,31,1)
(10,92,1)
(72,90,1)
(63,81,1)
(42,34,1)
(67,91,1)
(68,88,1)
(1,111,1)
(52,23,1)
(12,14,1)
(58,21,1)
(59,78,1)
(6,100,1)
(20,44,1)
(48,21,1)
(110,18,1)
(50,107,1)
(28,44,1)
(18,3,1)
(57,65,1)
(45,18,1)
(86,17,1)
(53,39,1)
(93,33,1)
(60,7,1)
(34,79,1)
(85,20,1)
(21,114,1)
(3,64,1)
(37,101,1)
(43,2,1)
(0,21,1)
(104,36,1)
(87,55,1)
(24,49,1)
(32,0,1)
(56,36,1)
(0,67,1)
(17,78,1)
(9,8,1)
(38,94,1)
(56,63,1)
(107,43,1)
(79,9,1)
(73,30,1)
(4,51,1)
(7,21,1)
(31,41,1)
(16,20,1)
(14,50,1)
(2,21,1)
(114,16,1)
(3,21,1)
(63,78,1)
(108,80,1)
(50,32,1)
(92,53,1)
(80,78,1)
(89,10,1)
(36,83,1)
(116,79,1)
(87,71,1)
(55,71,1)
(109,68,1)
(116,82,1)
(61,87,1)
(19,105,1)
(65,38,1)
(111,13,1)
(15,61,1)
(20,115,1)
(101,84,1)
(78,62,1)
(90,23,1)
(100,76,1)
(81,104,1)
(112,68,1)
(74,29,1)
(23,35,1)
(107,2,1)
(103,98,1)
(45,110,1)
(94,45,1)
(77,89,1)
(49,28,1)
(102,111,1)
(83,77,1)
(117,21,1)
(16,85,1)
(13,75,1)
(69,25,1)
(82,42,1)
(71,108,1)
(76,58,1)
(105,102,1)
(13,21,2)
(88,21,2)
(111,13,2)
(107,100,2)
(20,44,2)
(21,114,2)
(12,100,2)
(72,31,2)
(2,100,2)
(88,100,2)
(59,78,2)
(56,63,2)
(30,24,2)
(53,59,2)
(22,117,2)
(2,21,2)
(87,71,2)
(3,21,2)
(26,100,2)
(33,99,2)
(78,62,2)
(28,44,2)
(58,21,2)
(62,48,2)
(100,76,2)
(51,100,2)
(107,2,2)
(72,90,2)
(76,58,2)
(92,53,2)
(32,0,2)
(22,100,2)
(53,39,2)
(68,100,2)
(116,79,2)
(63,78,2)
(10,92,2)
(109,68,2)
(117,21,2)
(17,78,2)
(73,30,2)
(50,100,2)
(50,32,2)
(112,100,2)
(26,22,2)
(4,100,2)
(56,36,2)
(48,21,2)
(25,100,2)
(89,10,2)
(36,78,2)
(24,28,2)
(50,107,2)
(90,73,2)
(32,100,2)
(14,100,2)
(117,100,2)
(82,42,2)
(82,72,2)
(43,100,2)
(99,116,2)
(0,100,2)
(102,111,2)
(69,100,2)
(68,88,2)
(90,23,2)
(114,16,2)
(0,21,2)
(67,100,2)
(91,100,2)
(18,3,2)
(116,82,2)
(45,18,2)
(70,100,2)
(109,100,2)
(37,101,2)
(16,20,2)
(101,84,2)
-----------------------------------
(0,rchp->ibcq)
(1,flag)
(2,rchp->ibcq)
(3,rchp->lock)
(4,ibcq)
(5,gen)
(6,RET)
(7,cq)
(8,cqe.header)
(9,T4_ERR_SWFLUSH)
(10,cpu_to_be64(CQE_GENBIT_V((u64)
(11,cqe)
(12,comp_handler_lock)
(13,rchp->lock)
(14,rchp)
(15,wr_id)
(16,qhp->ibqp.recv_cq)
(17,t4_swcq_produce(cq)
(18,&rchp->lock)
(19,cq)
(20,qhp->ibqp)
(21,rchp = to_c4iw_cq(qhp->ibqp.recv_cq)
(22,&rchp->comp_handler_lock)
(23,CQE_SWCQE_V(1)
(24,qhp->wq.sq)
(25,rchp)
(26,spin_unlock_irqrestore(&rchp->comp_handler_lock, flag)
(27,cq)
(28,qhp->wq)
(29,rchp)
(30,qhp->wq.sq.qid)
(31,CQE_TYPE_V(0)
(32,&rchp->ibcq)
(33,cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH)
(34,C4IW_DRAIN_OPCODE)
(35,1)
(36,cq->sw_queue)
(37,cqe.u.drain_cookie = wr->wr_id)
(38,bits_type_ts)
(39,u64)
(40,rchp)
(41,0)
(42,CQE_OPCODE_V(C4IW_DRAIN_OPCODE)
(43,cq_context)
(44,struct c4iw_qp *qhp)
(45,spin_lock_irqsave(&rchp->lock, flag)
(46,)
(47,)
(48,rchp->cq)
(49,sq)
(50,(*rchp->ibcq.comp_handler)
(51,rchp)
(52,qhp)
(53,(u64)
(54,cq)
(55,drain_cookie)
(56,cq->sw_queue[cq->sw_pidx])
(57,cq)
(58,rchp->cq)
(59,cq->gen)
(60,rchp)
(61,wr)
(62,&rchp->cq)
(63,cq->sw_pidx)
(64,lock)
(65,cqe.bits_type_ts)
(66,if (t4_clear_cq_armed(&rchp->cq)
(67,ibcq)
(68,&rchp->comp_handler_lock)
(69,comp_handler_lock)
(70,flag)
(71,cqe.u)
(72,CQE_TYPE_V(0)
(73,CQE_QPID_V(qhp->wq.sq.qid)
(74,qhp)
(75,lock)
(76,&rchp->cq)
(77,cq)
(78,cq = &rchp->cq)
(79,CQE_STATUS_V(T4_ERR_SWFLUSH)
(80,cqe)
(81,sw_pidx)
(82,CQE_OPCODE_V(C4IW_DRAIN_OPCODE)
(83,sw_queue)
(84,struct ib_recv_wr *wr)
(85,recv_cq)
(86,rchp)
(87,cqe.u.drain_cookie)
(88,rchp->comp_handler_lock)
(89,cqe.bits_type_ts = cpu_to_be64(CQE_GENBIT_V((u64)
(90,CQE_SWCQE_V(1)
(91,rchp)
(92,CQE_GENBIT_V((u64)
(93,rchp)
(94,cqe)
(95,wq)
(96,cq)
(97,header)
(98,cqe)
(99,cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH)
(100,t4_clear_cq_armed(&rchp->cq)
(101,wr->wr_id)
(102,spin_unlock_irqrestore(&rchp->lock, flag)
(103,cq->sw_queue[cq->sw_pidx] = cqe)
(104,cq)
(105,rchp)
(106,flag)
(107,rchp->ibcq.cq_context)
(108,u)
(109,spin_lock_irqsave(&rchp->comp_handler_lock, flag)
(110,flag)
(111,&rchp->lock)
(112,flag)
(113,)
(114,to_c4iw_cq(qhp->ibqp.recv_cq)
(115,ibqp)
(116,CQE_STATUS_V(T4_ERR_SWFLUSH)
(117,rchp->comp_handler_lock)
(118,qid)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^