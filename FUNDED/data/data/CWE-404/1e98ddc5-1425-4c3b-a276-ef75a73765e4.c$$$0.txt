-----label-----
1
-----code-----
void CWE401_Memory_Leak__wchar_t_malloc_66b_badSink(wchar_t * dataArray[])
{
    /* copy data out of dataArray */
    wchar_t * data = dataArray[2];
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,22,23
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__wchar_t_malloc_66b_badSink(wchar_t * dataArray[]){    /* copy data out of dataArray */    wchar_t * data = dataArray[2];    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__wchar_t_malloc_66b_badSink(wchar_t * dataArray[])
CWE401_Memory_Leak__wchar_t_malloc_66b_badSink
wchar_t * dataArray[]
wchar_t
* dataArray[]
*
dataArray
[]
{    /* copy data out of dataArray */    wchar_t * data = dataArray[2];    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data = dataArray[2];
wchar_t * data = dataArray[2];
wchar_t
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
;
-----joern-----
(4,8,0)
(0,4,0)
(5,3,0)
(6,3,0)
(6,4,0)
(7,4,0)
(4,6,0)
(2,6,0)
(1,6,1)
(0,7,1)
(7,2,1)
(4,8,1)
(6,4,1)
(4,0,1)
(4,8,2)
(6,4,2)
-----------------------------------
(0,2)
(1,RET)
(2,data)
(3,)
(4,dataArray[2])
(5,data)
(6,* data = dataArray[2])
(7,dataArray)
(8,wchar_t * dataArray[])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^