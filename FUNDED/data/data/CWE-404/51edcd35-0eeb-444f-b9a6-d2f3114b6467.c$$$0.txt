-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    data = NULL;
    /* FIX: Use memory allocated on the stack with ALLOCA */
    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
    /* Initialize then use data */
    wcscpy(data, L"a string");
    printWLine(data);
    CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
20,21
22,23
22,24
23,24
23,25
25,26
27,28
27,29
28,29
30,31
30,32
32,33
33,34
33,35
36,37
37,38
37,39
37,40
38,39
40,41
43,44
44,45
44,46
45,46
47,48
49,50
50,51
50,52
51,52
53,54
54,55
-----nextToken-----
2,4,8,10,11,15,17,21,24,26,29,31,34,35,39,41,42,46,48,52,55
-----computeFrom-----
13,14
13,15
19,20
19,21
30,31
30,32
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    /* Initialize then use data */    wcscpy(data, L"a string");    printWLine(data);    CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data);}
static void
goodG2B()
goodG2B
{    wchar_t * data;    data = NULL;    /* FIX: Use memory allocated on the stack with ALLOCA */    data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));    /* Initialize then use data */    wcscpy(data, L"a string");    printWLine(data);    CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));
data = (wchar_t *)ALLOCA(100*sizeof(wchar_t))
data
data
(wchar_t *)ALLOCA(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
ALLOCA(100*sizeof(wchar_t))
ALLOCA
ALLOCA
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

wcscpy(data, L"a string");
wcscpy(data, L"a string")
wcscpy
wcscpy
data
data
L"a string"
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data);
CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data)
CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink
CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink
&data
data
data
-----joern-----
(7,16,0)
(9,18,0)
(19,0,0)
(3,16,0)
(5,18,0)
(17,6,0)
(15,6,0)
(1,10,0)
(13,10,0)
(0,16,0)
(4,1,0)
(5,17,0)
(18,5,0)
(18,10,0)
(11,0,0)
(10,18,0)
(17,5,0)
(10,16,0)
(7,1,0)
(3,10,0)
(12,3,0)
(18,9,0)
(14,16,0)
(1,7,0)
(2,17,0)
(6,17,0)
(8,7,1)
(5,17,1)
(0,11,1)
(17,6,1)
(13,0,1)
(18,5,1)
(3,10,1)
(6,15,1)
(12,10,1)
(1,10,1)
(7,1,1)
(18,9,1)
(2,13,1)
(10,18,1)
(4,3,1)
(1,4,1)
(11,19,1)
(15,2,1)
(3,12,1)
(1,10,2)
(18,5,2)
(10,18,2)
(18,9,2)
(7,1,2)
(3,10,2)
(5,17,2)
(17,6,2)
-----------------------------------
(0,data = NULL)
(1,&data)
(2,100)
(3,printWLine(data)
(4,data)
(5,ALLOCA(100*sizeof(wchar_t)
(6,sizeof(wchar_t)
(7,CWE401_Memory_Leak__strdup_wchar_t_63b_goodG2BSink(&data)
(8,RET)
(9,wchar_t *)
(10,data = (wchar_t *)
(11,NULL)
(12,data)
(13,data)
(14,data)
(15,wchar_t)
(16,)
(17,100*sizeof(wchar_t)
(18,(wchar_t *)
(19,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^