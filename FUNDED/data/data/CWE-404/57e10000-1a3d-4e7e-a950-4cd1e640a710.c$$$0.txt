-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = freopen("BadSource_freopen.txt","w+",stdin);
    if(globalReturnsTrue())
    {
        if (data != NULL)
        {
            /* FIX: Close the file using fclose() */
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
23,27
24,25
28,29
30,31
30,32
31,32
32,33
34,35
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,29,33,38,40,45,47
-----computeFrom-----
14,15
14,16
20,21
20,22
36,37
36,38
-----guardedBy-----
38,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = freopen("BadSource_freopen.txt","w+",stdin);    if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = freopen("BadSource_freopen.txt","w+",stdin);
data = freopen("BadSource_freopen.txt","w+",stdin)
data
data
freopen("BadSource_freopen.txt","w+",stdin)
freopen
freopen
"BadSource_freopen.txt"
"w+"
stdin
stdin
if(globalReturnsTrue())    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            /* FIX: Close the file using fclose() */            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(7,0,0)
(10,0,0)
(8,5,0)
(16,12,0)
(18,0,0)
(10,11,0)
(17,11,0)
(19,11,0)
(4,10,0)
(1,11,0)
(3,18,0)
(11,10,0)
(9,12,0)
(12,10,0)
(2,0,0)
(20,13,0)
(5,10,0)
(6,18,0)
(5,14,0)
(15,12,1)
(5,10,1)
(10,11,1)
(3,6,1)
(16,21,1)
(4,18,1)
(21,10,1)
(12,9,1)
(11,19,1)
(8,12,1)
(18,3,1)
(15,21,1)
(1,4,1)
(15,5,1)
(12,10,1)
(9,16,1)
(5,8,1)
(19,17,1)
(17,1,1)
(8,12,2)
(12,21,2)
(12,10,2)
(16,21,2)
(5,12,2)
(5,10,2)
(9,21,2)
(10,11,2)
-----------------------------------
(0,)
(1,"BadSource_freopen.txt")
(2,data)
(3,NULL)
(4,data)
(5,fclose(data)
(6,data)
(7,if(globalReturnsTrue()
(8,data)
(9,NULL)
(10,data = freopen("BadSource_freopen.txt","w+",stdin)
(11,freopen("BadSource_freopen.txt","w+",stdin)
(12,data != NULL)
(13,)
(14,)
(15,RET)
(16,data)
(17,"w+")
(18,data = NULL)
(19,stdin)
(20,if (data != NULL)
(21,globalReturnsTrue()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^