-----label-----
1
-----code-----
void
perf_callchain_user(struct perf_callchain_entry *entry, struct pt_regs *regs)
{
	struct frame_tail __user *tail;


	perf_callchain_store(entry, regs->ARM_pc);
	tail = (struct frame_tail __user *)regs->ARM_fp - 1;

	while ((entry->nr < PERF_MAX_STACK_DEPTH) &&
	       tail && !((unsigned long)tail & 0x3))
		tail = user_backtrace(tail, entry);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
17,20
17,21
17,22
17,23
18,19
19,20
19,21
20,21
22,23
24,25
25,26
26,27
27,28
29,30
30,31
30,32
30,33
31,32
33,34
35,36
35,37
36,37
39,40
40,41
40,42
41,42
41,43
42,43
42,44
43,44
44,45
44,46
45,46
45,47
46,47
49,50
51,52
53,54
54,55
55,56
55,57
56,57
56,58
57,58
57,59
60,61
63,64
64,65
64,66
65,66
67,68
67,69
67,70
68,69
70,71
72,73
-----nextToken-----
2,4,7,9,10,13,15,16,21,23,28,32,34,37,38,47,48,50,52,58,59,61,62,66,69,71,73
-----computeFrom-----
41,42
41,43
42,43
42,44
44,45
44,46
55,56
55,57
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;ProblemStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;ProblemStatement;WhileStatement;BinaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
voidperf_callchain_user(struct perf_callchain_entry *entry, struct pt_regs *regs){	struct frame_tail __user *tail;	perf_callchain_store(entry, regs->ARM_pc);	tail = (struct frame_tail __user *)regs->ARM_fp - 1;	while ((entry->nr < PERF_MAX_STACK_DEPTH) &&	       tail && !((unsigned long)tail & 0x3))		tail = user_backtrace(tail, entry);}
void
perf_callchain_user(struct perf_callchain_entry *entry, struct pt_regs *regs)
perf_callchain_user
struct perf_callchain_entry *entry
struct perf_callchain_entry
perf_callchain_entry
*entry
*
entry
struct pt_regs *regs
struct pt_regs
pt_regs
*regs
*
regs
{	struct frame_tail __user *tail;	perf_callchain_store(entry, regs->ARM_pc);	tail = (struct frame_tail __user *)regs->ARM_fp - 1;	while ((entry->nr < PERF_MAX_STACK_DEPTH) &&	       tail && !((unsigned long)tail & 0x3))		tail = user_backtrace(tail, entry);}
struct frame_tail __user
struct frame_tail __user
struct frame_tail
frame_tail
__user
__user
r
*tail;
*tail
tail
tail
perf_callchain_store(entry, regs->ARM_pc);
perf_callchain_store(entry, regs->ARM_pc)
perf_callchain_store
perf_callchain_store
entry
entry
regs->ARM_pc
regs
regs
ARM_pc
tail = (struct frame_tail __user *)regs->ARM_fp - 1;
while ((entry->nr < PERF_MAX_STACK_DEPTH) &&	       tail && !((unsigned long)tail & 0x3))		tail = user_backtrace(tail, entry);
(entry->nr < PERF_MAX_STACK_DEPTH) &&	       tail && !((unsigned long)tail & 0x3)
(entry->nr < PERF_MAX_STACK_DEPTH) &&	       tail
(entry->nr < PERF_MAX_STACK_DEPTH)
entry->nr < PERF_MAX_STACK_DEPTH
entry->nr
entry
entry
nr
PERF_MAX_STACK_DEPTH
PERF_MAX_STACK_DEPTH
tail
tail
!((unsigned long)tail & 0x3)
((unsigned long)tail & 0x3)
(unsigned long)tail & 0x3
(unsigned long)tail
unsigned long
unsigned long

tail
tail
0x3
tail = user_backtrace(tail, entry);
tail = user_backtrace(tail, entry)
tail
tail
user_backtrace(tail, entry)
user_backtrace
user_backtrace
tail
tail
entry
entry
-----joern-----
(17,9,0)
(16,17,0)
(14,24,0)
(12,32,0)
(2,23,0)
(33,23,0)
(17,33,0)
(33,15,0)
(16,7,0)
(7,34,0)
(26,25,0)
(20,6,0)
(25,19,0)
(23,25,0)
(32,1,0)
(31,7,0)
(29,32,0)
(24,32,0)
(34,3,0)
(10,17,0)
(37,22,0)
(30,0,0)
(4,0,0)
(34,33,0)
(19,25,0)
(24,15,0)
(0,20,0)
(34,7,0)
(9,22,0)
(17,16,0)
(7,16,0)
(25,23,0)
(0,5,0)
(22,5,0)
(8,20,0)
(32,24,0)
(17,6,0)
(36,19,0)
(27,15,0)
(38,33,0)
(23,33,0)
(19,1,0)
(34,9,0)
(35,19,0)
(22,9,0)
(24,5,0)
(13,15,0)
(20,0,0)
(6,17,0)
(22,33,0)
(6,20,0)
(18,9,0)
(28,34,0)
(3,34,0)
(21,22,0)
(25,26,0)
(36,35,1)
(4,33,1)
(35,38,1)
(25,19,1)
(17,33,1)
(23,2,1)
(34,28,1)
(22,5,1)
(22,9,1)
(22,37,1)
(16,7,1)
(37,21,1)
(19,36,1)
(12,14,1)
(4,9,1)
(24,5,1)
(32,1,1)
(18,6,1)
(24,32,1)
(17,10,1)
(6,17,1)
(20,0,1)
(29,12,1)
(17,16,1)
(33,23,1)
(7,31,1)
(38,24,1)
(28,10,1)
(32,29,1)
(8,0,1)
(7,34,1)
(25,26,1)
(30,4,1)
(17,9,1)
(6,20,1)
(34,3,1)
(23,25,1)
(19,1,1)
(22,33,1)
(10,20,1)
(21,18,1)
(2,25,1)
(31,34,1)
(9,22,1)
(34,9,1)
(0,5,1)
(34,33,1)
(20,8,1)
(11,6,1)
(0,30,1)
(17,33,2)
(9,6,2)
(24,5,2)
(22,5,2)
(22,9,2)
(18,6,2)
(17,20,2)
(22,6,2)
(6,6,2)
(16,10,2)
(32,1,2)
(7,34,2)
(28,10,2)
(8,6,2)
(25,26,2)
(34,9,2)
(22,33,2)
(20,0,2)
(0,6,2)
(4,6,2)
(21,6,2)
(6,17,2)
(0,5,2)
(16,7,2)
(17,16,2)
(19,1,2)
(10,20,2)
(34,33,2)
(6,20,2)
(7,10,2)
(9,22,2)
(17,9,2)
(37,6,2)
(33,23,2)
(23,25,2)
(34,10,2)
(31,10,2)
(20,6,2)
(34,3,2)
(30,6,2)
(25,19,2)
(24,32,2)
-----------------------------------
(0,entry->nr)
(1,struct pt_regs *regs)
(2,1)
(3,unsigned long)
(4,entry)
(5,struct perf_callchain_entry *entry)
(6,(entry->nr < PERF_MAX_STACK_DEPTH)
(7,(unsigned long)
(8,PERF_MAX_STACK_DEPTH)
(9,tail = user_backtrace(tail, entry)
(10,tail)
(11,RET)
(12,regs)
(13,tail)
(14,entry)
(15,)
(16,!((unsigned long)
(17,tail && !((unsigned long)
(18,tail)
(19,regs->ARM_fp)
(20,entry->nr < PERF_MAX_STACK_DEPTH)
(21,tail)
(22,user_backtrace(tail, entry)
(23,(struct frame_tail __user *)
(24,perf_callchain_store(entry, regs->ARM_pc)
(25,(struct frame_tail __user *)
(26,struct frame_tail __user *)
(27,while ((entry->nr < PERF_MAX_STACK_DEPTH)
(28,tail)
(29,ARM_pc)
(30,nr)
(31,0x3)
(32,regs->ARM_pc)
(33,tail = (struct frame_tail __user *)
(34,(unsigned long)
(35,regs)
(36,ARM_fp)
(37,entry)
(38,tail)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^