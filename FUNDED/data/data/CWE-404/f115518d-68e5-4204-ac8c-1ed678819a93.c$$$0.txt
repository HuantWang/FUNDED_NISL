-----label-----
0
-----code-----
static void cp_clcd_enable(struct clcd_fb *fb)
{
	struct fb_var_screeninfo *var = &fb->fb.var;
	u32 val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2;

	if (var->bits_per_pixel <= 8 ||
	    (var->bits_per_pixel == 16 && var->green.length == 5))
		/* Pseudocolor, RGB555, BGR555 */
		val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555;
	else if (fb->fb.var.bits_per_pixel <= 16)
		/* truecolor RGB565 */
		val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;
	else
		val = 0; /* no idea for this, don't trust the docs */

	cm_control(CM_CTRL_LCDMUXSEL_MASK|
		   CM_CTRL_LCDEN0|
		   CM_CTRL_LCDEN1|
		   CM_CTRL_STATIC1|
		   CM_CTRL_STATIC2|
		   CM_CTRL_STATIC|
		   CM_CTRL_n24BITEN, val);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
21,22
21,23
22,23
22,24
23,24
27,28
28,29
28,30
29,30
31,32
31,33
33,34
34,35
34,36
35,36
37,38
39,40
39,41
39,42
40,41
40,42
41,42
41,43
42,43
42,44
43,44
47,48
48,49
48,50
49,50
49,51
50,51
50,52
51,52
55,56
55,57
56,57
56,58
57,58
57,59
58,59
63,64
64,65
64,66
65,66
67,68
69,70
69,71
69,72
70,71
70,72
71,72
71,73
72,73
72,74
73,74
73,75
74,75
80,81
81,82
81,83
82,83
84,85
86,87
87,88
87,89
88,89
91,92
92,93
92,94
92,95
93,94
95,96
95,97
96,97
96,98
97,98
97,99
98,99
98,100
99,100
99,101
100,101
100,102
101,102
103,104
105,106
107,108
109,110
111,112
113,114
115,116
-----nextToken-----
2,4,7,9,10,15,17,18,24,25,26,30,32,36,38,44,45,46,52,53,54,59,60,61,62,66,68,75,76,77,78,79,83,85,89,90,94,102,104,106,108,110,112,114,116
-----computeFrom-----
34,35
34,36
40,41
40,42
41,42
41,43
48,49
48,50
49,50
49,51
55,56
55,57
64,65
64,66
70,71
70,72
81,82
81,83
87,88
87,89
95,96
95,97
96,97
96,98
97,98
97,99
98,99
98,100
99,100
99,101
100,101
100,102
-----guardedBy-----
-----guardedByNegation-----
59,77
53,78
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void cp_clcd_enable(struct clcd_fb *fb){	struct fb_var_screeninfo *var = &fb->fb.var;	u32 val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2;	if (var->bits_per_pixel <= 8 ||	    (var->bits_per_pixel == 16 && var->green.length == 5))		/* Pseudocolor, RGB555, BGR555 */		val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555;	else if (fb->fb.var.bits_per_pixel <= 16)		/* truecolor RGB565 */		val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;	else		val = 0; /* no idea for this, don't trust the docs */	cm_control(CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC|		   CM_CTRL_n24BITEN, val);}
static void
cp_clcd_enable(struct clcd_fb *fb)
cp_clcd_enable
struct clcd_fb *fb
struct clcd_fb
clcd_fb
*fb
*
fb
{	struct fb_var_screeninfo *var = &fb->fb.var;	u32 val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2;	if (var->bits_per_pixel <= 8 ||	    (var->bits_per_pixel == 16 && var->green.length == 5))		/* Pseudocolor, RGB555, BGR555 */		val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555;	else if (fb->fb.var.bits_per_pixel <= 16)		/* truecolor RGB565 */		val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;	else		val = 0; /* no idea for this, don't trust the docs */	cm_control(CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC|		   CM_CTRL_n24BITEN, val);}
struct fb_var_screeninfo *var = &fb->fb.var;
struct fb_var_screeninfo *var = &fb->fb.var;
struct fb_var_screeninfo
fb_var_screeninfo
*var = &fb->fb.var
*
var
= &fb->fb.var
&fb->fb.var
fb->fb.var
fb->fb
fb
fb
fb
var
u32 val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2;
u32 val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2;
u32
u32
val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2
val
= CM_CTRL_STATIC1 | CM_CTRL_STATIC2
CM_CTRL_STATIC1 | CM_CTRL_STATIC2
CM_CTRL_STATIC1
CM_CTRL_STATIC1
CM_CTRL_STATIC2
CM_CTRL_STATIC2
if (var->bits_per_pixel <= 8 ||	    (var->bits_per_pixel == 16 && var->green.length == 5))		/* Pseudocolor, RGB555, BGR555 */		val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555;	else if (fb->fb.var.bits_per_pixel <= 16)		/* truecolor RGB565 */		val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;	else		val = 0;
var->bits_per_pixel <= 8 ||	    (var->bits_per_pixel == 16 && var->green.length == 5)
var->bits_per_pixel <= 8
var->bits_per_pixel
var
var
bits_per_pixel
8
(var->bits_per_pixel == 16 && var->green.length == 5)
var->bits_per_pixel == 16 && var->green.length == 5
var->bits_per_pixel == 16
var->bits_per_pixel
var
var
bits_per_pixel
16
var->green.length == 5
var->green.length
var->green
var
var
green
length
5
val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555;
val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555
val
val
CM_CTRL_LCDMUXSEL_VGA555_TFT555
CM_CTRL_LCDMUXSEL_VGA555_TFT555
if (fb->fb.var.bits_per_pixel <= 16)		/* truecolor RGB565 */		val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;	else		val = 0;
fb->fb.var.bits_per_pixel <= 16
fb->fb.var.bits_per_pixel
fb->fb.var
fb->fb
fb
fb
fb
var
bits_per_pixel
16
val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555;
val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555
val
val
CM_CTRL_LCDMUXSEL_VGA565_TFT555
CM_CTRL_LCDMUXSEL_VGA565_TFT555
val = 0;
val = 0
val
val
0
cm_control(CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC|		   CM_CTRL_n24BITEN, val);
cm_control(CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC|		   CM_CTRL_n24BITEN, val)
cm_control
cm_control
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC|		   CM_CTRL_n24BITEN
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2|		   CM_CTRL_STATIC
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1|		   CM_CTRL_STATIC2
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1|		   CM_CTRL_STATIC1
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0|		   CM_CTRL_LCDEN1
CM_CTRL_LCDMUXSEL_MASK|		   CM_CTRL_LCDEN0
CM_CTRL_LCDMUXSEL_MASK
CM_CTRL_LCDMUXSEL_MASK
CM_CTRL_LCDEN0
CM_CTRL_LCDEN0
CM_CTRL_LCDEN1
CM_CTRL_LCDEN1
CM_CTRL_STATIC1
CM_CTRL_STATIC1
CM_CTRL_STATIC2
CM_CTRL_STATIC2
CM_CTRL_STATIC
CM_CTRL_STATIC
CM_CTRL_n24BITEN
CM_CTRL_n24BITEN
val
val
-----joern-----
(65,9,0)
(22,28,0)
(31,68,0)
(26,58,0)
(63,53,0)
(2,0,0)
(28,59,0)
(66,25,0)
(68,31,0)
(67,20,0)
(64,30,0)
(32,25,0)
(46,19,0)
(61,67,0)
(50,22,0)
(45,32,0)
(28,19,0)
(14,9,0)
(38,35,0)
(51,28,0)
(9,31,0)
(29,42,0)
(47,68,0)
(43,4,0)
(6,14,0)
(61,62,0)
(25,32,0)
(0,62,0)
(49,68,0)
(34,14,0)
(4,49,0)
(8,60,0)
(26,68,0)
(70,53,0)
(55,26,0)
(17,68,0)
(35,8,0)
(60,8,0)
(41,26,0)
(11,59,0)
(36,47,0)
(19,25,0)
(25,59,0)
(30,29,0)
(23,59,0)
(16,30,0)
(56,47,0)
(60,1,0)
(1,60,0)
(68,59,0)
(13,49,0)
(5,67,0)
(49,4,0)
(4,35,0)
(35,4,0)
(62,0,0)
(37,29,0)
(44,62,0)
(12,66,0)
(39,20,0)
(67,61,0)
(33,1,0)
(3,19,0)
(28,53,0)
(21,64,0)
(52,66,0)
(7,25,0)
(64,27,0)
(14,42,0)
(15,0,0)
(30,64,0)
(8,58,0)
(27,64,0)
(47,1,0)
(62,61,0)
(10,27,0)
(24,58,0)
(1,47,0)
(8,35,0)
(40,49,0)
(58,8,0)
(9,14,0)
(28,22,0)
(54,32,0)
(28,66,0)
(69,61,0)
(20,67,0)
(48,29,0)
(57,59,0)
(58,26,0)
(22,20,0)
(20,22,0)
(31,9,0)
(29,30,0)
(64,30,1)
(26,55,1)
(32,54,1)
(28,66,1)
(68,31,1)
(26,68,1)
(15,2,1)
(63,70,1)
(66,12,1)
(47,36,1)
(9,65,1)
(55,41,1)
(56,25,1)
(28,19,1)
(54,45,1)
(31,9,1)
(47,68,1)
(8,58,1)
(28,53,1)
(30,29,1)
(45,7,1)
(48,37,1)
(50,19,1)
(43,49,1)
(33,47,1)
(35,38,1)
(14,34,1)
(67,61,1)
(36,56,1)
(46,3,1)
(64,21,1)
(37,60,1)
(28,51,1)
(19,25,1)
(10,64,1)
(27,10,1)
(61,62,1)
(5,39,1)
(40,58,1)
(30,16,1)
(22,20,1)
(29,42,1)
(60,8,1)
(13,40,1)
(1,47,1)
(2,44,1)
(49,68,1)
(16,29,1)
(27,64,1)
(50,66,1)
(6,17,1)
(41,1,1)
(7,68,1)
(50,53,1)
(60,1,1)
(3,60,1)
(52,27,1)
(9,14,1)
(4,43,1)
(19,46,1)
(4,49,1)
(62,0,1)
(0,15,1)
(14,42,1)
(29,48,1)
(21,30,1)
(38,4,1)
(44,69,1)
(12,52,1)
(8,35,1)
(65,14,1)
(20,67,1)
(70,27,1)
(18,28,1)
(1,33,1)
(28,22,1)
(24,26,1)
(66,25,1)
(51,22,1)
(58,24,1)
(58,26,1)
(69,5,1)
(25,32,1)
(39,50,1)
(49,13,1)
(35,4,1)
(34,6,1)
(53,63,1)
(12,27,2)
(37,60,2)
(66,25,2)
(4,58,2)
(4,49,2)
(13,58,2)
(25,32,2)
(40,58,2)
(67,61,2)
(30,29,2)
(49,58,2)
(27,64,2)
(66,27,2)
(28,19,2)
(52,27,2)
(30,60,2)
(68,31,2)
(8,35,2)
(26,1,2)
(16,60,2)
(49,68,2)
(60,1,2)
(38,58,2)
(29,60,2)
(26,68,2)
(28,66,2)
(28,22,2)
(28,53,2)
(19,60,2)
(14,42,2)
(24,1,2)
(48,60,2)
(9,14,2)
(43,58,2)
(63,27,2)
(53,27,2)
(22,20,2)
(10,60,2)
(20,67,2)
(60,8,2)
(64,30,2)
(55,1,2)
(1,47,2)
(64,60,2)
(46,60,2)
(47,68,2)
(21,60,2)
(27,60,2)
(62,0,2)
(35,4,2)
(58,26,2)
(29,42,2)
(70,27,2)
(3,60,2)
(58,1,2)
(35,58,2)
(31,9,2)
(8,1,2)
(19,25,2)
(41,1,2)
(61,62,2)
(8,58,2)
-----------------------------------
(0,CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(1,var->bits_per_pixel <= 8)
(2,CM_CTRL_STATIC)
(3,val)
(4,var->green.length)
(5,CM_CTRL_LCDEN1)
(6,fb)
(7,val)
(8,var->bits_per_pixel == 16 && var->green.length == 5)
(9,fb->fb.var)
(10,16)
(11,if (var->bits_per_pixel <= 8 ||\n\\n\\t    (var->bits_per_pixel == 16 && var->green.length == 5)
(12,CM_CTRL_LCDMUXSEL_VGA565_TFT555)
(13,green)
(14,fb->fb)
(15,CM_CTRL_n24BITEN)
(16,var)
(17,var)
(18,RET)
(19,val |= CM_CTRL_LCDMUXSEL_VGA555_TFT555)
(20,CM_CTRL_LCDEN0|\n\\n\\t\\t   CM_CTRL_LCDEN1|\n\\n\\t\\t   CM_CTRL_STATIC1|\n\\n\\t\\t   CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(21,bits_per_pixel)
(22,CM_CTRL_LCDMUXSEL_MASK|\n\\n\\t\\t   CM_CTRL_LCDEN0|\n\\n\\t\\t   CM_CTRL_LCDEN1|\n\\n\\t\\t   CM_CTRL_STATIC1|\n\\n\\t\\t   CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(23,val)
(24,16)
(25,val = CM_CTRL_STATIC1 | CM_CTRL_STATIC2)
(26,var->bits_per_pixel)
(27,fb->fb.var.bits_per_pixel <= 16)
(28,cm_control(CM_CTRL_LCDMUXSEL_MASK|\n\\n\\t\\t   CM_CTRL_LCDEN0|\n\\n\\t\\t   CM_CTRL_LCDEN1|\n\\n\\t\\t   CM_CTRL_STATIC1|\n\\n\\t\\t   CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN, val)
(29,fb->fb)
(30,fb->fb.var)
(31,&fb->fb.var)
(32,CM_CTRL_STATIC1 | CM_CTRL_STATIC2)
(33,8)
(34,fb)
(35,var->green.length == 5)
(36,bits_per_pixel)
(37,fb)
(38,5)
(39,CM_CTRL_LCDEN0)
(40,var)
(41,var)
(42,struct clcd_fb *fb)
(43,length)
(44,CM_CTRL_STATIC2)
(45,CM_CTRL_STATIC1)
(46,CM_CTRL_LCDMUXSEL_VGA555_TFT555)
(47,var->bits_per_pixel)
(48,fb)
(49,var->green)
(50,CM_CTRL_LCDMUXSEL_MASK)
(51,val)
(52,val)
(53,val = 0)
(54,CM_CTRL_STATIC2)
(55,bits_per_pixel)
(56,var)
(57,var)
(58,var->bits_per_pixel == 16)
(59,)
(60,var->bits_per_pixel <= 8 ||\n\\n\\t    (var->bits_per_pixel == 16 && var->green.length == 5)
(61,CM_CTRL_STATIC1|\n\\n\\t\\t   CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(62,CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(63,0)
(64,fb->fb.var.bits_per_pixel)
(65,var)
(66,val |= CM_CTRL_LCDMUXSEL_VGA565_TFT555)
(67,CM_CTRL_LCDEN1|\n\\n\\t\\t   CM_CTRL_STATIC1|\n\\n\\t\\t   CM_CTRL_STATIC2|\n\\n\\t\\t   CM_CTRL_STATIC|\n\\n\\t\\t   CM_CTRL_n24BITEN)
(68,*var = &fb->fb.var)
(69,CM_CTRL_STATIC1)
(70,val)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^