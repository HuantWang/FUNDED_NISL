-----label-----
1
-----code-----
int ib_close_qp(struct ib_qp *qp)
{
	struct ib_qp *real_qp;
	unsigned long flags;

	real_qp = qp->real_qp;
	if (real_qp == qp)
		return -EINVAL;

	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);
	list_del(&qp->open_list);
	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);

	atomic_dec(&real_qp->usecnt);
	ib_close_shared_qp_security(qp->qp_sec);
	kfree(qp);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
42,43
43,44
43,45
43,46
44,45
46,47
47,48
47,49
48,49
48,50
49,50
53,54
55,56
56,57
56,58
57,58
59,60
60,61
60,62
61,62
64,65
65,66
65,67
65,68
66,67
68,69
69,70
69,71
70,71
70,72
71,72
75,76
77,78
78,79
78,80
79,80
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
90,91
90,92
91,92
94,95
95,96
95,97
96,97
98,99
100,101
-----nextToken-----
2,4,7,9,10,15,17,18,21,23,27,30,31,35,37,41,45,50,51,52,54,58,62,63,67,72,73,74,76,80,84,85,89,92,93,97,99,101
-----computeFrom-----
25,26
25,27
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int ib_close_qp(struct ib_qp *qp){	struct ib_qp *real_qp;	unsigned long flags;	real_qp = qp->real_qp;	if (real_qp == qp)		return -EINVAL;	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);	list_del(&qp->open_list);	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);	atomic_dec(&real_qp->usecnt);	ib_close_shared_qp_security(qp->qp_sec);	kfree(qp);	return 0;}
int
ib_close_qp(struct ib_qp *qp)
ib_close_qp
struct ib_qp *qp
struct ib_qp
ib_qp
*qp
*
qp
{	struct ib_qp *real_qp;	unsigned long flags;	real_qp = qp->real_qp;	if (real_qp == qp)		return -EINVAL;	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);	list_del(&qp->open_list);	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);	atomic_dec(&real_qp->usecnt);	ib_close_shared_qp_security(qp->qp_sec);	kfree(qp);	return 0;}
struct ib_qp *real_qp;
struct ib_qp *real_qp;
struct ib_qp
ib_qp
*real_qp
*
real_qp
unsigned long flags;
unsigned long flags;
unsigned long
flags
flags
real_qp = qp->real_qp;
real_qp = qp->real_qp
real_qp
real_qp
qp->real_qp
qp
qp
real_qp
if (real_qp == qp)		return -EINVAL;
real_qp == qp
real_qp
real_qp
qp
qp
return -EINVAL;
-EINVAL
EINVAL
EINVAL
spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);
spin_lock_irqsave(&real_qp->device->event_handler_lock, flags)
spin_lock_irqsave
spin_lock_irqsave
&real_qp->device->event_handler_lock
real_qp->device->event_handler_lock
real_qp->device
real_qp
real_qp
device
event_handler_lock
flags
flags
list_del(&qp->open_list);
list_del(&qp->open_list)
list_del
list_del
&qp->open_list
qp->open_list
qp
qp
open_list
spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);
spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags)
spin_unlock_irqrestore
spin_unlock_irqrestore
&real_qp->device->event_handler_lock
real_qp->device->event_handler_lock
real_qp->device
real_qp
real_qp
device
event_handler_lock
flags
flags
atomic_dec(&real_qp->usecnt);
atomic_dec(&real_qp->usecnt)
atomic_dec
atomic_dec
&real_qp->usecnt
real_qp->usecnt
real_qp
real_qp
usecnt
ib_close_shared_qp_security(qp->qp_sec);
ib_close_shared_qp_security(qp->qp_sec)
ib_close_shared_qp_security
ib_close_shared_qp_security
qp->qp_sec
qp
qp
qp_sec
kfree(qp);
kfree(qp)
kfree
kfree
qp
qp
return 0;
0
-----joern-----
(7,1,0)
(32,36,0)
(14,15,0)
(44,30,0)
(39,41,0)
(4,30,0)
(10,9,0)
(22,12,0)
(2,9,0)
(35,45,0)
(11,2,0)
(31,10,0)
(26,6,0)
(39,30,0)
(41,39,0)
(45,6,0)
(40,6,0)
(37,16,0)
(21,24,0)
(13,8,0)
(2,3,0)
(37,9,0)
(46,10,0)
(36,41,0)
(3,42,0)
(48,9,0)
(27,9,0)
(1,50,0)
(43,5,0)
(12,2,0)
(28,23,0)
(15,42,0)
(5,42,0)
(17,23,0)
(45,17,0)
(16,37,0)
(23,9,0)
(13,9,0)
(50,9,0)
(6,2,0)
(8,13,0)
(20,3,0)
(3,2,0)
(46,19,0)
(33,15,0)
(50,1,0)
(47,0,0)
(24,19,0)
(34,9,0)
(29,39,0)
(12,16,0)
(15,2,0)
(30,2,0)
(6,45,0)
(49,12,0)
(8,0,0)
(41,36,0)
(5,9,0)
(38,0,0)
(0,42,0)
(1,42,0)
(17,45,0)
(16,12,0)
(25,3,0)
(30,39,0)
(36,9,0)
(23,17,0)
(0,8,0)
(18,1,0)
(24,21,1)
(6,26,1)
(14,2,1)
(15,33,1)
(2,3,1)
(38,47,1)
(40,13,1)
(46,10,1)
(35,6,1)
(1,7,1)
(23,28,1)
(15,42,1)
(49,22,1)
(20,25,1)
(12,2,1)
(3,20,1)
(36,41,1)
(45,35,1)
(39,30,1)
(19,24,1)
(31,5,1)
(25,11,1)
(21,15,1)
(28,17,1)
(0,38,1)
(7,18,1)
(10,31,1)
(30,2,1)
(43,50,1)
(16,12,1)
(6,2,1)
(29,30,1)
(46,19,1)
(39,29,1)
(47,36,1)
(18,37,1)
(3,42,1)
(17,45,1)
(5,43,1)
(15,2,1)
(44,4,1)
(45,6,1)
(5,42,1)
(23,17,1)
(12,49,1)
(41,39,1)
(33,14,1)
(4,15,1)
(32,41,1)
(37,16,1)
(1,42,1)
(8,0,1)
(26,40,1)
(0,42,1)
(36,32,1)
(30,44,1)
(50,1,1)
(13,8,1)
(22,23,1)
(5,15,2)
(24,15,2)
(47,15,2)
(30,2,2)
(17,45,2)
(36,15,2)
(15,42,2)
(31,15,2)
(23,15,2)
(35,15,2)
(41,15,2)
(28,15,2)
(17,15,2)
(18,15,2)
(26,15,2)
(1,15,2)
(39,30,2)
(19,15,2)
(44,15,2)
(38,15,2)
(1,42,2)
(36,41,2)
(8,0,2)
(23,17,2)
(46,10,2)
(16,15,2)
(32,15,2)
(6,15,2)
(12,2,2)
(2,3,2)
(13,8,2)
(50,15,2)
(15,2,2)
(39,15,2)
(30,15,2)
(3,42,2)
(37,15,2)
(6,2,2)
(5,42,2)
(8,15,2)
(45,6,2)
(0,42,2)
(45,15,2)
(0,15,2)
(49,15,2)
(46,19,2)
(29,15,2)
(37,16,2)
(22,15,2)
(21,15,2)
(13,15,2)
(50,1,2)
(16,12,2)
(4,15,2)
(12,15,2)
(7,15,2)
(40,15,2)
(41,39,2)
(43,15,2)
(10,15,2)
-----------------------------------
(0,qp->open_list)
(1,qp->qp_sec)
(2,real_qp = qp->real_qp)
(3,qp->real_qp)
(4,real_qp)
(5,kfree(qp)
(6,real_qp->device)
(7,qp_sec)
(8,&qp->open_list)
(9,)
(10,return 0;)
(11,real_qp)
(12,real_qp->usecnt)
(13,list_del(&qp->open_list)
(14,real_qp)
(15,real_qp == qp)
(16,&real_qp->usecnt)
(17,&real_qp->device->event_handler_lock)
(18,qp)
(19,return -EINVAL;)
(20,real_qp)
(21,EINVAL)
(22,real_qp)
(23,spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags)
(24,-EINVAL)
(25,qp)
(26,device)
(27,if (real_qp == qp)
(28,flags)
(29,event_handler_lock)
(30,real_qp->device)
(31,0)
(32,flags)
(33,qp)
(34,real_qp)
(35,event_handler_lock)
(36,spin_lock_irqsave(&real_qp->device->event_handler_lock, flags)
(37,atomic_dec(&real_qp->usecnt)
(38,open_list)
(39,real_qp->device->event_handler_lock)
(40,real_qp)
(41,&real_qp->device->event_handler_lock)
(42,struct ib_qp *qp)
(43,qp)
(44,device)
(45,real_qp->device->event_handler_lock)
(46,RET)
(47,qp)
(48,flags)
(49,usecnt)
(50,ib_close_shared_qp_security(qp->qp_sec)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^