-----label-----
1
-----code-----
void
pmap_release(struct pmap *pmap)
{
	vm_page_t p,n,ptdpg;
	vm_object_t object = pmap->pm_pteobj;
	int curgeneration;

#if defined(DIAGNOSTIC)
	if (object->ref_count != 1)
		panic("pmap_release: pteobj reference count != 1");
#endif

	ptdpg = NULL;
retry:
	crit_enter();
	curgeneration = object->generation;
	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {
		n = TAILQ_NEXT(p, listq);
		if (p->pindex == PTDPTDI) {
			ptdpg = p;
			continue;
		}
		if (!pmap_release_free_page(pmap, p)) {
			crit_exit();
			goto retry;
		}
		if (object->generation != curgeneration) {
			crit_exit();
			goto retry;
		}
	}
	if (ptdpg && !pmap_release_free_page(pmap, ptdpg)) {
		crit_exit();
		goto retry;
	}
	crit_exit();
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
12,13
13,14
13,15
13,16
13,17
14,15
16,17
18,19
20,21
22,23
23,24
23,25
24,25
26,27
26,28
28,29
29,30
29,31
30,31
33,34
34,35
34,36
36,37
38,39
39,40
39,41
40,41
42,43
44,45
44,46
46,47
47,48
48,49
50,51
51,52
51,53
52,53
54,55
54,56
55,56
58,59
58,60
58,61
58,62
59,60
60,61
60,62
61,62
63,64
63,65
64,65
66,67
67,68
67,69
68,69
71,72
71,73
72,73
74,75
76,77
76,78
77,78
79,80
81,82
81,83
81,84
81,85
82,83
83,84
83,85
84,85
86,87
86,88
86,89
87,88
89,90
91,92
93,94
93,95
94,95
94,96
95,96
95,97
96,97
99,100
101,102
101,103
102,103
103,104
103,105
104,105
106,107
109,110
109,111
110,111
111,112
111,113
111,114
112,113
114,115
116,117
118,119
118,120
119,120
120,121
121,122
123,124
125,126
125,127
126,127
126,128
127,128
127,129
128,129
131,132
133,134
133,135
134,135
135,136
136,137
138,139
140,141
140,142
141,142
141,143
142,143
144,145
145,146
145,147
145,148
146,147
148,149
150,151
152,153
152,154
153,154
154,155
155,156
157,158
159,160
160,161
161,162
-----nextToken-----
2,4,7,9,10,15,17,19,21,25,27,31,32,35,37,41,43,45,49,53,56,57,62,65,69,70,73,75,78,80,85,88,90,92,97,98,100,105,107,108,113,115,117,122,124,129,130,132,137,139,143,147,149,151,156,158,162
-----computeFrom-----
39,40
39,41
51,52
51,53
60,61
60,62
71,72
71,73
76,77
76,78
83,84
83,85
94,95
94,96
103,104
103,105
126,127
126,128
141,142
141,143
-----guardedBy-----
97,107
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;Declarator;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ContinueStatement;IfStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;GotoStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;
-----ast_node-----
voidpmap_release(struct pmap *pmap){	vm_page_t p,n,ptdpg;	vm_object_t object = pmap->pm_pteobj;	int curgeneration;#if defined(DIAGNOSTIC)	if (object->ref_count != 1)		panic("pmap_release: pteobj reference count != 1");#endif	ptdpg = NULL;retry:	crit_enter();	curgeneration = object->generation;	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		if (!pmap_release_free_page(pmap, p)) {			crit_exit();			goto retry;		}		if (object->generation != curgeneration) {			crit_exit();			goto retry;		}	}	if (ptdpg && !pmap_release_free_page(pmap, ptdpg)) {		crit_exit();		goto retry;	}	crit_exit();}
void
pmap_release(struct pmap *pmap)
pmap_release
struct pmap *pmap
struct pmap
pmap
*pmap
*
pmap
{	vm_page_t p,n,ptdpg;	vm_object_t object = pmap->pm_pteobj;	int curgeneration;#if defined(DIAGNOSTIC)	if (object->ref_count != 1)		panic("pmap_release: pteobj reference count != 1");#endif	ptdpg = NULL;retry:	crit_enter();	curgeneration = object->generation;	for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		if (!pmap_release_free_page(pmap, p)) {			crit_exit();			goto retry;		}		if (object->generation != curgeneration) {			crit_exit();			goto retry;		}	}	if (ptdpg && !pmap_release_free_page(pmap, ptdpg)) {		crit_exit();		goto retry;	}	crit_exit();}
vm_page_t p,n,ptdpg;
vm_page_t p,n,ptdpg;
vm_page_t
vm_page_t
p
p
n
n
ptdpg
ptdpg
vm_object_t object = pmap->pm_pteobj;
vm_object_t object = pmap->pm_pteobj;
vm_object_t
vm_object_t
object = pmap->pm_pteobj
object
= pmap->pm_pteobj
pmap->pm_pteobj
pmap
pmap
pm_pteobj
int curgeneration;
int curgeneration;
int
curgeneration
curgeneration
ptdpg = NULL;
ptdpg = NULL
ptdpg
ptdpg
NULL
NULL
retry:	crit_enter();
retry
crit_enter();
crit_enter()
crit_enter
crit_enter
curgeneration = object->generation;
curgeneration = object->generation
curgeneration
curgeneration
object->generation
object
object
generation
for (p = TAILQ_FIRST(&object->memq); p != NULL; p = n) {		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		if (!pmap_release_free_page(pmap, p)) {			crit_exit();			goto retry;		}		if (object->generation != curgeneration) {			crit_exit();			goto retry;		}	}
p = TAILQ_FIRST(&object->memq);
p = TAILQ_FIRST(&object->memq)
p
p
TAILQ_FIRST(&object->memq)
TAILQ_FIRST
TAILQ_FIRST
&object->memq
object->memq
object
object
memq
p != NULL
p
p
NULL
NULL
p = n
p
p
n
n
{		n = TAILQ_NEXT(p, listq);		if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}		if (!pmap_release_free_page(pmap, p)) {			crit_exit();			goto retry;		}		if (object->generation != curgeneration) {			crit_exit();			goto retry;		}	}
n = TAILQ_NEXT(p, listq);
n = TAILQ_NEXT(p, listq)
n
n
TAILQ_NEXT(p, listq)
TAILQ_NEXT
TAILQ_NEXT
p
p
listq
listq
if (p->pindex == PTDPTDI) {			ptdpg = p;			continue;		}
p->pindex == PTDPTDI
p->pindex
p
p
pindex
PTDPTDI
PTDPTDI
{			ptdpg = p;			continue;		}
ptdpg = p;
ptdpg = p
ptdpg
ptdpg
p
p
continue;
if (!pmap_release_free_page(pmap, p)) {			crit_exit();			goto retry;		}
!pmap_release_free_page(pmap, p)
pmap_release_free_page(pmap, p)
pmap_release_free_page
pmap_release_free_page
pmap
pmap
p
p
{			crit_exit();			goto retry;		}
crit_exit();
crit_exit()
crit_exit
crit_exit
goto retry;
retry
if (object->generation != curgeneration) {			crit_exit();			goto retry;		}
object->generation != curgeneration
object->generation
object
object
generation
curgeneration
curgeneration
{			crit_exit();			goto retry;		}
crit_exit();
crit_exit()
crit_exit
crit_exit
goto retry;
retry
if (ptdpg && !pmap_release_free_page(pmap, ptdpg)) {		crit_exit();		goto retry;	}
ptdpg && !pmap_release_free_page(pmap, ptdpg)
ptdpg
ptdpg
!pmap_release_free_page(pmap, ptdpg)
pmap_release_free_page(pmap, ptdpg)
pmap_release_free_page
pmap_release_free_page
pmap
pmap
ptdpg
ptdpg
{		crit_exit();		goto retry;	}
crit_exit();
crit_exit()
crit_exit
crit_exit
goto retry;
retry
crit_exit();
crit_exit()
crit_exit
crit_exit
-----joern-----
(9,43,0)
(23,16,0)
(79,55,0)
(73,86,0)
(87,57,0)
(38,78,0)
(83,46,0)
(22,63,0)
(21,49,0)
(62,39,0)
(89,39,0)
(0,34,0)
(37,46,0)
(16,18,0)
(35,18,0)
(20,46,0)
(10,38,0)
(44,39,0)
(58,43,0)
(4,35,0)
(80,10,0)
(11,58,0)
(88,52,0)
(34,78,0)
(82,49,0)
(70,38,0)
(31,30,0)
(57,39,0)
(28,39,0)
(38,10,0)
(64,58,0)
(66,73,0)
(68,41,0)
(29,88,0)
(26,41,0)
(22,49,0)
(19,65,0)
(2,38,0)
(5,78,0)
(17,49,0)
(36,86,0)
(54,58,0)
(13,64,0)
(45,39,0)
(51,41,0)
(53,52,0)
(63,22,0)
(48,21,0)
(18,16,0)
(38,43,0)
(67,78,0)
(69,63,0)
(1,37,0)
(37,63,0)
(49,39,0)
(84,14,0)
(40,21,0)
(21,72,0)
(16,60,0)
(56,52,0)
(52,49,0)
(25,39,0)
(72,21,0)
(34,60,0)
(76,34,0)
(32,39,0)
(46,49,0)
(7,39,0)
(74,30,0)
(58,78,0)
(73,43,0)
(49,82,0)
(34,43,0)
(85,67,0)
(77,65,0)
(24,82,0)
(12,22,0)
(3,39,0)
(33,57,0)
(52,88,0)
(8,39,0)
(78,29,0)
(29,78,0)
(59,72,0)
(81,73,0)
(10,41,0)
(46,37,0)
(71,22,0)
(35,73,0)
(82,60,0)
(35,57,0)
(88,29,0)
(63,39,0)
(50,16,0)
(16,57,0)
(27,43,0)
(16,73,0)
(75,39,0)
(67,43,0)
(43,10,0)
(15,82,0)
(42,67,0)
(61,14,0)
(58,64,0)
(73,78,0)
(34,0,0)
(18,35,0)
(6,34,0)
(62,19,1)
(83,20,1)
(67,43,1)
(34,6,1)
(79,72,1)
(58,43,1)
(21,49,1)
(49,82,1)
(61,84,1)
(73,78,1)
(37,1,1)
(46,49,1)
(13,58,1)
(15,24,1)
(72,21,1)
(71,69,1)
(67,78,1)
(43,27,1)
(38,78,1)
(34,60,1)
(21,48,1)
(70,80,1)
(35,57,1)
(5,63,1)
(40,49,1)
(18,16,1)
(10,38,1)
(35,4,1)
(31,0,1)
(48,40,1)
(37,63,1)
(62,74,1)
(64,13,1)
(69,62,1)
(23,4,1)
(6,76,1)
(35,18,1)
(38,2,1)
(35,73,1)
(36,73,1)
(87,55,1)
(80,67,1)
(16,60,1)
(66,81,1)
(20,0,1)
(52,53,1)
(46,83,1)
(42,78,1)
(22,49,1)
(33,87,1)
(74,31,1)
(52,49,1)
(16,50,1)
(58,54,1)
(73,43,1)
(9,36,1)
(84,35,1)
(81,64,1)
(88,52,1)
(55,79,1)
(16,57,1)
(29,88,1)
(34,43,1)
(4,67,1)
(67,85,1)
(76,64,1)
(59,21,1)
(38,43,1)
(77,37,1)
(56,5,1)
(85,42,1)
(54,11,1)
(19,77,1)
(82,15,1)
(32,35,1)
(82,60,1)
(27,9,1)
(37,46,1)
(34,78,1)
(43,10,1)
(62,57,1)
(0,34,1)
(16,73,1)
(78,29,1)
(58,78,1)
(9,37,1)
(57,33,1)
(1,46,1)
(11,10,1)
(47,32,1)
(22,12,1)
(87,72,1)
(63,22,1)
(24,17,1)
(62,61,1)
(50,23,1)
(53,56,1)
(2,70,1)
(42,43,1)
(64,58,1)
(72,59,1)
(12,71,1)
(73,66,1)
(9,37,2)
(62,35,2)
(83,0,2)
(78,35,2)
(85,35,2)
(2,67,2)
(12,0,2)
(35,18,2)
(70,67,2)
(88,35,2)
(6,64,2)
(38,78,2)
(88,37,2)
(16,73,2)
(84,35,2)
(46,0,2)
(62,37,2)
(54,67,2)
(52,37,2)
(5,37,2)
(43,64,2)
(56,37,2)
(71,35,2)
(22,35,2)
(34,78,2)
(38,67,2)
(5,35,2)
(71,0,2)
(35,35,2)
(69,35,2)
(29,37,2)
(55,72,2)
(88,52,2)
(58,43,2)
(34,64,2)
(1,0,2)
(53,35,2)
(50,4,2)
(46,49,2)
(16,4,2)
(72,21,2)
(52,0,2)
(63,0,2)
(37,46,2)
(62,0,2)
(82,60,2)
(29,35,2)
(16,60,2)
(73,43,2)
(42,67,2)
(31,0,2)
(85,67,2)
(37,0,2)
(64,67,2)
(22,49,2)
(79,72,2)
(9,64,2)
(69,37,2)
(10,38,2)
(53,0,2)
(27,37,2)
(53,37,2)
(78,0,2)
(43,37,2)
(4,35,2)
(58,78,2)
(67,78,2)
(16,57,2)
(67,35,2)
(80,67,2)
(5,0,2)
(43,10,2)
(63,35,2)
(56,0,2)
(12,35,2)
(34,60,2)
(18,4,2)
(78,37,2)
(56,35,2)
(76,64,2)
(22,0,2)
(10,67,2)
(37,63,2)
(73,78,2)
(11,67,2)
(58,67,2)
(23,4,2)
(0,64,2)
(74,0,2)
(64,58,2)
(88,0,2)
(36,64,2)
(18,16,2)
(63,22,2)
(61,35,2)
(71,37,2)
(38,43,2)
(52,49,2)
(29,88,2)
(35,57,2)
(13,67,2)
(52,35,2)
(66,64,2)
(22,37,2)
(73,64,2)
(20,0,2)
(42,35,2)
(0,34,2)
(12,37,2)
(63,37,2)
(19,37,2)
(35,73,2)
(69,0,2)
(21,49,2)
(67,43,2)
(29,0,2)
(27,64,2)
(77,37,2)
(49,82,2)
(81,64,2)
(78,29,2)
(67,67,2)
(34,43,2)
-----------------------------------
(0,!pmap_release_free_page(pmap, p)
(1,curgeneration)
(2,listq)
(3,object)
(4,ptdpg)
(5,p)
(6,p)
(7,p)
(8,retry:)
(9,p)
(10,n = TAILQ_NEXT(p, listq)
(11,p)
(12,generation)
(13,PTDPTDI)
(14,)
(15,pm_pteobj)
(16,pmap_release_free_page(pmap, ptdpg)
(17,object)
(18,!pmap_release_free_page(pmap, ptdpg)
(19,goto retry;)
(20,object)
(21,object->ref_count)
(22,object->generation)
(23,pmap)
(24,pmap)
(25,if (ptdpg && !pmap_release_free_page(pmap, ptdpg)
(26,if (!pmap_release_free_page(pmap, p)
(27,n)
(28,if (object->ref_count != 1)
(29,TAILQ_FIRST(&object->memq)
(30,)
(31,crit_exit()
(32,crit_exit()
(33,NULL)
(34,pmap_release_free_page(pmap, p)
(35,ptdpg && !pmap_release_free_page(pmap, ptdpg)
(36,continue;)
(37,object->generation != curgeneration)
(38,TAILQ_NEXT(p, listq)
(39,)
(40,object)
(41,)
(42,p)
(43,p = n)
(44,for (p = TAILQ_FIRST(&object->memq)
(45,n)
(46,object->generation)
(47,RET)
(48,ref_count)
(49,object = pmap->pm_pteobj)
(50,ptdpg)
(51,if (p->pindex == PTDPTDI)
(52,object->memq)
(53,memq)
(54,pindex)
(55,panic("pmap_release: pteobj reference count != 1")
(56,object)
(57,ptdpg = NULL)
(58,p->pindex)
(59,1)
(60,struct pmap *pmap)
(61,goto retry;)
(62,crit_enter()
(63,curgeneration = object->generation)
(64,p->pindex == PTDPTDI)
(65,)
(66,p)
(67,p != NULL)
(68,if (object->generation != curgeneration)
(69,curgeneration)
(70,p)
(71,object)
(72,object->ref_count != 1)
(73,ptdpg = p)
(74,goto retry;)
(75,curgeneration)
(76,pmap)
(77,crit_exit()
(78,p = TAILQ_FIRST(&object->memq)
(79,"pmap_release: pteobj reference count != 1")
(80,n)
(81,ptdpg)
(82,pmap->pm_pteobj)
(83,generation)
(84,crit_exit()
(85,NULL)
(86,)
(87,ptdpg)
(88,&object->memq)
(89,ptdpg)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^