-----label-----
1
-----code-----
int ib_close_qp(struct ib_qp *qp)
{
	struct ib_qp *real_qp;
	unsigned long flags;

	real_qp = qp->real_qp;
	if (real_qp == qp)
		return -EINVAL;

	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);
	list_del(&qp->open_list);
	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);

	atomic_dec(&real_qp->usecnt);
	if (qp->qp_sec)
		ib_close_shared_qp_security(qp->qp_sec);
	kfree(qp);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
12,13
13,14
13,15
14,15
16,17
16,18
19,20
20,21
20,22
22,23
24,25
25,26
25,27
26,27
28,29
28,30
29,30
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
42,43
43,44
43,45
43,46
44,45
46,47
47,48
47,49
48,49
48,50
49,50
53,54
55,56
56,57
56,58
57,58
59,60
60,61
60,62
61,62
64,65
65,66
65,67
65,68
66,67
68,69
69,70
69,71
70,71
70,72
71,72
75,76
77,78
78,79
78,80
79,80
81,82
82,83
82,84
83,84
86,87
86,88
87,88
87,89
88,89
91,92
92,93
92,94
93,94
95,96
95,97
96,97
99,100
100,101
100,102
101,102
103,104
105,106
-----nextToken-----
2,4,7,9,10,15,17,18,21,23,27,30,31,35,37,41,45,50,51,52,54,58,62,63,67,72,73,74,76,80,84,85,89,90,94,97,98,102,104,106
-----computeFrom-----
25,26
25,27
33,34
33,35
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int ib_close_qp(struct ib_qp *qp){	struct ib_qp *real_qp;	unsigned long flags;	real_qp = qp->real_qp;	if (real_qp == qp)		return -EINVAL;	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);	list_del(&qp->open_list);	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);	atomic_dec(&real_qp->usecnt);	if (qp->qp_sec)		ib_close_shared_qp_security(qp->qp_sec);	kfree(qp);	return 0;}
int
ib_close_qp(struct ib_qp *qp)
ib_close_qp
struct ib_qp *qp
struct ib_qp
ib_qp
*qp
*
qp
{	struct ib_qp *real_qp;	unsigned long flags;	real_qp = qp->real_qp;	if (real_qp == qp)		return -EINVAL;	spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);	list_del(&qp->open_list);	spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);	atomic_dec(&real_qp->usecnt);	if (qp->qp_sec)		ib_close_shared_qp_security(qp->qp_sec);	kfree(qp);	return 0;}
struct ib_qp *real_qp;
struct ib_qp *real_qp;
struct ib_qp
ib_qp
*real_qp
*
real_qp
unsigned long flags;
unsigned long flags;
unsigned long
flags
flags
real_qp = qp->real_qp;
real_qp = qp->real_qp
real_qp
real_qp
qp->real_qp
qp
qp
real_qp
if (real_qp == qp)		return -EINVAL;
real_qp == qp
real_qp
real_qp
qp
qp
return -EINVAL;
-EINVAL
EINVAL
EINVAL
spin_lock_irqsave(&real_qp->device->event_handler_lock, flags);
spin_lock_irqsave(&real_qp->device->event_handler_lock, flags)
spin_lock_irqsave
spin_lock_irqsave
&real_qp->device->event_handler_lock
real_qp->device->event_handler_lock
real_qp->device
real_qp
real_qp
device
event_handler_lock
flags
flags
list_del(&qp->open_list);
list_del(&qp->open_list)
list_del
list_del
&qp->open_list
qp->open_list
qp
qp
open_list
spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags);
spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags)
spin_unlock_irqrestore
spin_unlock_irqrestore
&real_qp->device->event_handler_lock
real_qp->device->event_handler_lock
real_qp->device
real_qp
real_qp
device
event_handler_lock
flags
flags
atomic_dec(&real_qp->usecnt);
atomic_dec(&real_qp->usecnt)
atomic_dec
atomic_dec
&real_qp->usecnt
real_qp->usecnt
real_qp
real_qp
usecnt
if (qp->qp_sec)		ib_close_shared_qp_security(qp->qp_sec);
qp->qp_sec
qp
qp
qp_sec
ib_close_shared_qp_security(qp->qp_sec);
ib_close_shared_qp_security(qp->qp_sec)
ib_close_shared_qp_security
ib_close_shared_qp_security
qp->qp_sec
qp
qp
qp_sec
kfree(qp);
kfree(qp)
kfree
kfree
qp
qp
return 0;
0
-----joern-----
(42,38,0)
(38,46,0)
(46,38,0)
(37,46,0)
(1,52,0)
(36,44,0)
(9,41,0)
(27,25,0)
(30,6,0)
(7,41,0)
(6,38,0)
(6,30,0)
(35,27,0)
(29,45,0)
(8,19,0)
(36,32,0)
(16,2,0)
(17,23,0)
(12,2,0)
(5,40,0)
(27,41,0)
(14,45,0)
(33,16,0)
(19,8,0)
(28,2,0)
(25,51,0)
(20,45,0)
(3,45,0)
(49,44,0)
(20,19,0)
(41,45,0)
(34,27,0)
(51,45,0)
(22,23,0)
(53,45,0)
(54,9,0)
(10,12,0)
(26,16,0)
(25,27,0)
(21,20,0)
(30,45,0)
(38,6,0)
(13,12,0)
(47,28,0)
(39,52,0)
(4,46,0)
(26,43,0)
(28,45,0)
(46,41,0)
(12,41,0)
(44,45,0)
(8,52,0)
(31,16,0)
(52,8,0)
(40,2,0)
(19,20,0)
(9,2,0)
(43,45,0)
(0,23,0)
(23,17,0)
(48,18,0)
(51,25,0)
(43,26,0)
(18,32,0)
(16,26,0)
(41,12,0)
(11,9,0)
(50,30,0)
(23,2,0)
(52,41,0)
(15,8,0)
(24,40,0)
(27,41,1)
(10,7,1)
(23,0,1)
(13,10,1)
(23,2,1)
(8,52,1)
(50,6,1)
(15,52,1)
(40,5,1)
(20,19,1)
(32,18,1)
(28,2,1)
(40,2,1)
(27,34,1)
(46,41,1)
(51,25,1)
(30,6,1)
(9,41,1)
(0,22,1)
(28,47,1)
(39,43,1)
(52,41,1)
(38,46,1)
(4,9,1)
(44,49,1)
(30,50,1)
(47,17,1)
(20,21,1)
(18,48,1)
(17,23,1)
(12,2,1)
(24,51,1)
(16,2,1)
(25,27,1)
(8,15,1)
(52,1,1)
(34,35,1)
(46,37,1)
(5,24,1)
(9,2,1)
(54,41,1)
(42,46,1)
(22,40,1)
(19,8,1)
(49,28,1)
(11,54,1)
(36,44,1)
(31,30,1)
(48,9,1)
(6,38,1)
(43,26,1)
(41,12,1)
(26,16,1)
(35,20,1)
(1,39,1)
(12,13,1)
(16,33,1)
(9,11,1)
(36,32,1)
(33,31,1)
(47,40,1)
(21,19,1)
(37,4,1)
(38,42,1)
(38,9,2)
(33,9,2)
(19,8,2)
(4,9,2)
(24,9,2)
(30,9,2)
(51,25,2)
(23,2,2)
(20,19,2)
(26,9,2)
(19,9,2)
(30,6,2)
(23,40,2)
(47,9,2)
(28,2,2)
(52,9,2)
(50,9,2)
(1,9,2)
(9,2,2)
(37,9,2)
(16,9,2)
(51,9,2)
(8,9,2)
(22,40,2)
(17,40,2)
(46,41,2)
(42,9,2)
(52,41,2)
(43,9,2)
(21,9,2)
(26,16,2)
(15,9,2)
(20,9,2)
(36,44,2)
(6,38,2)
(34,9,2)
(43,26,2)
(9,41,2)
(39,9,2)
(36,32,2)
(48,9,2)
(6,9,2)
(31,9,2)
(46,9,2)
(49,9,2)
(27,41,2)
(8,52,2)
(25,9,2)
(17,23,2)
(0,40,2)
(16,2,2)
(27,9,2)
(38,46,2)
(25,27,2)
(40,2,2)
(44,9,2)
(28,9,2)
(41,12,2)
(32,9,2)
(5,9,2)
(12,2,2)
(18,9,2)
(40,9,2)
(35,9,2)
-----------------------------------
(0,qp_sec)
(1,device)
(2,struct ib_qp *qp)
(3,real_qp)
(4,real_qp)
(5,qp_sec)
(6,&real_qp->device->event_handler_lock)
(7,real_qp)
(8,real_qp->device->event_handler_lock)
(9,real_qp == qp)
(10,qp)
(11,qp)
(12,qp->real_qp)
(13,real_qp)
(14,if (real_qp == qp)
(15,event_handler_lock)
(16,qp->open_list)
(17,ib_close_shared_qp_security(qp->qp_sec)
(18,-EINVAL)
(19,&real_qp->device->event_handler_lock)
(20,spin_unlock_irqrestore(&real_qp->device->event_handler_lock, flags)
(21,flags)
(22,qp)
(23,qp->qp_sec)
(24,qp)
(25,&real_qp->usecnt)
(26,&qp->open_list)
(27,real_qp->usecnt)
(28,kfree(qp)
(29,if (qp->qp_sec)
(30,spin_lock_irqsave(&real_qp->device->event_handler_lock, flags)
(31,qp)
(32,return -EINVAL;)
(33,open_list)
(34,usecnt)
(35,real_qp)
(36,RET)
(37,device)
(38,real_qp->device->event_handler_lock)
(39,real_qp)
(40,qp->qp_sec)
(41,real_qp = qp->real_qp)
(42,event_handler_lock)
(43,list_del(&qp->open_list)
(44,return 0;)
(45,)
(46,real_qp->device)
(47,qp)
(48,EINVAL)
(49,0)
(50,flags)
(51,atomic_dec(&real_qp->usecnt)
(52,real_qp->device)
(53,flags)
(54,real_qp)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^