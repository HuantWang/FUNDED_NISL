-----label-----
1
-----code-----
int ib_uverbs_ex_modify_qp(struct ib_uverbs_file *file,
			   struct ib_device *ib_dev,
			   struct ib_udata *ucore,
			   struct ib_udata *uhw)
{
	struct ib_uverbs_ex_modify_qp cmd = {};
	int ret;

	/*
	 * Last bit is reserved for extending the attr_mask by
	 * using another field.
	 */
	BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31));

	if (ucore->inlen < sizeof(cmd.base))
		return -EINVAL;

	ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen));
	if (ret)
		return ret;

	if (cmd.base.attr_mask &
	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1))
		return -EOPNOTSUPP;

	if (ucore->inlen > sizeof(cmd)) {
		if (!ib_is_udata_cleared(ucore, sizeof(cmd),
					 ucore->inlen - sizeof(cmd)))
			return -EOPNOTSUPP;
	}

	ret = modify_qp(file, &cmd, uhw);

	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
24,25
26,27
26,28
29,30
29,31
29,32
29,33
29,34
29,35
29,36
29,37
29,38
29,39
30,31
31,32
31,33
32,33
34,35
34,36
36,37
38,39
39,40
39,41
41,42
43,44
44,45
44,46
45,46
47,48
47,49
48,49
50,51
51,52
51,53
54,55
54,56
55,56
55,57
56,57
56,58
57,58
60,61
61,62
62,63
62,64
63,64
66,67
67,68
68,69
70,71
71,72
71,73
72,73
74,75
74,76
74,77
74,78
75,76
77,78
78,79
80,81
82,83
82,84
82,85
83,84
85,86
86,87
87,88
89,90
89,91
90,91
93,94
93,95
94,95
96,97
97,98
99,100
99,101
100,101
100,102
101,102
101,103
102,103
102,104
103,104
107,108
108,109
109,110
109,111
110,111
111,112
111,113
112,113
116,117
117,118
118,119
120,121
120,122
121,122
121,123
122,123
122,124
123,124
126,127
127,128
128,129
130,131
131,132
131,133
132,133
133,134
133,135
133,136
133,137
134,135
136,137
138,139
139,140
140,141
142,143
142,144
143,144
143,145
144,145
147,148
148,149
149,150
151,152
152,153
153,154
155,156
156,157
156,158
157,158
159,160
159,161
159,162
159,163
160,161
162,163
164,165
165,166
167,168
169,170
170,171
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,25,27,28,33,35,37,40,42,46,49,52,53,58,59,64,65,69,73,76,79,81,84,88,91,92,95,98,104,105,106,113,114,115,119,124,125,129,135,137,141,145,146,150,154,158,161,163,166,168,171
-----computeFrom-----
47,48
47,49
51,52
51,53
55,56
55,57
71,72
71,73
100,101
100,102
109,110
109,111
111,112
111,113
121,122
121,123
142,143
142,144
156,157
156,158
-----guardedBy-----
124,145
125,146
129,150
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;InitializerList;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;UnaryExpression;BinaryExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;ReturnStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int ib_uverbs_ex_modify_qp(struct ib_uverbs_file *file,			   struct ib_device *ib_dev,			   struct ib_udata *ucore,			   struct ib_udata *uhw){	struct ib_uverbs_ex_modify_qp cmd = {};	int ret;	/*	 * Last bit is reserved for extending the attr_mask by	 * using another field.	 */	BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31));	if (ucore->inlen < sizeof(cmd.base))		return -EINVAL;	ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen));	if (ret)		return ret;	if (cmd.base.attr_mask &	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1))		return -EOPNOTSUPP;	if (ucore->inlen > sizeof(cmd)) {		if (!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd)))			return -EOPNOTSUPP;	}	ret = modify_qp(file, &cmd, uhw);	return ret;}
int
ib_uverbs_ex_modify_qp(struct ib_uverbs_file *file,			   struct ib_device *ib_dev,			   struct ib_udata *ucore,			   struct ib_udata *uhw)
ib_uverbs_ex_modify_qp
struct ib_uverbs_file *file
struct ib_uverbs_file
ib_uverbs_file
*file
*
file
struct ib_device *ib_dev
struct ib_device
ib_device
*ib_dev
*
ib_dev
struct ib_udata *ucore
struct ib_udata
ib_udata
*ucore
*
ucore
struct ib_udata *uhw
struct ib_udata
ib_udata
*uhw
*
uhw
{	struct ib_uverbs_ex_modify_qp cmd = {};	int ret;	/*	 * Last bit is reserved for extending the attr_mask by	 * using another field.	 */	BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31));	if (ucore->inlen < sizeof(cmd.base))		return -EINVAL;	ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen));	if (ret)		return ret;	if (cmd.base.attr_mask &	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1))		return -EOPNOTSUPP;	if (ucore->inlen > sizeof(cmd)) {		if (!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd)))			return -EOPNOTSUPP;	}	ret = modify_qp(file, &cmd, uhw);	return ret;}
struct ib_uverbs_ex_modify_qp cmd = {};
struct ib_uverbs_ex_modify_qp cmd = {};
struct ib_uverbs_ex_modify_qp
ib_uverbs_ex_modify_qp
cmd = {}
cmd
= {}
{}
int ret;
int ret;
int
ret
ret
BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31));
BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31))
BUILD_BUG_ON
BUILD_BUG_ON
IB_USER_LAST_QP_ATTR_MASK == (1 << 31)
IB_USER_LAST_QP_ATTR_MASK
IB_USER_LAST_QP_ATTR_MASK
(1 << 31)
1 << 31
1
31
if (ucore->inlen < sizeof(cmd.base))		return -EINVAL;
ucore->inlen < sizeof(cmd.base)
ucore->inlen
ucore
ucore
inlen
sizeof(cmd.base)
(cmd.base)
cmd.base
cmd
cmd
base
return -EINVAL;
-EINVAL
EINVAL
EINVAL
ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen));
ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen))
ret
ret
ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd), ucore->inlen))
ib_copy_from_udata
ib_copy_from_udata
&cmd
cmd
cmd
ucore
ucore
min(sizeof(cmd), ucore->inlen)
min
min
sizeof(cmd)
(cmd)
cmd
cmd
ucore->inlen
ucore
ucore
inlen
if (ret)		return ret;
ret
ret
return ret;
ret
ret
if (cmd.base.attr_mask &	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1))		return -EOPNOTSUPP;
cmd.base.attr_mask &	    ~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1)
cmd.base.attr_mask
cmd.base
cmd
cmd
base
attr_mask
~((IB_USER_LAST_QP_ATTR_MASK << 1) - 1)
((IB_USER_LAST_QP_ATTR_MASK << 1) - 1)
(IB_USER_LAST_QP_ATTR_MASK << 1) - 1
(IB_USER_LAST_QP_ATTR_MASK << 1)
IB_USER_LAST_QP_ATTR_MASK << 1
IB_USER_LAST_QP_ATTR_MASK
IB_USER_LAST_QP_ATTR_MASK
1
1
return -EOPNOTSUPP;
-EOPNOTSUPP
EOPNOTSUPP
EOPNOTSUPP
if (ucore->inlen > sizeof(cmd)) {		if (!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd)))			return -EOPNOTSUPP;	}
ucore->inlen > sizeof(cmd)
ucore->inlen
ucore
ucore
inlen
sizeof(cmd)
(cmd)
cmd
cmd
{		if (!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd)))			return -EOPNOTSUPP;	}
if (!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd)))			return -EOPNOTSUPP;
!ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd))
ib_is_udata_cleared(ucore, sizeof(cmd),					 ucore->inlen - sizeof(cmd))
ib_is_udata_cleared
ib_is_udata_cleared
ucore
ucore
sizeof(cmd)
(cmd)
cmd
cmd
ucore->inlen - sizeof(cmd)
ucore->inlen
ucore
ucore
inlen
sizeof(cmd)
(cmd)
cmd
cmd
return -EOPNOTSUPP;
-EOPNOTSUPP
EOPNOTSUPP
EOPNOTSUPP
ret = modify_qp(file, &cmd, uhw);
ret = modify_qp(file, &cmd, uhw)
ret
ret
modify_qp(file, &cmd, uhw)
modify_qp
modify_qp
file
file
&cmd
cmd
cmd
uhw
uhw
return ret;
ret
ret
-----joern-----
(72,79,0)
(40,42,0)
(70,31,0)
(80,25,0)
(58,35,0)
(43,3,0)
(46,68,0)
(53,84,0)
(66,76,0)
(61,8,0)
(39,84,0)
(55,77,0)
(14,3,0)
(9,39,0)
(60,80,0)
(47,17,0)
(79,35,0)
(21,24,0)
(48,52,0)
(12,8,0)
(68,55,0)
(48,3,0)
(68,46,0)
(52,7,0)
(10,60,0)
(59,58,0)
(15,58,0)
(86,48,0)
(54,47,0)
(51,15,0)
(77,55,0)
(55,68,0)
(14,48,0)
(21,14,0)
(21,85,0)
(39,42,0)
(31,73,0)
(82,79,0)
(37,14,0)
(1,11,0)
(44,3,0)
(27,58,0)
(75,46,0)
(4,79,0)
(19,77,0)
(69,3,0)
(51,8,0)
(21,65,0)
(55,35,0)
(87,55,0)
(83,38,0)
(74,3,0)
(6,73,0)
(34,64,0)
(52,11,0)
(0,31,0)
(52,28,0)
(36,52,0)
(60,13,0)
(13,60,0)
(21,29,0)
(58,15,0)
(82,39,0)
(18,55,0)
(11,52,0)
(20,13,0)
(39,35,0)
(41,57,0)
(26,30,0)
(80,60,0)
(2,76,0)
(38,83,0)
(25,80,0)
(57,35,0)
(38,3,0)
(82,16,0)
(71,47,0)
(73,31,0)
(68,57,0)
(88,13,0)
(5,83,0)
(30,85,0)
(55,18,0)
(25,73,0)
(15,51,0)
(45,52,0)
(23,17,0)
(32,33,0)
(73,25,0)
(84,39,0)
(22,16,0)
(76,83,0)
(62,78,0)
(42,3,0)
(83,76,0)
(79,82,0)
(17,47,0)
(64,65,0)
(67,3,0)
(49,23,0)
(47,35,0)
(39,82,0)
(8,51,0)
(63,3,0)
(42,39,0)
(33,29,0)
(24,42,0)
(57,68,0)
(56,24,0)
(16,82,0)
(52,48,0)
(50,57,0)
(17,23,0)
(79,35,1)
(73,6,1)
(53,40,1)
(15,58,1)
(68,57,1)
(41,77,1)
(88,20,1)
(60,13,1)
(84,53,1)
(24,42,1)
(2,66,1)
(32,18,1)
(52,36,1)
(70,60,1)
(12,61,1)
(45,86,1)
(37,48,1)
(49,47,1)
(57,50,1)
(14,48,1)
(68,46,1)
(29,33,1)
(25,73,1)
(22,9,1)
(50,41,1)
(51,8,1)
(55,35,1)
(27,59,1)
(21,14,1)
(21,29,1)
(52,28,1)
(64,34,1)
(18,55,1)
(10,13,1)
(40,15,1)
(83,76,1)
(26,80,1)
(86,18,1)
(1,45,1)
(77,19,1)
(56,81,1)
(72,4,1)
(80,60,1)
(46,75,1)
(87,17,1)
(58,27,1)
(21,24,1)
(58,35,1)
(71,54,1)
(79,72,1)
(21,65,1)
(47,35,1)
(52,7,1)
(33,32,1)
(30,26,1)
(17,47,1)
(39,82,1)
(55,77,1)
(34,15,1)
(57,35,1)
(86,17,1)
(24,56,1)
(19,87,1)
(81,42,1)
(17,23,1)
(85,30,1)
(0,70,1)
(39,35,1)
(14,37,1)
(54,80,1)
(38,83,1)
(16,22,1)
(73,31,1)
(76,2,1)
(42,39,1)
(21,85,1)
(36,11,1)
(82,16,1)
(80,25,1)
(11,1,1)
(47,71,1)
(39,84,1)
(8,12,1)
(20,81,1)
(59,38,1)
(52,11,1)
(4,16,1)
(65,64,1)
(60,10,1)
(66,5,1)
(61,58,1)
(9,84,1)
(55,68,1)
(13,88,1)
(48,52,1)
(82,79,1)
(23,49,1)
(31,0,1)
(6,31,1)
(15,51,1)
(75,57,1)
(85,80,2)
(18,55,2)
(86,17,2)
(1,17,2)
(79,35,2)
(79,15,2)
(31,81,2)
(51,8,2)
(17,80,2)
(13,81,2)
(11,18,2)
(64,15,2)
(30,80,2)
(75,17,2)
(0,81,2)
(55,77,2)
(17,23,2)
(39,84,2)
(48,18,2)
(73,31,2)
(18,17,2)
(38,83,2)
(32,18,2)
(73,81,2)
(82,79,2)
(82,16,2)
(16,15,2)
(80,81,2)
(60,81,2)
(72,15,2)
(26,80,2)
(21,65,2)
(70,81,2)
(4,15,2)
(54,80,2)
(36,18,2)
(65,15,2)
(37,18,2)
(11,17,2)
(24,81,2)
(23,80,2)
(56,81,2)
(41,17,2)
(55,17,2)
(52,7,2)
(25,73,2)
(45,17,2)
(34,15,2)
(52,17,2)
(48,17,2)
(39,82,2)
(21,29,2)
(36,17,2)
(53,15,2)
(49,80,2)
(52,28,2)
(39,15,2)
(52,11,2)
(84,15,2)
(24,42,2)
(40,15,2)
(15,58,2)
(45,18,2)
(21,85,2)
(80,25,2)
(47,80,2)
(80,60,2)
(17,47,2)
(42,15,2)
(77,17,2)
(87,17,2)
(42,39,2)
(55,68,2)
(57,17,2)
(82,15,2)
(57,35,2)
(21,24,2)
(14,48,2)
(47,35,2)
(48,52,2)
(1,18,2)
(86,18,2)
(25,81,2)
(37,17,2)
(14,18,2)
(29,18,2)
(68,57,2)
(60,13,2)
(15,51,2)
(81,15,2)
(39,35,2)
(52,18,2)
(50,17,2)
(88,81,2)
(19,17,2)
(10,81,2)
(6,81,2)
(68,46,2)
(83,76,2)
(9,15,2)
(58,35,2)
(71,80,2)
(22,15,2)
(46,17,2)
(14,17,2)
(20,81,2)
(21,14,2)
(55,35,2)
(68,17,2)
(33,18,2)
-----------------------------------
(0,1)
(1,cmd)
(2,31)
(3,)
(4,ucore)
(5,IB_USER_LAST_QP_ATTR_MASK)
(6,1)
(7,struct ib_udata *uhw)
(8,cmd.base)
(9,ucore)
(10,attr_mask)
(11,&cmd)
(12,base)
(13,cmd.base)
(14,return ret;)
(15,ucore->inlen < sizeof(cmd.base)
(16,sizeof(cmd)
(17,ucore->inlen > sizeof(cmd)
(18,!ib_is_udata_cleared(ucore, sizeof(cmd)
(19,cmd)
(20,cmd)
(21,RET)
(22,cmd)
(23,sizeof(cmd)
(24,return ret;)
(25,~((IB_USER_LAST_QP_ATTR_MASK << 1)
(26,EOPNOTSUPP)
(27,inlen)
(28,struct ib_uverbs_file *file)
(29,return -EOPNOTSUPP;)
(30,-EOPNOTSUPP)
(31,IB_USER_LAST_QP_ATTR_MASK << 1)
(32,EOPNOTSUPP)
(33,-EOPNOTSUPP)
(34,EINVAL)
(35,struct ib_udata *ucore)
(36,uhw)
(37,ret)
(38,BUILD_BUG_ON(IB_USER_LAST_QP_ATTR_MASK == (1 << 31)
(39,ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd)
(40,ret)
(41,ucore)
(42,ret = ib_copy_from_udata(&cmd, ucore, min(sizeof(cmd)
(43,)
(44,if (cmd.base.attr_mask &\n\\n\\t    ~((IB_USER_LAST_QP_ATTR_MASK << 1)
(45,file)
(46,sizeof(cmd)
(47,ucore->inlen)
(48,ret = modify_qp(file, &cmd, uhw)
(49,cmd)
(50,inlen)
(51,sizeof(cmd.base)
(52,modify_qp(file, &cmd, uhw)
(53,cmd)
(54,ucore)
(55,ib_is_udata_cleared(ucore, sizeof(cmd)
(56,ret)
(57,ucore->inlen)
(58,ucore->inlen)
(59,ucore)
(60,cmd.base.attr_mask)
(61,cmd)
(62,if (!ib_is_udata_cleared(ucore, sizeof(cmd)
(63,if (ucore->inlen < sizeof(cmd.base)
(64,-EINVAL)
(65,return -EINVAL;)
(66,1)
(67,ret)
(68,ucore->inlen - sizeof(cmd)
(69,if (ucore->inlen > sizeof(cmd)
(70,IB_USER_LAST_QP_ATTR_MASK)
(71,inlen)
(72,inlen)
(73,(IB_USER_LAST_QP_ATTR_MASK << 1)
(74,if (ret)
(75,cmd)
(76,1 << 31)
(77,sizeof(cmd)
(78,)
(79,ucore->inlen)
(80,cmd.base.attr_mask &\n\\n\\t    ~((IB_USER_LAST_QP_ATTR_MASK << 1)
(81,ret)
(82,min(sizeof(cmd)
(83,IB_USER_LAST_QP_ATTR_MASK == (1 << 31)
(84,&cmd)
(85,return -EOPNOTSUPP;)
(86,ret)
(87,ucore)
(88,base)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^