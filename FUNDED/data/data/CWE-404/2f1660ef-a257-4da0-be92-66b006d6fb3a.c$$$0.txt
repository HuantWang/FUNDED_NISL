-----label-----
0
-----code-----
static int wait_pciephy_busy(void)
{
	unsigned long reg_value = 0x0, retry = 0;

	while (1) {
		reg_value = pcie_r32(PCIEPHY0_CFG);

		if (reg_value & BUSY)
			mdelay(100);
		else
			break;
		if (retry++ > WAITRETRY_MAX) {
			pr_warn("PCIE-PHY retry failed.\n");
			return -1;
		}
	}
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
9,10
9,11
9,12
10,11
11,12
11,13
11,14
13,14
13,15
15,16
17,18
17,19
19,20
21,22
21,23
23,24
23,25
23,26
24,25
25,26
25,27
26,27
28,29
28,30
29,30
31,32
33,34
33,35
33,36
34,35
34,36
35,36
37,38
39,40
40,41
40,42
41,42
45,46
45,47
46,47
46,48
47,48
48,49
50,51
52,53
52,54
53,54
54,55
54,56
55,56
58,59
59,60
61,62
-----nextToken-----
2,4,6,8,12,14,16,18,20,22,27,30,32,36,38,42,43,44,49,51,56,57,60,62
-----computeFrom-----
25,26
25,27
34,35
34,36
46,47
46,48
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;Declarator;Name;EqualsInitializer;LiteralExpression;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ReturnStatement;UnaryExpression;LiteralExpression;ReturnStatement;LiteralExpression;
-----ast_node-----
static int wait_pciephy_busy(void){	unsigned long reg_value = 0x0, retry = 0;	while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}	}	return 0;}
static int
wait_pciephy_busy(void)
wait_pciephy_busy
void
void


{	unsigned long reg_value = 0x0, retry = 0;	while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}	}	return 0;}
unsigned long reg_value = 0x0, retry = 0;
unsigned long reg_value = 0x0, retry = 0;
unsigned long
reg_value = 0x0
reg_value
= 0x0
0x0
retry = 0
retry
= 0
0
while (1) {		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}	}
1
{		reg_value = pcie_r32(PCIEPHY0_CFG);		if (reg_value & BUSY)			mdelay(100);		else			break;		if (retry++ > WAITRETRY_MAX) {			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}	}
reg_value = pcie_r32(PCIEPHY0_CFG);
reg_value = pcie_r32(PCIEPHY0_CFG)
reg_value
reg_value
pcie_r32(PCIEPHY0_CFG)
pcie_r32
pcie_r32
PCIEPHY0_CFG
PCIEPHY0_CFG
if (reg_value & BUSY)			mdelay(100);		else			break;
reg_value & BUSY
reg_value
reg_value
BUSY
BUSY
mdelay(100);
mdelay(100)
mdelay
mdelay
100
break;
if (retry++ > WAITRETRY_MAX) {			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}
retry++ > WAITRETRY_MAX
retry++
retry
retry
WAITRETRY_MAX
WAITRETRY_MAX
{			pr_warn("PCIE-PHY retry failed.\n");			return -1;		}
pr_warn("PCIE-PHY retry failed.\n");
pr_warn("PCIE-PHY retry failed.\n")
pr_warn
pr_warn
"PCIE-PHY retry failed.\n"
return -1;
-1
1
return 0;
0
-----joern-----
(19,10,0)
(13,8,0)
(25,19,0)
(33,10,0)
(10,33,0)
(28,16,0)
(18,24,0)
(10,22,0)
(14,11,0)
(31,22,0)
(32,11,0)
(18,14,0)
(4,36,0)
(5,10,0)
(24,36,0)
(7,24,0)
(3,34,0)
(27,22,0)
(26,21,0)
(23,26,0)
(2,21,0)
(34,36,0)
(9,36,0)
(17,19,0)
(35,33,0)
(8,36,0)
(6,32,0)
(21,26,0)
(1,34,0)
(30,14,0)
(29,36,0)
(26,8,0)
(12,8,0)
(20,30,0)
(30,20,1)
(8,12,1)
(32,6,1)
(33,35,1)
(18,14,1)
(6,21,1)
(19,25,1)
(24,7,1)
(17,10,1)
(13,34,1)
(0,8,1)
(3,1,1)
(10,33,1)
(7,0,1)
(5,0,1)
(23,16,1)
(7,15,1)
(34,3,1)
(19,10,1)
(2,26,1)
(28,19,1)
(14,30,1)
(26,8,1)
(16,28,1)
(20,32,1)
(0,21,1)
(25,17,1)
(26,23,1)
(12,13,1)
(35,5,1)
(21,2,1)
(21,26,1)
(15,19,1)
(18,24,1)
(25,0,2)
(16,19,2)
(19,0,2)
(33,0,2)
(24,0,2)
(21,19,2)
(26,19,2)
(15,19,2)
(28,19,2)
(18,24,2)
(21,26,2)
(5,0,2)
(23,19,2)
(14,21,2)
(18,14,2)
(2,19,2)
(30,21,2)
(19,10,2)
(26,8,2)
(20,21,2)
(7,0,2)
(32,21,2)
(35,0,2)
(6,21,2)
(7,19,2)
(17,0,2)
(10,0,2)
(24,19,2)
(0,21,2)
(10,33,2)
-----------------------------------
(0,1)
(1,reg_value)
(2,WAITRETRY_MAX)
(3,0x0)
(4,while (1)
(5,reg_value)
(6,"PCIE-PHY retry failed.\\n")
(7,0)
(8,retry = 0)
(9,reg_value)
(10,reg_value = pcie_r32(PCIEPHY0_CFG)
(11,)
(12,0)
(13,retry)
(14,return -1;)
(15,break;)
(16,mdelay(100)
(17,reg_value)
(18,RET)
(19,reg_value & BUSY)
(20,1)
(21,retry++ > WAITRETRY_MAX)
(22,)
(23,retry)
(24,return 0;)
(25,BUSY)
(26,retry++)
(27,if (retry++ > WAITRETRY_MAX)
(28,100)
(29,retry)
(30,-1)
(31,if (reg_value & BUSY)
(32,pr_warn("PCIE-PHY retry failed.\\n")
(33,pcie_r32(PCIEPHY0_CFG)
(34,reg_value = 0x0)
(35,PCIEPHY0_CFG)
(36,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^