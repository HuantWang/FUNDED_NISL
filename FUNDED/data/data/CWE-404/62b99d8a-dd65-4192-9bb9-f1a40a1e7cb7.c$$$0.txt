-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = fopen("BadSource_fopen.txt", "w+");
    if(STATIC_CONST_TRUE)
    {
        if (data != NULL)
        {
            /* FIX: Close the file using fclose() */
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
31,32
32,33
32,34
33,34
33,35
34,35
36,37
38,39
39,40
40,41
40,42
41,42
43,44
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,30,35,37,42,44
-----computeFrom-----
14,15
14,16
20,21
20,22
33,34
33,35
-----guardedBy-----
35,44
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(STATIC_CONST_TRUE)    {        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }    }
if (data != NULL)        {            /* FIX: Close the file using fclose() */            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            /* FIX: Close the file using fclose() */            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(11,18,0)
(7,10,0)
(18,20,0)
(19,3,0)
(15,14,0)
(10,20,0)
(15,10,0)
(10,16,0)
(6,16,0)
(17,20,0)
(16,10,0)
(5,15,0)
(3,10,0)
(12,1,0)
(9,16,0)
(0,20,0)
(8,3,0)
(4,18,0)
(2,10,1)
(6,9,1)
(3,10,1)
(13,2,1)
(4,11,1)
(3,8,1)
(9,7,1)
(19,2,1)
(18,4,1)
(13,3,1)
(13,15,1)
(10,16,1)
(7,18,1)
(15,10,1)
(8,19,1)
(15,5,1)
(16,6,1)
(5,3,1)
(19,2,2)
(15,3,2)
(10,16,2)
(3,2,2)
(8,2,2)
(15,10,2)
(3,10,2)
(5,3,2)
-----------------------------------
(0,if(STATIC_CONST_TRUE)
(1,)
(2,STATIC_CONST_TRUE)
(3,data != NULL)
(4,NULL)
(5,data)
(6,"w+")
(7,data)
(8,NULL)
(9,"BadSource_fopen.txt")
(10,data = fopen("BadSource_fopen.txt", "w+")
(11,data)
(12,if (data != NULL)
(13,RET)
(14,)
(15,fclose(data)
(16,fopen("BadSource_fopen.txt", "w+")
(17,data)
(18,data = NULL)
(19,data)
(20,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^