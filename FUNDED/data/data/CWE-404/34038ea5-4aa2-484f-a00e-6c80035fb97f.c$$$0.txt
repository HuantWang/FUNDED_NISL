-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_wchar_t_declare_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    printWLine(data);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,25,27,31,33
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_wchar_t_declare_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    printWLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_wchar_t_declare_63b_badSink(wchar_t * * dataPtr)
CWE590_Free_Memory_Not_on_Heap__free_wchar_t_declare_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    printWLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
printWLine(data);
printWLine(data)
printWLine
printWLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(3,11,0)
(10,3,0)
(11,6,0)
(5,8,0)
(9,5,0)
(10,8,0)
(0,8,0)
(4,3,0)
(1,11,0)
(11,3,0)
(3,8,0)
(5,3,0)
(2,10,0)
(10,3,1)
(9,3,1)
(10,2,1)
(7,10,1)
(11,6,1)
(2,5,1)
(3,11,1)
(11,1,1)
(5,9,1)
(1,4,1)
(5,3,1)
(3,11,2)
(5,3,2)
(11,6,2)
(10,3,2)
-----------------------------------
(0,data)
(1,dataPtr)
(2,data)
(3,* data = *dataPtr)
(4,data)
(5,printWLine(data)
(6,wchar_t * * dataPtr)
(7,RET)
(8,)
(9,data)
(10,free(data)
(11,*dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^