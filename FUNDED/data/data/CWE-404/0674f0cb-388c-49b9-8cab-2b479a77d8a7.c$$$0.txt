-----label-----
0
-----code-----
static void goodB2G()
{
    int data;
    /* Initialize data */
    data = -1;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
    if (data != -1)
    {
        /* FIX: Close the file using close() */
        CLOSE(data);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
9,10
11,12
12,13
12,14
13,14
15,16
17,18
18,19
18,20
19,20
21,22
21,23
21,24
21,25
22,23
25,26
25,27
26,27
28,29
30,31
30,32
31,32
33,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
42,43
43,44
43,45
44,45
46,47
-----nextToken-----
2,4,8,10,14,16,20,23,24,27,29,32,34,38,40,45,47
-----computeFrom-----
12,13
12,14
18,19
18,20
25,26
25,27
30,31
30,32
36,37
36,38
-----guardedBy-----
38,47
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;UnaryExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    if (data != -1)    {        /* FIX: Close the file using close() */        CLOSE(data);    }}
static void
goodB2G()
goodB2G
{    int data;    /* Initialize data */    data = -1;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);    if (data != -1)    {        /* FIX: Close the file using close() */        CLOSE(data);    }}
int data;
int data;
int
data
data
data = -1;
data = -1
data
data
-1
1
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE);
data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
data
data
OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
OPEN
OPEN
"BadSource_open.txt"
O_RDWR|O_CREAT
O_RDWR
O_RDWR
O_CREAT
O_CREAT
S_IREAD|S_IWRITE
S_IREAD
S_IREAD
S_IWRITE
S_IWRITE
if (data != -1)    {        /* FIX: Close the file using close() */        CLOSE(data);    }
data != -1
data
data
-1
1
{        /* FIX: Close the file using close() */        CLOSE(data);    }
CLOSE(data);
CLOSE(data)
CLOSE
CLOSE
data
data
-----joern-----
(15,10,0)
(7,17,0)
(2,6,0)
(23,15,0)
(18,12,0)
(4,5,0)
(8,23,0)
(1,18,0)
(15,6,0)
(6,5,0)
(16,5,0)
(0,3,0)
(22,7,0)
(0,5,0)
(10,15,0)
(20,10,0)
(6,15,0)
(15,23,0)
(14,15,0)
(3,0,0)
(19,3,0)
(24,23,0)
(13,12,0)
(12,18,0)
(9,10,0)
(7,6,0)
(11,0,0)
(12,6,0)
(12,6,1)
(15,23,1)
(9,20,1)
(7,22,1)
(3,19,1)
(14,2,1)
(0,3,1)
(7,6,1)
(24,10,1)
(22,12,1)
(18,1,1)
(10,9,1)
(8,24,1)
(6,15,1)
(19,11,1)
(12,18,1)
(21,7,1)
(23,8,1)
(15,10,1)
(20,14,1)
(1,13,1)
(13,6,1)
(2,0,1)
(21,12,1)
(22,12,2)
(15,23,2)
(12,6,2)
(15,10,2)
(7,12,2)
(7,6,2)
(0,3,2)
(12,18,2)
(6,15,2)
-----------------------------------
(0,data = -1)
(1,1)
(2,data)
(3,-1)
(4,if (data != -1)
(5,)
(6,data = OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(7,CLOSE(data)
(8,S_IWRITE)
(9,O_CREAT)
(10,O_RDWR|O_CREAT)
(11,data)
(12,data != -1)
(13,data)
(14,"BadSource_open.txt")
(15,OPEN("BadSource_open.txt", O_RDWR|O_CREAT, S_IREAD|S_IWRITE)
(16,data)
(17,)
(18,-1)
(19,1)
(20,O_RDWR)
(21,RET)
(22,data)
(23,S_IREAD|S_IWRITE)
(24,S_IREAD)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^