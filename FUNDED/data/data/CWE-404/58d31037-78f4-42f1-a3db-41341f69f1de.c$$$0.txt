-----label-----
1
-----code-----
static int imx6q_enter_wait(struct cpuidle_device *dev,
			    struct cpuidle_driver *drv, int index)
{
	spin_lock(&cpuidle_lock);
	if (++num_idle_cpus == num_online_cpus())
		imx6q_set_lpm(WAIT_UNCLOCKED);
	spin_unlock(&cpuidle_lock);

	cpu_do_idle();

	spin_lock(&cpuidle_lock);
	if (num_idle_cpus-- == num_online_cpus())
		imx6q_set_lpm(WAIT_CLOCKED);
	spin_unlock(&cpuidle_lock);

	return index;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
19,20
21,22
21,23
21,24
21,25
21,26
21,27
21,28
21,29
22,23
23,24
23,25
24,25
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
33,34
35,36
36,37
38,39
39,40
39,41
40,41
42,43
43,44
45,46
46,47
46,48
47,48
49,50
50,51
52,53
53,54
54,55
56,57
57,58
57,59
58,59
60,61
61,62
63,64
63,65
64,65
64,66
65,66
66,67
68,69
69,70
71,72
72,73
72,74
73,74
75,76
76,77
78,79
79,80
79,81
80,81
82,83
83,84
85,86
86,87
-----nextToken-----
2,4,7,9,10,13,15,16,18,20,25,28,29,34,37,41,44,48,51,55,59,62,67,70,74,77,81,84,87
-----computeFrom-----
31,32
31,33
64,65
64,66
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;ReferenceOperator;Name;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static int imx6q_enter_wait(struct cpuidle_device *dev,			    struct cpuidle_driver *drv, int index){	spin_lock(&cpuidle_lock);	if (++num_idle_cpus == num_online_cpus())		imx6q_set_lpm(WAIT_UNCLOCKED);	spin_unlock(&cpuidle_lock);	cpu_do_idle();	spin_lock(&cpuidle_lock);	if (num_idle_cpus-- == num_online_cpus())		imx6q_set_lpm(WAIT_CLOCKED);	spin_unlock(&cpuidle_lock);	return index;}
static int
imx6q_enter_wait(struct cpuidle_device *dev,			    struct cpuidle_driver *drv, int index)
imx6q_enter_wait
struct cpuidle_device *dev
struct cpuidle_device
cpuidle_device
*dev
*
dev
struct cpuidle_driver *drv
struct cpuidle_driver
cpuidle_driver
*drv
*
drv
int index
int
index
index
{	spin_lock(&cpuidle_lock);	if (++num_idle_cpus == num_online_cpus())		imx6q_set_lpm(WAIT_UNCLOCKED);	spin_unlock(&cpuidle_lock);	cpu_do_idle();	spin_lock(&cpuidle_lock);	if (num_idle_cpus-- == num_online_cpus())		imx6q_set_lpm(WAIT_CLOCKED);	spin_unlock(&cpuidle_lock);	return index;}
spin_lock(&cpuidle_lock);
spin_lock(&cpuidle_lock);
spin_lock
spin_lock
(&cpuidle_lock)
&cpuidle_lock
&
cpuidle_lock
if (++num_idle_cpus == num_online_cpus())		imx6q_set_lpm(WAIT_UNCLOCKED);
++num_idle_cpus == num_online_cpus()
++num_idle_cpus
num_idle_cpus
num_idle_cpus
num_online_cpus()
num_online_cpus
num_online_cpus
imx6q_set_lpm(WAIT_UNCLOCKED);
imx6q_set_lpm(WAIT_UNCLOCKED);
imx6q_set_lpm
imx6q_set_lpm
(WAIT_UNCLOCKED)
WAIT_UNCLOCKED
WAIT_UNCLOCKED
spin_unlock(&cpuidle_lock);
spin_unlock(&cpuidle_lock)
spin_unlock
spin_unlock
&cpuidle_lock
cpuidle_lock
cpuidle_lock
cpu_do_idle();
cpu_do_idle()
cpu_do_idle
cpu_do_idle
spin_lock(&cpuidle_lock);
spin_lock(&cpuidle_lock)
spin_lock
spin_lock
&cpuidle_lock
cpuidle_lock
cpuidle_lock
if (num_idle_cpus-- == num_online_cpus())		imx6q_set_lpm(WAIT_CLOCKED);
num_idle_cpus-- == num_online_cpus()
num_idle_cpus--
num_idle_cpus
num_idle_cpus
num_online_cpus()
num_online_cpus
num_online_cpus
imx6q_set_lpm(WAIT_CLOCKED);
imx6q_set_lpm(WAIT_CLOCKED);
imx6q_set_lpm
imx6q_set_lpm
(WAIT_CLOCKED)
WAIT_CLOCKED
WAIT_CLOCKED
spin_unlock(&cpuidle_lock);
spin_unlock(&cpuidle_lock)
spin_unlock
spin_unlock
&cpuidle_lock
cpuidle_lock
cpuidle_lock
return index;
index
index
-----joern-----
(15,8,0)
(28,21,0)
(9,26,0)
(20,22,0)
(13,19,0)
(14,11,0)
(31,12,0)
(13,21,0)
(11,3,0)
(24,21,0)
(27,21,0)
(31,21,0)
(6,4,0)
(5,30,0)
(8,18,0)
(29,7,0)
(4,6,0)
(10,8,0)
(8,21,0)
(2,0,0)
(16,26,0)
(19,13,0)
(16,21,0)
(26,16,0)
(25,19,0)
(3,11,0)
(6,0,0)
(7,1,0)
(0,6,0)
(1,7,0)
(1,21,0)
(11,14,0)
(23,3,0)
(17,12,0)
(12,31,0)
(9,30,1)
(28,16,1)
(30,5,1)
(23,13,1)
(8,10,1)
(11,14,1)
(19,25,1)
(17,6,1)
(13,19,1)
(3,23,1)
(4,0,1)
(12,17,1)
(6,0,1)
(26,9,1)
(0,2,1)
(29,28,1)
(1,7,1)
(6,4,1)
(16,26,1)
(20,6,1)
(15,8,1)
(2,1,1)
(17,22,1)
(11,3,1)
(14,3,1)
(10,31,1)
(31,12,1)
(22,20,1)
(9,11,1)
(8,18,1)
(5,11,1)
(7,29,1)
(1,7,2)
(11,14,2)
(5,11,2)
(6,0,2)
(30,11,2)
(31,12,2)
(15,8,2)
(22,6,2)
(8,18,2)
(6,4,2)
(20,6,2)
(11,3,2)
(13,19,2)
(16,26,2)
-----------------------------------
(0,num_idle_cpus--)
(1,spin_lock(&cpuidle_lock)
(2,num_idle_cpus)
(3,++num_idle_cpus)
(4,num_online_cpus()
(5,WAIT_UNCLOCKED)
(6,num_idle_cpus-- == num_online_cpus()
(7,&cpuidle_lock)
(8,return index;)
(9,cpuidle_lock)
(10,index)
(11,++num_idle_cpus == num_online_cpus()
(12,&cpuidle_lock)
(13,spin_lock(&cpuidle_lock)
(14,num_online_cpus()
(15,RET)
(16,spin_unlock(&cpuidle_lock)
(17,cpuidle_lock)
(18,int index)
(19,&cpuidle_lock)
(20,WAIT_CLOCKED)
(21,)
(22,imx6q_set_lpm(WAIT_CLOCKED)
(23,num_idle_cpus)
(24,if (num_idle_cpus-- == num_online_cpus()
(25,cpuidle_lock)
(26,&cpuidle_lock)
(27,if (++num_idle_cpus == num_online_cpus()
(28,cpu_do_idle()
(29,cpuidle_lock)
(30,imx6q_set_lpm(WAIT_UNCLOCKED)
(31,spin_unlock(&cpuidle_lock)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^