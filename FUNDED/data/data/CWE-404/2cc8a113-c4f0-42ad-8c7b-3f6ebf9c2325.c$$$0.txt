-----label-----
1
-----code-----
struct mapped_device *dm_get_from_kobject(struct kobject *kobj)
{
	struct mapped_device *md;

	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);

	if (test_bit(DMF_FREEING, &md->flags) ||
	    dm_deleting_md(md))
		return NULL;

	dm_get(md);
	return md;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
14,15
15,16
15,17
16,17
18,19
18,20
21,22
22,23
22,24
23,24
23,25
24,25
24,26
24,27
25,26
27,28
29,30
30,31
30,32
31,32
34,35
34,36
35,36
37,38
39,40
40,41
42,43
43,44
43,45
44,45
46,47
48,49
49,50
-----nextToken-----
3,5,6,9,11,12,17,19,20,26,28,32,33,36,38,41,45,47,50
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ProblemStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct mapped_device *dm_get_from_kobject(struct kobject *kobj){	struct mapped_device *md;	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);	if (test_bit(DMF_FREEING, &md->flags) ||	    dm_deleting_md(md))		return NULL;	dm_get(md);	return md;}
struct mapped_device
mapped_device
*dm_get_from_kobject(struct kobject *kobj)
*
dm_get_from_kobject
struct kobject *kobj
struct kobject
kobject
*kobj
*
kobj
{	struct mapped_device *md;	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);	if (test_bit(DMF_FREEING, &md->flags) ||	    dm_deleting_md(md))		return NULL;	dm_get(md);	return md;}
struct mapped_device *md;
struct mapped_device *md;
struct mapped_device
mapped_device
*md
*
md
md = container_of(kobj, struct mapped_device, kobj_holder.kobj);
if (test_bit(DMF_FREEING, &md->flags) ||	    dm_deleting_md(md))		return NULL;
test_bit(DMF_FREEING, &md->flags) ||	    dm_deleting_md(md)
test_bit(DMF_FREEING, &md->flags)
test_bit
test_bit
DMF_FREEING
DMF_FREEING
&md->flags
md->flags
md
md
flags
dm_deleting_md(md)
dm_deleting_md
dm_deleting_md
md
md
return NULL;
NULL
NULL
dm_get(md);
dm_get(md)
dm_get
dm_get
md
md
return md;
md
md
-----joern-----
(10,17,0)
(0,7,0)
(18,12,0)
(15,17,0)
(3,2,0)
(14,13,0)
(16,10,0)
(9,16,0)
(18,2,0)
(8,13,0)
(5,6,0)
(12,6,0)
(14,16,0)
(16,14,0)
(1,17,0)
(10,16,0)
(17,10,0)
(7,6,0)
(11,6,0)
(13,14,0)
(4,12,0)
(7,0,1)
(12,4,1)
(10,17,1)
(18,2,1)
(0,14,1)
(14,16,1)
(14,13,1)
(3,14,1)
(15,9,1)
(13,8,1)
(17,1,1)
(1,15,1)
(8,16,1)
(2,3,1)
(16,10,1)
(18,12,1)
(4,7,1)
(10,17,2)
(3,14,2)
(14,13,2)
(2,14,2)
(16,10,2)
(4,14,2)
(8,16,2)
(0,14,2)
(18,12,2)
(18,2,2)
(12,14,2)
(14,16,2)
(13,16,2)
(7,14,2)
-----------------------------------
(0,md)
(1,flags)
(2,return NULL;)
(3,NULL)
(4,md)
(5,md)
(6,)
(7,dm_get(md)
(8,md)
(9,DMF_FREEING)
(10,&md->flags)
(11,if (test_bit(DMF_FREEING, &md->flags)
(12,return md;)
(13,dm_deleting_md(md)
(14,test_bit(DMF_FREEING, &md->flags)
(15,md)
(16,test_bit(DMF_FREEING, &md->flags)
(17,md->flags)
(18,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^