-----label-----
0
-----code-----
static int srp_lookup_path(struct srp_rdma_ch *ch)
{
	struct srp_target_port *target = ch->target;
	int ret;

	ch->path.numb_path = 1;

	init_completion(&ch->done);

	ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,
					       target->srp_host->srp_dev->dev,
					       target->srp_host->port,
					       &ch->path,
					       IB_SA_PATH_REC_SERVICE_ID |
					       IB_SA_PATH_REC_DGID	 |
					       IB_SA_PATH_REC_SGID	 |
					       IB_SA_PATH_REC_NUMB_PATH	 |
					       IB_SA_PATH_REC_PKEY,
					       SRP_PATH_REC_TIMEOUT_MS,
					       GFP_KERNEL,
					       srp_path_rec_completion,
					       ch, &ch->path_query);
	if (ch->path_query_id < 0)
		return ch->path_query_id;

	ret = wait_for_completion_interruptible(&ch->done);
	if (ret < 0)
		return ret;

	if (ch->status < 0)
		shost_printk(KERN_WARNING, target->scsi_host,
			     PFX "Path record query failed\n");

	return ch->status;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
12,13
13,14
13,15
14,15
16,17
16,18
16,19
19,20
20,21
20,22
21,22
24,25
25,26
25,27
27,28
29,30
30,31
30,32
31,32
31,33
32,33
32,34
33,34
38,39
39,40
39,41
40,41
42,43
43,44
43,45
44,45
47,48
48,49
48,50
49,50
49,51
50,51
53,54
53,55
53,56
53,57
53,58
53,59
53,60
53,61
53,62
53,63
53,64
54,55
56,57
57,58
59,60
59,61
60,61
60,62
61,62
61,63
62,63
67,68
67,69
68,69
68,70
69,70
73,74
74,75
74,76
75,76
78,79
78,80
79,80
79,81
80,81
80,82
81,82
81,83
82,83
84,85
86,87
88,89
90,91
92,93
94,95
96,97
98,99
100,101
101,102
101,103
102,103
105,106
105,107
106,107
106,108
107,108
107,109
108,109
112,113
113,114
113,115
114,115
117,118
118,119
118,120
119,120
121,122
121,123
122,123
124,125
125,126
125,127
126,127
129,130
129,131
130,131
130,132
131,132
134,135
135,136
137,138
138,139
139,140
139,141
140,141
-----nextToken-----
2,4,7,9,10,15,17,18,22,23,26,28,34,35,36,37,41,45,46,51,52,55,58,63,64,65,66,70,71,72,76,77,83,85,87,89,91,93,95,97,99,103,104,109,110,111,115,116,120,123,127,128,132,133,136,141,142
-----computeFrom-----
30,31
30,32
48,49
48,50
78,79
78,80
79,80
79,81
80,81
80,82
81,82
81,83
106,107
106,108
118,119
118,120
130,131
130,132
-----guardedBy-----
109,115
110,116
132,136
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;FieldReference;FieldReference;FieldReference;IdExpression;Name;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ReturnStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;ProblemStatement;ReturnStatement;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static int srp_lookup_path(struct srp_rdma_ch *ch){	struct srp_target_port *target = ch->target;	int ret;	ch->path.numb_path = 1;	init_completion(&ch->done);	ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,					       target->srp_host->srp_dev->dev,					       target->srp_host->port,					       &ch->path,					       IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY,					       SRP_PATH_REC_TIMEOUT_MS,					       GFP_KERNEL,					       srp_path_rec_completion,					       ch, &ch->path_query);	if (ch->path_query_id < 0)		return ch->path_query_id;	ret = wait_for_completion_interruptible(&ch->done);	if (ret < 0)		return ret;	if (ch->status < 0)		shost_printk(KERN_WARNING, target->scsi_host,			     PFX "Path record query failed\n");	return ch->status;}
static int
srp_lookup_path(struct srp_rdma_ch *ch)
srp_lookup_path
struct srp_rdma_ch *ch
struct srp_rdma_ch
srp_rdma_ch
*ch
*
ch
{	struct srp_target_port *target = ch->target;	int ret;	ch->path.numb_path = 1;	init_completion(&ch->done);	ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,					       target->srp_host->srp_dev->dev,					       target->srp_host->port,					       &ch->path,					       IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY,					       SRP_PATH_REC_TIMEOUT_MS,					       GFP_KERNEL,					       srp_path_rec_completion,					       ch, &ch->path_query);	if (ch->path_query_id < 0)		return ch->path_query_id;	ret = wait_for_completion_interruptible(&ch->done);	if (ret < 0)		return ret;	if (ch->status < 0)		shost_printk(KERN_WARNING, target->scsi_host,			     PFX "Path record query failed\n");	return ch->status;}
struct srp_target_port *target = ch->target;
struct srp_target_port *target = ch->target;
struct srp_target_port
srp_target_port
*target = ch->target
*
target
= ch->target
ch->target
ch
ch
target
int ret;
int ret;
int
ret
ret
ch->path.numb_path = 1;
ch->path.numb_path = 1
ch->path.numb_path
ch->path
ch
ch
path
numb_path
1
init_completion(&ch->done);
init_completion(&ch->done)
init_completion
init_completion
&ch->done
ch->done
ch
ch
done
ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,					       target->srp_host->srp_dev->dev,					       target->srp_host->port,					       &ch->path,					       IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY,					       SRP_PATH_REC_TIMEOUT_MS,					       GFP_KERNEL,					       srp_path_rec_completion,					       ch, &ch->path_query);
ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,					       target->srp_host->srp_dev->dev,					       target->srp_host->port,					       &ch->path,					       IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY,					       SRP_PATH_REC_TIMEOUT_MS,					       GFP_KERNEL,					       srp_path_rec_completion,					       ch, &ch->path_query)
ch->path_query_id
ch
ch
path_query_id
ib_sa_path_rec_get(&srp_sa_client,					       target->srp_host->srp_dev->dev,					       target->srp_host->port,					       &ch->path,					       IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY,					       SRP_PATH_REC_TIMEOUT_MS,					       GFP_KERNEL,					       srp_path_rec_completion,					       ch, &ch->path_query)
ib_sa_path_rec_get
ib_sa_path_rec_get
&srp_sa_client
srp_sa_client
srp_sa_client
target->srp_host->srp_dev->dev
target->srp_host->srp_dev
target->srp_host
target
target
srp_host
srp_dev
dev
target->srp_host->port
target->srp_host
target
target
srp_host
port
&ch->path
ch->path
ch
ch
path
IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH	 |					       IB_SA_PATH_REC_PKEY
IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID	 |					       IB_SA_PATH_REC_NUMB_PATH
IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID	 |					       IB_SA_PATH_REC_SGID
IB_SA_PATH_REC_SERVICE_ID |					       IB_SA_PATH_REC_DGID
IB_SA_PATH_REC_SERVICE_ID
IB_SA_PATH_REC_SERVICE_ID
IB_SA_PATH_REC_DGID
IB_SA_PATH_REC_DGID
IB_SA_PATH_REC_SGID
IB_SA_PATH_REC_SGID
IB_SA_PATH_REC_NUMB_PATH
IB_SA_PATH_REC_NUMB_PATH
IB_SA_PATH_REC_PKEY
IB_SA_PATH_REC_PKEY
SRP_PATH_REC_TIMEOUT_MS
SRP_PATH_REC_TIMEOUT_MS
GFP_KERNEL
GFP_KERNEL
srp_path_rec_completion
srp_path_rec_completion
ch
ch
&ch->path_query
ch->path_query
ch
ch
path_query
if (ch->path_query_id < 0)		return ch->path_query_id;
ch->path_query_id < 0
ch->path_query_id
ch
ch
path_query_id
0
return ch->path_query_id;
ch->path_query_id
ch
ch
path_query_id
ret = wait_for_completion_interruptible(&ch->done);
ret = wait_for_completion_interruptible(&ch->done)
ret
ret
wait_for_completion_interruptible(&ch->done)
wait_for_completion_interruptible
wait_for_completion_interruptible
&ch->done
ch->done
ch
ch
done
if (ret < 0)		return ret;
ret < 0
ret
ret
0
return ret;
ret
ret
if (ch->status < 0)		shost_printk(KERN_WARNING, target->scsi_host,			     PFX "Path record query failed\n");
return ch->status;
ch->status
ch
ch
status
-----joern-----
(8,55,0)
(0,4,0)
(73,42,0)
(79,24,0)
(20,16,0)
(10,31,0)
(34,65,0)
(32,26,0)
(83,55,0)
(85,43,0)
(6,28,0)
(15,65,0)
(80,71,0)
(46,71,0)
(60,17,0)
(59,38,0)
(39,16,0)
(50,20,0)
(34,38,0)
(13,57,0)
(70,75,0)
(65,34,0)
(58,59,0)
(88,63,0)
(17,47,0)
(4,26,0)
(50,82,0)
(68,20,0)
(18,26,0)
(23,20,0)
(43,2,0)
(20,40,0)
(25,20,0)
(91,2,0)
(74,47,0)
(71,23,0)
(86,69,0)
(64,82,0)
(40,57,0)
(62,57,0)
(54,56,0)
(19,20,0)
(94,42,0)
(78,94,0)
(76,31,0)
(93,63,0)
(2,57,0)
(48,83,0)
(12,47,0)
(91,90,0)
(2,55,0)
(17,92,0)
(39,40,0)
(69,57,0)
(56,26,0)
(20,23,0)
(3,39,0)
(53,61,0)
(49,18,0)
(89,57,0)
(63,90,0)
(75,16,0)
(24,1,0)
(51,59,0)
(1,24,0)
(14,57,0)
(56,54,0)
(20,92,0)
(26,57,0)
(90,55,0)
(42,16,0)
(9,39,0)
(81,57,0)
(84,29,0)
(31,5,0)
(44,20,0)
(36,84,0)
(43,16,0)
(92,17,0)
(90,39,0)
(67,5,0)
(82,50,0)
(2,39,0)
(30,1,0)
(5,31,0)
(42,94,0)
(77,20,0)
(83,16,0)
(71,16,0)
(45,42,0)
(94,78,0)
(65,20,0)
(26,56,0)
(37,83,0)
(27,29,0)
(20,50,0)
(24,40,0)
(20,65,0)
(55,83,0)
(23,71,0)
(82,16,0)
(91,4,0)
(78,57,0)
(66,68,0)
(20,5,0)
(72,24,0)
(29,84,0)
(21,18,0)
(41,38,0)
(92,20,0)
(28,16,0)
(22,92,0)
(33,82,0)
(40,20,0)
(84,16,0)
(55,61,0)
(54,75,0)
(5,20,0)
(28,69,0)
(63,16,0)
(38,59,0)
(38,34,0)
(69,28,0)
(11,43,0)
(52,34,0)
(47,17,0)
(35,75,0)
(7,28,0)
(75,54,0)
(24,16,0)
(61,57,0)
(31,69,0)
(20,68,0)
(87,84,0)
(47,69,0)
(67,31,1)
(36,87,1)
(46,25,1)
(25,44,1)
(31,76,1)
(90,63,1)
(20,50,1)
(19,77,1)
(73,61,1)
(82,16,1)
(29,84,1)
(84,36,1)
(91,4,1)
(1,30,1)
(31,69,1)
(55,83,1)
(20,5,1)
(72,40,1)
(21,26,1)
(50,82,1)
(83,48,1)
(34,38,1)
(91,90,1)
(63,16,1)
(85,29,1)
(44,19,1)
(43,16,1)
(42,45,1)
(55,8,1)
(65,34,1)
(17,60,1)
(51,58,1)
(92,17,1)
(3,9,1)
(92,22,1)
(71,80,1)
(70,35,1)
(43,11,1)
(5,67,1)
(39,3,1)
(29,27,1)
(28,6,1)
(84,16,1)
(20,16,1)
(8,83,1)
(18,49,1)
(88,1,1)
(6,7,1)
(22,17,1)
(80,46,1)
(39,16,1)
(2,39,1)
(58,41,1)
(26,56,1)
(42,16,1)
(12,68,1)
(64,33,1)
(47,69,1)
(59,51,1)
(61,53,1)
(20,68,1)
(2,55,1)
(63,93,1)
(20,23,1)
(82,64,1)
(76,10,1)
(60,47,1)
(78,94,1)
(37,69,1)
(41,52,1)
(5,31,1)
(4,26,1)
(27,84,1)
(74,12,1)
(91,2,1)
(75,70,1)
(1,24,1)
(54,75,1)
(4,0,1)
(66,39,1)
(68,66,1)
(30,24,1)
(24,40,1)
(56,54,1)
(71,16,1)
(35,32,1)
(90,55,1)
(10,92,1)
(40,20,1)
(0,18,1)
(90,39,1)
(24,79,1)
(11,85,1)
(38,59,1)
(17,47,1)
(53,55,1)
(48,37,1)
(83,16,1)
(75,16,1)
(18,26,1)
(94,42,1)
(49,21,1)
(15,50,1)
(69,28,1)
(24,16,1)
(47,74,1)
(52,15,1)
(20,65,1)
(79,72,1)
(93,88,1)
(87,18,1)
(23,71,1)
(20,92,1)
(32,1,1)
(9,78,1)
(33,5,1)
(28,16,1)
(7,86,1)
(77,65,1)
(45,73,1)
(2,43,1)
(20,92,2)
(2,18,2)
(56,54,2)
(91,2,2)
(21,1,2)
(17,47,2)
(75,1,2)
(55,83,2)
(87,18,2)
(90,1,2)
(78,94,2)
(39,16,2)
(29,84,2)
(38,59,2)
(65,34,2)
(36,18,2)
(31,69,2)
(28,16,2)
(54,1,2)
(88,1,2)
(29,18,2)
(82,16,2)
(24,16,2)
(84,18,2)
(20,5,2)
(2,39,2)
(63,16,2)
(4,26,2)
(90,55,2)
(20,50,2)
(20,23,2)
(56,1,2)
(23,71,2)
(1,24,2)
(2,55,2)
(35,1,2)
(24,40,2)
(40,20,2)
(54,75,2)
(85,18,2)
(26,1,2)
(91,4,2)
(26,56,2)
(91,90,2)
(92,17,2)
(69,28,2)
(49,1,2)
(75,16,2)
(27,18,2)
(11,18,2)
(18,26,2)
(34,38,2)
(18,1,2)
(4,18,2)
(93,1,2)
(63,1,2)
(0,18,2)
(20,16,2)
(42,16,2)
(90,39,2)
(20,65,2)
(20,68,2)
(84,16,2)
(83,16,2)
(43,18,2)
(50,82,2)
(94,42,2)
(47,69,2)
(43,16,2)
(71,16,2)
(70,1,2)
(5,31,2)
(32,1,2)
-----------------------------------
(0,ret)
(1,ch->path_query_id < 0)
(2,return ch->status;)
(3,path_query_id)
(4,return ret;)
(5,target->srp_host->port)
(6,target)
(7,ch)
(8,numb_path)
(9,ch)
(10,target)
(11,status)
(12,target)
(13,if (ch->status < 0)
(14,if (ret < 0)
(15,IB_SA_PATH_REC_SERVICE_ID)
(16,struct srp_rdma_ch *ch)
(17,target->srp_host->srp_dev)
(18,ret < 0)
(19,GFP_KERNEL)
(20,ib_sa_path_rec_get(&srp_sa_client,\n\\n\\t\\t\\t\\t\\t       target->srp_host->srp_dev->dev,\n\\n\\t\\t\\t\\t\\t       target->srp_host->port,\n\\n\\t\\t\\t\\t\\t       &ch->path,\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SERVICE_ID |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_DGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY,\n\\n\\t\\t\\t\\t\\t       SRP_PATH_REC_TIMEOUT_MS,\n\\n\\t\\t\\t\\t\\t       GFP_KERNEL,\n\\n\\t\\t\\t\\t\\t       srp_path_rec_completion,\n\\n\\t\\t\\t\\t\\t       ch, &ch->path_query)
(21,ret)
(22,dev)
(23,&ch->path_query)
(24,ch->path_query_id)
(25,ch)
(26,ret = wait_for_completion_interruptible(&ch->done)
(27,0)
(28,ch->target)
(29,ch->status < 0)
(30,0)
(31,target->srp_host)
(32,ret)
(33,ch)
(34,IB_SA_PATH_REC_DGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY)
(35,ch)
(36,status)
(37,ch)
(38,IB_SA_PATH_REC_SGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY)
(39,ch->path_query_id)
(40,ch->path_query_id = ib_sa_path_rec_get(&srp_sa_client,\n\\n\\t\\t\\t\\t\\t       target->srp_host->srp_dev->dev,\n\\n\\t\\t\\t\\t\\t       target->srp_host->port,\n\\n\\t\\t\\t\\t\\t       &ch->path,\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SERVICE_ID |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_DGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY,\n\\n\\t\\t\\t\\t\\t       SRP_PATH_REC_TIMEOUT_MS,\n\\n\\t\\t\\t\\t\\t       GFP_KERNEL,\n\\n\\t\\t\\t\\t\\t       srp_path_rec_completion,\n\\n\\t\\t\\t\\t\\t       ch, &ch->path_query)
(41,IB_SA_PATH_REC_SGID)
(42,ch->done)
(43,ch->status)
(44,srp_path_rec_completion)
(45,done)
(46,ch)
(47,target->srp_host)
(48,path)
(49,0)
(50,&ch->path)
(51,IB_SA_PATH_REC_PKEY)
(52,IB_SA_PATH_REC_DGID)
(53,1)
(54,&ch->done)
(55,ch->path.numb_path)
(56,wait_for_completion_interruptible(&ch->done)
(57,)
(58,IB_SA_PATH_REC_NUMB_PATH)
(59,IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY)
(60,srp_dev)
(61,ch->path.numb_path = 1)
(62,if (ch->path_query_id < 0)
(63,ch->path_query_id)
(64,path)
(65,IB_SA_PATH_REC_SERVICE_ID |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_DGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_SGID\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_NUMB_PATH\\t |\n\\n\\t\\t\\t\\t\\t       IB_SA_PATH_REC_PKEY)
(66,srp_sa_client)
(67,port)
(68,&srp_sa_client)
(69,*target = ch->target)
(70,done)
(71,ch->path_query)
(72,ch)
(73,ch)
(74,srp_host)
(75,ch->done)
(76,srp_host)
(77,SRP_PATH_REC_TIMEOUT_MS)
(78,init_completion(&ch->done)
(79,path_query_id)
(80,path_query)
(81,target)
(82,ch->path)
(83,ch->path)
(84,ch->status)
(85,ch)
(86,target)
(87,ch)
(88,ch)
(89,ret)
(90,return ch->path_query_id;)
(91,RET)
(92,target->srp_host->srp_dev->dev)
(93,path_query_id)
(94,&ch->done)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^