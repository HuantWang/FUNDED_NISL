-----label-----
0
-----code-----
static void pdata_quirks_check(struct pdata_init *quirks)
{
	while (quirks->compatible) {
		if (of_machine_is_compatible(quirks->compatible)) {
			if (quirks->fn)
				quirks->fn();
			break;
		}
		quirks++;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
19,21
20,21
22,23
22,24
23,24
26,27
26,28
27,28
27,29
28,29
28,30
29,30
32,33
33,34
34,35
34,36
35,36
39,40
40,41
41,42
-----nextToken-----
2,4,7,9,10,15,16,21,24,25,30,31,36,37,38,42
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;WhileStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;BreakStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void pdata_quirks_check(struct pdata_init *quirks){	while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}}
static void
pdata_quirks_check(struct pdata_init *quirks)
pdata_quirks_check
struct pdata_init *quirks
struct pdata_init
pdata_init
*quirks
*
quirks
{	while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}}
while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}
quirks->compatible
quirks
quirks
compatible
{		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}
if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}
of_machine_is_compatible(quirks->compatible)
of_machine_is_compatible
of_machine_is_compatible
quirks->compatible
quirks
quirks
compatible
{			if (quirks->fn)				quirks->fn();			break;		}
if (quirks->fn)				quirks->fn();
quirks->fn
quirks
quirks
fn
quirks->fn();
quirks->fn()
quirks->fn
quirks
quirks
fn
break;
quirks++;
quirks++
quirks
quirks
-----joern-----
(14,12,0)
(5,8,0)
(9,19,0)
(8,5,0)
(7,10,0)
(8,19,0)
(4,15,0)
(18,17,0)
(0,8,0)
(1,17,0)
(9,15,0)
(13,20,0)
(21,20,0)
(2,8,0)
(12,19,0)
(16,9,0)
(11,12,0)
(17,19,0)
(5,8,1)
(13,6,1)
(11,9,1)
(1,18,1)
(17,19,1)
(8,2,1)
(3,12,1)
(0,12,1)
(3,13,1)
(9,19,1)
(6,17,1)
(8,19,1)
(12,19,1)
(14,11,1)
(16,5,1)
(18,5,1)
(9,16,1)
(2,0,1)
(17,1,1)
(13,17,1)
(12,14,1)
(14,5,2)
(17,19,2)
(1,5,2)
(8,12,2)
(12,5,2)
(16,5,2)
(13,5,2)
(18,5,2)
(8,19,2)
(17,5,2)
(9,19,2)
(9,5,2)
(6,17,2)
(5,12,2)
(5,8,2)
(12,19,2)
(11,5,2)
(0,12,2)
(2,12,2)
-----------------------------------
(0,quirks)
(1,fn)
(2,compatible)
(3,RET)
(4,if (of_machine_is_compatible(quirks->compatible)
(5,of_machine_is_compatible(quirks->compatible)
(6,quirks->fn()
(7,while (quirks->compatible)
(8,quirks->compatible)
(9,quirks++)
(10,)
(11,quirks)
(12,quirks->compatible)
(13,break;)
(14,compatible)
(15,)
(16,quirks)
(17,quirks->fn)
(18,quirks)
(19,struct pdata_init *quirks)
(20,)
(21,if (quirks->fn)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^