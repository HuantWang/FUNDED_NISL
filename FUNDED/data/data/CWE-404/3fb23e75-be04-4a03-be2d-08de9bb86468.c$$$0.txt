-----label-----
1
-----code-----
void CWE401_Memory_Leak__int_malloc_63b_badSink(int * * dataPtr)
{
    int * data = *dataPtr;
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE401_Memory_Leak__int_malloc_63b_badSink(int * * dataPtr){    int * data = *dataPtr;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
void
CWE401_Memory_Leak__int_malloc_63b_badSink(int * * dataPtr)
CWE401_Memory_Leak__int_malloc_63b_badSink
int * * dataPtr
int
* * dataPtr
*
*
dataPtr
{    int * data = *dataPtr;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
int * data = *dataPtr;
int * data = *dataPtr;
int
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
;
-----joern-----
(1,0,0)
(3,0,0)
(3,2,0)
(4,2,0)
(0,3,0)
(6,3,0)
(0,5,0)
(1,6,1)
(3,0,1)
(7,3,1)
(0,5,1)
(0,1,1)
(0,5,2)
(3,0,2)
-----------------------------------
(0,*dataPtr)
(1,dataPtr)
(2,)
(3,* data = *dataPtr)
(4,data)
(5,int * * dataPtr)
(6,data)
(7,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^