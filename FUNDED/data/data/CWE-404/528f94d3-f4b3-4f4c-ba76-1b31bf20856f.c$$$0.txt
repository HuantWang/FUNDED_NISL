-----label-----
0
-----code-----
static int cciss_ioctl(struct block_device *bdev, fmode_t mode,
	unsigned int cmd, unsigned long arg)
{
	struct gendisk *disk = bdev->bd_disk;
	ctlr_info_t *h = get_host(disk);
	void __user *argp = (void __user *)arg;

	dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\n",
		cmd, arg);
	switch (cmd) {
	case CCISS_GETPCIINFO:
		return cciss_getpciinfo(h, argp);
	case CCISS_GETINTINFO:
		return cciss_getintinfo(h, argp);
	case CCISS_SETINTINFO:
		return cciss_setintinfo(h, argp);
	case CCISS_GETNODENAME:
		return cciss_getnodename(h, argp);
	case CCISS_SETNODENAME:
		return cciss_setnodename(h, argp);
	case CCISS_GETHEARTBEAT:
		return cciss_getheartbeat(h, argp);
	case CCISS_GETBUSTYPES:
		return cciss_getbustypes(h, argp);
	case CCISS_GETFIRMVER:
		return cciss_getfirmver(h, argp);
	case CCISS_GETDRIVVER:
		return cciss_getdrivver(h, argp);
	case CCISS_DEREGDISK:
	case CCISS_REGNEWD:
	case CCISS_REVALIDVOLS:
		return rebuild_lun_table(h, 0, 1);
	case CCISS_GETLUNINFO:
		return cciss_getluninfo(h, disk, argp);
	case CCISS_PASSTHRU:
		return cciss_passthru(h, argp);
	case CCISS_BIG_PASSTHRU:
		return cciss_bigpassthru(h, argp);

	/* scsi_cmd_blk_ioctl handles these, below, though some are not */
	/* very meaningful for cciss.  SG_IO is the main one people want. */

	case SG_GET_VERSION_NUM:
	case SG_SET_TIMEOUT:
	case SG_GET_TIMEOUT:
	case SG_GET_RESERVED_SIZE:
	case SG_SET_RESERVED_SIZE:
	case SG_EMULATED_HOST:
	case SG_IO:
	case SCSI_IOCTL_SEND_COMMAND:
		return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);

	/* scsi_cmd_blk_ioctl would normally handle these, below, but */
	/* they aren't a good fit for cciss, as CD-ROMs are */
	/* not supported, and we don't have any bus/target/lun */
	/* which we present to the kernel. */

	case CDROM_SEND_PACKET:
	case CDROMCLOSETRAY:
	case CDROMEJECT:
	case SCSI_IOCTL_GET_IDLUN:
	case SCSI_IOCTL_GET_BUS_NUMBER:
	default:
		return -ENOTTY;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
16,17
16,18
18,19
20,21
20,22
22,23
24,25
24,26
24,27
24,28
24,29
24,30
24,31
25,26
26,27
26,28
27,28
29,30
29,31
29,32
32,33
33,34
33,35
34,35
37,38
38,39
38,40
39,40
41,42
41,43
41,44
44,45
45,46
45,47
46,47
48,49
50,51
51,52
51,53
53,54
55,56
56,57
57,58
58,59
58,60
58,61
58,62
58,63
59,60
61,62
62,63
62,64
63,64
63,65
64,65
69,70
71,72
73,74
73,75
74,75
76,77
76,78
76,79
76,80
76,81
76,82
76,83
76,84
76,85
76,86
76,87
76,88
76,89
76,90
76,91
76,92
76,93
76,94
76,95
76,96
76,97
76,98
76,99
76,100
76,101
76,102
76,103
76,104
76,105
76,106
76,107
76,108
76,109
76,110
76,111
76,112
76,113
76,114
76,115
76,116
76,117
76,118
76,119
76,120
77,78
78,79
80,81
81,82
81,83
81,84
82,83
84,85
86,87
88,89
89,90
91,92
92,93
92,94
92,95
93,94
95,96
97,98
99,100
100,101
102,103
103,104
103,105
103,106
104,105
106,107
108,109
110,111
111,112
113,114
114,115
114,116
114,117
115,116
117,118
119,120
121,122
122,123
124,125
125,126
125,127
125,128
126,127
128,129
130,131
132,133
133,134
135,136
136,137
136,138
136,139
137,138
139,140
141,142
143,144
144,145
146,147
147,148
147,149
147,150
148,149
150,151
152,153
154,155
155,156
157,158
158,159
158,160
158,161
159,160
161,162
163,164
165,166
166,167
168,169
169,170
169,171
169,172
170,171
172,173
174,175
176,177
177,178
179,180
180,181
182,183
183,184
185,186
186,187
186,188
186,189
186,190
187,188
189,190
193,194
194,195
196,197
197,198
197,199
197,200
197,201
198,199
200,201
202,203
204,205
206,207
207,208
209,210
210,211
210,212
210,213
211,212
213,214
215,216
217,218
218,219
220,221
221,222
221,223
221,224
222,223
224,225
226,227
228,229
229,230
231,232
232,233
234,235
235,236
237,238
238,239
240,241
241,242
243,244
244,245
246,247
247,248
249,250
250,251
252,253
253,254
253,255
253,256
253,257
253,258
254,255
256,257
258,259
260,261
262,263
264,265
265,266
267,268
268,269
270,271
271,272
273,274
274,275
276,277
277,278
280,281
281,282
282,283
-----nextToken-----
2,4,7,9,10,13,15,17,19,21,23,28,30,31,35,36,40,42,43,47,49,52,54,60,65,66,67,68,70,72,75,79,83,85,87,90,94,96,98,101,105,107,109,112,116,118,120,123,127,129,131,134,138,140,142,145,149,151,153,156,160,162,164,167,171,173,175,178,181,184,188,190,191,192,195,199,201,203,205,208,212,214,216,219,223,225,227,230,233,236,239,242,245,248,251,255,257,259,261,263,266,269,272,275,278,279,283
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;ProblemStatement;ProblemStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;LiteralExpression;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;ReturnStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;CaseStatement;IdExpression;Name;DefaultStatement;ReturnStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static int cciss_ioctl(struct block_device *bdev, fmode_t mode,	unsigned int cmd, unsigned long arg){	struct gendisk *disk = bdev->bd_disk;	ctlr_info_t *h = get_host(disk);	void __user *argp = (void __user *)arg;	dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\n",		cmd, arg);	switch (cmd) {	case CCISS_GETPCIINFO:		return cciss_getpciinfo(h, argp);	case CCISS_GETINTINFO:		return cciss_getintinfo(h, argp);	case CCISS_SETINTINFO:		return cciss_setintinfo(h, argp);	case CCISS_GETNODENAME:		return cciss_getnodename(h, argp);	case CCISS_SETNODENAME:		return cciss_setnodename(h, argp);	case CCISS_GETHEARTBEAT:		return cciss_getheartbeat(h, argp);	case CCISS_GETBUSTYPES:		return cciss_getbustypes(h, argp);	case CCISS_GETFIRMVER:		return cciss_getfirmver(h, argp);	case CCISS_GETDRIVVER:		return cciss_getdrivver(h, argp);	case CCISS_DEREGDISK:	case CCISS_REGNEWD:	case CCISS_REVALIDVOLS:		return rebuild_lun_table(h, 0, 1);	case CCISS_GETLUNINFO:		return cciss_getluninfo(h, disk, argp);	case CCISS_PASSTHRU:		return cciss_passthru(h, argp);	case CCISS_BIG_PASSTHRU:		return cciss_bigpassthru(h, argp);	/* scsi_cmd_blk_ioctl handles these, below, though some are not */	/* very meaningful for cciss.  SG_IO is the main one people want. */	case SG_GET_VERSION_NUM:	case SG_SET_TIMEOUT:	case SG_GET_TIMEOUT:	case SG_GET_RESERVED_SIZE:	case SG_SET_RESERVED_SIZE:	case SG_EMULATED_HOST:	case SG_IO:	case SCSI_IOCTL_SEND_COMMAND:		return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);	/* scsi_cmd_blk_ioctl would normally handle these, below, but */	/* they aren't a good fit for cciss, as CD-ROMs are */	/* not supported, and we don't have any bus/target/lun */	/* which we present to the kernel. */	case CDROM_SEND_PACKET:	case CDROMCLOSETRAY:	case CDROMEJECT:	case SCSI_IOCTL_GET_IDLUN:	case SCSI_IOCTL_GET_BUS_NUMBER:	default:		return -ENOTTY;	}}
static int
cciss_ioctl(struct block_device *bdev, fmode_t mode,	unsigned int cmd, unsigned long arg)
cciss_ioctl
struct block_device *bdev
struct block_device
block_device
*bdev
*
bdev
fmode_t mode
fmode_t
fmode_t
mode
mode
unsigned int cmd
unsigned int
cmd
cmd
unsigned long arg
unsigned long
arg
arg
{	struct gendisk *disk = bdev->bd_disk;	ctlr_info_t *h = get_host(disk);	void __user *argp = (void __user *)arg;	dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\n",		cmd, arg);	switch (cmd) {	case CCISS_GETPCIINFO:		return cciss_getpciinfo(h, argp);	case CCISS_GETINTINFO:		return cciss_getintinfo(h, argp);	case CCISS_SETINTINFO:		return cciss_setintinfo(h, argp);	case CCISS_GETNODENAME:		return cciss_getnodename(h, argp);	case CCISS_SETNODENAME:		return cciss_setnodename(h, argp);	case CCISS_GETHEARTBEAT:		return cciss_getheartbeat(h, argp);	case CCISS_GETBUSTYPES:		return cciss_getbustypes(h, argp);	case CCISS_GETFIRMVER:		return cciss_getfirmver(h, argp);	case CCISS_GETDRIVVER:		return cciss_getdrivver(h, argp);	case CCISS_DEREGDISK:	case CCISS_REGNEWD:	case CCISS_REVALIDVOLS:		return rebuild_lun_table(h, 0, 1);	case CCISS_GETLUNINFO:		return cciss_getluninfo(h, disk, argp);	case CCISS_PASSTHRU:		return cciss_passthru(h, argp);	case CCISS_BIG_PASSTHRU:		return cciss_bigpassthru(h, argp);	/* scsi_cmd_blk_ioctl handles these, below, though some are not */	/* very meaningful for cciss.  SG_IO is the main one people want. */	case SG_GET_VERSION_NUM:	case SG_SET_TIMEOUT:	case SG_GET_TIMEOUT:	case SG_GET_RESERVED_SIZE:	case SG_SET_RESERVED_SIZE:	case SG_EMULATED_HOST:	case SG_IO:	case SCSI_IOCTL_SEND_COMMAND:		return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);	/* scsi_cmd_blk_ioctl would normally handle these, below, but */	/* they aren't a good fit for cciss, as CD-ROMs are */	/* not supported, and we don't have any bus/target/lun */	/* which we present to the kernel. */	case CDROM_SEND_PACKET:	case CDROMCLOSETRAY:	case CDROMEJECT:	case SCSI_IOCTL_GET_IDLUN:	case SCSI_IOCTL_GET_BUS_NUMBER:	default:		return -ENOTTY;	}}
struct gendisk *disk = bdev->bd_disk;
struct gendisk *disk = bdev->bd_disk;
struct gendisk
gendisk
*disk = bdev->bd_disk
*
disk
= bdev->bd_disk
bdev->bd_disk
bdev
bdev
bd_disk
ctlr_info_t *h = get_host(disk);
ctlr_info_t *h = get_host(disk);
ctlr_info_t
ctlr_info_t
*h = get_host(disk)
*
h
= get_host(disk)
get_host(disk)
get_host
get_host
disk
disk
void __user
void __user
void
__user
__user
r
*argp = (void __user *)arg;
dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\n",		cmd, arg);
dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\n",		cmd, arg)
dev_dbg
dev_dbg
&h->pdev->dev
h->pdev->dev
h->pdev
h
h
pdev
dev
"cciss_ioctl: Called with cmd=%x %lx\n"
cmd
cmd
arg
arg
switch (cmd) {	case CCISS_GETPCIINFO:		return cciss_getpciinfo(h, argp);	case CCISS_GETINTINFO:		return cciss_getintinfo(h, argp);	case CCISS_SETINTINFO:		return cciss_setintinfo(h, argp);	case CCISS_GETNODENAME:		return cciss_getnodename(h, argp);	case CCISS_SETNODENAME:		return cciss_setnodename(h, argp);	case CCISS_GETHEARTBEAT:		return cciss_getheartbeat(h, argp);	case CCISS_GETBUSTYPES:		return cciss_getbustypes(h, argp);	case CCISS_GETFIRMVER:		return cciss_getfirmver(h, argp);	case CCISS_GETDRIVVER:		return cciss_getdrivver(h, argp);	case CCISS_DEREGDISK:	case CCISS_REGNEWD:	case CCISS_REVALIDVOLS:		return rebuild_lun_table(h, 0, 1);	case CCISS_GETLUNINFO:		return cciss_getluninfo(h, disk, argp);	case CCISS_PASSTHRU:		return cciss_passthru(h, argp);	case CCISS_BIG_PASSTHRU:		return cciss_bigpassthru(h, argp);	/* scsi_cmd_blk_ioctl handles these, below, though some are not */	/* very meaningful for cciss.  SG_IO is the main one people want. */	case SG_GET_VERSION_NUM:	case SG_SET_TIMEOUT:	case SG_GET_TIMEOUT:	case SG_GET_RESERVED_SIZE:	case SG_SET_RESERVED_SIZE:	case SG_EMULATED_HOST:	case SG_IO:	case SCSI_IOCTL_SEND_COMMAND:		return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);	/* scsi_cmd_blk_ioctl would normally handle these, below, but */	/* they aren't a good fit for cciss, as CD-ROMs are */	/* not supported, and we don't have any bus/target/lun */	/* which we present to the kernel. */	case CDROM_SEND_PACKET:	case CDROMCLOSETRAY:	case CDROMEJECT:	case SCSI_IOCTL_GET_IDLUN:	case SCSI_IOCTL_GET_BUS_NUMBER:	default:		return -ENOTTY;	}
cmd
cmd
{	case CCISS_GETPCIINFO:		return cciss_getpciinfo(h, argp);	case CCISS_GETINTINFO:		return cciss_getintinfo(h, argp);	case CCISS_SETINTINFO:		return cciss_setintinfo(h, argp);	case CCISS_GETNODENAME:		return cciss_getnodename(h, argp);	case CCISS_SETNODENAME:		return cciss_setnodename(h, argp);	case CCISS_GETHEARTBEAT:		return cciss_getheartbeat(h, argp);	case CCISS_GETBUSTYPES:		return cciss_getbustypes(h, argp);	case CCISS_GETFIRMVER:		return cciss_getfirmver(h, argp);	case CCISS_GETDRIVVER:		return cciss_getdrivver(h, argp);	case CCISS_DEREGDISK:	case CCISS_REGNEWD:	case CCISS_REVALIDVOLS:		return rebuild_lun_table(h, 0, 1);	case CCISS_GETLUNINFO:		return cciss_getluninfo(h, disk, argp);	case CCISS_PASSTHRU:		return cciss_passthru(h, argp);	case CCISS_BIG_PASSTHRU:		return cciss_bigpassthru(h, argp);	/* scsi_cmd_blk_ioctl handles these, below, though some are not */	/* very meaningful for cciss.  SG_IO is the main one people want. */	case SG_GET_VERSION_NUM:	case SG_SET_TIMEOUT:	case SG_GET_TIMEOUT:	case SG_GET_RESERVED_SIZE:	case SG_SET_RESERVED_SIZE:	case SG_EMULATED_HOST:	case SG_IO:	case SCSI_IOCTL_SEND_COMMAND:		return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);	/* scsi_cmd_blk_ioctl would normally handle these, below, but */	/* they aren't a good fit for cciss, as CD-ROMs are */	/* not supported, and we don't have any bus/target/lun */	/* which we present to the kernel. */	case CDROM_SEND_PACKET:	case CDROMCLOSETRAY:	case CDROMEJECT:	case SCSI_IOCTL_GET_IDLUN:	case SCSI_IOCTL_GET_BUS_NUMBER:	default:		return -ENOTTY;	}
case CCISS_GETPCIINFO:
CCISS_GETPCIINFO
CCISS_GETPCIINFO
return cciss_getpciinfo(h, argp);
cciss_getpciinfo(h, argp)
cciss_getpciinfo
cciss_getpciinfo
h
h
argp
argp
case CCISS_GETINTINFO:
CCISS_GETINTINFO
CCISS_GETINTINFO
return cciss_getintinfo(h, argp);
cciss_getintinfo(h, argp)
cciss_getintinfo
cciss_getintinfo
h
h
argp
argp
case CCISS_SETINTINFO:
CCISS_SETINTINFO
CCISS_SETINTINFO
return cciss_setintinfo(h, argp);
cciss_setintinfo(h, argp)
cciss_setintinfo
cciss_setintinfo
h
h
argp
argp
case CCISS_GETNODENAME:
CCISS_GETNODENAME
CCISS_GETNODENAME
return cciss_getnodename(h, argp);
cciss_getnodename(h, argp)
cciss_getnodename
cciss_getnodename
h
h
argp
argp
case CCISS_SETNODENAME:
CCISS_SETNODENAME
CCISS_SETNODENAME
return cciss_setnodename(h, argp);
cciss_setnodename(h, argp)
cciss_setnodename
cciss_setnodename
h
h
argp
argp
case CCISS_GETHEARTBEAT:
CCISS_GETHEARTBEAT
CCISS_GETHEARTBEAT
return cciss_getheartbeat(h, argp);
cciss_getheartbeat(h, argp)
cciss_getheartbeat
cciss_getheartbeat
h
h
argp
argp
case CCISS_GETBUSTYPES:
CCISS_GETBUSTYPES
CCISS_GETBUSTYPES
return cciss_getbustypes(h, argp);
cciss_getbustypes(h, argp)
cciss_getbustypes
cciss_getbustypes
h
h
argp
argp
case CCISS_GETFIRMVER:
CCISS_GETFIRMVER
CCISS_GETFIRMVER
return cciss_getfirmver(h, argp);
cciss_getfirmver(h, argp)
cciss_getfirmver
cciss_getfirmver
h
h
argp
argp
case CCISS_GETDRIVVER:
CCISS_GETDRIVVER
CCISS_GETDRIVVER
return cciss_getdrivver(h, argp);
cciss_getdrivver(h, argp)
cciss_getdrivver
cciss_getdrivver
h
h
argp
argp
case CCISS_DEREGDISK:
CCISS_DEREGDISK
CCISS_DEREGDISK
case CCISS_REGNEWD:
CCISS_REGNEWD
CCISS_REGNEWD
case CCISS_REVALIDVOLS:
CCISS_REVALIDVOLS
CCISS_REVALIDVOLS
return rebuild_lun_table(h, 0, 1);
rebuild_lun_table(h, 0, 1)
rebuild_lun_table
rebuild_lun_table
h
h
0
1
case CCISS_GETLUNINFO:
CCISS_GETLUNINFO
CCISS_GETLUNINFO
return cciss_getluninfo(h, disk, argp);
cciss_getluninfo(h, disk, argp)
cciss_getluninfo
cciss_getluninfo
h
h
disk
disk
argp
argp
case CCISS_PASSTHRU:
CCISS_PASSTHRU
CCISS_PASSTHRU
return cciss_passthru(h, argp);
cciss_passthru(h, argp)
cciss_passthru
cciss_passthru
h
h
argp
argp
case CCISS_BIG_PASSTHRU:
CCISS_BIG_PASSTHRU
CCISS_BIG_PASSTHRU
return cciss_bigpassthru(h, argp);
cciss_bigpassthru(h, argp)
cciss_bigpassthru
cciss_bigpassthru
h
h
argp
argp
case SG_GET_VERSION_NUM:
SG_GET_VERSION_NUM
SG_GET_VERSION_NUM
case SG_SET_TIMEOUT:
SG_SET_TIMEOUT
SG_SET_TIMEOUT
case SG_GET_TIMEOUT:
SG_GET_TIMEOUT
SG_GET_TIMEOUT
case SG_GET_RESERVED_SIZE:
SG_GET_RESERVED_SIZE
SG_GET_RESERVED_SIZE
case SG_SET_RESERVED_SIZE:
SG_SET_RESERVED_SIZE
SG_SET_RESERVED_SIZE
case SG_EMULATED_HOST:
SG_EMULATED_HOST
SG_EMULATED_HOST
case SG_IO:
SG_IO
SG_IO
case SCSI_IOCTL_SEND_COMMAND:
SCSI_IOCTL_SEND_COMMAND
SCSI_IOCTL_SEND_COMMAND
return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp);
scsi_cmd_blk_ioctl(bdev, mode, cmd, argp)
scsi_cmd_blk_ioctl
scsi_cmd_blk_ioctl
bdev
bdev
mode
mode
cmd
cmd
argp
argp
case CDROM_SEND_PACKET:
CDROM_SEND_PACKET
CDROM_SEND_PACKET
case CDROMCLOSETRAY:
CDROMCLOSETRAY
CDROMCLOSETRAY
case CDROMEJECT:
CDROMEJECT
CDROMEJECT
case SCSI_IOCTL_GET_IDLUN:
SCSI_IOCTL_GET_IDLUN
SCSI_IOCTL_GET_IDLUN
case SCSI_IOCTL_GET_BUS_NUMBER:
SCSI_IOCTL_GET_BUS_NUMBER
SCSI_IOCTL_GET_BUS_NUMBER
default:
return -ENOTTY;
-ENOTTY
ENOTTY
ENOTTY
-----joern-----
(60,2,0)
(58,92,0)
(102,25,0)
(86,53,0)
(103,14,0)
(92,14,0)
(45,66,0)
(5,29,0)
(126,66,0)
(93,59,0)
(79,123,0)
(92,44,0)
(92,40,0)
(63,5,0)
(6,66,0)
(91,66,0)
(85,118,0)
(5,14,0)
(47,103,0)
(56,32,0)
(22,34,0)
(110,34,0)
(9,66,0)
(65,60,0)
(111,66,0)
(93,70,0)
(53,44,0)
(122,66,0)
(105,52,0)
(2,66,0)
(106,25,0)
(42,35,0)
(12,106,0)
(112,56,0)
(52,44,0)
(106,21,0)
(49,66,0)
(50,107,0)
(76,14,0)
(19,35,0)
(93,36,0)
(17,14,0)
(124,66,0)
(121,103,0)
(37,66,0)
(34,41,0)
(100,28,0)
(62,87,0)
(71,66,0)
(24,14,0)
(50,14,0)
(29,66,0)
(7,78,0)
(15,66,0)
(93,72,0)
(39,66,0)
(26,66,0)
(78,44,0)
(17,44,0)
(96,66,0)
(52,14,0)
(53,108,0)
(93,81,0)
(32,56,0)
(99,103,0)
(84,1,0)
(118,37,0)
(18,66,0)
(93,108,0)
(0,106,0)
(4,66,0)
(107,50,0)
(64,66,0)
(97,92,0)
(80,66,0)
(72,66,0)
(78,56,0)
(51,103,0)
(123,36,0)
(74,76,0)
(93,87,0)
(98,66,0)
(116,66,0)
(82,66,0)
(55,118,0)
(44,21,0)
(93,2,0)
(17,81,0)
(81,66,0)
(16,53,0)
(83,66,0)
(10,62,0)
(50,41,0)
(27,14,0)
(94,76,0)
(1,44,0)
(93,29,0)
(14,21,0)
(1,96,0)
(31,66,0)
(70,66,0)
(77,21,0)
(1,14,0)
(114,66,0)
(54,27,0)
(57,0,0)
(73,17,0)
(93,37,0)
(103,127,0)
(93,23,0)
(40,66,0)
(61,66,0)
(34,32,0)
(35,39,0)
(23,66,0)
(69,62,0)
(14,50,0)
(5,44,0)
(76,44,0)
(3,66,0)
(68,123,0)
(95,52,0)
(34,43,0)
(25,127,0)
(11,21,0)
(62,44,0)
(59,66,0)
(123,14,0)
(103,43,0)
(93,39,0)
(104,78,0)
(44,0,0)
(93,4,0)
(62,14,0)
(108,66,0)
(67,66,0)
(27,4,0)
(56,78,0)
(125,5,0)
(27,44,0)
(118,14,0)
(33,66,0)
(103,70,0)
(46,21,0)
(28,23,0)
(115,66,0)
(25,106,0)
(76,106,0)
(76,72,0)
(32,34,0)
(109,50,0)
(35,44,0)
(123,44,0)
(13,17,0)
(30,1,0)
(0,44,0)
(93,96,0)
(38,66,0)
(34,21,0)
(20,27,0)
(119,66,0)
(117,66,0)
(103,90,0)
(52,59,0)
(118,44,0)
(75,35,0)
(87,66,0)
(120,60,0)
(36,66,0)
(88,21,0)
(48,34,0)
(93,40,0)
(101,44,0)
(60,44,0)
(53,14,0)
(113,25,0)
(60,14,0)
(89,76,0)
(24,44,1)
(25,113,1)
(102,12,1)
(93,4,1)
(47,99,1)
(35,75,1)
(29,5,1)
(2,60,1)
(5,44,1)
(22,48,1)
(110,22,1)
(93,81,1)
(93,37,1)
(56,112,1)
(36,123,1)
(8,34,1)
(40,92,1)
(93,87,1)
(1,84,1)
(93,23,1)
(44,0,1)
(93,40,1)
(37,118,1)
(74,94,1)
(51,47,1)
(85,8,1)
(76,106,1)
(103,14,1)
(106,25,1)
(108,53,1)
(93,108,1)
(50,109,1)
(17,14,1)
(58,97,1)
(53,14,1)
(76,14,1)
(1,44,1)
(100,8,1)
(52,44,1)
(70,103,1)
(69,10,1)
(27,14,1)
(55,85,1)
(95,105,1)
(62,14,1)
(53,16,1)
(39,35,1)
(93,59,1)
(105,8,1)
(17,44,1)
(81,17,1)
(84,30,1)
(109,24,1)
(27,20,1)
(72,76,1)
(93,72,1)
(75,19,1)
(103,43,1)
(118,14,1)
(34,110,1)
(4,27,1)
(86,8,1)
(101,106,1)
(0,106,1)
(63,125,1)
(118,55,1)
(112,78,1)
(52,14,1)
(65,120,1)
(13,73,1)
(59,52,1)
(93,29,1)
(73,8,1)
(56,78,1)
(35,44,1)
(17,13,1)
(93,96,1)
(68,79,1)
(113,102,1)
(50,41,1)
(60,44,1)
(123,68,1)
(93,2,1)
(5,63,1)
(23,28,1)
(103,121,1)
(103,127,1)
(78,44,1)
(92,58,1)
(97,8,1)
(118,44,1)
(14,50,1)
(42,8,1)
(89,74,1)
(93,36,1)
(57,101,1)
(25,127,1)
(93,39,1)
(7,14,1)
(79,8,1)
(5,14,1)
(76,44,1)
(103,90,1)
(60,14,1)
(78,104,1)
(34,41,1)
(120,8,1)
(50,107,1)
(93,70,1)
(60,65,1)
(94,8,1)
(104,7,1)
(123,14,1)
(34,43,1)
(19,42,1)
(87,62,1)
(27,44,1)
(32,56,1)
(52,95,1)
(92,14,1)
(123,44,1)
(62,69,1)
(54,8,1)
(92,44,1)
(20,54,1)
(0,57,1)
(121,51,1)
(28,100,1)
(30,8,1)
(10,8,1)
(34,32,1)
(16,86,1)
(96,1,1)
(62,44,1)
(99,8,1)
(53,44,1)
(125,8,1)
(1,14,1)
(76,89,1)
(48,32,1)
(76,44,2)
(106,25,2)
(84,8,2)
(60,14,2)
(2,8,2)
(1,14,2)
(1,44,2)
(118,14,2)
(93,81,2)
(17,8,2)
(118,44,2)
(53,44,2)
(50,107,2)
(79,8,2)
(93,72,2)
(92,8,2)
(93,39,2)
(93,108,2)
(87,8,2)
(1,8,2)
(60,44,2)
(14,50,2)
(103,14,2)
(94,8,2)
(62,14,2)
(93,40,2)
(42,8,2)
(93,2,2)
(93,23,2)
(27,8,2)
(93,87,2)
(118,8,2)
(53,8,2)
(4,8,2)
(63,8,2)
(93,96,2)
(5,44,2)
(40,8,2)
(51,8,2)
(60,8,2)
(75,8,2)
(125,8,2)
(105,8,2)
(93,36,2)
(30,8,2)
(19,8,2)
(65,8,2)
(103,127,2)
(93,29,2)
(23,8,2)
(59,8,2)
(52,8,2)
(92,44,2)
(10,8,2)
(93,4,2)
(50,41,2)
(35,8,2)
(29,8,2)
(78,44,2)
(103,90,2)
(81,8,2)
(0,106,2)
(72,8,2)
(27,14,2)
(54,8,2)
(93,59,2)
(103,8,2)
(13,8,2)
(108,8,2)
(34,43,2)
(55,8,2)
(27,44,2)
(32,56,2)
(62,8,2)
(52,44,2)
(76,106,2)
(123,44,2)
(70,8,2)
(73,8,2)
(56,78,2)
(86,8,2)
(47,8,2)
(34,32,2)
(93,37,2)
(74,8,2)
(35,44,2)
(100,8,2)
(69,8,2)
(120,8,2)
(121,8,2)
(99,8,2)
(76,14,2)
(97,8,2)
(95,8,2)
(92,14,2)
(52,14,2)
(5,8,2)
(53,14,2)
(28,8,2)
(36,8,2)
(93,70,2)
(25,127,2)
(62,44,2)
(20,8,2)
(89,8,2)
(16,8,2)
(68,8,2)
(44,0,2)
(58,8,2)
(123,8,2)
(96,8,2)
(17,44,2)
(37,8,2)
(76,8,2)
(103,43,2)
(85,8,2)
(39,8,2)
(123,14,2)
(34,41,2)
(5,14,2)
(17,14,2)
-----------------------------------
(0,get_host(disk)
(1,cciss_getnodename(h, argp)
(2,return cciss_getheartbeat(h, argp)
(3,case SCSI_IOCTL_GET_IDLUN:)
(4,return cciss_getdrivver(h, argp)
(5,cciss_setnodename(h, argp)
(6,case CCISS_GETBUSTYPES:)
(7,h)
(8,cmd)
(9,case CCISS_REVALIDVOLS:)
(10,h)
(11,disk)
(12,disk)
(13,argp)
(14,*argp = (void __user *)
(15,case CCISS_GETDRIVVER:)
(16,argp)
(17,cciss_getpciinfo(h, argp)
(18,case CCISS_GETNODENAME:)
(19,0)
(20,argp)
(21,)
(22,cmd)
(23,return -ENOTTY;)
(24,argp)
(25,bdev->bd_disk)
(26,case CCISS_PASSTHRU:)
(27,cciss_getdrivver(h, argp)
(28,-ENOTTY)
(29,return cciss_setnodename(h, argp)
(30,h)
(31,case CCISS_SETNODENAME:)
(32,&h->pdev->dev)
(33,case CDROMCLOSETRAY:)
(34,dev_dbg(&h->pdev->dev, "cciss_ioctl: Called with cmd=%x %lx\\n",\n\\n\\t\\tcmd, arg)
(35,rebuild_lun_table(h, 0, 1)
(36,return cciss_getintinfo(h, argp)
(37,return cciss_bigpassthru(h, argp)
(38,case CCISS_GETFIRMVER:)
(39,return rebuild_lun_table(h, 0, 1)
(40,return cciss_setintinfo(h, argp)
(41,unsigned long arg)
(42,h)
(43,unsigned int cmd)
(44,*h = get_host(disk)
(45,case SG_GET_TIMEOUT:)
(46,h)
(47,mode)
(48,"cciss_ioctl: Called with cmd=%x %lx\\n")
(49,case CCISS_GETLUNINFO:)
(50,(void __user *)
(51,cmd)
(52,cciss_passthru(h, argp)
(53,cciss_getfirmver(h, argp)
(54,h)
(55,argp)
(56,h->pdev->dev)
(57,disk)
(58,argp)
(59,return cciss_passthru(h, argp)
(60,cciss_getheartbeat(h, argp)
(61,case SG_EMULATED_HOST:)
(62,cciss_getbustypes(h, argp)
(63,argp)
(64,case CDROMEJECT:)
(65,argp)
(66,)
(67,case CDROM_SEND_PACKET:)
(68,argp)
(69,argp)
(70,return scsi_cmd_blk_ioctl(bdev, mode, cmd, argp)
(71,case SG_IO:)
(72,return cciss_getluninfo(h, disk, argp)
(73,h)
(74,disk)
(75,1)
(76,cciss_getluninfo(h, disk, argp)
(77,argp)
(78,h->pdev)
(79,h)
(80,case SG_SET_RESERVED_SIZE:)
(81,return cciss_getpciinfo(h, argp)
(82,case CCISS_GETPCIINFO:)
(83,case SCSI_IOCTL_SEND_COMMAND:)
(84,argp)
(85,h)
(86,h)
(87,return cciss_getbustypes(h, argp)
(88,switch (cmd)
(89,argp)
(90,fmode_t mode)
(91,default:)
(92,cciss_setintinfo(h, argp)
(93,RET)
(94,h)
(95,argp)
(96,return cciss_getnodename(h, argp)
(97,h)
(98,case CCISS_GETHEARTBEAT:)
(99,bdev)
(100,ENOTTY)
(101,h)
(102,bdev)
(103,scsi_cmd_blk_ioctl(bdev, mode, cmd, argp)
(104,pdev)
(105,h)
(106,*disk = bdev->bd_disk)
(107,void __user *)
(108,return cciss_getfirmver(h, argp)
(109,arg)
(110,arg)
(111,case CCISS_SETINTINFO:)
(112,dev)
(113,bd_disk)
(114,case CCISS_GETINTINFO:)
(115,case SG_SET_TIMEOUT:)
(116,case SCSI_IOCTL_GET_BUS_NUMBER:)
(117,case CCISS_DEREGDISK:)
(118,cciss_bigpassthru(h, argp)
(119,case SG_GET_RESERVED_SIZE:)
(120,h)
(121,argp)
(122,case CCISS_REGNEWD:)
(123,cciss_getintinfo(h, argp)
(124,case CCISS_BIG_PASSTHRU:)
(125,h)
(126,case SG_GET_VERSION_NUM:)
(127,struct block_device *bdev)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^