-----label-----
0
-----code-----
static FILE * goodB2GSource(FILE * data)
{
    /* POTENTIAL FLAW: Open a file without closing it */
    data = fopen("BadSource_fopen.txt", "w+");
    return data;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
14,15
15,16
15,17
16,17
18,19
18,20
18,21
19,20
23,24
24,25
-----nextToken-----
3,5,6,9,11,12,17,20,21,22,25
-----computeFrom-----
15,16
15,17
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static FILE * goodB2GSource(FILE * data){    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    return data;}
static FILE
FILE
* goodB2GSource(FILE * data)
*
goodB2GSource
FILE * data
FILE
FILE
* data
*
data
{    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    return data;}
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
return data;
data
data
-----joern-----
(4,9,0)
(6,7,0)
(4,2,0)
(4,5,0)
(7,4,0)
(1,9,0)
(7,2,0)
(3,4,0)
(8,9,0)
(0,7,0)
(9,4,0)
(7,5,0)
(9,8,1)
(7,4,1)
(8,1,1)
(1,3,1)
(0,7,1)
(7,5,1)
(4,9,1)
(6,4,1)
(7,6,1)
(4,5,1)
(7,5,2)
(4,9,2)
(0,7,2)
(4,5,2)
(7,4,2)
-----------------------------------
(0,RET)
(1,"BadSource_fopen.txt")
(2,)
(3,data)
(4,data = fopen("BadSource_fopen.txt", "w+")
(5,FILE * data)
(6,data)
(7,return data;)
(8,"w+")
(9,fopen("BadSource_fopen.txt", "w+")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^