-----label-----
1
-----code-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_52c_badSink(char * data)
{
    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the
     * memory block not at the start of the buffer */
    for (; *data != '\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
11,13
11,14
11,15
13,14
13,15
14,15
15,16
18,19
19,20
21,22
22,23
22,24
23,24
23,25
24,25
25,26
27,28
29,30
29,31
30,31
31,32
31,33
32,33
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,6,8,9,12,16,17,20,26,28,33,34,35,39,41
-----computeFrom-----
13,14
13,15
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ForStatement;NullStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_52c_badSink(char * data){    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
void
CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_52c_badSink(char * data)
CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_52c_badSink
char * data
char
* data
*
data
{    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
;
*data != '\0'
*data
data
data
'\0'
data++
data
data
{        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }
*data == SEARCH_CHAR
*data
data
data
SEARCH_CHAR
SEARCH_CHAR
{            printLine("We have a match!");            break;        }
printLine("We have a match!");
printLine("We have a match!")
printLine
printLine
"We have a match!"
break;
free(data);
free(data)
free
free
data
data
-----joern-----
(13,21,0)
(21,0,0)
(15,9,0)
(6,0,0)
(2,3,0)
(21,8,0)
(7,8,0)
(16,6,0)
(6,14,0)
(4,12,0)
(11,1,0)
(18,17,0)
(19,14,0)
(12,0,0)
(17,3,0)
(5,0,0)
(8,21,0)
(20,5,0)
(12,1,0)
(14,6,0)
(6,0,1)
(18,8,1)
(4,14,1)
(14,6,1)
(2,17,1)
(5,20,1)
(21,13,1)
(6,16,1)
(10,12,1)
(8,7,1)
(21,0,1)
(7,21,1)
(12,4,1)
(8,21,1)
(17,18,1)
(14,19,1)
(5,0,1)
(4,2,1)
(20,8,1)
(12,0,1)
(13,14,1)
(16,5,1)
(19,6,1)
(17,8,2)
(18,8,2)
(19,8,2)
(5,0,2)
(16,8,2)
(7,14,2)
(6,8,2)
(6,0,2)
(5,8,2)
(14,8,2)
(20,8,2)
(21,14,2)
(12,0,2)
(8,21,2)
(14,6,2)
(2,8,2)
(8,14,2)
(21,0,2)
(13,14,2)
-----------------------------------
(0,char * data)
(1,)
(2,break;)
(3,)
(4,data)
(5,data++)
(6,*data)
(7,SEARCH_CHAR)
(8,*data == SEARCH_CHAR)
(9,)
(10,RET)
(11,for (; *data != \'\\0\'; data++)
(12,free(data)
(13,data)
(14,*data != \'\\0\')
(15,if (*data == SEARCH_CHAR)
(16,data)
(17,printLine("We have a match!")
(18,"We have a match!")
(19,\'\\0\')
(20,data)
(21,*data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^