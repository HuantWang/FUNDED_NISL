-----label-----
0
-----code-----
static void goodB2G()
{
    wchar_t * data;
    data = (wchar_t *)malloc(100*sizeof(wchar_t));
    data[0] = L'\0';
    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */
    wcscpy(data, BAD_SOURCE_FIXED_STRING);
    CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
16,18
17,18
17,19
19,20
21,22
21,23
22,23
24,25
24,26
26,27
27,28
27,29
30,31
31,32
31,33
32,33
32,34
33,34
37,38
38,39
38,40
38,41
39,40
41,42
43,44
45,46
46,47
46,48
47,48
49,50
-----nextToken-----
2,4,8,10,11,15,18,20,23,25,28,29,34,35,36,40,42,44,48,50
-----computeFrom-----
13,14
13,15
24,25
24,26
31,32
31,33
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;Pointer;FunctionCallExpression;IdExpression;Name;BinaryExpression;LiteralExpression;TypeIdExpression;TypeId;SimpleDeclSpecifier;Declarator;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    data[0] = L'\0';    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */    wcscpy(data, BAD_SOURCE_FIXED_STRING);    CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data);}
static void
goodB2G()
goodB2G
{    wchar_t * data;    data = (wchar_t *)malloc(100*sizeof(wchar_t));    data[0] = L'\0';    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */    wcscpy(data, BAD_SOURCE_FIXED_STRING);    CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
data = (wchar_t *)malloc(100*sizeof(wchar_t));
data = (wchar_t *)malloc(100*sizeof(wchar_t))
data
data
(wchar_t *)malloc(100*sizeof(wchar_t))
wchar_t *
wchar_t
*
*
malloc(100*sizeof(wchar_t))
malloc
malloc
100*sizeof(wchar_t)
100
sizeof(wchar_t)
wchar_t
wchar_t

data[0] = L'\0';
data[0] = L'\0'
data[0]
data
data
0
L'\0'
wcscpy(data, BAD_SOURCE_FIXED_STRING);
wcscpy(data, BAD_SOURCE_FIXED_STRING)
wcscpy
wcscpy
data
data
BAD_SOURCE_FIXED_STRING
BAD_SOURCE_FIXED_STRING
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data);
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data)
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink
data
data
-----joern-----
(6,12,0)
(7,0,0)
(5,8,0)
(4,6,0)
(4,16,0)
(11,0,0)
(12,15,0)
(0,10,0)
(10,12,0)
(16,4,0)
(15,12,0)
(17,4,0)
(1,16,0)
(3,10,0)
(14,8,0)
(2,10,0)
(6,4,0)
(12,10,0)
(9,3,0)
(3,8,0)
(0,8,0)
(10,8,0)
(12,6,0)
(13,3,1)
(3,10,1)
(9,0,1)
(6,4,1)
(3,9,1)
(0,10,1)
(14,10,1)
(0,11,1)
(7,14,1)
(1,17,1)
(10,12,1)
(12,6,1)
(4,16,1)
(16,1,1)
(11,7,1)
(12,15,1)
(17,2,1)
(6,4,2)
(12,15,2)
(4,16,2)
(0,10,2)
(10,12,2)
(3,10,2)
(12,6,2)
-----------------------------------
(0,wcscpy(data, BAD_SOURCE_FIXED_STRING)
(1,wchar_t)
(2,data)
(3,CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_54b_goodB2GSink(data)
(4,100*sizeof(wchar_t)
(5,data)
(6,malloc(100*sizeof(wchar_t)
(7,data)
(8,)
(9,data)
(10,data = (wchar_t *)
(11,BAD_SOURCE_FIXED_STRING)
(12,(wchar_t *)
(13,RET)
(14,'\\0')
(15,wchar_t *)
(16,sizeof(wchar_t)
(17,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^