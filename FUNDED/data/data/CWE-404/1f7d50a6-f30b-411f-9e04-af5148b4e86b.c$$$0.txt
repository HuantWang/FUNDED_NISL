-----label-----
0
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_66b_goodG2BSink(twoIntsStruct * dataArray[])
{
    twoIntsStruct * data = dataArray[2];
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
8,11
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
21,23
22,23
25,26
26,27
26,28
27,28
29,30
30,31
30,32
31,32
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,7,9,10,11,16,18,19,23,24,28,32,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_66b_goodG2BSink(twoIntsStruct * dataArray[]){    twoIntsStruct * data = dataArray[2];    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_66b_goodG2BSink(twoIntsStruct * dataArray[])
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_66b_goodG2BSink
twoIntsStruct * dataArray[]
twoIntsStruct
twoIntsStruct
* dataArray[]
*
dataArray
[]
{    twoIntsStruct * data = dataArray[2];    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
twoIntsStruct * data = dataArray[2];
twoIntsStruct * data = dataArray[2];
twoIntsStruct
twoIntsStruct
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(6,3,0)
(7,15,0)
(9,6,0)
(1,12,0)
(13,3,0)
(11,12,0)
(8,3,0)
(12,1,0)
(6,7,0)
(4,15,0)
(1,13,0)
(2,12,0)
(7,3,0)
(15,14,0)
(15,7,0)
(0,15,0)
(13,1,0)
(10,7,0)
(12,7,0)
(15,4,1)
(9,13,1)
(6,7,1)
(12,7,1)
(12,11,1)
(1,12,1)
(5,6,1)
(13,1,1)
(2,7,1)
(0,10,1)
(6,9,1)
(15,14,1)
(4,0,1)
(7,15,1)
(11,2,1)
(15,14,2)
(1,12,2)
(12,7,2)
(6,7,2)
(7,15,2)
(13,1,2)
-----------------------------------
(0,dataArray)
(1,&data[0])
(2,data)
(3,)
(4,2)
(5,RET)
(6,free(data)
(7,* data = dataArray[2])
(8,data)
(9,data)
(10,data)
(11,0)
(12,data[0])
(13,printStructLine(&data[0])
(14,twoIntsStruct * dataArray[])
(15,dataArray[2])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^