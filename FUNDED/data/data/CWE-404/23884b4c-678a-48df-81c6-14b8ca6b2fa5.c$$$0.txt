-----label-----
0
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_goodG2BSink(char * * dataPtr)
{
    char * data = *dataPtr;
    printLine(data);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,25,27,31,33
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_goodG2BSink(char * * dataPtr){    char * data = *dataPtr;    printLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_goodG2BSink(char * * dataPtr)
CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_goodG2BSink
char * * dataPtr
char
* * dataPtr
*
*
dataPtr
{    char * data = *dataPtr;    printLine(data);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
char * data = *dataPtr;
char * data = *dataPtr;
char
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
printLine(data);
printLine(data)
printLine
printLine
data
data
free(data);
free(data)
free
free
data
data
-----joern-----
(10,11,0)
(3,10,0)
(0,11,0)
(11,7,0)
(5,7,0)
(4,11,0)
(10,7,0)
(8,4,0)
(9,11,0)
(4,7,0)
(11,0,0)
(0,6,0)
(1,0,0)
(1,9,1)
(2,10,1)
(4,11,1)
(0,6,1)
(0,1,1)
(11,0,1)
(3,4,1)
(10,3,1)
(8,11,1)
(10,11,1)
(4,8,1)
(10,11,2)
(4,11,2)
(11,0,2)
(0,6,2)
-----------------------------------
(0,*dataPtr)
(1,dataPtr)
(2,RET)
(3,data)
(4,printLine(data)
(5,data)
(6,char * * dataPtr)
(7,)
(8,data)
(9,data)
(10,free(data)
(11,* data = *dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^