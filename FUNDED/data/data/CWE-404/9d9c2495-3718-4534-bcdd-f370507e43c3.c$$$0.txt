-----label-----
1
-----code-----
static void badSink()
{
    wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;
    /* POTENTIAL FLAW: No deallocation */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
-----nextToken-----
2,4,8,10,11,14,15
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;NullStatement;
-----ast_node-----
static void badSink(){    wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
static void
badSink()
badSink
{    wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;    /* POTENTIAL FLAW: No deallocation */    ; /* empty statement needed for some flow variants */}
wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;
wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;
wchar_t
* data = CWE401_Memory_Leak__wchar_t_malloc_45_badData
*
data
= CWE401_Memory_Leak__wchar_t_malloc_45_badData
CWE401_Memory_Leak__wchar_t_malloc_45_badData
CWE401_Memory_Leak__wchar_t_malloc_45_badData
;
-----joern-----
(5,3,0)
(3,2,0)
(4,2,0)
(1,3,0)
(0,3,1)
(3,5,1)
(5,1,1)
-----------------------------------
(0,RET)
(1,data)
(2,)
(3,* data = CWE401_Memory_Leak__wchar_t_malloc_45_badData)
(4,data)
(5,CWE401_Memory_Leak__wchar_t_malloc_45_badData)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^