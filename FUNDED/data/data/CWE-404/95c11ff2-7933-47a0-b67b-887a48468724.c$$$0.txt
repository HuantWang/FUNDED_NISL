-----label-----
1
-----code-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_54e_badSink(char * data)
{
    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the
     * memory block not at the start of the buffer */
    for (; *data != '\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
11,13
11,14
11,15
13,14
13,15
14,15
15,16
18,19
19,20
21,22
22,23
22,24
23,24
23,25
24,25
25,26
27,28
29,30
29,31
30,31
31,32
31,33
32,33
36,37
37,38
37,39
38,39
40,41
-----nextToken-----
2,4,6,8,9,12,16,17,20,26,28,33,34,35,39,41
-----computeFrom-----
13,14
13,15
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ForStatement;NullStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_54e_badSink(char * data){    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
void
CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_54e_badSink(char * data)
CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_54e_badSink
char * data
char
* data
*
data
{    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
for (; *data != '\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
;
*data != '\0'
*data
data
data
'\0'
data++
data
data
{        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }
*data == SEARCH_CHAR
*data
data
data
SEARCH_CHAR
SEARCH_CHAR
{            printLine("We have a match!");            break;        }
printLine("We have a match!");
printLine("We have a match!")
printLine
printLine
"We have a match!"
break;
free(data);
free(data)
free
free
data
data
-----joern-----
(3,1,0)
(20,3,0)
(7,20,0)
(13,5,0)
(15,10,0)
(11,18,0)
(3,20,0)
(9,19,0)
(17,21,0)
(4,18,0)
(9,1,0)
(14,11,0)
(6,9,0)
(12,3,0)
(2,19,0)
(18,11,0)
(5,1,0)
(10,21,0)
(8,0,0)
(11,1,0)
(11,14,1)
(13,18,1)
(18,11,1)
(17,10,1)
(10,15,1)
(18,4,1)
(20,3,1)
(6,17,1)
(4,11,1)
(14,20,1)
(12,5,1)
(3,12,1)
(9,1,1)
(11,1,1)
(3,1,1)
(20,7,1)
(5,13,1)
(5,1,1)
(16,9,1)
(7,3,1)
(9,6,1)
(6,20,1)
(15,18,1)
(3,1,2)
(20,18,2)
(17,18,2)
(3,18,2)
(18,11,2)
(11,20,2)
(12,18,2)
(7,18,2)
(11,1,2)
(5,18,2)
(4,20,2)
(9,1,2)
(20,3,2)
(15,18,2)
(18,20,2)
(13,18,2)
(5,1,2)
(14,20,2)
(10,18,2)
-----------------------------------
(0,)
(1,char * data)
(2,for (; *data != \'\\0\'; data++)
(3,*data)
(4,SEARCH_CHAR)
(5,data++)
(6,data)
(7,\'\\0\')
(8,if (*data == SEARCH_CHAR)
(9,free(data)
(10,printLine("We have a match!")
(11,*data)
(12,data)
(13,data)
(14,data)
(15,"We have a match!")
(16,RET)
(17,break;)
(18,*data == SEARCH_CHAR)
(19,)
(20,*data != \'\\0\')
(21,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^