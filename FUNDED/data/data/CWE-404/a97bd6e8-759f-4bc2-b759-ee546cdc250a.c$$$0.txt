-----label-----
0
-----code-----
struct mapped_device *dm_get_from_kobject(struct kobject *kobj)
{
	struct mapped_device *md;

	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);

	spin_lock(&_minor_lock);
	if (test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md)) {
		md = NULL;
		goto out;
	}
	dm_get(md);
out:
	spin_unlock(&_minor_lock);

	return md;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
7,8
7,9
8,9
10,11
10,12
13,14
13,15
13,16
13,17
13,18
13,19
13,20
14,15
15,16
15,17
16,17
18,19
18,20
21,22
22,23
23,24
23,25
24,25
26,27
27,28
27,29
30,31
30,32
31,32
31,33
32,33
32,34
32,35
33,34
35,36
37,38
38,39
38,40
39,40
42,43
42,44
43,44
45,46
47,48
47,49
48,49
49,50
49,51
50,51
52,53
54,55
56,57
57,58
57,59
58,59
60,61
62,63
62,64
64,65
65,66
65,67
66,67
68,69
69,70
71,72
72,73
-----nextToken-----
3,5,6,9,11,12,17,19,20,25,28,29,34,36,40,41,44,46,51,53,55,59,61,63,67,70,73
-----computeFrom-----
31,32
31,33
49,50
49,51
-----guardedBy-----
46,51
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;ElaboratedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ProblemStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Declarator;ReferenceOperator;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;GotoStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
struct mapped_device *dm_get_from_kobject(struct kobject *kobj){	struct mapped_device *md;	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);	spin_lock(&_minor_lock);	if (test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md)) {		md = NULL;		goto out;	}	dm_get(md);out:	spin_unlock(&_minor_lock);	return md;}
struct mapped_device
mapped_device
*dm_get_from_kobject(struct kobject *kobj)
*
dm_get_from_kobject
struct kobject *kobj
struct kobject
kobject
*kobj
*
kobj
{	struct mapped_device *md;	md = container_of(kobj, struct mapped_device, kobj_holder.kobj);	spin_lock(&_minor_lock);	if (test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md)) {		md = NULL;		goto out;	}	dm_get(md);out:	spin_unlock(&_minor_lock);	return md;}
struct mapped_device *md;
struct mapped_device *md;
struct mapped_device
mapped_device
*md
*
md
md = container_of(kobj, struct mapped_device, kobj_holder.kobj);
spin_lock(&_minor_lock);
spin_lock(&_minor_lock);
spin_lock
spin_lock
(&_minor_lock)
&_minor_lock
&
_minor_lock
if (test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md)) {		md = NULL;		goto out;	}
test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md)
test_bit(DMF_FREEING, &md->flags)
test_bit
test_bit
DMF_FREEING
DMF_FREEING
&md->flags
md->flags
md
md
flags
dm_deleting_md(md)
dm_deleting_md
dm_deleting_md
md
md
{		md = NULL;		goto out;	}
md = NULL;
md = NULL
md
md
NULL
NULL
goto out;
out
dm_get(md);
dm_get(md)
dm_get
dm_get
md
md
out:	spin_unlock(&_minor_lock);
out
spin_unlock(&_minor_lock);
spin_unlock(&_minor_lock)
spin_unlock
spin_unlock
&_minor_lock
_minor_lock
_minor_lock
return md;
md
md
-----joern-----
(22,16,0)
(5,17,0)
(1,4,0)
(12,4,0)
(24,0,0)
(21,0,0)
(4,17,0)
(20,0,0)
(15,11,0)
(4,0,0)
(27,0,0)
(21,11,0)
(23,22,0)
(16,18,0)
(11,21,0)
(16,22,0)
(28,20,0)
(3,6,0)
(13,25,0)
(26,10,0)
(18,16,0)
(2,25,0)
(10,26,0)
(2,18,0)
(18,2,0)
(8,17,0)
(19,0,0)
(7,10,0)
(17,6,0)
(26,0,0)
(14,18,0)
(25,2,0)
(9,25,0)
(11,15,1)
(8,5,1)
(4,17,1)
(20,28,1)
(14,26,1)
(25,13,1)
(9,14,1)
(12,21,1)
(5,16,1)
(23,18,1)
(2,25,1)
(1,4,1)
(4,12,1)
(13,9,1)
(26,10,1)
(22,23,1)
(28,16,1)
(3,17,1)
(15,3,1)
(17,8,1)
(18,2,1)
(16,22,1)
(10,7,1)
(15,20,1)
(16,18,1)
(21,11,1)
(22,18,2)
(16,22,2)
(1,4,2)
(8,16,2)
(4,17,2)
(5,16,2)
(2,25,2)
(20,16,2)
(18,2,2)
(16,18,2)
(3,16,2)
(21,11,2)
(28,16,2)
(17,16,2)
(26,10,2)
(23,18,2)
-----------------------------------
(0,)
(1,RET)
(2,&md->flags)
(3,goto out;)
(4,return md;)
(5,md)
(6,)
(7,_minor_lock)
(8,NULL)
(9,md)
(10,&_minor_lock)
(11,&_minor_lock)
(12,md)
(13,flags)
(14,DMF_FREEING)
(15,_minor_lock)
(16,test_bit(DMF_FREEING, &md->flags)
(17,md = NULL)
(18,test_bit(DMF_FREEING, &md->flags)
(19,md)
(20,dm_get(md)
(21,spin_unlock(&_minor_lock)
(22,dm_deleting_md(md)
(23,md)
(24,if (test_bit(DMF_FREEING, &md->flags)
(25,md->flags)
(26,spin_lock(&_minor_lock)
(27,out:)
(28,md)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^