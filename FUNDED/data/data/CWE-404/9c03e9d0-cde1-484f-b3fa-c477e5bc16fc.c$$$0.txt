-----label-----
1
-----code-----
int gfs2_setattr_size(struct inode *inode, u64 newsize)
{
	struct gfs2_inode *ip = GFS2_I(inode);
	int ret;
	u64 oldsize;

	BUG_ON(!S_ISREG(inode->i_mode));

	ret = inode_newsize_ok(inode, newsize);
	if (ret)
		return ret;

	ret = get_write_access(inode);
	if (ret)
		return ret;

	inode_dio_wait(inode);

	ret = gfs2_rs_alloc(ip);
	if (ret)
		goto out;

	oldsize = inode->i_size;
	if (newsize >= oldsize) {
		ret = do_grow(inode, newsize);
		goto out;
	}

	gfs2_rs_deltree(ip->i_res);
	ret = do_shrink(inode, oldsize, newsize);
out:
	put_write_access(inode);
	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
16,17
16,18
16,19
16,20
16,21
16,22
16,23
16,24
16,25
16,26
16,27
16,28
16,29
16,30
16,31
16,32
16,33
17,18
18,19
18,20
19,20
21,22
21,23
21,24
24,25
25,26
25,27
26,27
28,29
30,31
31,32
31,33
33,34
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
46,47
46,48
47,48
49,50
49,51
50,51
53,54
54,55
54,56
55,56
57,58
57,59
57,60
58,59
60,61
62,63
64,65
64,66
65,66
67,68
68,69
70,71
71,72
71,73
72,73
74,75
74,76
75,76
77,78
79,80
79,81
80,81
82,83
83,84
85,86
86,87
86,88
87,88
89,90
91,92
92,93
92,94
93,94
95,96
95,97
96,97
98,99
100,101
100,102
101,102
103,104
105,106
106,107
106,108
107,108
109,110
109,111
110,111
113,114
113,115
114,115
114,116
115,116
117,118
119,120
119,121
120,121
121,122
121,123
122,123
124,125
124,126
124,127
125,126
127,128
129,130
131,132
133,134
134,135
134,136
135,136
137,138
137,139
138,139
141,142
142,143
142,144
143,144
145,146
145,147
145,148
145,149
146,147
148,149
150,151
152,153
154,155
154,156
156,157
157,158
157,159
158,159
160,161
162,163
163,164
-----nextToken-----
2,4,7,9,10,13,15,20,22,23,27,29,32,34,38,40,44,48,51,52,56,59,61,63,66,69,73,76,78,81,84,88,90,94,97,99,102,104,108,111,112,116,118,123,126,128,130,132,136,139,140,144,147,149,151,153,155,159,161,164
-----computeFrom-----
54,55
54,56
71,72
71,73
92,93
92,94
106,107
106,108
114,115
114,116
121,122
121,123
142,143
142,144
-----guardedBy-----
116,130
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;ReturnStatement;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;GotoStatement;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;GotoStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;LabelStatement;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
int gfs2_setattr_size(struct inode *inode, u64 newsize){	struct gfs2_inode *ip = GFS2_I(inode);	int ret;	u64 oldsize;	BUG_ON(!S_ISREG(inode->i_mode));	ret = inode_newsize_ok(inode, newsize);	if (ret)		return ret;	ret = get_write_access(inode);	if (ret)		return ret;	inode_dio_wait(inode);	ret = gfs2_rs_alloc(ip);	if (ret)		goto out;	oldsize = inode->i_size;	if (newsize >= oldsize) {		ret = do_grow(inode, newsize);		goto out;	}	gfs2_rs_deltree(ip->i_res);	ret = do_shrink(inode, oldsize, newsize);out:	put_write_access(inode);	return ret;}
int
gfs2_setattr_size(struct inode *inode, u64 newsize)
gfs2_setattr_size
struct inode *inode
struct inode
inode
*inode
*
inode
u64 newsize
u64
u64
newsize
newsize
{	struct gfs2_inode *ip = GFS2_I(inode);	int ret;	u64 oldsize;	BUG_ON(!S_ISREG(inode->i_mode));	ret = inode_newsize_ok(inode, newsize);	if (ret)		return ret;	ret = get_write_access(inode);	if (ret)		return ret;	inode_dio_wait(inode);	ret = gfs2_rs_alloc(ip);	if (ret)		goto out;	oldsize = inode->i_size;	if (newsize >= oldsize) {		ret = do_grow(inode, newsize);		goto out;	}	gfs2_rs_deltree(ip->i_res);	ret = do_shrink(inode, oldsize, newsize);out:	put_write_access(inode);	return ret;}
struct gfs2_inode *ip = GFS2_I(inode);
struct gfs2_inode *ip = GFS2_I(inode);
struct gfs2_inode
gfs2_inode
*ip = GFS2_I(inode)
*
ip
= GFS2_I(inode)
GFS2_I(inode)
GFS2_I
GFS2_I
inode
inode
int ret;
int ret;
int
ret
ret
u64 oldsize;
u64 oldsize;
u64
u64
oldsize
oldsize
BUG_ON(!S_ISREG(inode->i_mode));
BUG_ON(!S_ISREG(inode->i_mode))
BUG_ON
BUG_ON
!S_ISREG(inode->i_mode)
S_ISREG(inode->i_mode)
S_ISREG
S_ISREG
inode->i_mode
inode
inode
i_mode
ret = inode_newsize_ok(inode, newsize);
ret = inode_newsize_ok(inode, newsize)
ret
ret
inode_newsize_ok(inode, newsize)
inode_newsize_ok
inode_newsize_ok
inode
inode
newsize
newsize
if (ret)		return ret;
ret
ret
return ret;
ret
ret
ret = get_write_access(inode);
ret = get_write_access(inode)
ret
ret
get_write_access(inode)
get_write_access
get_write_access
inode
inode
if (ret)		return ret;
ret
ret
return ret;
ret
ret
inode_dio_wait(inode);
inode_dio_wait(inode)
inode_dio_wait
inode_dio_wait
inode
inode
ret = gfs2_rs_alloc(ip);
ret = gfs2_rs_alloc(ip)
ret
ret
gfs2_rs_alloc(ip)
gfs2_rs_alloc
gfs2_rs_alloc
ip
ip
if (ret)		goto out;
ret
ret
goto out;
out
oldsize = inode->i_size;
oldsize = inode->i_size
oldsize
oldsize
inode->i_size
inode
inode
i_size
if (newsize >= oldsize) {		ret = do_grow(inode, newsize);		goto out;	}
newsize >= oldsize
newsize
newsize
oldsize
oldsize
{		ret = do_grow(inode, newsize);		goto out;	}
ret = do_grow(inode, newsize);
ret = do_grow(inode, newsize)
ret
ret
do_grow(inode, newsize)
do_grow
do_grow
inode
inode
newsize
newsize
goto out;
out
gfs2_rs_deltree(ip->i_res);
gfs2_rs_deltree(ip->i_res)
gfs2_rs_deltree
gfs2_rs_deltree
ip->i_res
ip
ip
i_res
ret = do_shrink(inode, oldsize, newsize);
ret = do_shrink(inode, oldsize, newsize)
ret
ret
do_shrink(inode, oldsize, newsize)
do_shrink
do_shrink
inode
inode
oldsize
oldsize
newsize
newsize
out:	put_write_access(inode);
out
put_write_access(inode);
put_write_access(inode)
put_write_access
put_write_access
inode
inode
return ret;
ret
ret
-----joern-----
(70,61,0)
(26,56,0)
(18,46,0)
(61,9,0)
(13,60,0)
(18,5,0)
(22,66,0)
(23,60,0)
(58,40,0)
(52,10,0)
(71,9,0)
(20,46,0)
(33,68,0)
(61,56,0)
(47,65,0)
(11,73,0)
(10,52,0)
(30,56,0)
(66,25,0)
(36,40,0)
(52,44,0)
(51,10,0)
(72,68,0)
(59,54,0)
(29,13,0)
(2,19,0)
(41,56,0)
(6,19,0)
(36,72,0)
(1,60,0)
(66,26,0)
(62,71,0)
(46,56,0)
(14,60,0)
(15,71,0)
(68,56,0)
(38,44,0)
(42,62,0)
(39,72,0)
(26,19,0)
(64,0,0)
(54,56,0)
(33,25,0)
(38,56,0)
(50,56,0)
(71,62,0)
(60,26,0)
(63,66,0)
(21,56,0)
(55,56,0)
(4,5,0)
(36,29,0)
(60,9,0)
(5,18,0)
(29,62,0)
(0,56,0)
(31,13,0)
(35,29,0)
(69,0,0)
(45,18,0)
(32,10,0)
(3,71,0)
(68,33,0)
(19,26,0)
(33,9,0)
(29,56,0)
(34,68,0)
(0,69,0)
(13,56,0)
(48,7,0)
(44,52,0)
(67,65,0)
(47,56,0)
(44,38,0)
(60,25,0)
(65,47,0)
(73,46,0)
(27,65,0)
(29,5,0)
(65,46,0)
(37,56,0)
(57,56,0)
(19,9,0)
(73,9,0)
(54,9,0)
(49,56,0)
(17,26,0)
(43,33,0)
(12,33,0)
(69,9,0)
(5,56,0)
(16,69,0)
(71,25,0)
(60,13,0)
(46,73,0)
(40,0,0)
(62,7,0)
(10,9,0)
(44,52,1)
(73,9,1)
(69,16,1)
(10,32,1)
(64,8,1)
(36,29,1)
(35,61,1)
(15,42,1)
(33,9,1)
(65,46,1)
(8,68,1)
(71,25,1)
(63,26,1)
(29,35,1)
(66,26,1)
(17,53,1)
(66,22,1)
(12,43,1)
(22,63,1)
(60,9,1)
(10,9,1)
(58,28,1)
(46,73,1)
(59,28,1)
(16,64,1)
(6,2,1)
(32,51,1)
(70,48,1)
(71,9,1)
(11,20,1)
(18,45,1)
(62,71,1)
(0,69,1)
(72,68,1)
(70,13,1)
(14,23,1)
(19,6,1)
(51,46,1)
(39,8,1)
(48,62,1)
(31,47,1)
(29,5,1)
(60,1,1)
(29,13,1)
(40,58,1)
(47,65,1)
(34,38,1)
(36,72,1)
(36,40,1)
(3,15,1)
(66,25,1)
(52,10,1)
(40,0,1)
(60,26,1)
(13,60,1)
(2,17,1)
(73,11,1)
(4,54,1)
(67,66,1)
(5,18,1)
(18,46,1)
(26,19,1)
(43,34,1)
(71,3,1)
(1,14,1)
(45,4,1)
(23,31,1)
(69,9,1)
(54,9,1)
(33,25,1)
(33,12,1)
(68,33,1)
(53,5,1)
(38,44,1)
(29,62,1)
(42,66,1)
(65,27,1)
(19,9,1)
(61,9,1)
(72,39,1)
(61,70,1)
(54,59,1)
(60,25,1)
(27,67,1)
(28,0,1)
(24,53,1)
(70,24,1)
(54,28,2)
(33,9,2)
(18,46,2)
(60,25,2)
(29,5,2)
(71,66,2)
(71,9,2)
(66,26,2)
(40,0,2)
(13,66,2)
(14,66,2)
(63,53,2)
(5,28,2)
(2,53,2)
(65,46,2)
(0,69,2)
(4,28,2)
(13,60,2)
(64,8,2)
(36,72,2)
(67,66,2)
(53,28,2)
(72,8,2)
(10,9,2)
(61,28,2)
(19,53,2)
(22,53,2)
(26,19,2)
(5,18,2)
(68,33,2)
(15,66,2)
(48,66,2)
(62,66,2)
(27,66,2)
(31,66,2)
(58,28,2)
(0,8,2)
(24,53,2)
(73,9,2)
(71,25,2)
(62,71,2)
(59,28,2)
(60,66,2)
(47,66,2)
(23,66,2)
(66,53,2)
(29,28,2)
(46,73,2)
(18,28,2)
(42,66,2)
(38,44,2)
(47,65,2)
(70,28,2)
(52,10,2)
(60,26,2)
(40,28,2)
(17,53,2)
(69,9,2)
(3,66,2)
(36,40,2)
(16,8,2)
(19,9,2)
(36,29,2)
(69,8,2)
(66,25,2)
(26,53,2)
(44,52,2)
(61,9,2)
(29,62,2)
(65,66,2)
(29,13,2)
(1,66,2)
(28,8,2)
(6,53,2)
(35,28,2)
(54,9,2)
(72,68,2)
(33,25,2)
(39,8,2)
(60,9,2)
(45,28,2)
-----------------------------------
(0,ret = get_write_access(inode)
(1,newsize)
(2,inode)
(3,newsize)
(4,ret)
(5,ret = gfs2_rs_alloc(ip)
(6,i_size)
(7,)
(8,ret)
(9,struct inode *inode)
(10,inode->i_mode)
(11,inode)
(12,newsize)
(13,ret = do_shrink(inode, oldsize, newsize)
(14,oldsize)
(15,inode)
(16,inode)
(17,oldsize)
(18,gfs2_rs_alloc(ip)
(19,inode->i_size)
(20,ip)
(21,oldsize)
(22,oldsize)
(23,inode)
(24,goto out;)
(25,u64 newsize)
(26,oldsize = inode->i_size)
(27,i_res)
(28,ret)
(29,return ret;)
(30,out:)
(31,ret)
(32,i_mode)
(33,inode_newsize_ok(inode, newsize)
(34,ret)
(35,ret)
(36,RET)
(37,ip)
(38,BUG_ON(!S_ISREG(inode->i_mode)
(39,ret)
(40,return ret;)
(41,if (newsize >= oldsize)
(42,ret)
(43,inode)
(44,!S_ISREG(inode->i_mode)
(45,ip)
(46,*ip = GFS2_I(inode)
(47,gfs2_rs_deltree(ip->i_res)
(48,goto out;)
(49,if (ret)
(50,if (ret)
(51,inode)
(52,S_ISREG(inode->i_mode)
(53,ret)
(54,inode_dio_wait(inode)
(55,ret)
(56,)
(57,if (ret)
(58,ret)
(59,inode)
(60,do_shrink(inode, oldsize, newsize)
(61,put_write_access(inode)
(62,ret = do_grow(inode, newsize)
(63,newsize)
(64,ret)
(65,ip->i_res)
(66,newsize >= oldsize)
(67,ip)
(68,ret = inode_newsize_ok(inode, newsize)
(69,get_write_access(inode)
(70,inode)
(71,do_grow(inode, newsize)
(72,return ret;)
(73,GFS2_I(inode)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^