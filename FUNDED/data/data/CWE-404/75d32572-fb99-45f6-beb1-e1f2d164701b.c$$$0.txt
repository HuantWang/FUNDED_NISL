-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_declare_66b_badSink(twoIntsStruct * dataArray[])
{
    /* copy data out of dataArray */
    twoIntsStruct * data = dataArray[2];
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
8,11
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
17,20
20,21
21,22
21,23
22,23
25,26
26,27
26,28
27,28
29,30
30,31
30,32
31,32
34,35
35,36
35,37
36,37
38,39
-----nextToken-----
2,4,7,9,10,11,16,18,19,23,24,28,32,33,37,39
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_declare_66b_badSink(twoIntsStruct * dataArray[]){    /* copy data out of dataArray */    twoIntsStruct * data = dataArray[2];    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_struct_declare_66b_badSink(twoIntsStruct * dataArray[])
CWE590_Free_Memory_Not_on_Heap__free_struct_declare_66b_badSink
twoIntsStruct * dataArray[]
twoIntsStruct
twoIntsStruct
* dataArray[]
*
dataArray
[]
{    /* copy data out of dataArray */    twoIntsStruct * data = dataArray[2];    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
twoIntsStruct * data = dataArray[2];
twoIntsStruct * data = dataArray[2];
twoIntsStruct
twoIntsStruct
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(5,4,0)
(2,9,0)
(4,15,0)
(4,9,0)
(1,13,0)
(14,3,0)
(1,15,0)
(8,4,0)
(9,4,0)
(6,15,0)
(12,3,0)
(8,15,0)
(13,3,0)
(3,13,0)
(9,7,0)
(3,4,0)
(0,8,0)
(11,9,0)
(13,1,0)
(3,14,1)
(8,0,1)
(11,2,1)
(1,13,1)
(0,1,1)
(14,12,1)
(9,7,1)
(8,4,1)
(4,9,1)
(13,3,1)
(3,4,1)
(2,5,1)
(10,8,1)
(12,4,1)
(9,11,1)
(1,13,2)
(13,3,2)
(9,7,2)
(4,9,2)
(3,4,2)
(8,4,2)
-----------------------------------
(0,data)
(1,printStructLine(&data[0])
(2,dataArray)
(3,data[0])
(4,* data = dataArray[2])
(5,data)
(6,data)
(7,twoIntsStruct * dataArray[])
(8,free(data)
(9,dataArray[2])
(10,RET)
(11,2)
(12,data)
(13,&data[0])
(14,0)
(15,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^