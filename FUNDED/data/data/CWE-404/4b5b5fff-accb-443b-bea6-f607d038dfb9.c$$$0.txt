-----label-----
1
-----code-----
char * CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_61b_badSource(char * data)
{
    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */
    strcpy(data, BAD_SOURCE_FIXED_STRING);
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
13,14
13,15
13,16
14,15
16,17
18,19
20,21
21,22
-----nextToken-----
2,4,5,7,9,10,15,17,19,22
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_61b_badSource(char * data){    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */    strcpy(data, BAD_SOURCE_FIXED_STRING);    return data;}
char
* CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_61b_badSource(char * data)
*
CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_61b_badSource
char * data
char
* data
*
data
{    /* POTENTIAL FLAW: Initialize data to be a fixed string that contains the search character in the sinks */    strcpy(data, BAD_SOURCE_FIXED_STRING);    return data;}
strcpy(data, BAD_SOURCE_FIXED_STRING);
strcpy(data, BAD_SOURCE_FIXED_STRING)
strcpy
strcpy
data
data
BAD_SOURCE_FIXED_STRING
BAD_SOURCE_FIXED_STRING
return data;
data
data
-----joern-----
(0,6,0)
(7,0,0)
(0,4,0)
(3,1,0)
(1,4,0)
(5,0,0)
(2,1,0)
(1,6,0)
(7,5,1)
(0,4,1)
(0,7,1)
(2,0,1)
(1,2,1)
(1,4,1)
(3,1,1)
(1,4,2)
(0,4,2)
(3,1,2)
-----------------------------------
(0,strcpy(data, BAD_SOURCE_FIXED_STRING)
(1,return data;)
(2,data)
(3,RET)
(4,char * data)
(5,data)
(6,)
(7,BAD_SOURCE_FIXED_STRING)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^