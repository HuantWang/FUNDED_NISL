-----label-----
0
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_int_alloca_51b_goodG2BSink(int * data)
{
    printIntLine(data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
11,12
12,13
12,14
13,14
15,16
15,17
16,17
19,20
20,21
20,22
21,22
23,24
-----nextToken-----
2,4,6,8,9,14,17,18,22,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_int_alloca_51b_goodG2BSink(int * data){    printIntLine(data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_int_alloca_51b_goodG2BSink(int * data)
CWE590_Free_Memory_Not_on_Heap__free_int_alloca_51b_goodG2BSink
int * data
int
* data
*
data
{    printIntLine(data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
printIntLine(data[0]);
printIntLine(data[0])
printIntLine
printIntLine
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(0,1,0)
(4,6,0)
(3,1,0)
(1,6,0)
(7,1,0)
(1,7,0)
(8,4,0)
(7,2,0)
(4,2,0)
(8,7,1)
(4,6,1)
(1,6,1)
(4,8,1)
(1,0,1)
(7,1,1)
(5,4,1)
(0,3,1)
(7,1,2)
(4,6,2)
(1,6,2)
-----------------------------------
(0,0)
(1,data[0])
(2,)
(3,data)
(4,free(data)
(5,RET)
(6,int * data)
(7,printIntLine(data[0])
(8,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^