-----label-----
0
-----code-----
static void goodB2G()
{
    FILE * data;
    void (*funcPtr) (FILE *) = goodB2GSink;
    /* Initialize data */
    data = NULL;
    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */
    data = fopen("BadSource_fopen.txt", "w+");
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
16,17
16,18
16,19
17,18
17,19
20,21
20,22
21,22
23,24
23,25
26,27
27,28
29,30
30,31
30,32
31,32
33,34
35,36
36,37
36,38
37,38
39,40
39,41
39,42
40,41
44,45
45,46
45,47
46,47
48,49
-----nextToken-----
2,4,9,11,12,15,18,19,22,24,25,28,32,34,38,41,42,43,47,49
-----computeFrom-----
30,31
30,32
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G(){    FILE * data;    void (*funcPtr) (FILE *) = goodB2GSink;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    funcPtr(data);}
static void
goodB2G()
goodB2G
{    FILE * data;    void (*funcPtr) (FILE *) = goodB2GSink;    /* Initialize data */    data = NULL;    /* POTENTIAL FLAW: Open a file - need to make sure it is closed properly in the sink */    data = fopen("BadSource_fopen.txt", "w+");    funcPtr(data);}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
void (*funcPtr) (FILE *) = goodB2GSink;
void (*funcPtr) (FILE *) = goodB2GSink;
void
(*funcPtr) (FILE *) = goodB2GSink
*funcPtr
*
funcPtr
FILE *
FILE
FILE
*
*

= goodB2GSink
goodB2GSink
goodB2GSink
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(13,3,0)
(9,5,0)
(4,6,0)
(15,12,0)
(6,3,0)
(12,3,0)
(16,6,0)
(14,5,0)
(11,12,0)
(8,12,0)
(1,15,0)
(10,15,0)
(5,3,0)
(11,3,0)
(12,15,0)
(0,3,0)
(7,11,0)
(16,4,1)
(8,6,1)
(15,10,1)
(6,16,1)
(5,14,1)
(1,8,1)
(2,11,1)
(11,12,1)
(14,9,1)
(7,12,1)
(4,5,1)
(11,7,1)
(12,15,1)
(10,1,1)
(12,15,2)
(11,12,2)
-----------------------------------
(0,funcPtr)
(1,"BadSource_fopen.txt")
(2,RET)
(3,)
(4,data)
(5,(*funcPtr)
(6,data = NULL)
(7,data)
(8,data)
(9,funcPtr)
(10,"w+")
(11,funcPtr(data)
(12,data = fopen("BadSource_fopen.txt", "w+")
(13,data)
(14,goodB2GSink)
(15,fopen("BadSource_fopen.txt", "w+")
(16,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^