-----label-----
0
-----code-----
static void pdata_quirks_check(struct pdata_init *quirks)
{
	while (quirks->compatible) {
		if (of_machine_is_compatible(quirks->compatible)) {
			if (quirks->fn)
				quirks->fn();
			break;
		}
		quirks++;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
17,18
17,19
18,19
18,20
19,20
19,21
20,21
22,23
22,24
23,24
26,27
26,28
27,28
27,29
28,29
28,30
29,30
32,33
33,34
34,35
34,36
35,36
39,40
40,41
41,42
-----nextToken-----
2,4,7,9,10,15,16,21,24,25,30,31,36,37,38,42
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;WhileStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;IfStatement;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;BreakStatement;ExpressionStatement;UnaryExpression;IdExpression;Name;
-----ast_node-----
static void pdata_quirks_check(struct pdata_init *quirks){	while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}}
static void
pdata_quirks_check(struct pdata_init *quirks)
pdata_quirks_check
struct pdata_init *quirks
struct pdata_init
pdata_init
*quirks
*
quirks
{	while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}}
while (quirks->compatible) {		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}
quirks->compatible
quirks
quirks
compatible
{		if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}		quirks++;	}
if (of_machine_is_compatible(quirks->compatible)) {			if (quirks->fn)				quirks->fn();			break;		}
of_machine_is_compatible(quirks->compatible)
of_machine_is_compatible
of_machine_is_compatible
quirks->compatible
quirks
quirks
compatible
{			if (quirks->fn)				quirks->fn();			break;		}
if (quirks->fn)				quirks->fn();
quirks->fn
quirks
quirks
fn
quirks->fn();
quirks->fn()
quirks->fn
quirks
quirks
fn
break;
quirks++;
quirks++
quirks
quirks
-----joern-----
(20,7,0)
(2,13,0)
(1,0,0)
(14,15,0)
(17,7,0)
(6,18,0)
(1,3,0)
(11,9,0)
(16,1,0)
(5,1,0)
(19,18,0)
(13,3,0)
(13,9,0)
(7,3,0)
(12,10,0)
(18,3,0)
(8,15,0)
(0,1,0)
(21,8,1)
(8,4,1)
(5,16,1)
(8,18,1)
(17,13,1)
(7,20,1)
(18,19,1)
(4,18,1)
(19,6,1)
(16,7,1)
(21,7,1)
(18,3,1)
(6,0,1)
(13,3,1)
(2,0,1)
(13,2,1)
(7,3,1)
(20,17,1)
(1,5,1)
(0,1,1)
(1,3,1)
(19,0,2)
(6,0,2)
(18,0,2)
(7,3,2)
(20,0,2)
(1,7,2)
(8,0,2)
(0,7,2)
(5,7,2)
(16,7,2)
(0,1,2)
(4,18,2)
(17,0,2)
(7,0,2)
(13,3,2)
(13,0,2)
(1,3,2)
(18,3,2)
(2,0,2)
-----------------------------------
(0,of_machine_is_compatible(quirks->compatible)
(1,quirks->compatible)
(2,quirks)
(3,struct pdata_init *quirks)
(4,quirks->fn()
(5,compatible)
(6,quirks)
(7,quirks->compatible)
(8,break;)
(9,)
(10,)
(11,if (of_machine_is_compatible(quirks->compatible)
(12,while (quirks->compatible)
(13,quirks++)
(14,if (quirks->fn)
(15,)
(16,quirks)
(17,quirks)
(18,quirks->fn)
(19,fn)
(20,compatible)
(21,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^