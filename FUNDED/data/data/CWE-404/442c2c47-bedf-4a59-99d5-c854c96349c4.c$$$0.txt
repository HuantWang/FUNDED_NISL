-----label-----
1
-----code-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_63b_badSink(wchar_t * * dataPtr)
{
    wchar_t * data = *dataPtr;
    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the
     * memory block not at the start of the buffer */
    for (; *data != L'\0'; data++)
    {
        if (*data == SEARCH_CHAR)
        {
            printLine("We have a match!");
            break;
        }
    }
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
11,14
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
20,21
22,23
22,24
22,25
22,26
24,25
24,26
25,26
26,27
29,30
30,31
32,33
33,34
33,35
34,35
34,36
35,36
36,37
38,39
40,41
40,42
41,42
42,43
42,44
43,44
47,48
48,49
48,50
49,50
51,52
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,23,27,28,31,37,39,44,45,46,50,52
-----computeFrom-----
24,25
24,26
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ForStatement;NullStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_63b_badSink(wchar_t * * dataPtr){    wchar_t * data = *dataPtr;    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
void
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_63b_badSink(wchar_t * * dataPtr)
CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_63b_badSink
wchar_t * * dataPtr
wchar_t
* * dataPtr
*
*
dataPtr
{    wchar_t * data = *dataPtr;    /* FLAW: We are incrementing the pointer in the loop - this will cause us to free the     * memory block not at the start of the buffer */    for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }    free(data);}
wchar_t * data = *dataPtr;
wchar_t * data = *dataPtr;
wchar_t
* data = *dataPtr
*
data
= *dataPtr
*dataPtr
dataPtr
dataPtr
for (; *data != L'\0'; data++)    {        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
;
*data != L'\0'
*data
data
data
L'\0'
data++
data
data
{        if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }    }
if (*data == SEARCH_CHAR)        {            printLine("We have a match!");            break;        }
*data == SEARCH_CHAR
*data
data
data
SEARCH_CHAR
SEARCH_CHAR
{            printLine("We have a match!");            break;        }
printLine("We have a match!");
printLine("We have a match!")
printLine
printLine
"We have a match!"
break;
free(data);
free(data)
free
free
data
data
-----joern-----
(1,16,0)
(20,10,0)
(7,19,0)
(15,8,0)
(2,11,0)
(11,16,0)
(11,15,0)
(5,2,0)
(4,18,0)
(10,3,0)
(18,2,0)
(14,3,0)
(13,16,0)
(19,16,0)
(6,16,0)
(2,18,0)
(0,15,0)
(17,13,0)
(15,11,0)
(13,11,0)
(12,11,0)
(2,11,1)
(14,10,1)
(17,18,1)
(0,12,1)
(2,5,1)
(5,1,1)
(18,4,1)
(9,13,1)
(15,0,1)
(18,2,1)
(20,18,1)
(17,14,1)
(1,11,1)
(15,8,1)
(13,11,1)
(10,20,1)
(4,2,1)
(13,17,1)
(11,15,1)
(11,15,2)
(18,2,2)
(10,18,2)
(14,18,2)
(13,11,2)
(2,11,2)
(20,18,2)
(15,8,2)
-----------------------------------
(0,dataPtr)
(1,\'\\0\')
(2,*data)
(3,)
(4,SEARCH_CHAR)
(5,data)
(6,data)
(7,if (*data == SEARCH_CHAR)
(8,wchar_t * * dataPtr)
(9,RET)
(10,printLine("We have a match!")
(11,* data = *dataPtr)
(12,data)
(13,free(data)
(14,break;)
(15,*dataPtr)
(16,)
(17,data)
(18,*data == SEARCH_CHAR)
(19,)
(20,"We have a match!")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^