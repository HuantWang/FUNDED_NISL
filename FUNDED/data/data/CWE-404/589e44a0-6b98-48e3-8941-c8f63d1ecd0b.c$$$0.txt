-----label-----
1
-----code-----
void CWE775_Missing_Release_of_File_Descriptor_or_Handle__w32CreateFile_no_close_64b_badSink(void * dataVoidPtr)
{
    /* cast void pointer to a pointer of the appropriate type */
    HANDLE * dataPtr = (HANDLE *)dataVoidPtr;
    /* dereference dataPtr into data */
    HANDLE data = (*dataPtr);
    /* FLAW: No attempt to close the file */
    ; /* empty statement needed for some flow variants */
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
10,12
10,13
11,12
12,13
12,14
13,14
15,16
15,17
15,18
18,19
19,20
19,21
20,21
20,22
21,22
23,24
25,26
27,28
28,29
28,30
29,30
31,32
31,33
33,34
34,35
35,36
36,37
-----nextToken-----
2,4,6,8,9,14,16,17,22,24,26,30,32,37,38
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;CastExpression;TypeId;NamedTypeSpecifier;Name;Declarator;Pointer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;UnaryExpression;UnaryExpression;IdExpression;Name;NullStatement;
-----ast_node-----
void CWE775_Missing_Release_of_File_Descriptor_or_Handle__w32CreateFile_no_close_64b_badSink(void * dataVoidPtr){    /* cast void pointer to a pointer of the appropriate type */    HANDLE * dataPtr = (HANDLE *)dataVoidPtr;    /* dereference dataPtr into data */    HANDLE data = (*dataPtr);    /* FLAW: No attempt to close the file */    ; /* empty statement needed for some flow variants */}
void
CWE775_Missing_Release_of_File_Descriptor_or_Handle__w32CreateFile_no_close_64b_badSink(void * dataVoidPtr)
CWE775_Missing_Release_of_File_Descriptor_or_Handle__w32CreateFile_no_close_64b_badSink
void * dataVoidPtr
void
* dataVoidPtr
*
dataVoidPtr
{    /* cast void pointer to a pointer of the appropriate type */    HANDLE * dataPtr = (HANDLE *)dataVoidPtr;    /* dereference dataPtr into data */    HANDLE data = (*dataPtr);    /* FLAW: No attempt to close the file */    ; /* empty statement needed for some flow variants */}
HANDLE * dataPtr = (HANDLE *)dataVoidPtr;
HANDLE * dataPtr = (HANDLE *)dataVoidPtr;
HANDLE
HANDLE
* dataPtr = (HANDLE *)dataVoidPtr
*
dataPtr
= (HANDLE *)dataVoidPtr
(HANDLE *)dataVoidPtr
HANDLE *
HANDLE
HANDLE
*
*
dataVoidPtr
dataVoidPtr
HANDLE data = (*dataPtr);
HANDLE data = (*dataPtr);
HANDLE
HANDLE
data = (*dataPtr)
data
= (*dataPtr)
(*dataPtr)
*dataPtr
dataPtr
dataPtr
;
-----joern-----
(12,10,0)
(1,11,0)
(9,2,0)
(2,9,0)
(0,9,0)
(10,11,0)
(4,2,0)
(7,9,0)
(12,2,0)
(10,12,0)
(9,5,0)
(2,11,0)
(9,7,0)
(3,10,0)
(6,12,0)
(13,11,0)
(9,0,1)
(2,9,1)
(9,5,1)
(6,3,1)
(9,7,1)
(12,2,1)
(8,10,1)
(12,6,1)
(0,4,1)
(10,12,1)
(3,2,1)
(10,12,2)
(9,5,2)
(12,2,2)
(9,7,2)
(2,9,2)
-----------------------------------
(0,dataVoidPtr)
(1,data)
(2,* dataPtr = (HANDLE *)
(3,data)
(4,dataPtr)
(5,void * dataVoidPtr)
(6,dataPtr)
(7,HANDLE *)
(8,RET)
(9,(HANDLE *)
(10,data = (*dataPtr)
(11,)
(12,*dataPtr)
(13,dataPtr)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^