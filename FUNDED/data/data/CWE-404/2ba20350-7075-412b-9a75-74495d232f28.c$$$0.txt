-----label-----
1
-----code-----
long arch_ptrace(struct task_struct *child, long request,
		 unsigned long addr, unsigned long data)
{
	int ret = -EIO;

	pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n", request, addr, data);

	switch (request) {
	case PTRACE_GET_THREAD_AREA:
		ret = put_user(task_thread_info(child)->thr_ptr,
			       (unsigned long __user *)data);
		break;
	default:
		ret = ptrace_request(child, request, addr, data);
		break;
	}

	return ret;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
17,18
19,20
19,21
21,22
23,24
23,25
23,26
23,27
24,25
25,26
25,27
27,28
27,29
29,30
30,31
31,32
33,34
34,35
34,36
34,37
34,38
34,39
35,36
38,39
40,41
42,43
44,45
44,46
45,46
47,48
47,49
47,50
47,51
47,52
47,53
48,49
49,50
51,52
54,55
55,56
55,57
56,57
58,59
58,60
58,61
58,62
58,63
59,60
61,62
63,64
65,66
67,68
70,71
71,72
-----nextToken-----
2,4,7,9,10,12,14,16,18,20,22,26,28,32,36,37,39,41,43,46,50,52,53,57,60,62,64,66,68,69,72
-----computeFrom-----
55,56
55,57
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;SwitchStatement;IdExpression;Name;CompoundStatement;CaseStatement;IdExpression;Name;ProblemStatement;BreakStatement;DefaultStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;BreakStatement;ReturnStatement;IdExpression;Name;
-----ast_node-----
long arch_ptrace(struct task_struct *child, long request,		 unsigned long addr, unsigned long data){	int ret = -EIO;	pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n", request, addr, data);	switch (request) {	case PTRACE_GET_THREAD_AREA:		ret = put_user(task_thread_info(child)->thr_ptr,			       (unsigned long __user *)data);		break;	default:		ret = ptrace_request(child, request, addr, data);		break;	}	return ret;}
long
arch_ptrace(struct task_struct *child, long request,		 unsigned long addr, unsigned long data)
arch_ptrace
struct task_struct *child
struct task_struct
task_struct
*child
*
child
long request
long
request
request
unsigned long addr
unsigned long
addr
addr
unsigned long data
unsigned long
data
data
{	int ret = -EIO;	pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n", request, addr, data);	switch (request) {	case PTRACE_GET_THREAD_AREA:		ret = put_user(task_thread_info(child)->thr_ptr,			       (unsigned long __user *)data);		break;	default:		ret = ptrace_request(child, request, addr, data);		break;	}	return ret;}
int ret = -EIO;
int ret = -EIO;
int
ret = -EIO
ret
= -EIO
-EIO
EIO
EIO
pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n", request, addr, data);
pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n", request, addr, data)
pr_debug
pr_debug
"REQ=%ld: ADDR =0x%lx, DATA=0x%lx)\n"
request
request
addr
addr
data
data
switch (request) {	case PTRACE_GET_THREAD_AREA:		ret = put_user(task_thread_info(child)->thr_ptr,			       (unsigned long __user *)data);		break;	default:		ret = ptrace_request(child, request, addr, data);		break;	}
request
request
{	case PTRACE_GET_THREAD_AREA:		ret = put_user(task_thread_info(child)->thr_ptr,			       (unsigned long __user *)data);		break;	default:		ret = ptrace_request(child, request, addr, data);		break;	}
case PTRACE_GET_THREAD_AREA:
PTRACE_GET_THREAD_AREA
PTRACE_GET_THREAD_AREA
ret = put_user(task_thread_info(child)->thr_ptr,			       (unsigned long __user *)data);
break;
default:
ret = ptrace_request(child, request, addr, data);
ret = ptrace_request(child, request, addr, data)
ret
ret
ptrace_request(child, request, addr, data)
ptrace_request
ptrace_request
child
child
request
request
addr
addr
data
data
break;
return ret;
ret
ret
-----joern-----
(37,30,0)
(9,33,0)
(34,0,0)
(23,9,0)
(8,27,0)
(39,8,0)
(0,40,0)
(14,41,0)
(26,36,0)
(41,27,0)
(8,24,0)
(41,14,0)
(17,24,0)
(25,9,0)
(31,41,0)
(18,40,0)
(2,13,0)
(35,8,0)
(17,36,0)
(37,13,0)
(32,40,0)
(11,41,0)
(41,11,0)
(10,30,0)
(3,8,0)
(36,14,0)
(21,30,0)
(9,30,0)
(28,35,0)
(14,0,0)
(7,6,0)
(6,30,0)
(22,9,0)
(4,40,0)
(15,9,0)
(12,37,0)
(14,36,0)
(35,40,0)
(6,35,0)
(36,17,0)
(38,8,0)
(5,6,0)
(8,35,0)
(8,33,0)
(9,20,0)
(1,8,0)
(13,37,0)
(29,17,0)
(0,14,0)
(9,27,0)
(19,40,0)
(8,20,0)
(6,0,0)
(5,4,1)
(14,41,1)
(13,2,1)
(36,17,1)
(34,16,1)
(8,38,1)
(5,32,1)
(2,12,1)
(36,26,1)
(7,6,1)
(15,22,1)
(6,35,1)
(16,9,1)
(41,11,1)
(41,27,1)
(41,31,1)
(6,5,1)
(3,28,1)
(39,1,1)
(17,24,1)
(31,36,1)
(9,25,1)
(25,15,1)
(14,36,1)
(0,14,1)
(8,24,1)
(8,27,1)
(9,27,1)
(32,35,1)
(8,33,1)
(4,0,1)
(37,13,1)
(9,33,1)
(23,37,1)
(38,39,1)
(17,29,1)
(22,23,1)
(9,20,1)
(6,0,1)
(29,34,1)
(35,8,1)
(26,17,1)
(8,20,1)
(1,3,1)
(28,16,1)
(28,16,2)
(6,0,2)
(9,33,2)
(9,27,2)
(8,24,2)
(1,16,2)
(34,16,2)
(3,16,2)
(38,16,2)
(36,16,2)
(4,16,2)
(6,35,2)
(41,16,2)
(26,16,2)
(17,24,2)
(8,16,2)
(0,16,2)
(41,27,2)
(14,36,2)
(35,16,2)
(9,20,2)
(29,16,2)
(17,16,2)
(0,14,2)
(39,16,2)
(8,33,2)
(14,16,2)
(14,41,2)
(41,11,2)
(7,6,2)
(37,13,2)
(8,20,2)
(31,16,2)
(36,17,2)
(35,8,2)
(32,16,2)
(8,27,2)
-----------------------------------
(0,ret = put_user(task_thread_info(child)
(1,request)
(2,EIO)
(3,child)
(4,break;)
(5,ret)
(6,return ret;)
(7,RET)
(8,ptrace_request(child, request, addr, data)
(9,pr_debug("REQ=%ld: ADDR =0x%lx, DATA=0x%lx)
(10,switch (request)
(11,unsigned long __user *)
(12,ret)
(13,-EIO)
(14,put_user(task_thread_info(child)
(15,addr)
(16,request)
(17,task_thread_info(child)
(18,default:)
(19,case PTRACE_GET_THREAD_AREA:)
(20,long request)
(21,ret)
(22,request)
(23,"REQ=%ld: ADDR =0x%lx, DATA=0x%lx)
(24,struct task_struct *child)
(25,data)
(26,thr_ptr)
(27,unsigned long data)
(28,ret)
(29,child)
(30,)
(31,data)
(32,break;)
(33,unsigned long addr)
(34,ret)
(35,ret = ptrace_request(child, request, addr, data)
(36,task_thread_info(child)
(37,ret = -EIO)
(38,data)
(39,addr)
(40,)
(41,(unsigned long __user *)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^