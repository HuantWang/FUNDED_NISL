-----label-----
1
-----code-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink(twoIntsStruct * data)
{
    printStructLine(&data[0]);
    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */
    free(data);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
13,14
13,15
14,15
16,17
17,18
17,19
18,19
21,22
22,23
22,24
23,24
25,26
-----nextToken-----
2,4,7,9,10,15,19,20,24,26
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink(twoIntsStruct * data){    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
void
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink(twoIntsStruct * data)
CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink
twoIntsStruct * data
twoIntsStruct
twoIntsStruct
* data
*
data
{    printStructLine(&data[0]);    /* POTENTIAL FLAW: Possibly deallocating memory allocated on the stack */    free(data);}
printStructLine(&data[0]);
printStructLine(&data[0])
printStructLine
printStructLine
&data[0]
data[0]
data
data
0
free(data);
free(data)
free
free
data
data
-----joern-----
(5,3,0)
(8,4,0)
(1,5,0)
(0,4,0)
(4,2,0)
(6,4,0)
(9,6,0)
(5,2,0)
(4,6,0)
(9,3,0)
(6,9,0)
(5,1,1)
(1,9,1)
(5,2,1)
(6,4,1)
(0,8,1)
(9,6,1)
(7,5,1)
(4,0,1)
(4,2,1)
(9,6,2)
(6,4,2)
(5,2,2)
(4,2,2)
-----------------------------------
(0,0)
(1,data)
(2,twoIntsStruct * data)
(3,)
(4,data[0])
(5,free(data)
(6,&data[0])
(7,RET)
(8,data)
(9,printStructLine(&data[0])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^