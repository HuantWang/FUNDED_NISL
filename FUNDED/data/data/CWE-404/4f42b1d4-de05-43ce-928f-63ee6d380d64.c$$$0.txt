-----label-----
0
-----code-----
static void goodB2G2()
{
    FILE * data;
    data = NULL;
    /* POTENTIAL FLAW: Open a file without closing it */
    data = fopen("BadSource_fopen.txt", "w+");
    if(STATIC_CONST_FIVE==5)
    {
        /* FIX: If the file is still opened, close it */
        if (data != NULL)
        {
            fclose(data);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
6,7
7,8
7,9
8,9
10,11
10,12
13,14
14,15
14,16
15,16
17,18
19,20
20,21
20,22
21,22
23,24
23,25
23,26
24,25
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
35,36
35,37
36,37
38,39
40,41
41,42
42,43
42,44
43,44
45,46
-----nextToken-----
2,4,9,11,12,16,18,22,25,26,27,31,32,37,39,44,46
-----computeFrom-----
14,15
14,16
20,21
20,22
29,30
29,31
35,36
35,37
-----guardedBy-----
37,46
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodB2G2(){    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_FIVE==5)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }}
static void
goodB2G2()
goodB2G2
{    FILE * data;    data = NULL;    /* POTENTIAL FLAW: Open a file without closing it */    data = fopen("BadSource_fopen.txt", "w+");    if(STATIC_CONST_FIVE==5)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }}
FILE * data;
FILE * data;
FILE
FILE
* data
*
data
data = NULL;
data = NULL
data
data
NULL
NULL
data = fopen("BadSource_fopen.txt", "w+");
data = fopen("BadSource_fopen.txt", "w+")
data
data
fopen("BadSource_fopen.txt", "w+")
fopen
fopen
"BadSource_fopen.txt"
"w+"
if(STATIC_CONST_FIVE==5)    {        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* FIX: If the file is still opened, close it */        if (data != NULL)        {            fclose(data);        }    }
if (data != NULL)        {            fclose(data);        }
data != NULL
data
data
NULL
NULL
{            fclose(data);        }
fclose(data);
fclose(data)
fclose
fclose
data
data
-----joern-----
(17,6,0)
(19,22,0)
(12,11,0)
(8,21,0)
(13,14,0)
(15,9,0)
(5,7,0)
(21,9,0)
(22,14,0)
(1,20,0)
(7,14,0)
(22,18,0)
(6,14,0)
(14,7,0)
(2,9,0)
(14,9,0)
(16,11,0)
(0,7,0)
(10,6,0)
(4,21,0)
(6,14,1)
(12,16,1)
(10,11,1)
(19,6,1)
(22,14,1)
(3,22,1)
(3,6,1)
(3,11,1)
(13,21,1)
(5,13,1)
(0,5,1)
(21,8,1)
(22,19,1)
(14,7,1)
(17,10,1)
(6,17,1)
(8,4,1)
(7,0,1)
(16,14,1)
(11,12,1)
(17,11,2)
(19,6,2)
(22,14,2)
(6,11,2)
(10,11,2)
(22,6,2)
(14,7,2)
(6,14,2)
-----------------------------------
(0,"w+")
(1,if (data != NULL)
(2,if(STATIC_CONST_FIVE==5)
(3,RET)
(4,data)
(5,"BadSource_fopen.txt")
(6,data != NULL)
(7,fopen("BadSource_fopen.txt", "w+")
(8,NULL)
(9,)
(10,data)
(11,STATIC_CONST_FIVE==5)
(12,5)
(13,data)
(14,data = fopen("BadSource_fopen.txt", "w+")
(15,data)
(16,STATIC_CONST_FIVE)
(17,NULL)
(18,)
(19,data)
(20,)
(21,data = NULL)
(22,fclose(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^