-----label-----
1
-----code-----
int ksched_getparam(register_t *ret, struct ksched *ksched,
	struct proc *p, struct sched_param *param)
{
	if (RTP_PRIO_IS_REALTIME(p->p_rtprio.type))
		param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio);

	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
20,22
23,24
23,25
24,25
26,27
26,28
29,30
29,31
30,31
30,32
31,32
31,33
32,33
34,35
34,36
35,36
35,37
36,37
40,41
41,42
41,43
42,43
42,44
43,44
46,47
46,48
47,48
49,50
49,51
50,51
50,52
51,52
55,56
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,22,25,27,28,33,37,38,39,44,45,48,52,53,54,56
-----computeFrom-----
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FunctionCallExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int ksched_getparam(register_t *ret, struct ksched *ksched,	struct proc *p, struct sched_param *param){	if (RTP_PRIO_IS_REALTIME(p->p_rtprio.type))		param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio);	return 0;}
int
ksched_getparam(register_t *ret, struct ksched *ksched,	struct proc *p, struct sched_param *param)
ksched_getparam
register_t *ret
register_t
register_t
*ret
*
ret
struct ksched *ksched
struct ksched
ksched
*ksched
*
ksched
struct proc *p
struct proc
proc
*p
*
p
struct sched_param *param
struct sched_param
sched_param
*param
*
param
{	if (RTP_PRIO_IS_REALTIME(p->p_rtprio.type))		param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio);	return 0;}
if (RTP_PRIO_IS_REALTIME(p->p_rtprio.type))		param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio);
RTP_PRIO_IS_REALTIME(p->p_rtprio.type)
RTP_PRIO_IS_REALTIME
RTP_PRIO_IS_REALTIME
p->p_rtprio.type
p->p_rtprio
p
p
p_rtprio
type
param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio);
param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio)
param->sched_priority
param
param
sched_priority
rtpprio_to_p4prio(p->p_rtprio.prio)
rtpprio_to_p4prio
rtpprio_to_p4prio
p->p_rtprio.prio
p->p_rtprio
p
p
p_rtprio
prio
return 0;
0
-----joern-----
(3,9,0)
(9,6,0)
(7,2,0)
(13,4,0)
(14,21,0)
(13,9,0)
(1,13,0)
(8,15,0)
(5,13,0)
(2,19,0)
(22,10,0)
(10,17,0)
(15,19,0)
(12,2,0)
(17,20,0)
(21,14,0)
(0,9,0)
(20,17,0)
(21,15,0)
(9,20,0)
(18,21,0)
(15,21,0)
(2,10,0)
(11,15,0)
(16,4,0)
(10,2,0)
(17,10,0)
(2,7,1)
(21,18,1)
(2,19,1)
(22,2,1)
(8,11,1)
(20,17,1)
(18,15,1)
(17,10,1)
(5,20,1)
(21,15,1)
(9,0,1)
(10,2,1)
(1,13,1)
(7,12,1)
(15,19,1)
(0,3,1)
(15,8,1)
(13,9,1)
(10,22,1)
(9,6,1)
(12,9,1)
(5,14,1)
(14,21,1)
(13,5,1)
(3,14,1)
(12,14,2)
(0,14,2)
(20,14,2)
(3,14,2)
(20,17,2)
(10,2,2)
(9,14,2)
(22,14,2)
(17,10,2)
(2,19,2)
(13,9,2)
(2,14,2)
(17,14,2)
(15,19,2)
(21,15,2)
(9,6,2)
(10,14,2)
(1,13,2)
(7,14,2)
(14,21,2)
-----------------------------------
(0,sched_priority)
(1,RET)
(2,p->p_rtprio)
(3,param)
(4,)
(5,0)
(6,struct sched_param *param)
(7,p_rtprio)
(8,p_rtprio)
(9,param->sched_priority)
(10,p->p_rtprio.prio)
(11,p)
(12,p)
(13,return 0;)
(14,RTP_PRIO_IS_REALTIME(p->p_rtprio.type)
(15,p->p_rtprio)
(16,if (RTP_PRIO_IS_REALTIME(p->p_rtprio.type)
(17,rtpprio_to_p4prio(p->p_rtprio.prio)
(18,type)
(19,struct proc *p)
(20,param->sched_priority = rtpprio_to_p4prio(p->p_rtprio.prio)
(21,p->p_rtprio.type)
(22,prio)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^