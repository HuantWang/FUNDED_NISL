-----label-----
1
-----code-----
static void parse_em_data(struct seq_file *m)
{
	unsigned long retbuf[PLPAR_HCALL_BUFSIZE];

	if (plpar_hcall(H_GET_EM_PARMS, retbuf) == H_SUCCESS)
		seq_printf(m, "power_mode_data=%016lx\n", retbuf[0]);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
17,18
18,19
20,21
20,22
21,22
21,23
22,23
22,24
22,25
23,24
25,26
27,28
29,30
31,32
32,33
32,34
32,35
32,36
33,34
35,36
38,39
38,40
39,40
-----nextToken-----
2,4,7,9,10,14,16,19,24,26,28,30,34,36,37,40,41
-----computeFrom-----
21,22
21,23
-----guardedBy-----
28,40
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void parse_em_data(struct seq_file *m){	unsigned long retbuf[PLPAR_HCALL_BUFSIZE];	if (plpar_hcall(H_GET_EM_PARMS, retbuf) == H_SUCCESS)		seq_printf(m, "power_mode_data=%016lx\n", retbuf[0]);}
static void
parse_em_data(struct seq_file *m)
parse_em_data
struct seq_file *m
struct seq_file
seq_file
*m
*
m
{	unsigned long retbuf[PLPAR_HCALL_BUFSIZE];	if (plpar_hcall(H_GET_EM_PARMS, retbuf) == H_SUCCESS)		seq_printf(m, "power_mode_data=%016lx\n", retbuf[0]);}
unsigned long retbuf[PLPAR_HCALL_BUFSIZE];
unsigned long retbuf[PLPAR_HCALL_BUFSIZE];
unsigned long
retbuf[PLPAR_HCALL_BUFSIZE]
retbuf
[PLPAR_HCALL_BUFSIZE]
PLPAR_HCALL_BUFSIZE
PLPAR_HCALL_BUFSIZE
if (plpar_hcall(H_GET_EM_PARMS, retbuf) == H_SUCCESS)		seq_printf(m, "power_mode_data=%016lx\n", retbuf[0]);
plpar_hcall(H_GET_EM_PARMS, retbuf) == H_SUCCESS
plpar_hcall(H_GET_EM_PARMS, retbuf)
plpar_hcall
plpar_hcall
H_GET_EM_PARMS
H_GET_EM_PARMS
retbuf
retbuf
H_SUCCESS
H_SUCCESS
seq_printf(m, "power_mode_data=%016lx\n", retbuf[0]);
seq_printf(m, "power_mode_data=%016lx\n", retbuf[0])
seq_printf
seq_printf
m
m
"power_mode_data=%016lx\n"
retbuf[0]
retbuf
retbuf
0
-----joern-----
(3,2,0)
(5,8,0)
(13,3,0)
(14,7,0)
(15,3,0)
(0,11,0)
(8,11,0)
(2,3,0)
(1,7,0)
(6,11,0)
(11,8,0)
(9,8,0)
(12,2,0)
(8,4,0)
(5,2,1)
(10,2,1)
(10,8,1)
(11,0,1)
(9,5,1)
(2,3,1)
(0,6,1)
(3,13,1)
(2,12,1)
(6,9,1)
(8,4,1)
(13,15,1)
(8,11,1)
(12,3,1)
(8,4,2)
(2,3,2)
(0,2,2)
(11,2,2)
(8,2,2)
(5,2,2)
(6,2,2)
(9,2,2)
(8,11,2)
-----------------------------------
(0,0)
(1,if (plpar_hcall(H_GET_EM_PARMS, retbuf)
(2,plpar_hcall(H_GET_EM_PARMS, retbuf)
(3,plpar_hcall(H_GET_EM_PARMS, retbuf)
(4,struct seq_file *m)
(5,m)
(6,retbuf)
(7,)
(8,seq_printf(m, "power_mode_data=%016lx\\n", retbuf[0])
(9,"power_mode_data=%016lx\\n")
(10,RET)
(11,retbuf[0])
(12,H_SUCCESS)
(13,retbuf)
(14,retbuf)
(15,H_GET_EM_PARMS)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^