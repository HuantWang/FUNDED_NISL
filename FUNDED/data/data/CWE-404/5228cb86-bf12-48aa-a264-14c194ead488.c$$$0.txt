-----label-----
1
-----code-----
ssize_t copy_oldmem_page(unsigned long pfn, char *buf,
			 size_t csize, unsigned long offset,
			 int userbuf)
{
	void *vaddr;

	if (!csize)
		return 0;

	vaddr = ioremap(__pfn_to_phys(pfn), PAGE_SIZE);
	if (!vaddr)
		return -ENOMEM;

	if (userbuf) {
		if (copy_to_user(buf, vaddr + offset, csize)) {
			iounmap(vaddr);
			return -EFAULT;
		}
	} else {
		memcpy(buf, vaddr + offset, csize);
	}

	iounmap(vaddr);
	return csize;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
4,9
4,10
6,7
6,8
8,9
10,11
10,12
12,13
12,14
15,16
15,17
16,17
18,19
20,21
20,22
22,23
24,25
24,26
26,27
28,29
28,30
28,31
28,32
28,33
28,34
28,35
29,30
30,31
30,32
32,33
32,34
35,36
35,37
36,37
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
45,48
46,47
48,49
48,50
49,50
51,52
53,54
55,56
55,57
56,57
57,58
59,60
60,61
61,62
63,64
63,65
63,66
64,65
66,67
67,68
67,69
68,69
68,70
68,71
68,72
69,70
71,72
73,74
73,75
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
85,86
87,88
88,89
89,90
91,92
92,93
93,94
93,95
93,96
93,97
94,95
96,97
98,99
98,100
99,100
101,102
103,104
105,106
106,107
106,108
107,108
109,110
111,112
112,113
-----nextToken-----
3,5,7,9,11,13,14,17,19,21,23,25,27,31,33,34,38,40,44,47,50,52,54,58,62,65,70,72,75,77,79,84,86,90,95,97,100,102,104,108,110,113
-----computeFrom-----
42,43
42,44
73,74
73,75
98,99
98,100
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;IfStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
ssize_t copy_oldmem_page(unsigned long pfn, char *buf,			 size_t csize, unsigned long offset,			 int userbuf){	void *vaddr;	if (!csize)		return 0;	vaddr = ioremap(__pfn_to_phys(pfn), PAGE_SIZE);	if (!vaddr)		return -ENOMEM;	if (userbuf) {		if (copy_to_user(buf, vaddr + offset, csize)) {			iounmap(vaddr);			return -EFAULT;		}	} else {		memcpy(buf, vaddr + offset, csize);	}	iounmap(vaddr);	return csize;}
ssize_t
ssize_t
copy_oldmem_page(unsigned long pfn, char *buf,			 size_t csize, unsigned long offset,			 int userbuf)
copy_oldmem_page
unsigned long pfn
unsigned long
pfn
pfn
char *buf
char
*buf
*
buf
size_t csize
size_t
size_t
csize
csize
unsigned long offset
unsigned long
offset
offset
int userbuf
int
userbuf
userbuf
{	void *vaddr;	if (!csize)		return 0;	vaddr = ioremap(__pfn_to_phys(pfn), PAGE_SIZE);	if (!vaddr)		return -ENOMEM;	if (userbuf) {		if (copy_to_user(buf, vaddr + offset, csize)) {			iounmap(vaddr);			return -EFAULT;		}	} else {		memcpy(buf, vaddr + offset, csize);	}	iounmap(vaddr);	return csize;}
void *vaddr;
void *vaddr;
void
*vaddr
*
vaddr
if (!csize)		return 0;
!csize
csize
csize
return 0;
0
vaddr = ioremap(__pfn_to_phys(pfn), PAGE_SIZE);
vaddr = ioremap(__pfn_to_phys(pfn), PAGE_SIZE)
vaddr
vaddr
ioremap(__pfn_to_phys(pfn), PAGE_SIZE)
ioremap
ioremap
__pfn_to_phys(pfn)
__pfn_to_phys
__pfn_to_phys
pfn
pfn
PAGE_SIZE
PAGE_SIZE
if (!vaddr)		return -ENOMEM;
!vaddr
vaddr
vaddr
return -ENOMEM;
-ENOMEM
ENOMEM
ENOMEM
if (userbuf) {		if (copy_to_user(buf, vaddr + offset, csize)) {			iounmap(vaddr);			return -EFAULT;		}	} else {		memcpy(buf, vaddr + offset, csize);	}
userbuf
userbuf
{		if (copy_to_user(buf, vaddr + offset, csize)) {			iounmap(vaddr);			return -EFAULT;		}	}
if (copy_to_user(buf, vaddr + offset, csize)) {			iounmap(vaddr);			return -EFAULT;		}
copy_to_user(buf, vaddr + offset, csize)
copy_to_user
copy_to_user
buf
buf
vaddr + offset
vaddr
vaddr
offset
offset
csize
csize
{			iounmap(vaddr);			return -EFAULT;		}
iounmap(vaddr);
iounmap(vaddr)
iounmap
iounmap
vaddr
vaddr
return -EFAULT;
-EFAULT
EFAULT
EFAULT
{		memcpy(buf, vaddr + offset, csize);	}
memcpy(buf, vaddr + offset, csize);
memcpy(buf, vaddr + offset, csize)
memcpy
memcpy
buf
buf
vaddr + offset
vaddr
vaddr
offset
offset
csize
csize
iounmap(vaddr);
iounmap(vaddr)
iounmap
iounmap
vaddr
vaddr
return csize;
csize
csize
-----joern-----
(11,22,0)
(16,24,0)
(32,12,0)
(14,33,0)
(13,29,0)
(12,33,0)
(37,3,0)
(48,49,0)
(32,4,0)
(43,49,0)
(17,7,0)
(32,8,0)
(26,44,0)
(23,35,0)
(11,3,0)
(24,8,0)
(39,17,0)
(29,8,0)
(0,33,0)
(25,43,0)
(0,35,0)
(27,32,0)
(47,11,0)
(29,38,0)
(1,40,0)
(3,11,0)
(15,35,0)
(17,29,0)
(18,12,0)
(29,17,0)
(30,35,0)
(33,35,0)
(45,0,0)
(9,21,0)
(2,10,0)
(40,35,0)
(6,29,0)
(20,33,0)
(49,50,0)
(40,8,0)
(12,32,0)
(17,33,0)
(5,19,0)
(19,33,0)
(32,38,0)
(48,44,0)
(36,32,0)
(48,40,0)
(48,21,0)
(28,12,0)
(42,17,0)
(14,50,0)
(33,3,0)
(3,33,0)
(31,26,0)
(41,14,0)
(34,35,0)
(12,7,0)
(45,29,1)
(27,12,1)
(44,26,1)
(47,20,1)
(33,3,1)
(28,18,1)
(39,42,1)
(29,17,1)
(29,8,1)
(43,25,1)
(45,32,1)
(19,33,1)
(6,46,1)
(17,7,1)
(0,33,1)
(48,21,1)
(29,13,1)
(31,19,1)
(3,37,1)
(14,41,1)
(18,36,1)
(5,33,1)
(49,43,1)
(19,5,1)
(29,38,1)
(37,11,1)
(26,31,1)
(17,39,1)
(20,24,1)
(11,47,1)
(3,11,1)
(13,17,1)
(32,12,1)
(12,33,1)
(48,44,1)
(12,28,1)
(46,19,1)
(48,49,1)
(11,22,1)
(48,40,1)
(36,46,1)
(12,7,1)
(40,8,1)
(24,8,1)
(40,1,1)
(9,24,1)
(42,6,1)
(41,29,1)
(14,33,1)
(32,27,1)
(21,9,1)
(0,45,1)
(32,8,1)
(32,38,1)
(1,0,1)
(17,33,1)
(24,16,1)
(25,14,1)
(17,7,2)
(45,29,2)
(14,29,2)
(14,33,2)
(32,8,2)
(44,19,2)
(45,46,2)
(32,12,2)
(32,46,2)
(6,46,2)
(18,46,2)
(26,19,2)
(9,24,2)
(39,46,2)
(47,24,2)
(49,29,2)
(11,22,2)
(20,24,2)
(0,33,2)
(12,7,2)
(29,17,2)
(12,33,2)
(3,24,2)
(27,46,2)
(41,29,2)
(33,3,2)
(32,38,2)
(25,29,2)
(3,11,2)
(12,46,2)
(13,46,2)
(46,19,2)
(21,24,2)
(24,8,2)
(42,46,2)
(17,33,2)
(0,46,2)
(40,46,2)
(29,46,2)
(1,29,2)
(40,8,2)
(31,19,2)
(29,38,2)
(33,24,2)
(37,24,2)
(19,33,2)
(5,24,2)
(48,49,2)
(1,46,2)
(48,40,2)
(43,29,2)
(28,46,2)
(48,21,2)
(48,44,2)
(19,24,2)
(36,46,2)
(0,29,2)
(11,24,2)
(40,29,2)
(17,46,2)
(29,8,2)
-----------------------------------
(0,iounmap(vaddr)
(1,csize)
(2,if (copy_to_user(buf, vaddr + offset, csize)
(3,ioremap(__pfn_to_phys(pfn)
(4,)
(5,vaddr)
(6,buf)
(7,unsigned long offset)
(8,size_t csize)
(9,0)
(10,)
(11,__pfn_to_phys(pfn)
(12,vaddr + offset)
(13,csize)
(14,iounmap(vaddr)
(15,if (userbuf)
(16,csize)
(17,vaddr + offset)
(18,vaddr)
(19,!vaddr)
(20,vaddr)
(21,return 0;)
(22,unsigned long pfn)
(23,if (!csize)
(24,!csize)
(25,EFAULT)
(26,-ENOMEM)
(27,csize)
(28,offset)
(29,copy_to_user(buf, vaddr + offset, csize)
(30,vaddr)
(31,ENOMEM)
(32,memcpy(buf, vaddr + offset, csize)
(33,vaddr = ioremap(__pfn_to_phys(pfn)
(34,if (!vaddr)
(35,)
(36,buf)
(37,PAGE_SIZE)
(38,char *buf)
(39,offset)
(40,return csize;)
(41,vaddr)
(42,vaddr)
(43,-EFAULT)
(44,return -ENOMEM;)
(45,vaddr)
(46,userbuf)
(47,pfn)
(48,RET)
(49,return -EFAULT;)
(50,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^