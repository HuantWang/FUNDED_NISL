-----label-----
1
-----code-----
int __cpu_up(unsigned int cpu, struct task_struct *tidle)
{
	mp_ops->boot_secondary(cpu, tidle);

	/*
	 * Trust is futile.  We should really have timeouts ...
	 */
	while (!cpumask_test_cpu(cpu, &cpu_callin_map)) {
		udelay(100);
		schedule();
	}

	synchronise_count_master(cpu);
	return 0;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
7,8
9,10
9,11
10,11
12,13
12,14
15,16
15,17
15,18
15,19
16,17
17,18
17,19
17,20
18,19
18,20
19,20
22,23
24,25
26,27
26,28
27,28
28,29
28,30
28,31
29,30
31,32
33,34
34,35
36,37
36,38
37,38
38,39
38,40
39,40
42,43
43,44
44,45
46,47
47,48
47,49
48,49
50,51
52,53
-----nextToken-----
2,4,6,8,11,13,14,20,21,23,25,30,32,35,40,41,45,49,51,53
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;ElaboratedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;WhileStatement;UnaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;LiteralExpression;
-----ast_node-----
int __cpu_up(unsigned int cpu, struct task_struct *tidle){	mp_ops->boot_secondary(cpu, tidle);	/*	 * Trust is futile.  We should really have timeouts ...	 */	while (!cpumask_test_cpu(cpu, &cpu_callin_map)) {		udelay(100);		schedule();	}	synchronise_count_master(cpu);	return 0;}
int
__cpu_up(unsigned int cpu, struct task_struct *tidle)
__cpu_up
unsigned int cpu
unsigned int
cpu
cpu
struct task_struct *tidle
struct task_struct
task_struct
*tidle
*
tidle
{	mp_ops->boot_secondary(cpu, tidle);	/*	 * Trust is futile.  We should really have timeouts ...	 */	while (!cpumask_test_cpu(cpu, &cpu_callin_map)) {		udelay(100);		schedule();	}	synchronise_count_master(cpu);	return 0;}
mp_ops->boot_secondary(cpu, tidle);
mp_ops->boot_secondary(cpu, tidle)
mp_ops->boot_secondary
mp_ops
mp_ops
boot_secondary
cpu
cpu
tidle
tidle
while (!cpumask_test_cpu(cpu, &cpu_callin_map)) {		udelay(100);		schedule();	}
!cpumask_test_cpu(cpu, &cpu_callin_map)
cpumask_test_cpu(cpu, &cpu_callin_map)
cpumask_test_cpu
cpumask_test_cpu
cpu
cpu
&cpu_callin_map
cpu_callin_map
cpu_callin_map
{		udelay(100);		schedule();	}
udelay(100);
udelay(100)
udelay
udelay
100
schedule();
schedule()
schedule
schedule
synchronise_count_master(cpu);
synchronise_count_master(cpu)
synchronise_count_master
synchronise_count_master
cpu
cpu
return 0;
0
-----joern-----
(13,0,0)
(18,19,0)
(2,5,0)
(4,19,0)
(15,6,0)
(10,7,0)
(7,6,0)
(0,16,0)
(7,1,0)
(17,7,0)
(5,1,0)
(5,20,0)
(3,1,0)
(5,16,0)
(11,3,0)
(9,5,0)
(12,4,0)
(3,16,0)
(14,0,0)
(7,17,0)
(6,7,0)
(8,16,0)
(5,20,1)
(10,18,1)
(9,2,1)
(10,5,1)
(14,0,1)
(7,6,1)
(7,1,1)
(15,10,1)
(6,15,1)
(11,17,1)
(5,1,1)
(13,3,1)
(17,7,1)
(0,13,1)
(3,11,1)
(3,1,1)
(4,12,1)
(12,17,1)
(18,4,1)
(5,9,1)
(12,17,2)
(15,17,2)
(17,7,2)
(17,17,2)
(10,17,2)
(7,17,2)
(5,1,2)
(18,17,2)
(7,6,2)
(7,1,2)
(4,17,2)
(5,20,2)
(3,1,2)
(6,17,2)
(14,0,2)
-----------------------------------
(0,return 0;)
(1,unsigned int cpu)
(2,cpu)
(3,synchronise_count_master(cpu)
(4,udelay(100)
(5,mp_ops->boot_secondary(cpu, tidle)
(6,&cpu_callin_map)
(7,cpumask_test_cpu(cpu, &cpu_callin_map)
(8,while (!cpumask_test_cpu(cpu, &cpu_callin_map)
(9,tidle)
(10,cpu)
(11,cpu)
(12,100)
(13,0)
(14,RET)
(15,cpu_callin_map)
(16,)
(17,!cpumask_test_cpu(cpu, &cpu_callin_map)
(18,schedule()
(19,)
(20,struct task_struct *tidle)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^