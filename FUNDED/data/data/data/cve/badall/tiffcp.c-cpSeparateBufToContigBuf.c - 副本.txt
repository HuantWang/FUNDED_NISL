-----label-----
1
-----code-----
static void
cpSeparateBufToContigBuf(uint8* out, uint8* in,
    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,
    int bytes_per_sample)
{
	while (rows-- > 0) {
		uint32 j = cols;
		while (j-- > 0) {
			int n = bytes_per_sample;

			while( n-- ) {
				*out++ = *in++;
			}
			out += (spp-1)*bytes_per_sample;
		}
		out += outskew;
		in += inskew;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
3,11
3,12
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
22,23
22,24
23,24
25,26
27,28
27,29
29,30
31,32
31,33
33,34
35,36
35,37
36,37
38,39
40,41
40,42
42,43
44,45
45,46
45,47
46,47
46,48
47,48
48,49
51,52
51,53
51,54
51,55
52,53
53,54
53,55
54,55
56,57
56,58
58,59
59,60
61,62
61,63
62,63
62,64
63,64
64,65
67,68
67,69
67,70
68,69
69,70
69,71
71,72
71,73
73,74
74,75
76,77
76,78
77,78
78,79
80,81
81,82
82,83
82,84
83,84
84,85
85,86
87,88
88,89
89,90
91,92
92,93
92,94
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
103,104
104,105
104,106
105,106
107,108
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,24,26,28,30,32,34,37,39,41,43,49,50,55,57,60,65,66,70,72,75,79,86,90,94,99,100,102,106,108,112,114
-----computeFrom-----
46,47
46,48
62,63
62,64
82,83
82,84
92,93
92,94
95,96
95,97
97,98
97,99
104,105
104,106
110,111
110,112
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;WhileStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;WhileStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;WhileStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static voidcpSeparateBufToContigBuf(uint8* out, uint8* in,    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,    int bytes_per_sample){	while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}}
static void
cpSeparateBufToContigBuf(uint8* out, uint8* in,    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,    int bytes_per_sample)
cpSeparateBufToContigBuf
uint8* out
uint8
uint8
* out
*
out
uint8* in
uint8
uint8
* in
*
in
uint32 rows
uint32
uint32
rows
rows
uint32 cols
uint32
uint32
cols
cols
int outskew
int
outskew
outskew
int inskew
int
inskew
inskew
tsample_t spp
tsample_t
tsample_t
spp
spp
int bytes_per_sample
int
bytes_per_sample
bytes_per_sample
{	while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}}
while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}
rows-- > 0
rows--
rows
rows
0
{		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}
uint32 j = cols;
uint32 j = cols;
uint32
uint32
j = cols
j
= cols
cols
cols
while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}
j-- > 0
j--
j
j
0
{			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}
int n = bytes_per_sample;
int n = bytes_per_sample;
int
n = bytes_per_sample
n
= bytes_per_sample
bytes_per_sample
bytes_per_sample
while( n-- ) {				*out++ = *in++;			}
n--
n
n
{				*out++ = *in++;			}
*out++ = *in++;
*out++ = *in++
*out++
out++
out
out
*in++
in++
in
in
out += (spp-1)*bytes_per_sample;
out += (spp-1)*bytes_per_sample
out
out
(spp-1)*bytes_per_sample
(spp-1)
spp-1
spp
spp
1
bytes_per_sample
bytes_per_sample
out += outskew;
out += outskew
out
out
outskew
outskew
in += inskew;
in += inskew
in
in
inskew
inskew
-----joern-----
(9,20,0)
(29,44,0)
(15,6,0)
(17,20,0)
(23,35,0)
(44,47,0)
(6,18,0)
(17,24,0)
(1,17,0)
(46,3,0)
(20,9,0)
(50,3,0)
(44,32,0)
(5,18,0)
(40,34,0)
(41,2,0)
(27,28,0)
(52,6,0)
(15,28,0)
(25,46,0)
(44,44,0)
(21,34,0)
(22,23,0)
(36,20,0)
(39,11,0)
(9,31,0)
(2,9,0)
(49,22,0)
(6,5,0)
(28,8,0)
(51,48,0)
(19,42,0)
(20,24,0)
(6,15,0)
(2,7,0)
(4,3,0)
(5,5,0)
(38,5,0)
(0,5,0)
(45,21,0)
(44,24,0)
(13,2,0)
(16,11,0)
(27,17,0)
(53,9,0)
(34,42,0)
(12,23,0)
(20,20,0)
(14,44,0)
(17,44,0)
(34,21,0)
(9,2,0)
(23,22,0)
(5,47,0)
(5,37,0)
(20,11,0)
(20,44,0)
(42,43,0)
(3,11,0)
(42,47,0)
(44,20,0)
(17,27,0)
(33,47,0)
(28,15,0)
(3,31,0)
(26,42,0)
(10,47,0)
(6,5,1)
(17,44,1)
(27,17,1)
(17,1,1)
(9,53,1)
(5,37,1)
(19,26,1)
(21,45,1)
(3,50,1)
(25,3,1)
(38,44,1)
(23,35,1)
(40,42,1)
(40,20,1)
(52,27,1)
(4,21,1)
(15,6,1)
(46,25,1)
(44,20,1)
(2,7,1)
(9,2,1)
(1,46,1)
(21,34,1)
(17,24,1)
(46,3,1)
(22,49,1)
(9,31,1)
(25,28,1)
(22,23,1)
(44,29,1)
(53,2,1)
(23,12,1)
(5,18,1)
(6,52,1)
(13,41,1)
(3,31,1)
(26,22,1)
(44,24,1)
(20,44,1)
(50,4,1)
(44,44,1)
(30,22,1)
(28,15,1)
(49,23,1)
(5,0,1)
(44,32,1)
(17,20,1)
(34,40,1)
(45,34,1)
(42,43,1)
(2,13,1)
(0,38,1)
(6,18,1)
(34,42,1)
(42,19,1)
(41,36,1)
(20,9,1)
(5,5,1)
(36,46,1)
(20,24,1)
(20,20,1)
(14,21,1)
(12,5,1)
(29,14,1)
(44,24,2)
(25,21,2)
(36,21,2)
(15,6,2)
(42,22,2)
(0,22,2)
(9,31,2)
(20,44,2)
(5,18,2)
(40,22,2)
(53,21,2)
(45,21,2)
(34,22,2)
(21,34,2)
(5,37,2)
(52,46,2)
(46,3,2)
(9,21,2)
(27,17,2)
(27,46,2)
(34,21,2)
(28,46,2)
(5,5,2)
(6,18,2)
(19,22,2)
(40,21,2)
(28,15,2)
(9,2,2)
(2,21,2)
(20,9,2)
(6,46,2)
(49,22,2)
(23,35,2)
(22,22,2)
(44,22,2)
(17,24,2)
(44,44,2)
(17,46,2)
(29,22,2)
(26,22,2)
(44,32,2)
(14,22,2)
(21,21,2)
(1,46,2)
(20,20,2)
(17,44,2)
(2,7,2)
(45,22,2)
(22,23,2)
(42,43,2)
(5,22,2)
(15,46,2)
(41,21,2)
(21,22,2)
(34,42,2)
(3,31,2)
(6,5,2)
(44,20,2)
(20,21,2)
(46,21,2)
(50,21,2)
(13,21,2)
(23,22,2)
(38,22,2)
(20,24,2)
(25,46,2)
(3,21,2)
(4,21,2)
(12,22,2)
(17,20,2)
(46,46,2)
-----------------------------------
(0,inskew)
(1,out)
(2,spp-1)
(3,n = bytes_per_sample)
(4,n)
(5,in += inskew)
(6,in++)
(7,tsample_t spp)
(8,)
(9,(spp-1)
(10,j)
(11,)
(12,rows)
(13,1)
(14,out)
(15,*in++)
(16,while( n-- )
(17,out++)
(18,uint8* in)
(19,cols)
(20,out += (spp-1)
(21,j-- > 0)
(22,rows-- > 0)
(23,rows--)
(24,uint8* out)
(25,n)
(26,j)
(27,*out++)
(28,*out++ = *in++)
(29,outskew)
(30,RET)
(31,int bytes_per_sample)
(32,int outskew)
(33,while (j-- > 0)
(34,j--)
(35,uint32 rows)
(36,out)
(37,int inskew)
(38,in)
(39,n)
(40,j)
(41,spp)
(42,j = cols)
(43,uint32 cols)
(44,out += outskew)
(45,0)
(46,n--)
(47,)
(48,)
(49,0)
(50,bytes_per_sample)
(51,while (rows-- > 0)
(52,in)
(53,bytes_per_sample)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
