-----label-----
1
-----code-----
static void
cpSeparateBufToContigBuf(uint8* out, uint8* in,
    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,
    int bytes_per_sample)
{
	while (rows-- > 0) {
		uint32 j = cols;
		while (j-- > 0) {
			int n = bytes_per_sample;

			while( n-- ) {
				*out++ = *in++;
			}
			out += (spp-1)*bytes_per_sample;
		}
		out += outskew;
		in += inskew;
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
3,7
3,8
3,9
3,10
3,11
3,12
5,6
5,7
6,7
8,9
8,10
11,12
11,13
12,13
14,15
14,16
17,18
17,19
18,19
20,21
22,23
22,24
23,24
25,26
27,28
27,29
29,30
31,32
31,33
33,34
35,36
35,37
36,37
38,39
40,41
40,42
42,43
44,45
45,46
45,47
46,47
46,48
47,48
48,49
51,52
51,53
51,54
51,55
52,53
53,54
53,55
54,55
56,57
56,58
58,59
59,60
61,62
61,63
62,63
62,64
63,64
64,65
67,68
67,69
67,70
68,69
69,70
69,71
71,72
71,73
73,74
74,75
76,77
76,78
77,78
78,79
80,81
81,82
82,83
82,84
83,84
84,85
85,86
87,88
88,89
89,90
91,92
92,93
92,94
93,94
95,96
95,97
96,97
97,98
97,99
98,99
101,102
103,104
104,105
104,106
105,106
107,108
109,110
110,111
110,112
111,112
113,114
-----nextToken-----
2,4,7,9,10,13,15,16,19,21,24,26,28,30,32,34,37,39,41,43,49,50,55,57,60,65,66,70,72,75,79,86,90,94,99,100,102,106,108,112,114
-----computeFrom-----
46,47
46,48
62,63
62,64
82,83
82,84
92,93
92,94
95,96
95,97
97,98
97,99
104,105
104,106
110,111
110,112
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;WhileStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;IdExpression;Name;WhileStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;IdExpression;Name;WhileStatement;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;UnaryExpression;UnaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static voidcpSeparateBufToContigBuf(uint8* out, uint8* in,    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,    int bytes_per_sample){	while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}}
static void
cpSeparateBufToContigBuf(uint8* out, uint8* in,    uint32 rows, uint32 cols, int outskew, int inskew, tsample_t spp,    int bytes_per_sample)
cpSeparateBufToContigBuf
uint8* out
uint8
uint8
* out
*
out
uint8* in
uint8
uint8
* in
*
in
uint32 rows
uint32
uint32
rows
rows
uint32 cols
uint32
uint32
cols
cols
int outskew
int
outskew
outskew
int inskew
int
inskew
inskew
tsample_t spp
tsample_t
tsample_t
spp
spp
int bytes_per_sample
int
bytes_per_sample
bytes_per_sample
{	while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}}
while (rows-- > 0) {		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}
rows-- > 0
rows--
rows
rows
0
{		uint32 j = cols;		while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}		out += outskew;		in += inskew;	}
uint32 j = cols;
uint32 j = cols;
uint32
uint32
j = cols
j
= cols
cols
cols
while (j-- > 0) {			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}
j-- > 0
j--
j
j
0
{			int n = bytes_per_sample;			while( n-- ) {				*out++ = *in++;			}			out += (spp-1)*bytes_per_sample;		}
int n = bytes_per_sample;
int n = bytes_per_sample;
int
n = bytes_per_sample
n
= bytes_per_sample
bytes_per_sample
bytes_per_sample
while( n-- ) {				*out++ = *in++;			}
n--
n
n
{				*out++ = *in++;			}
*out++ = *in++;
*out++ = *in++
*out++
out++
out
out
*in++
in++
in
in
out += (spp-1)*bytes_per_sample;
out += (spp-1)*bytes_per_sample
out
out
(spp-1)*bytes_per_sample
(spp-1)
spp-1
spp
spp
1
bytes_per_sample
bytes_per_sample
out += outskew;
out += outskew
out
out
outskew
outskew
in += inskew;
in += inskew
in
in
inskew
inskew
-----joern-----
(7,50,0)
(31,38,0)
(17,2,0)
(9,26,0)
(19,35,0)
(26,26,0)
(31,31,0)
(44,38,0)
(7,5,0)
(2,6,0)
(14,2,0)
(49,11,0)
(28,11,0)
(37,47,0)
(21,4,0)
(13,21,0)
(20,44,0)
(4,21,0)
(45,38,0)
(50,19,0)
(31,35,0)
(16,39,0)
(41,43,0)
(44,48,0)
(12,51,0)
(23,27,0)
(41,26,0)
(36,33,0)
(8,44,0)
(46,41,0)
(2,14,0)
(11,26,0)
(25,31,0)
(11,41,0)
(19,50,0)
(1,51,0)
(31,53,0)
(32,2,0)
(39,16,0)
(26,29,0)
(21,34,0)
(22,39,0)
(26,41,0)
(18,41,0)
(3,16,0)
(51,47,0)
(51,24,0)
(28,7,0)
(0,38,0)
(39,44,0)
(33,51,0)
(11,28,0)
(26,14,0)
(14,24,0)
(41,29,0)
(26,47,0)
(41,41,0)
(10,19,0)
(52,47,0)
(11,29,0)
(19,31,0)
(30,4,0)
(41,38,0)
(40,31,0)
(50,7,0)
(15,14,0)
(14,26,0)
(31,35,1)
(22,26,1)
(11,26,1)
(26,41,1)
(33,51,1)
(17,9,1)
(39,22,1)
(4,30,1)
(41,26,1)
(25,40,1)
(32,17,1)
(41,29,1)
(11,29,1)
(26,29,1)
(41,43,1)
(51,24,1)
(11,49,1)
(42,4,1)
(4,21,1)
(1,16,1)
(3,39,1)
(7,50,1)
(44,20,1)
(21,34,1)
(12,1,1)
(11,41,1)
(19,31,1)
(46,18,1)
(21,13,1)
(8,4,1)
(44,48,1)
(14,15,1)
(50,19,1)
(20,8,1)
(28,11,1)
(41,46,1)
(14,24,1)
(10,28,1)
(36,51,1)
(19,10,1)
(2,6,1)
(36,7,1)
(51,12,1)
(33,36,1)
(19,35,1)
(9,33,1)
(41,41,1)
(40,41,1)
(18,16,1)
(31,25,1)
(30,21,1)
(22,44,1)
(2,32,1)
(31,53,1)
(14,2,1)
(26,26,1)
(26,14,1)
(49,33,1)
(16,3,1)
(15,2,1)
(13,31,1)
(31,31,1)
(39,44,1)
(16,39,1)
(41,43,2)
(41,4,2)
(39,16,2)
(11,41,2)
(25,4,2)
(41,41,2)
(44,4,2)
(26,41,2)
(7,33,2)
(20,4,2)
(9,16,2)
(11,33,2)
(33,33,2)
(50,33,2)
(36,33,2)
(31,53,2)
(13,4,2)
(21,4,2)
(28,11,2)
(41,29,2)
(26,29,2)
(50,19,2)
(40,4,2)
(49,33,2)
(36,16,2)
(31,4,2)
(31,35,2)
(14,16,2)
(14,24,2)
(33,51,2)
(14,2,2)
(51,16,2)
(22,4,2)
(19,35,2)
(22,16,2)
(19,31,2)
(10,33,2)
(17,16,2)
(3,16,2)
(26,14,2)
(51,24,2)
(4,4,2)
(28,33,2)
(8,4,2)
(2,6,2)
(3,4,2)
(4,21,2)
(39,4,2)
(2,16,2)
(11,26,2)
(16,4,2)
(11,29,2)
(33,16,2)
(1,16,2)
(12,16,2)
(30,4,2)
(44,48,2)
(16,16,2)
(41,26,2)
(15,16,2)
(26,26,2)
(46,4,2)
(32,16,2)
(16,39,2)
(26,16,2)
(31,31,2)
(21,34,2)
(19,33,2)
(7,50,2)
(18,4,2)
(39,44,2)
-----------------------------------
(0,while (j-- > 0)
(1,n)
(2,spp-1)
(3,0)
(4,rows-- > 0)
(5,)
(6,tsample_t spp)
(7,*out++ = *in++)
(8,j)
(9,out)
(10,in)
(11,out++)
(12,bytes_per_sample)
(13,rows)
(14,(spp-1)
(15,bytes_per_sample)
(16,j-- > 0)
(17,spp)
(18,out)
(19,in++)
(20,cols)
(21,rows--)
(22,j)
(23,while (rows-- > 0)
(24,int bytes_per_sample)
(25,inskew)
(26,out += (spp-1)
(27,)
(28,*out++)
(29,uint8* out)
(30,0)
(31,in += inskew)
(32,1)
(33,n--)
(34,uint32 rows)
(35,uint8* in)
(36,n)
(37,n)
(38,)
(39,j--)
(40,in)
(41,out += outskew)
(42,RET)
(43,int outskew)
(44,j = cols)
(45,j)
(46,outskew)
(47,)
(48,uint32 cols)
(49,out)
(50,*in++)
(51,n = bytes_per_sample)
(52,while( n-- )
(53,int inskew)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
