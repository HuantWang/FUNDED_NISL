-----label-----
1
-----code-----
void t2p_compose_pdf_page(T2P* t2p){

	uint32 i=0;
	uint32 i2=0;
	T2P_TILE* tiles=NULL;
	T2P_BOX* boxp=NULL;
	uint32 tilecountx=0;
	uint32 tilecounty=0;
	uint32 tilewidth=0;
	uint32 tilelength=0;
	int istiled=0;
	float f=0;
	float width_ratio=0;
	float length_ratio=0;
	
	t2p->pdf_xres = t2p->tiff_xres;
	t2p->pdf_yres = t2p->tiff_yres;
	if(t2p->pdf_overrideres) {
		t2p->pdf_xres = t2p->pdf_defaultxres;
		t2p->pdf_yres = t2p->pdf_defaultyres;
	}
	if(t2p->pdf_xres == 0.0)
		t2p->pdf_xres = t2p->pdf_defaultxres;
	if(t2p->pdf_yres == 0.0)
		t2p->pdf_yres = t2p->pdf_defaultyres;
	if (t2p->pdf_image_fillpage) {
		width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;
		length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;
		if (width_ratio < length_ratio ) {
			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;
			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;
		} else {
			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;
			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;
		}
	} else if (t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */
		&& t2p->tiff_resunit != RESUNIT_INCH) {	/* other cases */
		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;
		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;
	} else {
		t2p->pdf_imagewidth = 
			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;
		t2p->pdf_imagelength = 
			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;
	}
	if(t2p->pdf_overridepagesize != 0) {
		t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;
		t2p->pdf_pagelength = t2p->pdf_defaultpagelength;
	} else {
		t2p->pdf_pagewidth = t2p->pdf_imagewidth;
		t2p->pdf_pagelength = t2p->pdf_imagelength;
	}
	t2p->pdf_mediabox.x1=0.0;
	t2p->pdf_mediabox.y1=0.0;
	t2p->pdf_mediabox.x2=t2p->pdf_pagewidth;
	t2p->pdf_mediabox.y2=t2p->pdf_pagelength;
	t2p->pdf_imagebox.x1=0.0;
	t2p->pdf_imagebox.y1=0.0;
	t2p->pdf_imagebox.x2=t2p->pdf_imagewidth;
	t2p->pdf_imagebox.y2=t2p->pdf_imagelength;
	if(t2p->pdf_overridepagesize!=0){
		t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);
		t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);
		t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);
		t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);
	}
	if(t2p->tiff_orientation > 4){
		f=t2p->pdf_mediabox.x2;
		t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;
		t2p->pdf_mediabox.y2=f;
	}
	istiled=((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1;
	if(istiled==0){
		t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);
		return;
	} else {
		tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;
		tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;
		tilecountx=(t2p->tiff_width + 
			tilewidth -1)/ 
			tilewidth;
		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;
		tilecounty=(t2p->tiff_length + 
			tilelength -1)/ 
			tilelength;
		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;
		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=
			t2p->tiff_width % tilewidth;
		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=
			t2p->tiff_length % tilelength;
		tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;
		for(i2=0;i2<tilecounty-1;i2++){
			for(i=0;i<tilecountx-1;i++){
				boxp=&(tiles[i2*tilecountx+i].tile_box);
				boxp->x1 = 
					t2p->pdf_imagebox.x1 
					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)
					/ (float)t2p->tiff_width);
				boxp->x2 = 
					t2p->pdf_imagebox.x1 
					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)
					/ (float)t2p->tiff_width);
				boxp->y1 = 
					t2p->pdf_imagebox.y2 
					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)
					/ (float)t2p->tiff_length);
				boxp->y2 = 
					t2p->pdf_imagebox.y2 
					- ((float)(t2p->pdf_imagelength * i2 * tilelength)
					/ (float)t2p->tiff_length);
			}
			boxp=&(tiles[i2*tilecountx+i].tile_box);
			boxp->x1 = 
				t2p->pdf_imagebox.x1 
				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)
				/ (float)t2p->tiff_width);
			boxp->x2 = t2p->pdf_imagebox.x2;
			boxp->y1 = 
				t2p->pdf_imagebox.y2 
				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)
				/ (float)t2p->tiff_length);
			boxp->y2 = 
				t2p->pdf_imagebox.y2 
				- ((float)(t2p->pdf_imagelength * i2 * tilelength)
				/ (float)t2p->tiff_length);
		}
		for(i=0;i<tilecountx-1;i++){
			boxp=&(tiles[i2*tilecountx+i].tile_box);
			boxp->x1 = 
				t2p->pdf_imagebox.x1 
				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)
				/ (float)t2p->tiff_width);
			boxp->x2 = 
				t2p->pdf_imagebox.x1 
				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)
				/ (float)t2p->tiff_width);
			boxp->y1 = t2p->pdf_imagebox.y1;
			boxp->y2 = 
				t2p->pdf_imagebox.y2 
				- ((float)(t2p->pdf_imagelength * i2 * tilelength)
				/ (float)t2p->tiff_length);
		}
		boxp=&(tiles[i2*tilecountx+i].tile_box);
		boxp->x1 = 
			t2p->pdf_imagebox.x1 
			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)
			/ (float)t2p->tiff_width);
		boxp->x2 = t2p->pdf_imagebox.x2;
		boxp->y1 = t2p->pdf_imagebox.y1;
		boxp->y2 = 
			t2p->pdf_imagebox.y2 
			- ((float)(t2p->pdf_imagelength * i2 * tilelength)
			/ (float)t2p->tiff_length);
	}
	if(t2p->tiff_orientation==0 || t2p->tiff_orientation==1){
		for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){
			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);
		}
		return;
	}
	for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){
		boxp=&(tiles[i].tile_box);
		boxp->x1 -= t2p->pdf_imagebox.x1;
		boxp->x2 -= t2p->pdf_imagebox.x1;
		boxp->y1 -= t2p->pdf_imagebox.y1;
		boxp->y2 -= t2p->pdf_imagebox.y1;
		if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){
			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;
			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;
		}
		if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){
			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;
			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;
		}
		if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){
			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;
			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;
		}
		if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){
			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;
			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;
		}
		if(t2p->tiff_orientation > 4){
			f=boxp->x1;
			boxp->x1 = boxp->y1;
			boxp->y1 = f;
			f=boxp->x2;
			boxp->x2 = boxp->y2;
			boxp->y2 = f; 
			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);
		} else {
			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);
		}
		
	}

	return;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
11,13
11,14
11,15
11,16
11,17
11,18
11,19
11,20
11,21
11,22
11,23
11,24
11,25
11,26
11,27
11,28
11,29
11,30
11,31
11,32
11,33
11,34
11,35
11,36
11,37
11,38
11,39
11,40
11,41
11,42
11,43
11,44
11,45
12,13
13,14
13,15
14,15
16,17
16,18
18,19
20,21
21,22
21,23
22,23
24,25
24,26
26,27
28,29
29,30
29,31
30,31
32,33
32,34
32,35
35,36
36,37
38,39
39,40
39,41
40,41
42,43
42,44
42,45
45,46
46,47
48,49
49,50
49,51
50,51
52,53
52,54
54,55
56,57
57,58
57,59
58,59
60,61
60,62
62,63
64,65
65,66
65,67
66,67
68,69
68,70
70,71
72,73
73,74
73,75
74,75
76,77
76,78
78,79
80,81
81,82
81,83
83,84
83,85
85,86
87,88
88,89
88,90
90,91
90,92
92,93
94,95
95,96
95,97
97,98
97,99
99,100
101,102
102,103
102,104
104,105
104,106
106,107
108,109
109,110
109,111
110,111
110,112
111,112
114,115
114,116
115,116
118,119
119,120
119,121
120,121
120,122
121,122
124,125
124,126
125,126
128,129
128,130
129,130
129,131
130,131
133,134
133,135
134,135
135,136
135,137
136,137
136,138
137,138
140,141
140,142
141,142
144,145
145,146
145,147
146,147
146,148
147,148
150,151
150,152
151,152
154,155
154,156
155,156
155,157
156,157
156,158
157,158
161,162
162,163
162,164
163,164
163,165
164,165
167,168
167,169
168,169
171,172
171,173
172,173
172,174
173,174
173,175
174,175
178,179
179,180
179,181
180,181
180,182
181,182
184,185
184,186
185,186
188,189
188,190
188,191
189,190
189,191
190,191
193,194
193,195
193,196
194,195
195,196
195,197
196,197
198,199
198,200
199,200
199,201
200,201
203,204
203,205
204,205
207,208
208,209
208,210
209,210
211,212
211,213
212,213
212,214
213,214
216,217
216,218
217,218
220,221
220,222
220,223
221,222
221,223
222,223
224,225
226,227
226,228
227,228
228,229
228,230
229,230
229,231
230,231
233,234
233,235
234,235
237,238
238,239
238,240
239,240
239,241
240,241
243,244
243,245
244,245
244,246
245,246
248,249
250,251
250,252
251,252
252,253
252,254
253,254
253,255
254,255
257,258
257,259
258,259
258,260
259,260
262,263
264,265
265,266
265,267
266,267
266,268
267,268
270,271
270,272
271,272
274,275
274,276
274,277
275,276
275,277
276,277
276,278
277,278
277,279
278,279
281,282
283,284
283,285
284,285
284,286
285,286
288,289
290,291
290,292
291,292
292,293
292,294
293,294
293,295
294,295
297,298
297,299
298,299
299,300
299,301
300,301
300,302
303,304
304,305
304,306
305,306
308,309
308,310
309,310
312,313
313,314
313,315
314,315
314,316
315,316
318,319
318,320
319,320
320,321
320,322
321,322
321,323
324,325
325,326
325,327
326,327
329,330
329,331
330,331
333,334
333,335
334,335
335,336
335,337
336,337
336,338
337,338
340,341
340,342
341,342
341,343
342,343
343,344
343,345
344,345
344,346
347,348
348,349
348,350
349,350
352,353
354,355
354,356
355,356
358,359
359,360
359,361
360,361
360,362
361,362
364,365
364,366
365,366
365,367
366,367
367,368
367,369
368,369
368,370
371,372
372,373
372,374
373,374
376,377
378,379
378,380
379,380
382,383
382,384
382,385
383,384
383,385
384,385
384,386
385,386
389,390
389,391
390,391
391,392
391,393
392,393
392,394
393,394
396,397
396,398
397,398
400,401
401,402
401,403
402,403
402,404
403,404
406,407
406,408
407,408
410,411
410,412
411,412
412,413
412,414
413,414
413,415
414,415
417,418
417,419
418,419
421,422
422,423
422,424
423,424
423,425
424,425
427,428
427,429
428,429
431,432
432,433
432,434
433,434
433,435
434,435
434,436
435,436
440,441
441,442
441,443
442,443
442,444
443,444
443,445
444,445
449,450
450,451
450,452
451,452
451,453
452,453
452,454
453,454
457,458
457,459
458,459
461,462
462,463
462,464
463,464
463,465
464,465
464,466
465,466
469,470
469,471
470,471
473,474
474,475
474,476
475,476
475,477
476,477
476,478
477,478
482,483
483,484
483,485
484,485
484,486
485,486
485,487
486,487
491,492
492,493
492,494
493,494
493,495
494,495
494,496
495,496
499,500
499,501
500,501
503,504
504,505
504,506
505,506
505,507
506,507
506,508
507,508
511,512
511,513
512,513
515,516
515,517
516,517
516,518
517,518
517,519
518,519
522,523
522,524
522,525
522,526
523,524
524,525
524,526
525,526
525,527
526,527
526,528
527,528
531,532
532,533
532,534
533,534
534,535
534,536
535,536
535,537
536,537
539,540
539,541
540,541
544,545
545,546
545,547
546,547
546,548
547,548
547,549
548,549
552,553
553,554
553,555
554,555
555,556
555,557
556,557
556,558
557,558
560,561
560,562
561,562
565,566
566,567
566,568
567,568
567,569
568,569
568,570
569,570
573,574
574,575
574,576
575,576
576,577
576,578
577,578
577,579
578,579
581,582
581,583
582,583
586,587
587,588
587,589
588,589
588,590
589,590
589,591
590,591
594,595
595,596
595,597
596,597
597,598
597,599
598,599
598,600
599,600
602,603
602,604
603,604
607,608
607,609
608,609
608,610
609,610
609,611
610,611
614,615
614,616
614,617
615,616
616,617
616,618
617,618
619,620
619,621
620,621
620,622
621,622
625,626
626,627
626,628
627,628
627,629
628,629
628,630
629,630
633,634
633,635
634,635
634,636
635,636
639,640
640,641
640,642
641,642
641,643
642,643
642,644
643,644
647,648
649,650
650,651
650,652
651,652
653,654
653,655
653,656
654,655
655,656
655,657
656,657
656,658
657,658
658,659
658,660
659,660
659,661
660,661
663,664
663,665
664,665
671,672
671,673
671,674
672,673
672,674
673,674
676,677
676,678
677,678
678,679
678,680
678,681
679,680
681,682
682,683
683,684
683,685
684,685
687,688
687,689
688,689
692,693
692,694
692,695
692,696
692,697
692,698
692,699
692,700
692,701
692,702
692,703
692,704
692,705
692,706
692,707
692,708
693,694
694,695
694,696
695,696
697,698
697,699
698,699
699,700
699,701
700,701
700,702
701,702
704,705
704,706
705,706
709,710
710,711
710,712
711,712
713,714
713,715
714,715
715,716
715,717
716,717
716,718
717,718
720,721
720,722
721,722
725,726
726,727
726,728
727,728
729,730
729,731
730,731
731,732
731,733
732,733
732,734
733,734
733,735
734,735
737,738
740,741
742,743
743,744
743,745
744,745
744,746
745,746
746,747
746,748
747,748
747,749
748,749
751,752
751,753
752,753
756,757
758,759
759,760
759,761
760,761
762,763
762,764
763,764
764,765
764,766
765,766
765,767
766,767
766,768
767,768
770,771
773,774
775,776
776,777
776,778
777,778
777,779
778,779
779,780
779,781
780,781
780,782
781,782
784,785
784,786
785,786
789,790
791,792
792,793
792,794
793,794
793,795
794,795
795,796
795,797
796,797
796,798
797,798
800,801
800,802
801,802
805,806
805,807
806,807
806,808
807,808
810,811
812,813
813,814
813,815
814,815
814,816
815,816
816,817
816,818
817,818
817,819
818,819
821,822
821,823
822,823
826,827
826,828
827,828
827,829
828,829
831,832
833,834
834,835
834,836
835,836
837,838
837,839
838,839
839,840
839,841
840,841
840,842
841,842
844,845
844,846
845,846
849,850
849,851
849,852
849,853
850,851
851,852
851,853
852,853
855,856
855,857
856,857
858,859
858,860
859,860
862,863
863,864
865,866
865,867
865,868
865,869
865,870
865,871
866,867
866,868
866,869
866,870
867,868
868,869
868,870
869,870
872,873
872,874
873,874
875,876
875,877
876,877
879,880
880,881
882,883
882,884
882,885
882,886
882,887
883,884
884,885
884,886
885,886
887,888
888,889
889,890
889,891
890,891
890,892
891,892
893,894
893,895
894,895
894,896
895,896
897,898
899,900
902,903
903,904
903,905
904,905
904,906
905,906
908,909
908,910
909,910
909,911
910,911
910,912
911,912
915,916
916,917
916,918
917,918
917,919
918,919
918,920
921,922
922,923
922,924
923,924
923,925
924,925
924,926
925,926
928,929
930,931
932,933
932,934
933,934
933,935
936,937
936,938
937,938
940,941
941,942
941,943
942,943
942,944
943,944
946,947
946,948
947,948
947,949
948,949
948,950
949,950
953,954
954,955
954,956
955,956
955,957
956,957
956,958
959,960
960,961
960,962
961,962
961,963
962,963
962,964
963,964
966,967
967,968
967,969
968,969
971,972
973,974
973,975
974,975
974,976
977,978
977,979
978,979
981,982
982,983
982,984
983,984
983,985
984,985
987,988
987,989
988,989
988,990
989,990
989,991
990,991
994,995
995,996
995,997
996,997
996,998
997,998
997,999
1000,1001
1001,1002
1001,1003
1002,1003
1002,1004
1003,1004
1003,1005
1004,1005
1007,1008
1008,1009
1008,1010
1009,1010
1012,1013
1014,1015
1014,1016
1015,1016
1015,1017
1018,1019
1018,1020
1019,1020
1022,1023
1023,1024
1023,1025
1024,1025
1024,1026
1025,1026
1028,1029
1028,1030
1029,1030
1029,1031
1030,1031
1030,1032
1031,1032
1035,1036
1036,1037
1036,1038
1037,1038
1037,1039
1038,1039
1038,1040
1041,1042
1042,1043
1042,1044
1043,1044
1043,1045
1044,1045
1044,1046
1045,1046
1048,1049
1050,1051
1052,1053
1052,1054
1053,1054
1053,1055
1056,1057
1056,1058
1057,1058
1060,1061
1061,1062
1061,1063
1062,1063
1064,1065
1065,1066
1066,1067
1066,1068
1067,1068
1067,1069
1068,1069
1070,1071
1070,1072
1071,1072
1071,1073
1072,1073
1074,1075
1076,1077
1079,1080
1080,1081
1080,1082
1081,1082
1081,1083
1082,1083
1085,1086
1085,1087
1086,1087
1086,1088
1087,1088
1087,1089
1088,1089
1092,1093
1093,1094
1093,1095
1094,1095
1094,1096
1095,1096
1095,1097
1098,1099
1099,1100
1099,1101
1100,1101
1100,1102
1101,1102
1101,1103
1102,1103
1105,1106
1107,1108
1109,1110
1109,1111
1110,1111
1110,1112
1113,1114
1113,1115
1114,1115
1117,1118
1118,1119
1118,1120
1119,1120
1119,1121
1120,1121
1123,1124
1123,1125
1124,1125
1124,1126
1125,1126
1129,1130
1130,1131
1130,1132
1131,1132
1131,1133
1132,1133
1135,1136
1135,1137
1136,1137
1136,1138
1137,1138
1137,1139
1138,1139
1142,1143
1143,1144
1143,1145
1144,1145
1144,1146
1145,1146
1145,1147
1148,1149
1149,1150
1149,1151
1150,1151
1150,1152
1151,1152
1151,1153
1152,1153
1155,1156
1156,1157
1156,1158
1157,1158
1160,1161
1162,1163
1162,1164
1163,1164
1163,1165
1166,1167
1166,1168
1167,1168
1170,1171
1171,1172
1171,1173
1172,1173
1172,1174
1173,1174
1176,1177
1176,1178
1177,1178
1177,1179
1178,1179
1178,1180
1179,1180
1183,1184
1184,1185
1184,1186
1185,1186
1185,1187
1186,1187
1186,1188
1189,1190
1190,1191
1190,1192
1191,1192
1191,1193
1192,1193
1192,1194
1193,1194
1196,1197
1198,1199
1200,1201
1200,1202
1201,1202
1201,1203
1204,1205
1204,1206
1205,1206
1208,1209
1208,1210
1208,1211
1208,1212
1209,1210
1210,1211
1210,1212
1211,1212
1214,1215
1214,1216
1215,1216
1217,1218
1217,1219
1218,1219
1221,1222
1222,1223
1224,1225
1224,1226
1224,1227
1224,1228
1224,1229
1225,1226
1226,1227
1226,1228
1227,1228
1229,1230
1230,1231
1231,1232
1231,1233
1232,1233
1232,1234
1233,1234
1235,1236
1235,1237
1236,1237
1236,1238
1237,1238
1239,1240
1241,1242
1244,1245
1245,1246
1245,1247
1246,1247
1246,1248
1247,1248
1250,1251
1250,1252
1251,1252
1251,1253
1252,1253
1252,1254
1253,1254
1257,1258
1258,1259
1258,1260
1259,1260
1259,1261
1260,1261
1260,1262
1263,1264
1264,1265
1264,1266
1265,1266
1265,1267
1266,1267
1266,1268
1267,1268
1270,1271
1272,1273
1274,1275
1274,1276
1275,1276
1275,1277
1278,1279
1278,1280
1279,1280
1282,1283
1283,1284
1283,1285
1284,1285
1284,1286
1285,1286
1288,1289
1288,1290
1289,1290
1289,1291
1290,1291
1290,1292
1291,1292
1295,1296
1296,1297
1296,1298
1297,1298
1297,1299
1298,1299
1298,1300
1301,1302
1302,1303
1302,1304
1303,1304
1303,1305
1304,1305
1304,1306
1305,1306
1308,1309
1309,1310
1309,1311
1310,1311
1313,1314
1315,1316
1315,1317
1316,1317
1316,1318
1319,1320
1319,1321
1320,1321
1323,1324
1324,1325
1324,1326
1325,1326
1325,1327
1326,1327
1329,1330
1329,1331
1330,1331
1330,1332
1331,1332
1335,1336
1336,1337
1336,1338
1337,1338
1337,1339
1338,1339
1341,1342
1341,1343
1342,1343
1342,1344
1343,1344
1343,1345
1344,1345
1348,1349
1349,1350
1349,1351
1350,1351
1350,1352
1351,1352
1351,1353
1354,1355
1355,1356
1355,1357
1356,1357
1356,1358
1357,1358
1357,1359
1358,1359
1361,1362
1363,1364
1365,1366
1365,1367
1366,1367
1366,1368
1369,1370
1369,1371
1370,1371
1373,1374
1374,1375
1374,1376
1375,1376
1377,1378
1378,1379
1379,1380
1379,1381
1380,1381
1380,1382
1381,1382
1383,1384
1383,1385
1384,1385
1384,1386
1385,1386
1387,1388
1389,1390
1392,1393
1393,1394
1393,1395
1394,1395
1394,1396
1395,1396
1398,1399
1398,1400
1399,1400
1399,1401
1400,1401
1400,1402
1401,1402
1405,1406
1406,1407
1406,1408
1407,1408
1407,1409
1408,1409
1408,1410
1411,1412
1412,1413
1412,1414
1413,1414
1413,1415
1414,1415
1414,1416
1415,1416
1418,1419
1420,1421
1422,1423
1422,1424
1423,1424
1423,1425
1426,1427
1426,1428
1427,1428
1430,1431
1431,1432
1431,1433
1432,1433
1432,1434
1433,1434
1436,1437
1436,1438
1437,1438
1437,1439
1438,1439
1442,1443
1443,1444
1443,1445
1444,1445
1444,1446
1445,1446
1448,1449
1448,1450
1449,1450
1449,1451
1450,1451
1454,1455
1455,1456
1455,1457
1456,1457
1456,1458
1457,1458
1460,1461
1460,1462
1461,1462
1461,1463
1462,1463
1462,1464
1463,1464
1467,1468
1468,1469
1468,1470
1469,1470
1469,1471
1470,1471
1470,1472
1473,1474
1474,1475
1474,1476
1475,1476
1475,1477
1476,1477
1476,1478
1477,1478
1480,1481
1482,1483
1484,1485
1484,1486
1485,1486
1485,1487
1488,1489
1488,1490
1489,1490
1492,1493
1492,1494
1493,1494
1493,1495
1494,1495
1494,1496
1495,1496
1495,1497
1496,1497
1500,1501
1500,1502
1501,1502
1501,1503
1502,1503
1506,1507
1506,1508
1507,1508
1507,1509
1507,1510
1507,1511
1508,1509
1509,1510
1509,1511
1510,1511
1513,1514
1513,1515
1514,1515
1516,1517
1516,1518
1517,1518
1518,1519
1518,1520
1519,1520
1519,1521
1520,1521
1523,1524
1523,1525
1524,1525
1528,1529
1529,1530
1531,1532
1532,1533
1533,1534
1533,1535
1533,1536
1534,1535
1536,1537
1537,1538
1538,1539
1538,1540
1539,1540
1539,1541
1540,1541
1542,1543
1547,1548
1547,1549
1547,1550
1547,1551
1548,1549
1549,1550
1549,1551
1550,1551
1553,1554
1553,1555
1554,1555
1556,1557
1556,1558
1557,1558
1558,1559
1558,1560
1559,1560
1559,1561
1560,1561
1563,1564
1563,1565
1564,1565
1568,1569
1569,1570
1571,1572
1571,1573
1571,1574
1571,1575
1571,1576
1571,1577
1571,1578
1571,1579
1571,1580
1571,1581
1572,1573
1573,1574
1573,1575
1574,1575
1576,1577
1577,1578
1578,1579
1578,1580
1579,1580
1579,1581
1580,1581
1582,1583
1585,1586
1586,1587
1586,1588
1587,1588
1587,1589
1588,1589
1591,1592
1591,1593
1592,1593
1592,1594
1593,1594
1597,1598
1598,1599
1598,1600
1599,1600
1599,1601
1600,1601
1603,1604
1603,1605
1604,1605
1604,1606
1605,1606
1609,1610
1610,1611
1610,1612
1611,1612
1611,1613
1612,1613
1615,1616
1615,1617
1616,1617
1616,1618
1617,1618
1621,1622
1622,1623
1622,1624
1623,1624
1623,1625
1624,1625
1627,1628
1627,1629
1628,1629
1628,1630
1629,1630
1633,1634
1633,1635
1634,1635
1634,1636
1635,1636
1635,1637
1636,1637
1636,1638
1637,1638
1641,1642
1641,1643
1642,1643
1642,1644
1643,1644
1647,1648
1647,1649
1648,1649
1649,1650
1649,1651
1650,1651
1650,1652
1651,1652
1654,1655
1654,1656
1655,1656
1655,1657
1656,1657
1656,1658
1657,1658
1657,1659
1658,1659
1662,1663
1662,1664
1663,1664
1663,1665
1664,1665
1668,1669
1668,1670
1669,1670
1672,1673
1673,1674
1673,1675
1674,1675
1674,1676
1675,1676
1678,1679
1678,1680
1679,1680
1679,1681
1680,1681
1680,1682
1681,1682
1681,1683
1682,1683
1686,1687
1686,1688
1687,1688
1687,1689
1688,1689
1692,1693
1692,1694
1693,1694
1696,1697
1696,1698
1697,1698
1697,1699
1698,1699
1698,1700
1699,1700
1699,1701
1700,1701
1704,1705
1704,1706
1705,1706
1705,1707
1706,1707
1710,1711
1710,1712
1711,1712
1712,1713
1712,1714
1713,1714
1713,1715
1714,1715
1717,1718
1717,1719
1718,1719
1718,1720
1719,1720
1719,1721
1720,1721
1720,1722
1721,1722
1725,1726
1725,1727
1726,1727
1726,1728
1727,1728
1731,1732
1731,1733
1732,1733
1735,1736
1736,1737
1736,1738
1737,1738
1737,1739
1738,1739
1741,1742
1741,1743
1742,1743
1742,1744
1743,1744
1743,1745
1744,1745
1744,1746
1745,1746
1749,1750
1749,1751
1750,1751
1750,1752
1751,1752
1755,1756
1755,1757
1756,1757
1759,1760
1759,1761
1760,1761
1760,1762
1761,1762
1761,1763
1762,1763
1762,1764
1763,1764
1767,1768
1767,1769
1768,1769
1768,1770
1769,1770
1773,1774
1773,1775
1774,1775
1775,1776
1775,1777
1776,1777
1776,1778
1777,1778
1780,1781
1780,1782
1781,1782
1781,1783
1782,1783
1782,1784
1783,1784
1783,1785
1784,1785
1788,1789
1788,1790
1789,1790
1789,1791
1790,1791
1794,1795
1794,1796
1795,1796
1798,1799
1799,1800
1799,1801
1800,1801
1800,1802
1801,1802
1804,1805
1804,1806
1805,1806
1805,1807
1806,1807
1806,1808
1807,1808
1807,1809
1808,1809
1812,1813
1812,1814
1813,1814
1813,1815
1814,1815
1818,1819
1818,1820
1819,1820
1822,1823
1822,1824
1823,1824
1823,1825
1824,1825
1824,1826
1825,1826
1825,1827
1826,1827
1830,1831
1830,1832
1831,1832
1831,1833
1832,1833
1836,1837
1836,1838
1837,1838
1838,1839
1838,1840
1839,1840
1839,1841
1840,1841
1843,1844
1843,1845
1844,1845
1844,1846
1845,1846
1845,1847
1846,1847
1846,1848
1847,1848
1851,1852
1851,1853
1852,1853
1852,1854
1853,1854
1857,1858
1857,1859
1858,1859
1861,1862
1862,1863
1862,1864
1863,1864
1863,1865
1864,1865
1867,1868
1867,1869
1868,1869
1868,1870
1869,1870
1869,1871
1870,1871
1870,1872
1871,1872
1875,1876
1875,1877
1876,1877
1876,1878
1877,1878
1881,1882
1881,1883
1882,1883
1885,1886
1885,1887
1885,1888
1886,1887
1886,1888
1887,1888
1887,1889
1888,1889
1892,1893
1892,1894
1892,1895
1892,1896
1892,1897
1892,1898
1892,1899
1893,1894
1894,1895
1894,1896
1895,1896
1897,1898
1897,1899
1898,1899
1901,1902
1902,1903
1902,1904
1903,1904
1903,1905
1904,1905
1907,1908
1907,1909
1908,1909
1911,1912
1912,1913
1912,1914
1913,1914
1913,1915
1914,1915
1917,1918
1919,1920
1920,1921
1920,1922
1921,1922
1923,1924
1923,1925
1924,1925
1927,1928
1928,1929
1928,1930
1929,1930
1929,1931
1930,1931
1933,1934
1933,1935
1934,1935
1937,1938
1938,1939
1938,1940
1939,1940
1939,1941
1940,1941
1943,1944
1945,1946
1946,1947
1946,1948
1946,1949
1947,1948
1949,1950
1951,1952
1951,1953
1952,1953
1955,1956
1956,1957
1957,1958
1957,1959
1957,1960
1958,1959
1960,1961
1962,1963
1962,1964
1963,1964
-----nextToken-----
2,4,7,9,10,15,17,19,23,25,27,31,33,34,37,41,43,44,47,51,53,55,59,61,63,67,69,71,75,77,79,82,84,86,89,91,93,96,98,100,103,105,107,112,113,116,117,122,123,126,127,131,132,138,139,142,143,148,149,152,153,158,159,160,165,166,169,170,175,176,177,182,183,186,187,191,192,197,201,202,205,206,210,214,215,218,219,223,225,231,232,235,236,241,242,246,247,249,255,256,260,261,263,268,269,272,273,279,280,282,286,287,289,295,296,301,302,306,307,310,311,316,317,322,323,327,328,331,332,338,339,345,346,350,351,353,356,357,362,363,369,370,374,375,377,380,381,386,387,388,394,395,398,399,404,405,408,409,415,416,419,420,425,426,429,430,436,437,438,439,445,446,447,448,454,455,456,459,460,466,467,468,471,472,478,479,480,481,487,488,489,490,496,497,498,501,502,508,509,510,513,514,519,520,521,528,529,530,537,538,541,542,543,549,550,551,558,559,562,563,564,570,571,572,579,580,583,584,585,591,592,593,600,601,604,605,606,611,612,613,618,622,623,624,630,631,632,636,637,638,644,645,646,648,652,661,662,665,666,667,668,669,670,674,675,680,685,686,689,690,691,696,702,703,706,707,708,712,718,719,722,723,724,728,735,736,738,739,741,749,750,753,754,755,757,761,768,769,771,772,774,782,783,786,787,788,790,798,799,802,803,804,808,809,811,819,820,823,824,825,829,830,832,836,842,843,846,847,848,853,854,857,860,861,864,870,871,874,877,878,881,886,892,896,898,900,901,906,907,912,913,914,919,920,926,927,929,931,934,935,938,939,944,945,950,951,952,957,958,964,965,969,970,972,975,976,979,980,985,986,991,992,993,998,999,1005,1006,1010,1011,1013,1016,1017,1020,1021,1026,1027,1032,1033,1034,1039,1040,1046,1047,1049,1051,1054,1055,1058,1059,1063,1069,1073,1075,1077,1078,1083,1084,1089,1090,1091,1096,1097,1103,1104,1106,1108,1111,1112,1115,1116,1121,1122,1126,1127,1128,1133,1134,1139,1140,1141,1146,1147,1153,1154,1158,1159,1161,1164,1165,1168,1169,1174,1175,1180,1181,1182,1187,1188,1194,1195,1197,1199,1202,1203,1206,1207,1212,1213,1216,1219,1220,1223,1228,1234,1238,1240,1242,1243,1248,1249,1254,1255,1256,1261,1262,1268,1269,1271,1273,1276,1277,1280,1281,1286,1287,1292,1293,1294,1299,1300,1306,1307,1311,1312,1314,1317,1318,1321,1322,1327,1328,1332,1333,1334,1339,1340,1345,1346,1347,1352,1353,1359,1360,1362,1364,1367,1368,1371,1372,1376,1382,1386,1388,1390,1391,1396,1397,1402,1403,1404,1409,1410,1416,1417,1419,1421,1424,1425,1428,1429,1434,1435,1439,1440,1441,1446,1447,1451,1452,1453,1458,1459,1464,1465,1466,1471,1472,1478,1479,1481,1483,1486,1487,1490,1491,1497,1498,1499,1503,1504,1505,1511,1512,1515,1521,1522,1525,1526,1527,1530,1535,1541,1543,1544,1545,1546,1551,1552,1555,1561,1562,1565,1566,1567,1570,1575,1581,1583,1584,1589,1590,1594,1595,1596,1601,1602,1606,1607,1608,1613,1614,1618,1619,1620,1625,1626,1630,1631,1632,1638,1639,1640,1644,1645,1646,1652,1653,1659,1660,1661,1665,1666,1667,1670,1671,1676,1677,1683,1684,1685,1689,1690,1691,1694,1695,1701,1702,1703,1707,1708,1709,1715,1716,1722,1723,1724,1728,1729,1730,1733,1734,1739,1740,1746,1747,1748,1752,1753,1754,1757,1758,1764,1765,1766,1770,1771,1772,1778,1779,1785,1786,1787,1791,1792,1793,1796,1797,1802,1803,1809,1810,1811,1815,1816,1817,1820,1821,1827,1828,1829,1833,1834,1835,1841,1842,1848,1849,1850,1854,1855,1856,1859,1860,1865,1866,1872,1873,1874,1878,1879,1880,1883,1884,1889,1890,1891,1896,1899,1900,1905,1906,1909,1910,1915,1916,1918,1922,1925,1926,1931,1932,1935,1936,1941,1942,1944,1948,1950,1953,1954,1959,1961,1964,1965,1966
-----computeFrom-----
109,110
109,111
119,120
119,121
135,136
135,137
145,146
145,147
155,156
155,157
162,163
162,164
172,173
172,174
179,180
179,181
195,196
195,197
198,199
198,200
208,209
208,210
211,212
211,213
221,222
221,223
228,229
228,230
238,239
238,240
243,244
243,245
252,253
252,254
257,258
257,259
265,266
265,267
275,276
275,277
276,277
276,278
283,284
283,285
292,293
292,294
297,298
297,299
313,314
313,315
318,319
318,320
335,336
335,337
340,341
340,342
341,342
341,343
359,360
359,361
364,365
364,366
365,366
365,367
383,384
383,385
391,392
391,393
401,402
401,403
412,413
412,414
422,423
422,424
432,433
432,434
441,442
441,443
450,451
450,452
462,463
462,464
474,475
474,476
483,484
483,485
492,493
492,494
504,505
504,506
516,517
516,518
524,525
524,526
532,533
532,534
534,535
534,536
545,546
545,547
553,554
553,555
555,556
555,557
566,567
566,568
574,575
574,576
576,577
576,578
587,588
587,589
595,596
595,597
597,598
597,599
608,609
608,610
616,617
616,618
626,627
626,628
640,641
640,642
650,651
650,652
655,656
655,657
672,673
672,674
694,695
694,696
710,711
710,712
726,727
726,728
729,730
729,731
731,732
731,733
732,733
732,734
743,744
743,745
759,760
759,761
762,763
762,764
764,765
764,766
765,766
765,767
776,777
776,778
792,793
792,794
805,806
805,807
813,814
813,815
826,827
826,828
834,835
834,836
851,852
851,853
855,856
855,857
858,859
858,860
868,869
868,870
872,873
872,874
875,876
875,877
884,885
884,886
893,894
893,895
894,895
894,896
903,904
903,905
908,909
908,910
916,917
916,918
922,923
922,924
923,924
923,925
941,942
941,943
946,947
946,948
954,955
954,956
960,961
960,962
961,962
961,963
967,968
967,969
982,983
982,984
987,988
987,989
995,996
995,997
1001,1002
1001,1003
1002,1003
1002,1004
1008,1009
1008,1010
1023,1024
1023,1025
1028,1029
1028,1030
1036,1037
1036,1038
1042,1043
1042,1044
1043,1044
1043,1045
1061,1062
1061,1063
1070,1071
1070,1072
1071,1072
1071,1073
1080,1081
1080,1082
1085,1086
1085,1087
1093,1094
1093,1095
1099,1100
1099,1101
1100,1101
1100,1102
1118,1119
1118,1120
1130,1131
1130,1132
1135,1136
1135,1137
1143,1144
1143,1145
1149,1150
1149,1151
1150,1151
1150,1152
1156,1157
1156,1158
1171,1172
1171,1173
1176,1177
1176,1178
1184,1185
1184,1186
1190,1191
1190,1192
1191,1192
1191,1193
1210,1211
1210,1212
1214,1215
1214,1216
1217,1218
1217,1219
1226,1227
1226,1228
1235,1236
1235,1237
1236,1237
1236,1238
1245,1246
1245,1247
1250,1251
1250,1252
1258,1259
1258,1260
1264,1265
1264,1266
1265,1266
1265,1267
1283,1284
1283,1285
1288,1289
1288,1290
1296,1297
1296,1298
1302,1303
1302,1304
1303,1304
1303,1305
1309,1310
1309,1311
1324,1325
1324,1326
1336,1337
1336,1338
1341,1342
1341,1343
1349,1350
1349,1351
1355,1356
1355,1357
1356,1357
1356,1358
1374,1375
1374,1376
1383,1384
1383,1385
1384,1385
1384,1386
1393,1394
1393,1395
1398,1399
1398,1400
1406,1407
1406,1408
1412,1413
1412,1414
1413,1414
1413,1415
1431,1432
1431,1433
1443,1444
1443,1445
1455,1456
1455,1457
1460,1461
1460,1462
1468,1469
1468,1470
1474,1475
1474,1476
1475,1476
1475,1477
1493,1494
1493,1495
1494,1495
1494,1496
1500,1501
1500,1502
1509,1510
1509,1511
1513,1514
1513,1515
1549,1550
1549,1551
1553,1554
1553,1555
1573,1574
1573,1575
1586,1587
1586,1588
1598,1599
1598,1600
1610,1611
1610,1612
1622,1623
1622,1624
1634,1635
1634,1636
1635,1636
1635,1637
1641,1642
1641,1643
1649,1650
1649,1651
1654,1655
1654,1656
1655,1656
1655,1657
1673,1674
1673,1675
1678,1679
1678,1680
1679,1680
1679,1681
1697,1698
1697,1699
1698,1699
1698,1700
1704,1705
1704,1706
1712,1713
1712,1714
1717,1718
1717,1719
1718,1719
1718,1720
1736,1737
1736,1738
1741,1742
1741,1743
1742,1743
1742,1744
1760,1761
1760,1762
1761,1762
1761,1763
1767,1768
1767,1769
1775,1776
1775,1777
1780,1781
1780,1782
1781,1782
1781,1783
1799,1800
1799,1801
1804,1805
1804,1806
1805,1806
1805,1807
1823,1824
1823,1825
1824,1825
1824,1826
1830,1831
1830,1832
1838,1839
1838,1840
1843,1844
1843,1845
1844,1845
1844,1846
1862,1863
1862,1864
1867,1868
1867,1869
1868,1869
1868,1870
1886,1887
1886,1888
1894,1895
1894,1896
1902,1903
1902,1904
1912,1913
1912,1914
1920,1921
1920,1922
1928,1929
1928,1930
1938,1939
1938,1940
-----guardedBy-----
159,166
158,169
176,183
175,186
223,249
286,331
386,408
519,604
611,644
1503,1525
1644,1689
1707,1752
1770,1815
1833,1878
1889,1953
1890,1954
-----guardedByNegation-----
225,263
286,380
386,429
1889,1964
1890,1965
-----lastLexicalUse-----
286,380
386,429
1889,1964
1890,1965
-----jump-----
286,380
386,429
1889,1964
1890,1965
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;EqualsInitializer;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;UnaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;UnaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;LiteralExpression;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;ConditionalExpression;UnaryExpression;BinaryExpression;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;LiteralExpression;LiteralExpression;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ReturnStatement;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;LiteralExpression;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;BinaryExpression;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;LiteralExpression;ReturnStatement;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;FieldReference;UnaryExpression;ArraySubscriptExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;Name;UnaryExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;UnaryExpression;UnaryExpression;FieldReference;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;BinaryExpression;BinaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;FieldReference;IdExpression;Name;Name;Name;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;FieldReference;IdExpression;Name;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;FieldReference;IdExpression;Name;Name;ReturnStatement;
-----ast_node-----
void t2p_compose_pdf_page(T2P* t2p){	uint32 i=0;	uint32 i2=0;	T2P_TILE* tiles=NULL;	T2P_BOX* boxp=NULL;	uint32 tilecountx=0;	uint32 tilecounty=0;	uint32 tilewidth=0;	uint32 tilelength=0;	int istiled=0;	float f=0;	float width_ratio=0;	float length_ratio=0;		t2p->pdf_xres = t2p->tiff_xres;	t2p->pdf_yres = t2p->tiff_yres;	if(t2p->pdf_overrideres) {		t2p->pdf_xres = t2p->pdf_defaultxres;		t2p->pdf_yres = t2p->pdf_defaultyres;	}	if(t2p->pdf_xres == 0.0)		t2p->pdf_xres = t2p->pdf_defaultxres;	if(t2p->pdf_yres == 0.0)		t2p->pdf_yres = t2p->pdf_defaultyres;	if (t2p->pdf_image_fillpage) {		width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;		length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;		if (width_ratio < length_ratio ) {			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		} else {			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}	} else if (t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */		&& t2p->tiff_resunit != RESUNIT_INCH) {	/* other cases */		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;	} else {		t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;		t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;	}	if(t2p->pdf_overridepagesize != 0) {		t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;		t2p->pdf_pagelength = t2p->pdf_defaultpagelength;	} else {		t2p->pdf_pagewidth = t2p->pdf_imagewidth;		t2p->pdf_pagelength = t2p->pdf_imagelength;	}	t2p->pdf_mediabox.x1=0.0;	t2p->pdf_mediabox.y1=0.0;	t2p->pdf_mediabox.x2=t2p->pdf_pagewidth;	t2p->pdf_mediabox.y2=t2p->pdf_pagelength;	t2p->pdf_imagebox.x1=0.0;	t2p->pdf_imagebox.y1=0.0;	t2p->pdf_imagebox.x2=t2p->pdf_imagewidth;	t2p->pdf_imagebox.y2=t2p->pdf_imagelength;	if(t2p->pdf_overridepagesize!=0){		t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);		t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);	}	if(t2p->tiff_orientation > 4){		f=t2p->pdf_mediabox.x2;		t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;		t2p->pdf_mediabox.y2=f;	}	istiled=((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1;	if(istiled==0){		t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);		return;	} else {		tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;		tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;		tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;		tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength;		tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;		for(i2=0;i2<tilecounty-1;i2++){			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		for(i=0;i<tilecountx-1;i++){			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		boxp=&(tiles[i2*tilecountx+i].tile_box);		boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width);		boxp->x2 = t2p->pdf_imagebox.x2;		boxp->y1 = t2p->pdf_imagebox.y1;		boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length);	}	if(t2p->tiff_orientation==0 || t2p->tiff_orientation==1){		for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}		return;	}	for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){		boxp=&(tiles[i].tile_box);		boxp->x1 -= t2p->pdf_imagebox.x1;		boxp->x2 -= t2p->pdf_imagebox.x1;		boxp->y1 -= t2p->pdf_imagebox.y1;		boxp->y2 -= t2p->pdf_imagebox.y1;		if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation > 4){			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		} else {			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}			}	return;}
void
t2p_compose_pdf_page(T2P* t2p)
t2p_compose_pdf_page
T2P* t2p
T2P
T2P
* t2p
*
t2p
{	uint32 i=0;	uint32 i2=0;	T2P_TILE* tiles=NULL;	T2P_BOX* boxp=NULL;	uint32 tilecountx=0;	uint32 tilecounty=0;	uint32 tilewidth=0;	uint32 tilelength=0;	int istiled=0;	float f=0;	float width_ratio=0;	float length_ratio=0;		t2p->pdf_xres = t2p->tiff_xres;	t2p->pdf_yres = t2p->tiff_yres;	if(t2p->pdf_overrideres) {		t2p->pdf_xres = t2p->pdf_defaultxres;		t2p->pdf_yres = t2p->pdf_defaultyres;	}	if(t2p->pdf_xres == 0.0)		t2p->pdf_xres = t2p->pdf_defaultxres;	if(t2p->pdf_yres == 0.0)		t2p->pdf_yres = t2p->pdf_defaultyres;	if (t2p->pdf_image_fillpage) {		width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;		length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;		if (width_ratio < length_ratio ) {			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		} else {			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}	} else if (t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */		&& t2p->tiff_resunit != RESUNIT_INCH) {	/* other cases */		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;	} else {		t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;		t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;	}	if(t2p->pdf_overridepagesize != 0) {		t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;		t2p->pdf_pagelength = t2p->pdf_defaultpagelength;	} else {		t2p->pdf_pagewidth = t2p->pdf_imagewidth;		t2p->pdf_pagelength = t2p->pdf_imagelength;	}	t2p->pdf_mediabox.x1=0.0;	t2p->pdf_mediabox.y1=0.0;	t2p->pdf_mediabox.x2=t2p->pdf_pagewidth;	t2p->pdf_mediabox.y2=t2p->pdf_pagelength;	t2p->pdf_imagebox.x1=0.0;	t2p->pdf_imagebox.y1=0.0;	t2p->pdf_imagebox.x2=t2p->pdf_imagewidth;	t2p->pdf_imagebox.y2=t2p->pdf_imagelength;	if(t2p->pdf_overridepagesize!=0){		t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);		t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);	}	if(t2p->tiff_orientation > 4){		f=t2p->pdf_mediabox.x2;		t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;		t2p->pdf_mediabox.y2=f;	}	istiled=((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1;	if(istiled==0){		t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);		return;	} else {		tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;		tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;		tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;		tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength;		tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;		for(i2=0;i2<tilecounty-1;i2++){			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		for(i=0;i<tilecountx-1;i++){			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		boxp=&(tiles[i2*tilecountx+i].tile_box);		boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width);		boxp->x2 = t2p->pdf_imagebox.x2;		boxp->y1 = t2p->pdf_imagebox.y1;		boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length);	}	if(t2p->tiff_orientation==0 || t2p->tiff_orientation==1){		for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}		return;	}	for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){		boxp=&(tiles[i].tile_box);		boxp->x1 -= t2p->pdf_imagebox.x1;		boxp->x2 -= t2p->pdf_imagebox.x1;		boxp->y1 -= t2p->pdf_imagebox.y1;		boxp->y2 -= t2p->pdf_imagebox.y1;		if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation > 4){			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		} else {			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}			}	return;}
uint32 i=0;
uint32 i=0;
uint32
uint32
i=0
i
=0
0
uint32 i2=0;
uint32 i2=0;
uint32
uint32
i2=0
i2
=0
0
T2P_TILE* tiles=NULL;
T2P_TILE* tiles=NULL;
T2P_TILE
T2P_TILE
* tiles=NULL
*
tiles
=NULL
NULL
NULL
T2P_BOX* boxp=NULL;
T2P_BOX* boxp=NULL;
T2P_BOX
T2P_BOX
* boxp=NULL
*
boxp
=NULL
NULL
NULL
uint32 tilecountx=0;
uint32 tilecountx=0;
uint32
uint32
tilecountx=0
tilecountx
=0
0
uint32 tilecounty=0;
uint32 tilecounty=0;
uint32
uint32
tilecounty=0
tilecounty
=0
0
uint32 tilewidth=0;
uint32 tilewidth=0;
uint32
uint32
tilewidth=0
tilewidth
=0
0
uint32 tilelength=0;
uint32 tilelength=0;
uint32
uint32
tilelength=0
tilelength
=0
0
int istiled=0;
int istiled=0;
int
istiled=0
istiled
=0
0
float f=0;
float f=0;
float
f=0
f
=0
0
float width_ratio=0;
float width_ratio=0;
float
width_ratio=0
width_ratio
=0
0
float length_ratio=0;
float length_ratio=0;
float
length_ratio=0
length_ratio
=0
0
t2p->pdf_xres = t2p->tiff_xres;
t2p->pdf_xres = t2p->tiff_xres
t2p->pdf_xres
t2p
t2p
pdf_xres
t2p->tiff_xres
t2p
t2p
tiff_xres
t2p->pdf_yres = t2p->tiff_yres;
t2p->pdf_yres = t2p->tiff_yres
t2p->pdf_yres
t2p
t2p
pdf_yres
t2p->tiff_yres
t2p
t2p
tiff_yres
if(t2p->pdf_overrideres) {		t2p->pdf_xres = t2p->pdf_defaultxres;		t2p->pdf_yres = t2p->pdf_defaultyres;	}
t2p->pdf_overrideres
t2p
t2p
pdf_overrideres
{		t2p->pdf_xres = t2p->pdf_defaultxres;		t2p->pdf_yres = t2p->pdf_defaultyres;	}
t2p->pdf_xres = t2p->pdf_defaultxres;
t2p->pdf_xres = t2p->pdf_defaultxres
t2p->pdf_xres
t2p
t2p
pdf_xres
t2p->pdf_defaultxres
t2p
t2p
pdf_defaultxres
t2p->pdf_yres = t2p->pdf_defaultyres;
t2p->pdf_yres = t2p->pdf_defaultyres
t2p->pdf_yres
t2p
t2p
pdf_yres
t2p->pdf_defaultyres
t2p
t2p
pdf_defaultyres
if(t2p->pdf_xres == 0.0)		t2p->pdf_xres = t2p->pdf_defaultxres;
t2p->pdf_xres == 0.0
t2p->pdf_xres
t2p
t2p
pdf_xres
0.0
t2p->pdf_xres = t2p->pdf_defaultxres;
t2p->pdf_xres = t2p->pdf_defaultxres
t2p->pdf_xres
t2p
t2p
pdf_xres
t2p->pdf_defaultxres
t2p
t2p
pdf_defaultxres
if(t2p->pdf_yres == 0.0)		t2p->pdf_yres = t2p->pdf_defaultyres;
t2p->pdf_yres == 0.0
t2p->pdf_yres
t2p
t2p
pdf_yres
0.0
t2p->pdf_yres = t2p->pdf_defaultyres;
t2p->pdf_yres = t2p->pdf_defaultyres
t2p->pdf_yres
t2p
t2p
pdf_yres
t2p->pdf_defaultyres
t2p
t2p
pdf_defaultyres
if (t2p->pdf_image_fillpage) {		width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;		length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;		if (width_ratio < length_ratio ) {			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		} else {			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}	} else if (t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */		&& t2p->tiff_resunit != RESUNIT_INCH) {	/* other cases */		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;	} else {		t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;		t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;	}
t2p->pdf_image_fillpage
t2p
t2p
pdf_image_fillpage
{		width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;		length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;		if (width_ratio < length_ratio ) {			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		} else {			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}	}
width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width;
width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width
width_ratio
width_ratio
t2p->pdf_defaultpagewidth/t2p->tiff_width
t2p->pdf_defaultpagewidth
t2p
t2p
pdf_defaultpagewidth
t2p->tiff_width
t2p
t2p
tiff_width
length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length;
length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length
length_ratio
length_ratio
t2p->pdf_defaultpagelength/t2p->tiff_length
t2p->pdf_defaultpagelength
t2p
t2p
pdf_defaultpagelength
t2p->tiff_length
t2p
t2p
tiff_length
if (width_ratio < length_ratio ) {			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		} else {			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}
width_ratio < length_ratio
width_ratio
width_ratio
length_ratio
length_ratio
{			t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;			t2p->pdf_imagelength = t2p->tiff_length * width_ratio;		}
t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth;
t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
t2p->pdf_defaultpagewidth
t2p
t2p
pdf_defaultpagewidth
t2p->pdf_imagelength = t2p->tiff_length * width_ratio;
t2p->pdf_imagelength = t2p->tiff_length * width_ratio
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
t2p->tiff_length * width_ratio
t2p->tiff_length
t2p
t2p
tiff_length
width_ratio
width_ratio
{			t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;			t2p->pdf_imagelength = t2p->pdf_defaultpagelength;		}
t2p->pdf_imagewidth = t2p->tiff_width * length_ratio;
t2p->pdf_imagewidth = t2p->tiff_width * length_ratio
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
t2p->tiff_width * length_ratio
t2p->tiff_width
t2p
t2p
tiff_width
length_ratio
length_ratio
t2p->pdf_imagelength = t2p->pdf_defaultpagelength;
t2p->pdf_imagelength = t2p->pdf_defaultpagelength
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
t2p->pdf_defaultpagelength
t2p
t2p
pdf_defaultpagelength
if (t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */		&& t2p->tiff_resunit != RESUNIT_INCH) {	/* other cases */		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;	} else {		t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;		t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;	}
t2p->tiff_resunit != RESUNIT_CENTIMETER	/* RESUNIT_NONE and */		&& t2p->tiff_resunit != RESUNIT_INCH
t2p->tiff_resunit != RESUNIT_CENTIMETER
t2p->tiff_resunit
t2p
t2p
tiff_resunit
RESUNIT_CENTIMETER
RESUNIT_CENTIMETER
t2p->tiff_resunit != RESUNIT_INCH
t2p->tiff_resunit
t2p
t2p
tiff_resunit
RESUNIT_INCH
RESUNIT_INCH
{	/* other cases */		t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;		t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;	}
t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres;
t2p->pdf_imagewidth = ((float)(t2p->tiff_width))/t2p->pdf_xres
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
((float)(t2p->tiff_width))/t2p->pdf_xres
((float)(t2p->tiff_width))
(float)(t2p->tiff_width)
float
float

(t2p->tiff_width)
t2p->tiff_width
t2p
t2p
tiff_width
t2p->pdf_xres
t2p
t2p
pdf_xres
t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres;
t2p->pdf_imagelength = ((float)(t2p->tiff_length))/t2p->pdf_yres
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
((float)(t2p->tiff_length))/t2p->pdf_yres
((float)(t2p->tiff_length))
(float)(t2p->tiff_length)
float
float

(t2p->tiff_length)
t2p->tiff_length
t2p
t2p
tiff_length
t2p->pdf_yres
t2p
t2p
pdf_yres
{		t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;		t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;	}
t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres;
t2p->pdf_imagewidth = 			((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
((float)(t2p->tiff_width))*PS_UNIT_SIZE/t2p->pdf_xres
((float)(t2p->tiff_width))*PS_UNIT_SIZE
((float)(t2p->tiff_width))
(float)(t2p->tiff_width)
float
float

(t2p->tiff_width)
t2p->tiff_width
t2p
t2p
tiff_width
PS_UNIT_SIZE
PS_UNIT_SIZE
t2p->pdf_xres
t2p
t2p
pdf_xres
t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres;
t2p->pdf_imagelength = 			((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
((float)(t2p->tiff_length))*PS_UNIT_SIZE/t2p->pdf_yres
((float)(t2p->tiff_length))*PS_UNIT_SIZE
((float)(t2p->tiff_length))
(float)(t2p->tiff_length)
float
float

(t2p->tiff_length)
t2p->tiff_length
t2p
t2p
tiff_length
PS_UNIT_SIZE
PS_UNIT_SIZE
t2p->pdf_yres
t2p
t2p
pdf_yres
if(t2p->pdf_overridepagesize != 0) {		t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;		t2p->pdf_pagelength = t2p->pdf_defaultpagelength;	} else {		t2p->pdf_pagewidth = t2p->pdf_imagewidth;		t2p->pdf_pagelength = t2p->pdf_imagelength;	}
t2p->pdf_overridepagesize != 0
t2p->pdf_overridepagesize
t2p
t2p
pdf_overridepagesize
0
{		t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;		t2p->pdf_pagelength = t2p->pdf_defaultpagelength;	}
t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth;
t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth
t2p->pdf_pagewidth
t2p
t2p
pdf_pagewidth
t2p->pdf_defaultpagewidth
t2p
t2p
pdf_defaultpagewidth
t2p->pdf_pagelength = t2p->pdf_defaultpagelength;
t2p->pdf_pagelength = t2p->pdf_defaultpagelength
t2p->pdf_pagelength
t2p
t2p
pdf_pagelength
t2p->pdf_defaultpagelength
t2p
t2p
pdf_defaultpagelength
{		t2p->pdf_pagewidth = t2p->pdf_imagewidth;		t2p->pdf_pagelength = t2p->pdf_imagelength;	}
t2p->pdf_pagewidth = t2p->pdf_imagewidth;
t2p->pdf_pagewidth = t2p->pdf_imagewidth
t2p->pdf_pagewidth
t2p
t2p
pdf_pagewidth
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
t2p->pdf_pagelength = t2p->pdf_imagelength;
t2p->pdf_pagelength = t2p->pdf_imagelength
t2p->pdf_pagelength
t2p
t2p
pdf_pagelength
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
t2p->pdf_mediabox.x1=0.0;
t2p->pdf_mediabox.x1=0.0
t2p->pdf_mediabox.x1
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
x1
0.0
t2p->pdf_mediabox.y1=0.0;
t2p->pdf_mediabox.y1=0.0
t2p->pdf_mediabox.y1
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
y1
0.0
t2p->pdf_mediabox.x2=t2p->pdf_pagewidth;
t2p->pdf_mediabox.x2=t2p->pdf_pagewidth
t2p->pdf_mediabox.x2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
x2
t2p->pdf_pagewidth
t2p
t2p
pdf_pagewidth
t2p->pdf_mediabox.y2=t2p->pdf_pagelength;
t2p->pdf_mediabox.y2=t2p->pdf_pagelength
t2p->pdf_mediabox.y2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
y2
t2p->pdf_pagelength
t2p
t2p
pdf_pagelength
t2p->pdf_imagebox.x1=0.0;
t2p->pdf_imagebox.x1=0.0
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
0.0
t2p->pdf_imagebox.y1=0.0;
t2p->pdf_imagebox.y1=0.0
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
0.0
t2p->pdf_imagebox.x2=t2p->pdf_imagewidth;
t2p->pdf_imagebox.x2=t2p->pdf_imagewidth
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
t2p->pdf_imagebox.y2=t2p->pdf_imagelength;
t2p->pdf_imagebox.y2=t2p->pdf_imagelength
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
if(t2p->pdf_overridepagesize!=0){		t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);		t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);	}
t2p->pdf_overridepagesize!=0
t2p->pdf_overridepagesize
t2p
t2p
pdf_overridepagesize
0
{		t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);		t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);		t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);	}
t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);
t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F)
(t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F
(t2p->pdf_pagewidth-t2p->pdf_imagewidth)
t2p->pdf_pagewidth-t2p->pdf_imagewidth
t2p->pdf_pagewidth
t2p
t2p
pdf_pagewidth
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
2.0F
t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);
t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F)
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F)
(t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F
(t2p->pdf_pagelength-t2p->pdf_imagelength)
t2p->pdf_pagelength-t2p->pdf_imagelength
t2p->pdf_pagelength
t2p
t2p
pdf_pagelength
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
2.0F
t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F);
t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F)
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
((t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F)
(t2p->pdf_pagewidth-t2p->pdf_imagewidth)/2.0F
(t2p->pdf_pagewidth-t2p->pdf_imagewidth)
t2p->pdf_pagewidth-t2p->pdf_imagewidth
t2p->pdf_pagewidth
t2p
t2p
pdf_pagewidth
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
2.0F
t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F);
t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F)
(t2p->pdf_pagelength-t2p->pdf_imagelength)/2.0F
(t2p->pdf_pagelength-t2p->pdf_imagelength)
t2p->pdf_pagelength-t2p->pdf_imagelength
t2p->pdf_pagelength
t2p
t2p
pdf_pagelength
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
2.0F
if(t2p->tiff_orientation > 4){		f=t2p->pdf_mediabox.x2;		t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;		t2p->pdf_mediabox.y2=f;	}
t2p->tiff_orientation > 4
t2p->tiff_orientation
t2p
t2p
tiff_orientation
4
{		f=t2p->pdf_mediabox.x2;		t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;		t2p->pdf_mediabox.y2=f;	}
f=t2p->pdf_mediabox.x2;
f=t2p->pdf_mediabox.x2
f
f
t2p->pdf_mediabox.x2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
x2
t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2;
t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2
t2p->pdf_mediabox.x2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
x2
t2p->pdf_mediabox.y2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
y2
t2p->pdf_mediabox.y2=f;
t2p->pdf_mediabox.y2=f
t2p->pdf_mediabox.y2
t2p->pdf_mediabox
t2p
t2p
pdf_mediabox
y2
f
f
istiled=((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1;
istiled=((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1
istiled
istiled
((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0) ? 0 : 1
((t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0)
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount==0
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilecount
0
0
1
if(istiled==0){		t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);		return;	} else {		tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;		tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;		tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;		tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength;		tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;		for(i2=0;i2<tilecounty-1;i2++){			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		for(i=0;i<tilecountx-1;i++){			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		boxp=&(tiles[i2*tilecountx+i].tile_box);		boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width);		boxp->x2 = t2p->pdf_imagebox.x2;		boxp->y1 = t2p->pdf_imagebox.y1;		boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length);	}
istiled==0
istiled
istiled
0
{		t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);		return;	}
t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation);
t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox), t2p->tiff_orientation)
t2p_compose_pdf_page_orient
t2p_compose_pdf_page_orient
&(t2p->pdf_imagebox)
(t2p->pdf_imagebox)
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
t2p->tiff_orientation
t2p
t2p
tiff_orientation
return;
{		tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;		tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;		tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;		tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth;		(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength;		tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;		for(i2=0;i2<tilecounty-1;i2++){			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		for(i=0;i<tilecountx-1;i++){			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}		boxp=&(tiles[i2*tilecountx+i].tile_box);		boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width);		boxp->x2 = t2p->pdf_imagebox.x2;		boxp->y1 = t2p->pdf_imagebox.y1;		boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length);	}
tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth;
tilewidth=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth
tilewidth
tilewidth
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilewidth
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilewidth
tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength;
tilelength=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength
tilelength
tilelength
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilelength
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilelength
tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth;
tilecountx=(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth
tilecountx
tilecountx
(t2p->tiff_width + 			tilewidth -1)/ 			tilewidth
(t2p->tiff_width + 			tilewidth -1)
t2p->tiff_width + 			tilewidth -1
t2p->tiff_width + 			tilewidth
t2p->tiff_width
t2p
t2p
tiff_width
tilewidth
tilewidth
1
tilewidth
tilewidth
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx;
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx=tilecountx
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecountx
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilecountx
tilecountx
tilecountx
tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength;
tilecounty=(t2p->tiff_length + 			tilelength -1)/ 			tilelength
tilecounty
tilecounty
(t2p->tiff_length + 			tilelength -1)/ 			tilelength
(t2p->tiff_length + 			tilelength -1)
t2p->tiff_length + 			tilelength -1
t2p->tiff_length + 			tilelength
t2p->tiff_length
t2p
t2p
tiff_length
tilelength
tilelength
1
tilelength
tilelength
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty;
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty=tilecounty
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecounty
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilecounty
tilecounty
tilecounty
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth;
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth=			t2p->tiff_width % tilewidth
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilewidth
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_edgetilewidth
t2p->tiff_width % tilewidth
t2p->tiff_width
t2p
t2p
tiff_width
tilewidth
tilewidth
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength;
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength=			t2p->tiff_length % tilelength
(t2p->tiff_tiles[t2p->pdf_page]).tiles_edgetilelength
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_edgetilelength
t2p->tiff_length % tilelength
t2p->tiff_length
t2p
t2p
tiff_length
tilelength
tilelength
tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles;
tiles=(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles
tiles
tiles
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tiles
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tiles
for(i2=0;i2<tilecounty-1;i2++){			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}
i2=0;
i2=0
i2
i2
0
i2<tilecounty-1
i2
i2
tilecounty-1
tilecounty
tilecounty
1
i2++
i2
i2
{			for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = t2p->pdf_imagebox.x2;			boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}
for(i=0;i<tilecountx-1;i++){				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}
i=0;
i=0
i
i
0
i<tilecountx-1
i
i
tilecountx-1
tilecountx
tilecountx
1
i++
i
i
{				boxp=&(tiles[i2*tilecountx+i].tile_box);				boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);				boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);				boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);				boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);			}
boxp=&(tiles[i2*tilecountx+i].tile_box);
boxp=&(tiles[i2*tilecountx+i].tile_box)
boxp
boxp
&(tiles[i2*tilecountx+i].tile_box)
(tiles[i2*tilecountx+i].tile_box)
tiles[i2*tilecountx+i].tile_box
tiles[i2*tilecountx+i]
tiles
tiles
i2*tilecountx+i
i2*tilecountx
i2
i2
tilecountx
tilecountx
i
i
tile_box
boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width);
boxp->x1 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width)
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * i * tilewidth)					/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * i * tilewidth)
float
float

(t2p->pdf_imagewidth * i * tilewidth)
t2p->pdf_imagewidth * i * tilewidth
t2p->pdf_imagewidth * i
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
i
i
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width);
boxp->x2 = 					t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width)
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x1 					+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * (i+1) * tilewidth)					/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * (i+1) * tilewidth)
float
float

(t2p->pdf_imagewidth * (i+1) * tilewidth)
t2p->pdf_imagewidth * (i+1) * tilewidth
t2p->pdf_imagewidth * (i+1)
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
(i+1)
i+1
i
i
1
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length);
boxp->y1 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length)
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * (i2+1) * tilelength)					/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * (i2+1) * tilelength)
float
float

(t2p->pdf_imagelength * (i2+1) * tilelength)
t2p->pdf_imagelength * (i2+1) * tilelength
t2p->pdf_imagelength * (i2+1)
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
(i2+1)
i2+1
i2
i2
1
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length);
boxp->y2 = 					t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length)
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 					- ((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * i2 * tilelength)					/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * i2 * tilelength)
float
float

(t2p->pdf_imagelength * i2 * tilelength)
t2p->pdf_imagelength * i2 * tilelength
t2p->pdf_imagelength * i2
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
i2
i2
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
boxp=&(tiles[i2*tilecountx+i].tile_box);
boxp=&(tiles[i2*tilecountx+i].tile_box)
boxp
boxp
&(tiles[i2*tilecountx+i].tile_box)
(tiles[i2*tilecountx+i].tile_box)
tiles[i2*tilecountx+i].tile_box
tiles[i2*tilecountx+i]
tiles
tiles
i2*tilecountx+i
i2*tilecountx
i2
i2
tilecountx
tilecountx
i
i
tile_box
boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);
boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * i * tilewidth)
float
float

(t2p->pdf_imagewidth * i * tilewidth)
t2p->pdf_imagewidth * i * tilewidth
t2p->pdf_imagewidth * i
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
i
i
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->x2 = t2p->pdf_imagebox.x2;
boxp->x2 = t2p->pdf_imagebox.x2
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length);
boxp->y1 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length)
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * (i2+1) * tilelength)				/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * (i2+1) * tilelength)
float
float

(t2p->pdf_imagelength * (i2+1) * tilelength)
t2p->pdf_imagelength * (i2+1) * tilelength
t2p->pdf_imagelength * (i2+1)
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
(i2+1)
i2+1
i2
i2
1
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);
boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * i2 * tilelength)
float
float

(t2p->pdf_imagelength * i2 * tilelength)
t2p->pdf_imagelength * i2 * tilelength
t2p->pdf_imagelength * i2
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
i2
i2
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
for(i=0;i<tilecountx-1;i++){			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}
i=0;
i=0
i
i
0
i<tilecountx-1
i
i
tilecountx-1
tilecountx
tilecountx
1
i++
i
i
{			boxp=&(tiles[i2*tilecountx+i].tile_box);			boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);			boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);			boxp->y1 = t2p->pdf_imagebox.y1;			boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);		}
boxp=&(tiles[i2*tilecountx+i].tile_box);
boxp=&(tiles[i2*tilecountx+i].tile_box)
boxp
boxp
&(tiles[i2*tilecountx+i].tile_box)
(tiles[i2*tilecountx+i].tile_box)
tiles[i2*tilecountx+i].tile_box
tiles[i2*tilecountx+i]
tiles
tiles
i2*tilecountx+i
i2*tilecountx
i2
i2
tilecountx
tilecountx
i
i
tile_box
boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width);
boxp->x1 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * i * tilewidth)				/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * i * tilewidth)
float
float

(t2p->pdf_imagewidth * i * tilewidth)
t2p->pdf_imagewidth * i * tilewidth
t2p->pdf_imagewidth * i
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
i
i
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width);
boxp->x2 = 				t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width)
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x1 				+ ((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * (i+1) * tilewidth)				/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * (i+1) * tilewidth)
float
float

(t2p->pdf_imagewidth * (i+1) * tilewidth)
t2p->pdf_imagewidth * (i+1) * tilewidth
t2p->pdf_imagewidth * (i+1)
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
(i+1)
i+1
i
i
1
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->y1 = t2p->pdf_imagebox.y1;
boxp->y1 = t2p->pdf_imagebox.y1
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length);
boxp->y2 = 				t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 				- ((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * i2 * tilelength)				/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * i2 * tilelength)
float
float

(t2p->pdf_imagelength * i2 * tilelength)
t2p->pdf_imagelength * i2 * tilelength
t2p->pdf_imagelength * i2
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
i2
i2
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
boxp=&(tiles[i2*tilecountx+i].tile_box);
boxp=&(tiles[i2*tilecountx+i].tile_box)
boxp
boxp
&(tiles[i2*tilecountx+i].tile_box)
(tiles[i2*tilecountx+i].tile_box)
tiles[i2*tilecountx+i].tile_box
tiles[i2*tilecountx+i]
tiles
tiles
i2*tilecountx+i
i2*tilecountx
i2
i2
tilecountx
tilecountx
i
i
tile_box
boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width);
boxp->x1 = 			t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width)
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x1 			+ ((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width)
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
((float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width)
(float)(t2p->pdf_imagewidth * i * tilewidth)			/ (float)t2p->tiff_width
(float)(t2p->pdf_imagewidth * i * tilewidth)
float
float

(t2p->pdf_imagewidth * i * tilewidth)
t2p->pdf_imagewidth * i * tilewidth
t2p->pdf_imagewidth * i
t2p->pdf_imagewidth
t2p
t2p
pdf_imagewidth
i
i
tilewidth
tilewidth
(float)t2p->tiff_width
float
float

t2p->tiff_width
t2p
t2p
tiff_width
boxp->x2 = t2p->pdf_imagebox.x2;
boxp->x2 = t2p->pdf_imagebox.x2
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
boxp->y1 = t2p->pdf_imagebox.y1;
boxp->y1 = t2p->pdf_imagebox.y1
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length);
boxp->y2 = 			t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length)
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 			- ((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length)
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
((float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length)
(float)(t2p->pdf_imagelength * i2 * tilelength)			/ (float)t2p->tiff_length
(float)(t2p->pdf_imagelength * i2 * tilelength)
float
float

(t2p->pdf_imagelength * i2 * tilelength)
t2p->pdf_imagelength * i2 * tilelength
t2p->pdf_imagelength * i2
t2p->pdf_imagelength
t2p
t2p
pdf_imagelength
i2
i2
tilelength
tilelength
(float)t2p->tiff_length
float
float

t2p->tiff_length
t2p
t2p
tiff_length
if(t2p->tiff_orientation==0 || t2p->tiff_orientation==1){		for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}		return;	}
t2p->tiff_orientation==0 || t2p->tiff_orientation==1
t2p->tiff_orientation==0
t2p->tiff_orientation
t2p
t2p
tiff_orientation
0
t2p->tiff_orientation==1
t2p->tiff_orientation
t2p
t2p
tiff_orientation
1
{		for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}		return;	}
for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}
i=0;
i=0
i
i
0
i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount
i
i
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilecount
i++
i
i
{			t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);		}
t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0);
t2p_compose_pdf_page_orient( &(tiles[i].tile_box) , 0)
t2p_compose_pdf_page_orient
t2p_compose_pdf_page_orient
&(tiles[i].tile_box)
(tiles[i].tile_box)
tiles[i].tile_box
tiles[i]
tiles
tiles
i
i
tile_box
0
return;
for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount;i++){		boxp=&(tiles[i].tile_box);		boxp->x1 -= t2p->pdf_imagebox.x1;		boxp->x2 -= t2p->pdf_imagebox.x1;		boxp->y1 -= t2p->pdf_imagebox.y1;		boxp->y2 -= t2p->pdf_imagebox.y1;		if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation > 4){			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		} else {			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}			}
i=0;
i=0
i
i
0
i<(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount
i
i
(t2p->tiff_tiles[t2p->pdf_page]).tiles_tilecount
(t2p->tiff_tiles[t2p->pdf_page])
t2p->tiff_tiles[t2p->pdf_page]
t2p->tiff_tiles
t2p
t2p
tiff_tiles
t2p->pdf_page
t2p
t2p
pdf_page
tiles_tilecount
i++
i
i
{		boxp=&(tiles[i].tile_box);		boxp->x1 -= t2p->pdf_imagebox.x1;		boxp->x2 -= t2p->pdf_imagebox.x1;		boxp->y1 -= t2p->pdf_imagebox.y1;		boxp->y2 -= t2p->pdf_imagebox.y1;		if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}		if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}		if(t2p->tiff_orientation > 4){			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		} else {			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}			}
boxp=&(tiles[i].tile_box);
boxp=&(tiles[i].tile_box)
boxp
boxp
&(tiles[i].tile_box)
(tiles[i].tile_box)
tiles[i].tile_box
tiles[i]
tiles
tiles
i
i
tile_box
boxp->x1 -= t2p->pdf_imagebox.x1;
boxp->x1 -= t2p->pdf_imagebox.x1
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->x2 -= t2p->pdf_imagebox.x1;
boxp->x2 -= t2p->pdf_imagebox.x1
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->y1 -= t2p->pdf_imagebox.y1;
boxp->y1 -= t2p->pdf_imagebox.y1
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y2 -= t2p->pdf_imagebox.y1;
boxp->y2 -= t2p->pdf_imagebox.y1
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}
t2p->tiff_orientation==2 || t2p->tiff_orientation==3
t2p->tiff_orientation==2
t2p->tiff_orientation
t2p
t2p
tiff_orientation
2
t2p->tiff_orientation==3
t2p->tiff_orientation
t2p
t2p
tiff_orientation
3
{			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}
boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;
boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->x1
boxp
boxp
x1
boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;
boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->x2
boxp
boxp
x2
if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}
t2p->tiff_orientation==3 || t2p->tiff_orientation==4
t2p->tiff_orientation==3
t2p->tiff_orientation
t2p
t2p
tiff_orientation
3
t2p->tiff_orientation==4
t2p->tiff_orientation
t2p
t2p
tiff_orientation
4
{			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}
boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;
boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y1
boxp
boxp
y1
boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;
boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y2
boxp
boxp
y2
if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5){			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}
t2p->tiff_orientation==8 || t2p->tiff_orientation==5
t2p->tiff_orientation==8
t2p->tiff_orientation
t2p
t2p
tiff_orientation
8
t2p->tiff_orientation==5
t2p->tiff_orientation
t2p
t2p
tiff_orientation
5
{			boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;			boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;		}
boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1;
boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1
boxp->y1
boxp
boxp
y1
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y1
boxp
boxp
y1
boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2;
boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2
boxp->y2
boxp
boxp
y2
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2
t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1
t2p->pdf_imagebox.y2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y2
t2p->pdf_imagebox.y1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
y1
boxp->y2
boxp
boxp
y2
if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6){			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}
t2p->tiff_orientation==5 || t2p->tiff_orientation==6
t2p->tiff_orientation==5
t2p->tiff_orientation
t2p
t2p
tiff_orientation
5
t2p->tiff_orientation==6
t2p->tiff_orientation
t2p
t2p
tiff_orientation
6
{			boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;			boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;		}
boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1;
boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1
boxp->x1
boxp
boxp
x1
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->x1
boxp
boxp
x1
boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2;
boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2
boxp->x2
boxp
boxp
x2
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2
t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1
t2p->pdf_imagebox.x2
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x2
t2p->pdf_imagebox.x1
t2p->pdf_imagebox
t2p
t2p
pdf_imagebox
x1
boxp->x2
boxp
boxp
x2
if(t2p->tiff_orientation > 4){			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		} else {			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}
t2p->tiff_orientation > 4
t2p->tiff_orientation
t2p
t2p
tiff_orientation
4
{			f=boxp->x1;			boxp->x1 = boxp->y1;			boxp->y1 = f;			f=boxp->x2;			boxp->x2 = boxp->y2;			boxp->y2 = f; 			t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);		}
f=boxp->x1;
f=boxp->x1
f
f
boxp->x1
boxp
boxp
x1
boxp->x1 = boxp->y1;
boxp->x1 = boxp->y1
boxp->x1
boxp
boxp
x1
boxp->y1
boxp
boxp
y1
boxp->y1 = f;
boxp->y1 = f
boxp->y1
boxp
boxp
y1
f
f
f=boxp->x2;
f=boxp->x2
f
f
boxp->x2
boxp
boxp
x2
boxp->x2 = boxp->y2;
boxp->x2 = boxp->y2
boxp->x2
boxp
boxp
x2
boxp->y2
boxp
boxp
y2
boxp->y2 = f;
boxp->y2 = f
boxp->y2
boxp
boxp
y2
f
f
t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation);
t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation)
t2p_compose_pdf_page_orient_flip
t2p_compose_pdf_page_orient_flip
boxp
boxp
t2p->tiff_orientation
t2p
t2p
tiff_orientation
{			t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);		}
t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation);
t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation)
t2p_compose_pdf_page_orient
t2p_compose_pdf_page_orient
boxp
boxp
t2p->tiff_orientation
t2p
t2p
tiff_orientation
return;
-----joern-----
(8,720,0)
(358,1297,0)
(682,50,0)
(1026,121,0)
(392,507,0)
(1350,282,0)
(805,154,0)
(572,414,0)
(89,720,0)
(168,621,0)
(1209,1036,0)
(77,147,0)
(689,965,0)
(73,1163,0)
(863,749,0)
(79,386,0)
(288,843,0)
(834,8,0)
(968,1163,0)
(31,275,0)
(103,506,0)
(1202,620,0)
(805,1069,0)
(160,605,0)
(3,1194,0)
(385,81,0)
(1180,754,0)
(421,872,0)
(1038,698,0)
(805,967,0)
(926,28,0)
(1314,384,0)
(693,534,0)
(349,76,0)
(324,936,0)
(240,720,0)
(162,40,0)
(251,666,0)
(1114,610,0)
(519,690,0)
(824,1328,0)
(903,91,0)
(926,396,0)
(1064,936,0)
(1212,1143,0)
(425,468,0)
(1026,396,0)
(538,720,0)
(611,433,0)
(1172,49,0)
(365,715,0)
(635,668,0)
(7,736,0)
(638,1103,0)
(840,168,0)
(1140,592,0)
(497,814,0)
(340,193,0)
(337,992,0)
(748,956,0)
(743,886,0)
(212,1091,0)
(186,450,0)
(213,157,0)
(1320,334,0)
(1342,507,0)
(1306,645,0)
(309,1041,0)
(926,842,0)
(593,61,0)
(1219,5,0)
(354,1036,0)
(356,42,0)
(1285,507,0)
(450,1209,0)
(238,362,0)
(1235,23,0)
(798,796,0)
(1185,715,0)
(79,621,0)
(746,459,0)
(681,271,0)
(805,1124,0)
(1232,564,0)
(1068,647,0)
(1069,805,0)
(304,662,0)
(1222,507,0)
(1026,218,0)
(600,941,0)
(1067,1343,0)
(380,282,0)
(305,922,0)
(949,439,0)
(515,1143,0)
(814,497,0)
(104,380,0)
(431,1128,0)
(1026,485,0)
(983,761,0)
(1323,1026,0)
(734,107,0)
(242,720,0)
(1308,51,0)
(1203,450,0)
(10,565,0)
(837,1099,0)
(764,787,0)
(661,504,0)
(164,519,0)
(726,34,0)
(467,807,0)
(1082,212,0)
(1090,288,0)
(1152,89,0)
(1283,720,0)
(216,1014,0)
(79,453,0)
(171,1088,0)
(491,720,0)
(956,666,0)
(805,89,0)
(703,1,0)
(1142,672,0)
(125,611,0)
(369,925,0)
(1160,31,0)
(98,220,0)
(1021,154,0)
(1059,1085,0)
(1161,275,0)
(645,807,0)
(279,720,0)
(1257,1133,0)
(1053,358,0)
(292,1275,0)
(904,25,0)
(844,316,0)
(404,630,0)
(1070,720,0)
(322,956,0)
(1231,521,0)
(730,879,0)
(1049,796,0)
(349,1026,0)
(1141,569,0)
(381,363,0)
(3,33,0)
(73,836,0)
(789,720,0)
(79,580,0)
(675,548,0)
(419,296,0)
(27,822,0)
(405,592,0)
(934,326,0)
(462,726,0)
(595,961,0)
(119,265,0)
(1128,522,0)
(488,53,0)
(481,992,0)
(652,720,0)
(1024,847,0)
(342,168,0)
(359,720,0)
(476,729,0)
(1111,461,0)
(28,79,0)
(731,837,0)
(956,807,0)
(1331,840,0)
(17,950,0)
(1251,1106,0)
(676,409,0)
(703,79,0)
(283,745,0)
(79,954,0)
(487,417,0)
(1075,397,0)
(513,485,0)
(712,323,0)
(926,317,0)
(81,979,0)
(1143,515,0)
(154,1050,0)
(560,371,0)
(217,433,0)
(857,720,0)
(1323,767,0)
(1096,26,0)
(682,936,0)
(619,1034,0)
(1026,374,0)
(1152,407,0)
(926,6,0)
(523,376,0)
(1245,206,0)
(473,230,0)
(805,621,0)
(65,225,0)
(1328,736,0)
(922,720,0)
(5,787,0)
(581,507,0)
(665,1314,0)
(543,65,0)
(335,1273,0)
(1235,279,0)
(955,668,0)
(203,790,0)
(1142,407,0)
(1228,1209,0)
(389,130,0)
(334,607,0)
(467,1192,0)
(364,1053,0)
(878,1141,0)
(283,872,0)
(1034,464,0)
(1052,693,0)
(79,1129,0)
(368,1038,0)
(17,720,0)
(352,978,0)
(1109,245,0)
(1272,282,0)
(622,547,0)
(459,746,0)
(281,121,0)
(427,696,0)
(75,606,0)
(909,720,0)
(1136,666,0)
(1014,135,0)
(261,1209,0)
(602,98,0)
(578,704,0)
(790,203,0)
(31,8,0)
(400,1275,0)
(407,37,0)
(968,330,0)
(376,720,0)
(926,374,0)
(1327,865,0)
(1158,874,0)
(514,1209,0)
(389,84,0)
(79,1122,0)
(495,402,0)
(277,1302,0)
(871,1146,0)
(1291,238,0)
(1026,1035,0)
(1197,293,0)
(294,980,0)
(910,857,0)
(905,941,0)
(1152,677,0)
(1037,113,0)
(97,294,0)
(79,822,0)
(926,1129,0)
(1333,778,0)
(571,240,0)
(829,1323,0)
(135,507,0)
(234,194,0)
(79,275,0)
(31,386,0)
(410,345,0)
(110,444,0)
(344,130,0)
(685,1047,0)
(863,387,0)
(439,626,0)
(936,868,0)
(938,1113,0)
(294,1346,0)
(1026,1314,0)
(892,261,0)
(31,7,0)
(326,934,0)
(312,720,0)
(335,137,0)
(74,728,0)
(497,309,0)
(168,99,0)
(1352,418,0)
(318,1172,0)
(1288,686,0)
(877,703,0)
(294,97,0)
(900,533,0)
(1195,1316,0)
(1255,1324,0)
(703,371,0)
(321,1167,0)
(1152,531,0)
(134,339,0)
(168,407,0)
(250,1209,0)
(1362,1040,0)
(1152,302,0)
(285,288,0)
(1142,372,0)
(30,507,0)
(1025,921,0)
(1026,965,0)
(457,201,0)
(1214,507,0)
(758,1036,0)
(144,1313,0)
(46,1229,0)
(1335,41,0)
(621,147,0)
(926,1122,0)
(1142,455,0)
(852,107,0)
(850,720,0)
(641,292,0)
(941,600,0)
(1301,623,0)
(936,25,0)
(31,967,0)
(1039,89,0)
(519,720,0)
(418,1047,0)
(1330,1268,0)
(261,705,0)
(95,54,0)
(373,141,0)
(248,1269,0)
(747,376,0)
(1035,720,0)
(936,682,0)
(79,455,0)
(45,1260,0)
(755,426,0)
(660,917,0)
(766,1316,0)
(975,1102,0)
(276,238,0)
(1142,374,0)
(686,956,0)
(1102,158,0)
(1060,1196,0)
(1023,1309,0)
(767,784,0)
(249,1037,0)
(28,666,0)
(255,1047,0)
(1355,1142,0)
(868,1232,0)
(818,164,0)
(314,1275,0)
(367,285,0)
(787,5,0)
(303,433,0)
(869,1126,0)
(962,1163,0)
(728,720,0)
(949,1248,0)
(59,196,0)
(1355,425,0)
(1296,720,0)
(1199,461,0)
(326,341,0)
(53,378,0)
(805,407,0)
(342,491,0)
(15,720,0)
(1142,895,0)
(380,206,0)
(1026,1182,0)
(135,1183,0)
(1000,853,0)
(926,621,0)
(181,147,0)
(1145,507,0)
(936,1142,0)
(711,349,0)
(310,979,0)
(1141,878,0)
(1123,650,0)
(1026,672,0)
(921,167,0)
(1297,757,0)
(527,168,0)
(800,885,0)
(936,738,0)
(805,317,0)
(1089,357,0)
(31,202,0)
(342,1354,0)
(168,822,0)
(1174,720,0)
(315,1280,0)
(1314,373,0)
(999,728,0)
(1026,407,0)
(1026,276,0)
(926,1035,0)
(604,905,0)
(1142,142,0)
(926,649,0)
(683,858,0)
(926,1223,0)
(863,501,0)
(1186,378,0)
(673,413,0)
(944,319,0)
(872,283,0)
(431,312,0)
(626,1288,0)
(796,720,0)
(394,1341,0)
(1182,868,0)
(1144,935,0)
(151,133,0)
(819,121,0)
(990,279,0)
(991,720,0)
(251,193,0)
(12,107,0)
(413,673,0)
(232,611,0)
(1195,147,0)
(118,506,0)
(306,330,0)
(1241,429,0)
(381,720,0)
(437,958,0)
(236,1281,0)
(256,650,0)
(936,611,0)
(1142,1297,0)
(1326,474,0)
(1112,200,0)
(598,796,0)
(765,652,0)
(461,137,0)
(647,1041,0)
(607,334,0)
(122,1027,0)
(388,483,0)
(299,814,0)
(905,56,0)
(719,1159,0)
(400,1047,0)
(1152,909,0)
(773,105,0)
(1032,201,0)
(79,781,0)
(38,397,0)
(1227,348,0)
(1131,610,0)
(168,1144,0)
(285,720,0)
(1310,720,0)
(138,314,0)
(680,1049,0)
(1120,944,0)
(532,415,0)
(311,415,0)
(263,917,0)
(444,1050,0)
(723,821,0)
(206,874,0)
(920,1035,0)
(1318,200,0)
(1323,666,0)
(209,905,0)
(1142,195,0)
(697,818,0)
(464,759,0)
(1053,720,0)
(926,461,0)
(471,858,0)
(608,964,0)
(1321,358,0)
(396,122,0)
(1142,154,0)
(647,91,0)
(1176,69,0)
(220,433,0)
(601,1124,0)
(79,276,0)
(180,608,0)
(1057,1178,0)
(465,1268,0)
(872,720,0)
(745,1184,0)
(453,1040,0)
(274,483,0)
(566,426,0)
(347,879,0)
(1041,349,0)
(705,802,0)
(494,771,0)
(1026,7,0)
(207,1283,0)
(265,107,0)
(26,720,0)
(453,323,0)
(1359,1183,0)
(672,334,0)
(645,664,0)
(668,720,0)
(672,1192,0)
(1127,527,0)
(917,263,0)
(831,594,0)
(1178,1057,0)
(31,649,0)
(1015,565,0)
(31,822,0)
(926,407,0)
(1290,968,0)
(1220,459,0)
(50,168,0)
(532,720,0)
(713,275,0)
(227,86,0)
(781,520,0)
(732,467,0)
(1353,930,0)
(668,635,0)
(1193,402,0)
(1355,611,0)
(1124,720,0)
(932,1281,0)
(518,836,0)
(1292,1304,0)
(1,340,0)
(410,1260,0)
(897,138,0)
(328,467,0)
(115,1136,0)
(1309,1023,0)
(339,274,0)
(960,1072,0)
(592,15,0)
(1173,709,0)
(60,457,0)
(947,902,0)
(123,555,0)
(191,1037,0)
(1070,157,0)
(1087,448,0)
(158,1036,0)
(1142,386,0)
(922,564,0)
(865,843,0)
(117,507,0)
(805,302,0)
(715,720,0)
(803,203,0)
(1007,600,0)
(1061,78,0)
(82,720,0)
(905,1091,0)
(914,58,0)
(223,522,0)
(275,1316,0)
(875,802,0)
(1294,662,0)
(79,1182,0)
(521,1231,0)
(467,767,0)
(1136,79,0)
(733,1304,0)
(888,1065,0)
(583,843,0)
(409,843,0)
(926,99,0)
(223,720,0)
(822,133,0)
(891,507,0)
(758,1293,0)
(1299,77,0)
(41,409,0)
(1231,211,0)
(1256,8,0)
(1026,99,0)
(1026,302,0)
(763,635,0)
(439,1335,0)
(926,1124,0)
(1010,944,0)
(215,363,0)
(662,304,0)
(817,164,0)
(1354,1355,0)
(341,655,0)
(265,1272,0)
(623,345,0)
(1174,895,0)
(1142,302,0)
(1026,560,0)
(926,199,0)
(100,879,0)
(194,874,0)
(882,211,0)
(806,82,0)
(859,805,0)
(1330,720,0)
(1264,1145,0)
(1110,58,0)
(623,1299,0)
(81,566,0)
(309,447,0)
(128,359,0)
(402,317,0)
(535,431,0)
(519,147,0)
(614,444,0)
(158,103,0)
(925,720,0)
(435,843,0)
(805,649,0)
(926,245,0)
(610,1180,0)
(108,82,0)
(964,608,0)
(564,1232,0)
(1287,304,0)
(540,392,0)
(77,720,0)
(458,108,0)
(1185,1184,0)
(1238,282,0)
(603,392,0)
(175,969,0)
(1026,1287,0)
(1355,25,0)
(779,113,0)
(926,1182,0)
(1013,686,0)
(749,720,0)
(1142,856,0)
(79,317,0)
(1127,720,0)
(1015,720,0)
(422,1007,0)
(155,1291,0)
(292,1047,0)
(63,720,0)
(1213,522,0)
(179,528,0)
(259,803,0)
(830,215,0)
(885,1362,0)
(149,564,0)
(926,1014,0)
(529,26,0)
(1195,720,0)
(744,345,0)
(645,217,0)
(447,309,0)
(857,1043,0)
(864,720,0)
(1232,868,0)
(1305,507,0)
(550,1254,0)
(1328,759,0)
(362,831,0)
(587,109,0)
(565,805,0)
(1275,314,0)
(804,667,0)
(159,720,0)
(870,1145,0)
(629,381,0)
(163,11,0)
(822,805,0)
(72,125,0)
(224,979,0)
(926,218,0)
(181,720,0)
(486,852,0)
(702,97,0)
(1218,779,0)
(333,1030,0)
(1026,202,0)
(1026,650,0)
(1356,99,0)
(616,720,0)
(55,887,0)
(926,1314,0)
(768,282,0)
(636,1037,0)
(927,260,0)
(768,345,0)
(225,1036,0)
(1195,1268,0)
(956,664,0)
(31,580,0)
(442,924,0)
(255,319,0)
(1115,809,0)
(300,312,0)
(677,843,0)
(389,199,0)
(504,1034,0)
(956,239,0)
(157,319,0)
(168,909,0)
(34,726,0)
(926,781,0)
(139,617,0)
(465,720,0)
(1230,141,0)
(101,159,0)
(1026,8,0)
(926,1160,0)
(1026,909,0)
(926,1291,0)
(446,292,0)
(791,652,0)
(768,330,0)
(547,147,0)
(864,1275,0)
(937,433,0)
(1231,240,0)
(1130,1036,0)
(199,389,0)
(538,803,0)
(255,720,0)
(753,195,0)
(901,546,0)
(77,1316,0)
(113,779,0)
(1004,570,0)
(1152,967,0)
(1026,677,0)
(1082,703,0)
(931,741,0)
(98,720,0)
(203,803,0)
(58,1110,0)
(137,729,0)
(569,526,0)
(239,415,0)
(10,481,0)
(52,465,0)
(414,507,0)
(678,1310,0)
(691,1209,0)
(547,1268,0)
(756,28,0)
(159,1275,0)
(634,396,0)
(79,89,0)
(334,1027,0)
(1217,1228,0)
(1302,759,0)
(926,154,0)
(995,720,0)
(341,383,0)
(51,319,0)
(93,224,0)
(79,109,0)
(205,950,0)
(274,178,0)
(372,334,0)
(1073,484,0)
(1088,1209,0)
(754,1047,0)
(1281,932,0)
(1248,664,0)
(108,226,0)
(895,1045,0)
(79,842,0)
(1026,895,0)
(645,666,0)
(1001,1140,0)
(597,864,0)
(882,31,0)
(261,200,0)
(31,1052,0)
(639,78,0)
(141,720,0)
(31,677,0)
(655,341,0)
(233,507,0)
(262,78,0)
(460,878,0)
(1133,435,0)
(533,499,0)
(1323,447,0)
(926,485,0)
(555,123,0)
(957,845,0)
(515,474,0)
(1293,758,0)
(332,1251,0)
(511,141,0)
(439,666,0)
(459,874,0)
(196,137,0)
(56,1027,0)
(1289,879,0)
(959,507,0)
(482,741,0)
(858,720,0)
(246,1310,0)
(156,95,0)
(1026,251,0)
(283,1083,0)
(1190,372,0)
(45,837,0)
(1149,1297,0)
(853,845,0)
(79,121,0)
(926,909,0)
(670,1057,0)
(851,1172,0)
(1300,1286,0)
(850,761,0)
(767,981,0)
(447,644,0)
(211,1195,0)
(182,864,0)
(156,159,0)
(1323,829,0)
(443,257,0)
(429,1241,0)
(1102,1167,0)
(926,999,0)
(802,720,0)
(719,1163,0)
(133,720,0)
(361,1007,0)
(1206,1282,0)
(1080,949,0)
(1287,395,0)
(79,1291,0)
(526,429,0)
(1304,935,0)
(184,1036,0)
(926,121,0)
(866,581,0)
(146,666,0)
(691,156,0)
(1358,312,0)
(189,954,0)
(1142,1129,0)
(399,83,0)
(79,374,0)
(548,720,0)
(744,259,0)
(1344,666,0)
(1142,1078,0)
(1302,277,0)
(627,639,0)
(972,518,0)
(288,209,0)
(342,474,0)
(1013,843,0)
(289,623,0)
(926,455,0)
(153,110,0)
(573,1099,0)
(1118,856,0)
(429,526,0)
(53,663,0)
(142,937,0)
(1142,822,0)
(930,386,0)
(708,395,0)
(84,389,0)
(1095,181,0)
(746,345,0)
(58,968,0)
(1026,245,0)
(349,767,0)
(268,673,0)
(150,507,0)
(1031,7,0)
(438,422,0)
(32,1139,0)
(969,856,0)
(568,181,0)
(466,720,0)
(1152,99,0)
(22,809,0)
(766,720,0)
(954,239,0)
(790,1235,0)
(1203,704,0)
(703,1091,0)
(1346,294,0)
(245,612,0)
(292,759,0)
(130,720,0)
(965,666,0)
(79,302,0)
(1091,812,0)
(444,720,0)
(468,425,0)
(29,93,0)
(637,263,0)
(194,1209,0)
(180,947,0)
(321,698,0)
(871,1132,0)
(515,1026,0)
(1258,999,0)
(1,433,0)
(904,790,0)
(1184,745,0)
(236,1126,0)
(166,249,0)
(31,621,0)
(1323,937,0)
(282,1238,0)
(70,1293,0)
(958,741,0)
(918,28,0)
(439,926,0)
(794,195,0)
(687,717,0)
(688,1343,0)
(757,765,0)
(1045,445,0)
(172,1070,0)
(887,1346,0)
(945,90,0)
(253,1013,0)
(168,1035,0)
(9,1182,0)
(809,507,0)
(1159,370,0)
(464,1304,0)
(1007,843,0)
(439,664,0)
(1050,242,0)
(807,433,0)
(662,720,0)
(168,1052,0)
(1274,125,0)
(105,1113,0)
(1142,396,0)
(91,720,0)
(1026,1124,0)
(62,842,0)
(926,1052,0)
(412,345,0)
(263,59,0)
(1146,1003,0)
(565,1015,0)
(1265,703,0)
(1088,277,0)
(1181,88,0)
(467,76,0)
(103,158,0)
(663,787,0)
(1236,507,0)
(79,1014,0)
(1225,709,0)
(238,293,0)
(1286,1146,0)
(1142,879,0)
(933,1063,0)
(1157,894,0)
(726,479,0)
(646,913,0)
(1026,1144,0)
(240,1231,0)
(1263,1140,0)
(219,342,0)
(1002,448,0)
(209,69,0)
(340,425,0)
(1288,157,0)
(1179,925,0)
(1343,1067,0)
(1072,1102,0)
(555,1069,0)
(865,1300,0)
(662,1050,0)
(551,691,0)
(520,981,0)
(501,1255,0)
(989,1144,0)
(624,844,0)
(1142,677,0)
(520,370,0)
(391,905,0)
(722,507,0)
(588,747,0)
(538,1316,0)
(1142,28,0)
(46,211,0)
(1153,506,0)
(329,668,0)
(771,26,0)
(856,969,0)
(528,179,0)
(776,494,0)
(783,720,0)
(20,223,0)
(169,65,0)
(7,720,0)
(999,805,0)
(1077,612,0)
(1146,871,0)
(1196,977,0)
(340,611,0)
(196,316,0)
(1349,34,0)
(406,566,0)
(304,507,0)
(562,804,0)
(563,644,0)
(1119,354,0)
(484,11,0)
(1148,130,0)
(1026,1078,0)
(570,507,0)
(79,650,0)
(422,720,0)
(1176,816,0)
(818,1239,0)
(142,666,0)
(1026,35,0)
(731,717,0)
(1144,720,0)
(42,720,0)
(1117,1053,0)
(896,150,0)
(898,348,0)
(275,720,0)
(1355,666,0)
(546,1139,0)
(455,666,0)
(993,677,0)
(199,354,0)
(782,992,0)
(1238,1309,0)
(259,744,0)
(771,61,0)
(468,991,0)
(1268,59,0)
(467,447,0)
(411,768,0)
(181,1316,0)
(48,1315,0)
(173,874,0)
(621,720,0)
(1152,7,0)
(1026,1129,0)
(704,1203,0)
(761,437,0)
(956,926,0)
(168,1124,0)
(1026,995,0)
(313,1072,0)
(1142,8,0)
(35,626,0)
(1254,454,0)
(331,643,0)
(557,1162,0)
(1047,1312,0)
(694,673,0)
(168,418,0)
(168,747,0)
(1361,201,0)
(430,107,0)
(1313,144,0)
(13,1291,0)
(228,6,0)
(338,510,0)
(1043,792,0)
(685,736,0)
(1018,1342,0)
(180,1232,0)
(386,930,0)
(1229,343,0)
(1087,37,0)
(992,481,0)
(79,1240,0)
(1087,720,0)
(31,1014,0)
(1093,1321,0)
(77,690,0)
(1005,901,0)
(441,685,0)
(522,223,0)
(740,531,0)
(168,317,0)
(349,447,0)
(514,1185,0)
(314,566,0)
(1244,1136,0)
(1163,1036,0)
(444,693,0)
(42,677,0)
(177,1019,0)
(501,600,0)
(703,666,0)
(881,1195,0)
(106,359,0)
(1345,720,0)
(271,720,0)
(343,1277,0)
(160,829,0)
(25,904,0)
(79,1160,0)
(932,705,0)
(252,894,0)
(1026,372,0)
(658,439,0)
(1252,515,0)
(59,263,0)
(1034,504,0)
(765,1209,0)
(761,850,0)
(1142,317,0)
(963,1087,0)
(79,485,0)
(882,904,0)
(725,335,0)
(926,125,0)
(698,1038,0)
(1074,1023,0)
(176,784,0)
(803,538,0)
(776,836,0)
(1168,649,0)
(760,418,0)
(1049,680,0)
(159,156,0)
(1231,31,0)
(746,282,0)
(198,954,0)
(987,667,0)
(350,729,0)
(510,1097,0)
(1355,1354,0)
(43,1157,0)
(935,924,0)
(878,345,0)
(1298,465,0)
(357,373,0)
(1142,1240,0)
(1078,25,0)
(31,909,0)
(999,926,0)
(79,672,0)
(1026,453,0)
(656,132,0)
(703,941,0)
(525,1010,0)
(292,736,0)
(1139,546,0)
(926,65,0)
(1237,133,0)
(1002,445,0)
(821,666,0)
(1136,303,0)
(861,507,0)
(1270,616,0)
(1210,1035,0)
(56,1300,0)
(1317,514,0)
(1142,560,0)
(363,381,0)
(1362,304,0)
(1030,840,0)
(781,1335,0)
(770,1206,0)
(455,664,0)
(1152,154,0)
(727,302,0)
(203,393,0)
(401,1223,0)
(709,271,0)
(489,77,0)
(1026,1291,0)
(1249,1067,0)
(1081,407,0)
(405,720,0)
(1203,1283,0)
(1003,1146,0)
(841,61,0)
(519,1316,0)
(201,457,0)
(862,7,0)
(680,412,0)
(288,285,0)
(893,279,0)
(71,1127,0)
(971,1272,0)
(796,690,0)
(1266,321,0)
(962,363,0)
(204,895,0)
(961,925,0)
(1216,645,0)
(696,507,0)
(705,261,0)
(137,908,0)
(371,1101,0)
(873,317,0)
(479,690,0)
(805,995,0)
(1067,1249,0)
(860,580,0)
(357,720,0)
(956,686,0)
(650,334,0)
(547,720,0)
(709,211,0)
(212,1082,0)
(926,251,0)
(584,396,0)
(49,212,0)
(1057,319,0)
(793,202,0)
(1026,154,0)
(1033,569,0)
(1026,195,0)
(200,874,0)
(626,812,0)
(1132,1209,0)
(1063,1085,0)
(1152,202,0)
(148,1330,0)
(490,1038,0)
(164,817,0)
(883,90,0)
(610,315,0)
(358,1321,0)
(942,1052,0)
(1142,35,0)
(1272,265,0)
(1106,1251,0)
(174,49,0)
(1106,348,0)
(797,91,0)
(394,181,0)
(649,847,0)
(46,31,0)
(1142,1035,0)
(254,1143,0)
(1065,720,0)
(759,1016,0)
(853,1163,0)
(1142,6,0)
(79,895,0)
(916,1122,0)
(1152,1124,0)
(1038,720,0)
(506,118,0)
(259,158,0)
(78,1061,0)
(159,736,0)
(384,758,0)
(1142,1314,0)
(510,683,0)
(1347,965,0)
(947,83,0)
(168,153,0)
(978,345,0)
(1239,521,0)
(1277,1299,0)
(209,288,0)
(297,1273,0)
(1316,766,0)
(26,771,0)
(1026,879,0)
(859,466,0)
(79,65,0)
(1152,822,0)
(255,736,0)
(821,1189,0)
(1278,1065,0)
(429,1315,0)
(31,747,0)
(79,35,0)
(493,79,0)
(1137,1005,0)
(351,259,0)
(1330,1260,0)
(538,1268,0)
(33,507,0)
(1142,580,0)
(279,1235,0)
(1017,466,0)
(517,1228,0)
(193,226,0)
(1293,1106,0)
(695,621,0)
(564,31,0)
(79,195,0)
(1153,720,0)
(1014,720,0)
(1100,560,0)
(291,1323,0)
(1066,218,0)
(647,474,0)
(805,747,0)
(596,497,0)
(919,583,0)
(69,209,0)
(168,1014,0)
(754,179,0)
(1330,1316,0)
(926,1078,0)
(499,1249,0)
(1041,309,0)
(949,1080,0)
(905,1176,0)
(1196,265,0)
(555,1328,0)
(224,147,0)
(1334,969,0)
(885,720,0)
(778,1158,0)
(363,215,0)
(564,211,0)
(65,612,0)
(64,1240,0)
(936,193,0)
(454,720,0)
(5,720,0)
(926,1326,0)
(16,814,0)
(226,1354,0)
(84,720,0)
(838,1133,0)
(894,1157,0)
(939,468,0)
(752,405,0)
(924,935,0)
(880,736,0)
(1107,565,0)
(349,573,0)
(79,218,0)
(436,17,0)
(147,224,0)
(31,461,0)
(457,345,0)
(973,6,0)
(1152,1287,0)
(1175,50,0)
(777,913,0)
(569,1141,0)
(1071,1005,0)
(810,407,0)
(842,1142,0)
(176,31,0)
(1239,818,0)
(124,1030,0)
(669,455,0)
(393,203,0)
(464,1034,0)
(852,1088,0)
(579,384,0)
(459,594,0)
(592,405,0)
(218,605,0)
(848,1002,0)
(288,805,0)
(79,1078,0)
(277,1088,0)
(1209,450,0)
(302,690,0)
(284,507,0)
(899,1127,0)
(926,35,0)
(99,886,0)
(1151,1272,0)
(1323,76,0)
(890,959,0)
(400,736,0)
(125,666,0)
(1026,747,0)
(1345,583,0)
(1224,412,0)
(339,720,0)
(673,720,0)
(86,720,0)
(176,643,0)
(775,560,0)
(378,53,0)
(1152,275,0)
(1340,831,0)
(558,885,0)
(585,242,0)
(944,69,0)
(109,926,0)
(2,802,0)
(456,84,0)
(1260,410,0)
(925,961,0)
(3,953,0)
(121,807,0)
(79,202,0)
(370,520,0)
(1157,282,0)
(97,720,0)
(606,413,0)
(387,863,0)
(1354,226,0)
(926,202,0)
(926,954,0)
(410,158,0)
(594,459,0)
(79,677,0)
(349,937,0)
(1215,103,0)
(956,1335,0)
(1152,1326,0)
(168,302,0)
(34,720,0)
(50,682,0)
(46,397,0)
(1188,879,0)
(717,720,0)
(500,995,0)
(867,1223,0)
(837,45,0)
(868,981,0)
(41,1281,0)
(1223,1176,0)
(1106,1293,0)
(230,1013,0)
(1191,376,0)
(783,1129,0)
(415,532,0)
(991,468,0)
(193,1336,0)
(1061,1282,0)
(538,147,0)
(79,1297,0)
(167,556,0)
(377,746,0)
(1152,1129,0)
(871,292,0)
(786,303,0)
(1142,747,0)
(994,236,0)
(448,1087,0)
(1072,720,0)
(784,176,0)
(1152,995,0)
(452,1036,0)
(1277,18,0)
(837,731,0)
(1026,89,0)
(846,1345,0)
(698,789,0)
(15,592,0)
(677,42,0)
(54,95,0)
(1142,781,0)
(335,720,0)
(649,1342,0)
(913,720,0)
(491,342,0)
(659,606,0)
(397,46,0)
(1037,249,0)
(211,507,0)
(1304,135,0)
(21,1069,0)
(738,1027,0)
(493,843,0)
(1351,746,0)
(977,607,0)
(501,863,0)
(1105,520,0)
(996,257,0)
(6,666,0)
(1319,792,0)
(1136,56,0)
(242,1050,0)
(467,605,0)
(583,1345,0)
(307,857,0)
(79,142,0)
(1162,882,0)
(1233,672,0)
(685,759,0)
(1019,507,0)
(796,1268,0)
(465,147,0)
(468,168,0)
(613,924,0)
(1300,865,0)
(340,1142,0)
(1362,885,0)
(408,154,0)
(921,720,0)
(718,507,0)
(802,736,0)
(591,852,0)
(1206,720,0)
(1026,317,0)
(645,626,0)
(998,1222,0)
(617,1026,0)
(181,1268,0)
(780,230,0)
(1085,1063,0)
(59,1268,0)
(811,1157,0)
(988,861,0)
(655,720,0)
(1026,28,0)
(1136,225,0)
(110,153,0)
(330,968,0)
(1280,315,0)
(37,685,0)
(1302,736,0)
(926,418,0)
(1261,255,0)
(946,865,0)
(1040,940,0)
(1054,337,0)
(79,6,0)
(434,842,0)
(803,259,0)
(382,1002,0)
(477,507,0)
(1284,861,0)
(1276,667,0)
(295,466,0)
(255,759,0)
(273,142,0)
(1177,1163,0)
(1142,1182,0)
(801,1280,0)
(1239,167,0)
(88,845,0)
(663,53,0)
(1098,435,0)
(714,215,0)
(805,7,0)
(1281,41,0)
(1009,1159,0)
(1026,199,0)
(926,1240,0)
(239,293,0)
(236,994,0)
(1332,858,0)
(645,1335,0)
(1272,345,0)
(407,720,0)
(1254,1099,0)
(590,715,0)
(1097,510,0)
(1091,212,0)
(136,547,0)
(526,784,0)
(1291,573,0)
(928,749,0)
(244,527,0)
(79,199,0)
(1205,1231,0)
(31,317,0)
(909,1275,0)
(1035,274,0)
(826,836,0)
(1160,548,0)
(400,759,0)
(698,321,0)
(395,720,0)
(685,1275,0)
(1295,484,0)
(787,663,0)
(926,275,0)
(1299,1277,0)
(61,720,0)
(742,720,0)
(1232,180,0)
(1321,720,0)
(51,1248,0)
(465,1316,0)
(206,380,0)
(1136,1176,0)
(1152,461,0)
(449,1345,0)
(580,759,0)
(90,720,0)
(774,349,0)
(785,345,0)
(982,335,0)
(779,720,0)
(222,1302,0)
(396,334,0)
(1142,276,0)
(1167,1102,0)
(1062,1296,0)
(707,1206,0)
(1142,275,0)
(772,340,0)
(412,680,0)
(747,448,0)
(1069,555,0)
(1158,778,0)
(1243,864,0)
(704,720,0)
(701,73,0)
(608,180,0)
(745,283,0)
(625,445,0)
(1026,617,0)
(1282,1206,0)
(1185,514,0)
(545,872,0)
(859,843,0)
(905,371,0)
(889,158,0)
(1142,909,0)
(664,816,0)
(1182,520,0)
(280,276,0)
(398,63,0)
(926,372,0)
(197,781,0)
(185,766,0)
(859,934,0)
(586,276,0)
(1141,465,0)
(926,1297,0)
(1330,690,0)
(79,1124,0)
(343,950,0)
(373,357,0)
(1142,842,0)
(745,1101,0)
(913,1139,0)
(805,1326,0)
(805,1287,0)
(1142,621,0)
(409,132,0)
(4,138,0)
(160,1113,0)
(926,879,0)
(113,507,0)
(132,409,0)
(1225,563,0)
(1087,274,0)
(1235,790,0)
(926,650,0)
(640,507,0)
(349,1192,0)
(630,90,0)
(926,386,0)
(699,853,0)
(1092,548,0)
(49,319,0)
(802,1047,0)
(924,720,0)
(484,720,0)
(31,99,0)
(556,167,0)
(79,251,0)
(1026,1014,0)
(839,194,0)
(926,109,0)
(31,154,0)
(715,759,0)
(1263,845,0)
(78,639,0)
(1142,954,0)
(243,959,0)
(843,507,0)
(926,142,0)
(736,633,0)
(272,1182,0)
(1201,15,0)
(90,630,0)
(1026,621,0)
(83,947,0)
(1143,720,0)
(1286,635,0)
(1020,533,0)
(742,683,0)
(24,882,0)
(1178,720,0)
(1142,453,0)
(932,1094,0)
(612,1036,0)
(31,1035,0)
(1002,382,0)
(506,1153,0)
(481,95,0)
(286,494,0)
(936,425,0)
(886,720,0)
(349,605,0)
(1080,843,0)
(353,1014,0)
(168,677,0)
(512,1086,0)
(956,452,0)
(323,453,0)
(439,452,0)
(467,937,0)
(839,400,0)
(934,122,0)
(308,1280,0)
(1026,461,0)
(608,1049,0)
(25,293,0)
(79,125,0)
(154,720,0)
(37,534,0)
(751,1240,0)
(828,1015,0)
(941,293,0)
(1101,371,0)
(439,239,0)
(221,1132,0)
(906,143,0)
(269,781,0)
(1080,417,0)
(750,454,0)
(415,1152,0)
(565,843,0)
(527,474,0)
(839,1255,0)
(1211,1160,0)
(1142,202,0)
(784,767,0)
(1063,935,0)
(1283,1203,0)
(461,720,0)
(715,1047,0)
(716,1355,0)
(79,1314,0)
(814,720,0)
(847,720,0)
(1055,109,0)
(340,1,0)
(605,160,0)
(825,77,0)
(690,479,0)
(6,1091,0)
(1013,230,0)
(87,118,0)
(847,649,0)
(926,677,0)
(102,1250,0)
(1142,218,0)
(804,507,0)
(397,720,0)
(956,626,0)
(1129,783,0)
(260,1344,0)
(992,337,0)
(424,1045,0)
(799,680,0)
(607,977,0)
(467,573,0)
(926,7,0)
(1198,783,0)
(1099,837,0)
(937,217,0)
(842,666,0)
(618,844,0)
(1307,73,0)
(805,202,0)
(1049,608,0)
(1204,444,0)
(546,901,0)
(926,580,0)
(79,461,0)
(631,1238,0)
(505,704,0)
(1029,453,0)
(1047,754,0)
(1248,51,0)
(452,1057,0)
(79,560,0)
(127,1308,0)
(445,1002,0)
(1138,731,0)
(1052,720,0)
(547,110,0)
(355,970,0)
(1167,1036,0)
(1341,693,0)
(168,461,0)
(157,1288,0)
(504,720,0)
(79,372,0)
(1325,493,0)
(895,1174,0)
(1147,962,0)
(394,1269,0)
(1142,995,0)
(639,720,0)
(654,251,0)
(1006,1097,0)
(210,538,0)
(567,789,0)
(1184,112,0)
(526,569,0)
(1034,619,0)
(686,1013,0)
(327,1067,0)
(926,8,0)
(168,154,0)
(1026,109,0)
(929,105,0)
(717,731,0)
(600,1007,0)
(1309,1228,0)
(992,782,0)
(39,662,0)
(485,666,0)
(1078,238,0)
(759,464,0)
(1330,147,0)
(168,1287,0)
(235,1323,0)
(554,97,0)
(1005,720,0)
(566,1043,0)
(217,645,0)
(416,655,0)
(212,49,0)
(728,999,0)
(1328,555,0)
(1026,1160,0)
(481,10,0)
(693,616,0)
(341,326,0)
(440,507,0)
(657,34,0)
(79,321,0)
(497,211,0)
(1316,478,0)
(1162,720,0)
(79,747,0)
(337,720,0)
(181,394,0)
(599,150,0)
(876,901,0)
(292,871,0)
(589,749,0)
(80,15,0)
(827,372,0)
(326,638,0)
(531,1152,0)
(1246,1362,0)
(1133,720,0)
(519,1268,0)
(340,666,0)
(926,747,0)
(802,705,0)
(818,697,0)
(1026,1122,0)
(1088,852,0)
(709,1225,0)
(796,147,0)
(1122,767,0)
(317,402,0)
(428,143,0)
(926,453,0)
(643,720,0)
(343,1229,0)
(1155,507,0)
(1254,211,0)
(1030,720,0)
(145,98,0)
(1139,913,0)
(736,880,0)
(502,455,0)
(94,5,0)
(635,1286,0)
(1152,580,0)
(1234,532,0)
(1313,355,0)
(1132,871,0)
(1132,107,0)
(316,844,0)
(628,1087,0)
(467,666,0)
(395,1287,0)
(623,158,0)
(741,720,0)
(479,726,0)
(934,859,0)
(561,159,0)
(950,17,0)
(565,10,0)
(437,761,0)
(480,859,0)
(1300,56,0)
(666,879,0)
(741,958,0)
(1104,255,0)
(1194,980,0)
(1326,40,0)
(912,1180,0)
(1136,1091,0)
(1040,1362,0)
(948,123,0)
(652,765,0)
(1044,1122,0)
(1308,720,0)
(1142,7,0)
(179,754,0)
(531,1243,0)
(168,995,0)
(844,720,0)
(514,874,0)
(1250,507,0)
(840,1030,0)
(986,1341,0)
(325,337,0)
(168,89,0)
(266,1144,0)
(974,1124,0)
(270,909,0)
(573,293,0)
(1247,1126,0)
(926,276,0)
(168,8,0)
(530,850,0)
(1164,483,0)
(1026,386,0)
(79,1326,0)
(739,1153,0)
(923,196,0)
(439,949,0)
(374,447,0)
(582,789,0)
(277,638,0)
(1183,720,0)
(594,831,0)
(1140,1263,0)
(1136,941,0)
(1338,1078,0)
(79,617,0)
(715,736,0)
(524,118,0)
(1240,425,0)
(821,1310,0)
(1243,339,0)
(187,1315,0)
(884,144,0)
(685,37,0)
(1158,719,0)
(167,921,0)
(164,818,0)
(1026,954,0)
(575,1183,0)
(547,690,0)
(808,717,0)
(439,807,0)
(645,452,0)
(878,158,0)
(354,282,0)
(1045,940,0)
(31,1269,0)
(168,202,0)
(214,199,0)
(796,1049,0)
(951,491,0)
(1281,236,0)
(51,1308,0)
(936,563,0)
(196,59,0)
(616,690,0)
(1113,211,0)
(1279,220,0)
(802,1275,0)
(1152,1035,0)
(509,507,0)
(18,1277,0)
(1142,99,0)
(258,887,0)
(1057,452,0)
(79,1144,0)
(319,255,0)
(1026,65,0)
(615,1078,0)
(926,195,0)
(547,1316,0)
(1288,626,0)
(1058,696,0)
(1142,965,0)
(312,431,0)
(69,944,0)
(417,720,0)
(96,507,0)
(1302,1275,0)
(1150,1080,0)
(616,147,0)
(606,720,0)
(1259,507,0)
(314,138,0)
(271,709,0)
(536,1326,0)
(454,1254,0)
(999,843,0)
(439,122,0)
(935,908,0)
(1280,720,0)
(215,720,0)
(263,637,0)
(1076,132,0)
(1129,168,0)
(79,649,0)
(50,474,0)
(141,373,0)
(667,804,0)
(372,738,0)
(1344,260,0)
(79,28,0)
(521,76,0)
(1221,817,0)
(143,804,0)
(1013,805,0)
(1163,962,0)
(802,759,0)
(757,1036,0)
(320,768,0)
(109,666,0)
(647,168,0)
(1142,1223,0)
(0,1327,0)
(196,113,0)
(226,108,0)
(907,843,0)
(1223,666,0)
(257,720,0)
(108,211,0)
(483,720,0)
(1152,747,0)
(420,847,0)
(829,840,0)
(1255,501,0)
(1152,621,0)
(1228,1309,0)
(522,1128,0)
(610,935,0)
(348,158,0)
(574,400,0)
(384,1036,0)
(152,1330,0)
(31,995,0)
(1195,211,0)
(719,1158,0)
(161,1010,0)
(915,792,0)
(1355,868,0)
(538,690,0)
(1183,135,0)
(886,99,0)
(159,759,0)
(1355,738,0)
(664,1248,0)
(762,1158,0)
(496,395,0)
(1122,520,0)
(815,93,0)
(527,738,0)
(616,1316,0)
(483,274,0)
(1165,1174,0)
(409,41,0)
(905,79,0)
(1304,464,0)
(298,1178,0)
(666,1344,0)
(790,904,0)
(168,967,0)
(201,758,0)
(926,89,0)
(45,1170,0)
(1082,583,0)
(1110,612,0)
(400,839,0)
(1243,531,0)
(1037,137,0)
(1180,610,0)
(423,643,0)
(44,355,0)
(309,497,0)
(954,238,0)
(31,89,0)
(840,829,0)
(1268,1016,0)
(57,845,0)
(448,507,0)
(165,672,0)
(237,218,0)
(362,238,0)
(1297,358,0)
(947,180,0)
(1142,89,0)
(378,720,0)
(966,514,0)
(721,400,0)
(792,720,0)
(1303,617,0)
(110,547,0)
(1184,1185,0)
(49,1172,0)
(1142,125,0)
(1152,1014,0)
(497,31,0)
(1026,275,0)
(1097,667,0)
(225,10,0)
(705,932,0)
(66,1327,0)
(1026,842,0)
(140,1023,0)
(330,107,0)
(472,340,0)
(1152,8,0)
(1226,504,0)
(805,909,0)
(363,962,0)
(911,84,0)
(1251,720,0)
(1323,1192,0)
(805,580,0)
(805,677,0)
(1282,1061,0)
(1135,744,0)
(1113,105,0)
(346,1129,0)
(849,744,0)
(671,1355,0)
(1200,339,0)
(403,577,0)
(114,742,0)
(549,1063,0)
(1102,1072,0)
(89,113,0)
(1240,612,0)
(632,380,0)
(563,1225,0)
(370,1159,0)
(1169,81,0)
(156,691,0)
(1026,455,0)
(51,1152,0)
(138,720,0)
(1238,1209,0)
(348,1106,0)
(832,1328,0)
(79,7,0)
(1026,6,0)
(805,418,0)
(99,319,0)
(330,768,0)
(944,1010,0)
(31,1144,0)
(260,73,0)
(686,1288,0)
(230,720,0)
(31,1287,0)
(796,1316,0)
(83,720,0)
(792,1043,0)
(856,1142,0)
(1026,781,0)
(829,160,0)
(108,31,0)
(95,481,0)
(858,683,0)
(805,1052,0)
(1341,1050,0)
(1341,720,0)
(359,179,0)
(425,1036,0)
(583,805,0)
(1026,1326,0)
(35,666,0)
(1249,499,0)
(683,742,0)
(1099,573,0)
(176,211,0)
(340,25,0)
(965,563,0)
(856,168,0)
(778,282,0)
(1026,822,0)
(968,58,0)
(1192,1027,0)
(729,720,0)
(1304,315,0)
(112,1184,0)
(287,1302,0)
(882,1162,0)
(905,225,0)
(560,520,0)
(831,362,0)
(79,965,0)
(93,720,0)
(1026,515,0)
(123,274,0)
(979,426,0)
(805,275,0)
(1026,125,0)
(355,1313,0)
(1207,382,0)
(168,649,0)
(432,378,0)
(1302,1047,0)
(1170,45,0)
(61,771,0)
(1142,1124,0)
(1337,422,0)
(467,1026,0)
(503,538,0)
(11,484,0)
(894,107,0)
(1159,719,0)
(855,42,0)
(726,462,0)
(905,209,0)
(1063,720,0)
(683,510,0)
(651,581,0)
(358,1053,0)
(1083,283,0)
(382,720,0)
(856,474,0)
(724,778,0)
(1026,649,0)
(14,83,0)
(1142,1122,0)
(638,326,0)
(592,1140,0)
(8,315,0)
(1142,121,0)
(1260,1330,0)
(245,76,0)
(200,261,0)
(376,747,0)
(188,783,0)
(516,35,0)
(1057,1152,0)
(1136,371,0)
(1302,720,0)
(1152,418,0)
(1037,720,0)
(1094,932,0)
(864,1047,0)
(805,1014,0)
(386,1152,0)
(1260,45,0)
(444,110,0)
(1208,1195,0)
(317,1222,0)
(413,606,0)
(1026,418,0)
(1273,335,0)
(121,666,0)
(553,345,0)
(1309,1238,0)
(1142,199,0)
(1187,410,0)
(643,176,0)
(1142,617,0)
(953,577,0)
(1271,937,0)
(41,1335,0)
(202,211,0)
(1084,153,0)
(1026,1223,0)
(817,158,0)
(153,168,0)
(1026,142,0)
(533,720,0)
(415,239,0)
(402,720,0)
(340,738,0)
(1328,1047,0)
(190,1070,0)
(1041,647,0)
(68,285,0)
(1154,223,0)
(1196,1163,0)
(703,56,0)
(1335,981,0)
(1166,817,0)
(1028,880,0)
(417,1080,0)
(1012,245,0)
(373,1314,0)
(67,507,0)
(79,418,0)
(202,1065,0)
(564,922,0)
(738,527,0)
(192,1283,0)
(1125,958,0)
(1023,720,0)
(157,1152,0)
(31,1129,0)
(323,720,0)
(853,144,0)
(1171,142,0)
(1134,454,0)
(494,776,0)
(674,765,0)
(50,1296,0)
(336,719,0)
(1142,1326,0)
(47,123,0)
(1329,758,0)
(1113,160,0)
(642,1308,0)
(515,168,0)
(833,382,0)
(917,720,0)
(703,1082,0)
(485,1,0)
(49,1152,0)
(580,720,0)
(79,493,0)
(499,533,0)
(1310,821,0)
(111,194,0)
(930,720,0)
(1101,435,0)
(301,86,0)
(690,1312,0)
(1048,491,0)
(264,1132,0)
(379,1052,0)
(685,720,0)
(79,909,0)
(1128,431,0)
(1080,805,0)
(1355,193,0)
(168,580,0)
(302,720,0)
(1304,720,0)
(1103,638,0)
(864,736,0)
(1124,1268,0)
(926,895,0)
(749,863,0)
(400,720,0)
(548,1160,0)
(1037,316,0)
(1113,31,0)
(79,245,0)
(805,99,0)
(157,1070,0)
(1323,573,0)
(493,805,0)
(1142,461,0)
(902,947,0)
(1065,202,0)
(265,1196,0)
(340,563,0)
(85,685,0)
(463,82,0)
(979,413,0)
(645,239,0)
(820,412,0)
(1142,321,0)
(1242,1263,0)
(360,995,0)
(218,666,0)
(120,1282,0)
(468,474,0)
(710,880,0)
(1099,1254,0)
(1195,690,0)
(470,921,0)
(1323,605,0)
(92,35,0)
(267,1162,0)
(1042,1296,0)
(303,1136,0)
(282,1036,0)
(926,1144,0)
(784,526,0)
(865,805,0)
(195,452,0)
(147,633,0)
(1043,566,0)
(82,108,0)
(129,639,0)
(296,874,0)
(1142,109,0)
(79,154,0)
(950,205,0)
(247,1251,0)
(95,156,0)
(1328,720,0)
(552,17,0)
(1142,1291,0)
(1026,1052,0)
(1262,922,0)
(583,1082,0)
(208,485,0)
(635,763,0)
(1026,321,0)
(1008,240,0)
(79,1052,0)
(865,1327,0)
(638,277,0)
(31,302,0)
(805,8,0)
(1267,507,0)
(1142,1160,0)
(1142,65,0)
(1363,217,0)
(168,7,0)
(1152,1052,0)
(278,652,0)
(366,374,0)
(349,1041,0)
(118,720,0)
(926,617,0)
(679,776,0)
(335,113,0)
(1142,485,0)
(769,1174,0)
(290,779,0)
(79,396,0)
(340,868,0)
(1051,691,0)
(31,418,0)
(257,493,0)
(576,1321,0)
(1339,386,0)
(715,1275,0)
(1026,1297,0)
(276,941,0)
(620,720,0)
(864,759,0)
(126,850,0)
(123,37,0)
(605,1336,0)
(1299,623,0)
(159,1047,0)
(181,690,0)
(23,1235,0)
(390,991,0)
(79,1223,0)
(1142,1052,0)
(539,238,0)
(612,1110,0)
(1360,930,0)
(795,323,0)
(984,728,0)
(466,859,0)
(79,1035,0)
(167,1239,0)
(231,886,0)
(374,666,0)
(91,647,0)
(559,417,0)
(521,1239,0)
(813,742,0)
(904,882,0)
(692,1019,0)
(817,345,0)
(544,499,0)
(1324,1255,0)
(789,698,0)
(926,995,0)
(469,474,0)
(69,1176,0)
(650,56,0)
(926,1287,0)
(684,1343,0)
(19,909,0)
(1142,1287,0)
(116,1015,0)
(1346,887,0)
(123,720,0)
(600,501,0)
(977,1196,0)
(1142,418,0)
(1026,1240,0)
(292,720,0)
(130,389,0)
(648,977,0)
(645,926,0)
(1142,245,0)
(1172,720,0)
(519,164,0)
(541,1250,0)
(936,666,0)
(735,1153,0)
(667,1097,0)
(771,494,0)
(76,521,0)
(1277,343,0)
(383,341,0)
(880,720,0)
(465,690,0)
(1116,991,0)
(1156,242,0)
(864,1243,0)
(610,720,0)
(1348,1287,0)
(1142,1014,0)
(905,1,0)
(1311,405,0)
(788,224,0)
(450,1203,0)
(1050,178,0)
(418,720,0)
(952,439,0)
(196,720,0)
(610,135,0)
(1022,414,0)
(1315,429,0)
(823,357,0)
(926,321,0)
(956,122,0)
(1327,720,0)
(703,225,0)
(1315,720,0)
(131,580,0)
(617,666,0)
(706,734,0)
(737,63,0)
(1142,1144,0)
(241,836,0)
(1192,1229,0)
(375,1341,0)
(662,693,0)
(542,51,0)
(1007,805,0)
(997,302,0)
(537,46,0)
(105,720,0)
(1126,236,0)
(77,1268,0)
(226,193,0)
(691,107,0)
(77,1299,0)
(985,314,0)
(122,934,0)
(79,99,0)
(1063,135,0)
(36,878,0)
(715,1185,0)
(415,319,0)
(527,1127,0)
(31,407,0)
(616,693,0)
(493,257,0)
(1101,745,0)
(765,757,0)
(1108,616,0)
(465,1141,0)
(229,507,0)
(445,940,0)
(700,519,0)
(805,1144,0)
(133,822,0)
(1046,570,0)
(31,1326,0)
(1026,580,0)
(132,720,0)
(926,965,0)
(40,1326,0)
(943,196,0)
(76,1036,0)
(778,345,0)
(475,917,0)
(926,672,0)
(1126,720,0)
(474,507,0)
(1056,532,0)
(1146,1286,0)
(508,176,0)
(926,302,0)
(409,805,0)
(854,251,0)
(492,655,0)
(144,853,0)
(413,979,0)
(224,93,0)
(1354,342,0)
(976,271,0)
(79,8,0)
(840,474,0)
(31,1124,0)
(195,612,0)
(319,507,0)
(569,1033,0)
(255,1275,0)
(905,666,0)
(926,560,0)
(1248,949,0)
(1229,46,0)
(1225,682,0)
(1142,650,0)
(1007,422,0)
(179,359,0)
(1142,649,0)
(1286,1300,0)
(995,316,0)
(1293,158,0)
(805,1035,0)
(682,1225,0)
(1010,720,0)
(1136,1,0)
(653,507,0)
(1322,381,0)
(1043,857,0)
(79,407,0)
(1296,50,0)
(645,122,0)
(220,666,0)
(731,1138,0)
(498,40,0)
(183,410,0)
(79,879,0)
(168,1326,0)
(435,805,0)
(835,620,0)
(958,437,0)
(616,1268,0)
(40,720,0)
(79,1287,0)
(1142,251,0)
(1152,317,0)
(901,1005,0)
(944,1152,0)
(339,1243,0)
(887,720,0)
(1152,1144,0)
(168,275,0)
(506,103,0)
(220,98,0)
(703,1176,0)
(807,467,0)
(339,37,0)
(451,874,0)
(349,666,0)
(1341,394,0)
(729,137,0)
(611,303,0)
(1357,519,0)
(194,839,0)
(926,822,0)
(1121,594,0)
(805,461,0)
(1229,1192,0)
(435,1133,0)
(1269,31,0)
(1343,720,0)
(73,260,0)
(1254,31,0)
(1275,478,0)
(680,158,0)
(609,1178,0)
(79,995,0)
(249,479,0)
(1269,394,0)
(1079,621,0)
(1086,620,0)
(479,249,0)
(1152,649,0)
(1253,766,0)
(10,225,0)
(969,720,0)
(1255,839,0)
(170,374,0)
(1328,1275,0)
(435,1101,0)
(620,1086,0)
(709,31,0)
(950,343,0)
(594,1163,0)
(1355,563,0)
(754,1180,0)
(1011,89,0)
(371,981,0)
(795,445,1)
(1132,107,1)
(1009,719,1)
(1195,720,1)
(70,1106,1)
(31,822,1)
(765,652,1)
(283,872,1)
(1026,617,1)
(404,90,1)
(1007,422,1)
(805,649,1)
(1269,394,1)
(802,1047,1)
(500,1273,1)
(73,1163,1)
(864,1047,1)
(1291,13,1)
(202,793,1)
(162,843,1)
(757,765,1)
(926,1129,1)
(707,78,1)
(1355,563,1)
(1152,1124,1)
(956,626,1)
(538,720,1)
(439,664,1)
(1287,1348,1)
(926,321,1)
(926,202,1)
(956,807,1)
(565,1107,1)
(1152,8,1)
(936,25,1)
(352,573,1)
(1302,1047,1)
(914,968,1)
(783,720,1)
(682,50,1)
(749,928,1)
(850,126,1)
(1265,583,1)
(203,803,1)
(645,452,1)
(1029,323,1)
(656,781,1)
(972,220,1)
(180,608,1)
(632,1245,1)
(936,193,1)
(14,608,1)
(748,1013,1)
(591,486,1)
(435,805,1)
(49,174,1)
(1060,1320,1)
(568,1341,1)
(1363,611,1)
(358,1053,1)
(1102,1072,1)
(813,562,1)
(1026,1129,1)
(1195,1268,1)
(592,15,1)
(2,409,1)
(497,596,1)
(1254,550,1)
(31,317,1)
(905,391,1)
(5,94,1)
(871,292,1)
(232,125,1)
(551,159,1)
(542,1308,1)
(685,720,1)
(1299,77,1)
(15,720,1)
(73,1307,1)
(176,211,1)
(106,418,1)
(1152,275,1)
(668,955,1)
(705,261,1)
(31,995,1)
(765,1209,1)
(882,24,1)
(50,474,1)
(956,926,1)
(1294,1287,1)
(66,650,1)
(410,345,1)
(847,420,1)
(1287,395,1)
(1302,759,1)
(840,1331,1)
(1146,871,1)
(926,372,1)
(148,152,1)
(1271,142,1)
(79,1287,1)
(944,319,1)
(1152,995,1)
(901,1005,1)
(1150,417,1)
(324,1064,1)
(652,720,1)
(1126,869,1)
(1296,1062,1)
(1213,223,1)
(465,690,1)
(413,606,1)
(817,345,1)
(998,317,1)
(42,720,1)
(1006,510,1)
(693,616,1)
(682,936,1)
(439,926,1)
(1142,407,1)
(1026,1052,1)
(215,720,1)
(709,271,1)
(865,946,1)
(1026,8,1)
(533,1020,1)
(805,317,1)
(1048,951,1)
(958,1125,1)
(593,679,1)
(357,823,1)
(31,1035,1)
(712,795,1)
(926,142,1)
(47,822,1)
(292,446,1)
(1168,847,1)
(446,641,1)
(926,99,1)
(168,7,1)
(1037,316,1)
(1125,741,1)
(802,720,1)
(31,302,1)
(1013,805,1)
(261,1209,1)
(155,25,1)
(1160,548,1)
(1295,211,1)
(743,474,1)
(1341,720,1)
(845,957,1)
(1182,520,1)
(1142,1297,1)
(198,941,1)
(652,791,1)
(1359,1014,1)
(698,1038,1)
(328,121,1)
(20,1154,1)
(311,532,1)
(302,720,1)
(340,611,1)
(926,65,1)
(655,720,1)
(76,521,1)
(926,154,1)
(1115,696,1)
(212,49,1)
(25,904,1)
(913,720,1)
(564,922,1)
(564,149,1)
(31,1326,1)
(906,428,1)
(300,1358,1)
(1142,199,1)
(1293,158,1)
(1196,265,1)
(400,1275,1)
(224,979,1)
(1142,965,1)
(1330,147,1)
(918,666,1)
(444,1050,1)
(1136,1,1)
(936,868,1)
(545,421,1)
(822,27,1)
(886,231,1)
(99,886,1)
(353,414,1)
(340,772,1)
(610,135,1)
(687,808,1)
(926,1122,1)
(79,1052,1)
(1316,766,1)
(1275,314,1)
(439,658,1)
(349,447,1)
(1063,720,1)
(659,75,1)
(79,822,1)
(497,211,1)
(728,720,1)
(79,493,1)
(275,713,1)
(8,834,1)
(3,953,1)
(872,545,1)
(827,122,1)
(834,1256,1)
(645,926,1)
(1355,868,1)
(798,598,1)
(831,1340,1)
(775,1100,1)
(214,389,1)
(547,147,1)
(550,454,1)
(335,982,1)
(1249,1067,1)
(805,202,1)
(279,720,1)
(386,930,1)
(638,1103,1)
(288,805,1)
(276,586,1)
(459,1220,1)
(521,1231,1)
(375,986,1)
(844,624,1)
(1308,720,1)
(1309,1228,1)
(6,228,1)
(549,933,1)
(669,1176,1)
(272,1335,1)
(88,1181,1)
(715,590,1)
(294,1346,1)
(323,712,1)
(193,226,1)
(686,956,1)
(684,688,1)
(987,1097,1)
(79,842,1)
(594,1163,1)
(79,125,1)
(1034,619,1)
(835,663,1)
(79,677,1)
(615,1338,1)
(583,805,1)
(569,1141,1)
(402,495,1)
(58,968,1)
(926,1035,1)
(627,63,1)
(688,664,1)
(1049,680,1)
(569,1033,1)
(1341,693,1)
(1026,649,1)
(491,720,1)
(79,275,1)
(340,868,1)
(930,1360,1)
(342,168,1)
(746,345,1)
(926,218,1)
(400,736,1)
(1142,677,1)
(168,1326,1)
(245,612,1)
(703,225,1)
(926,245,1)
(388,1035,1)
(1152,649,1)
(536,40,1)
(926,7,1)
(1104,1261,1)
(1328,1047,1)
(910,792,1)
(1136,1091,1)
(452,1057,1)
(373,141,1)
(138,720,1)
(731,717,1)
(865,1327,1)
(1152,1287,1)
(928,589,1)
(262,639,1)
(982,725,1)
(1302,736,1)
(678,246,1)
(749,720,1)
(543,169,1)
(467,447,1)
(1270,1052,1)
(612,1110,1)
(817,1166,1)
(555,123,1)
(104,632,1)
(1362,885,1)
(450,1203,1)
(673,720,1)
(1059,1063,1)
(553,785,1)
(1057,1152,1)
(238,362,1)
(417,559,1)
(1031,81,1)
(805,1069,1)
(993,42,1)
(971,1151,1)
(1173,271,1)
(493,1325,1)
(926,461,1)
(638,277,1)
(512,620,1)
(1330,720,1)
(1026,1014,1)
(984,109,1)
(389,130,1)
(926,1052,1)
(602,1279,1)
(1179,369,1)
(1113,938,1)
(1061,1282,1)
(1142,455,1)
(463,806,1)
(594,459,1)
(130,344,1)
(715,1275,1)
(4,909,1)
(760,1352,1)
(1288,686,1)
(263,917,1)
(1098,1133,1)
(635,668,1)
(1141,465,1)
(1293,1106,1)
(1015,720,1)
(13,155,1)
(318,851,1)
(805,747,1)
(469,1326,1)
(626,1288,1)
(1051,551,1)
(805,418,1)
(1142,1291,1)
(79,35,1)
(335,113,1)
(818,164,1)
(1026,1291,1)
(1142,781,1)
(915,406,1)
(314,566,1)
(1299,623,1)
(714,830,1)
(740,1243,1)
(1238,631,1)
(1054,95,1)
(853,1000,1)
(1026,560,1)
(26,720,1)
(926,1291,1)
(257,720,1)
(1210,630,1)
(79,374,1)
(181,1268,1)
(1345,449,1)
(1142,560,1)
(1180,610,1)
(1152,621,1)
(677,993,1)
(803,259,1)
(1026,418,1)
(118,720,1)
(51,542,1)
(703,666,1)
(1142,99,1)
(603,150,1)
(1165,1040,1)
(264,221,1)
(715,1047,1)
(288,285,1)
(685,736,1)
(805,154,1)
(1326,536,1)
(1026,374,1)
(703,79,1)
(105,720,1)
(541,581,1)
(1026,672,1)
(314,138,1)
(1142,245,1)
(1005,720,1)
(212,1082,1)
(996,28,1)
(1152,202,1)
(167,556,1)
(647,474,1)
(1128,522,1)
(825,489,1)
(926,747,1)
(745,1184,1)
(1142,202,1)
(926,895,1)
(1232,564,1)
(79,302,1)
(65,543,1)
(453,323,1)
(381,720,1)
(779,720,1)
(247,1329,1)
(805,621,1)
(330,107,1)
(802,759,1)
(43,811,1)
(143,804,1)
(857,307,1)
(785,1163,1)
(521,1239,1)
(1026,822,1)
(897,4,1)
(79,28,1)
(176,508,1)
(171,852,1)
(864,736,1)
(332,247,1)
(107,12,1)
(1045,424,1)
(160,829,1)
(954,238,1)
(335,720,1)
(168,822,1)
(334,607,1)
(840,168,1)
(1186,787,1)
(1085,1059,1)
(926,580,1)
(1224,796,1)
(1152,1035,1)
(10,481,1)
(1093,384,1)
(895,1174,1)
(1234,1056,1)
(1328,759,1)
(941,600,1)
(1237,11,1)
(79,747,1)
(745,283,1)
(532,720,1)
(1008,245,1)
(882,211,1)
(1172,720,1)
(1034,504,1)
(1061,78,1)
(220,666,1)
(791,278,1)
(703,371,1)
(991,720,1)
(1251,720,1)
(81,566,1)
(1128,431,1)
(71,372,1)
(1142,418,1)
(926,672,1)
(1342,1018,1)
(1152,1326,1)
(1002,448,1)
(168,621,1)
(392,540,1)
(794,225,1)
(319,255,1)
(27,133,1)
(645,664,1)
(810,630,1)
(15,1201,1)
(642,127,1)
(131,860,1)
(192,250,1)
(778,282,1)
(866,651,1)
(50,1296,1)
(494,771,1)
(274,483,1)
(515,474,1)
(1142,1124,1)
(1022,1019,1)
(761,983,1)
(78,262,1)
(747,588,1)
(1254,211,1)
(1026,909,1)
(340,425,1)
(1229,46,1)
(1142,1078,1)
(380,104,1)
(437,958,1)
(1136,941,1)
(1195,147,1)
(423,331,1)
(1026,515,1)
(1152,1144,1)
(691,107,1)
(1082,703,1)
(1142,89,1)
(237,1066,1)
(1185,715,1)
(583,843,1)
(1018,649,1)
(854,1249,1)
(575,1359,1)
(49,1172,1)
(79,109,1)
(168,1124,1)
(685,1275,1)
(1126,720,1)
(863,749,1)
(828,65,1)
(418,720,1)
(493,805,1)
(79,199,1)
(1106,1251,1)
(1124,720,1)
(312,300,1)
(1300,1286,1)
(1026,781,1)
(965,666,1)
(1136,1176,1)
(1266,698,1)
(1355,193,1)
(337,720,1)
(519,1268,1)
(1142,195,1)
(363,215,1)
(179,359,1)
(359,720,1)
(814,720,1)
(435,1133,1)
(805,7,1)
(266,989,1)
(805,407,1)
(1311,752,1)
(519,720,1)
(1212,617,1)
(1343,720,1)
(147,224,1)
(894,107,1)
(91,797,1)
(168,154,1)
(255,736,1)
(149,922,1)
(1078,238,1)
(681,965,1)
(400,759,1)
(323,720,1)
(168,1035,1)
(909,270,1)
(988,1284,1)
(464,1034,1)
(78,639,1)
(367,944,1)
(1264,870,1)
(502,669,1)
(202,1065,1)
(79,251,1)
(1026,28,1)
(354,282,1)
(281,217,1)
(1218,290,1)
(386,1339,1)
(1222,998,1)
(79,954,1)
(1080,417,1)
(31,1052,1)
(768,345,1)
(82,720,1)
(292,1047,1)
(1217,517,1)
(1248,949,1)
(3,1194,1)
(80,405,1)
(560,775,1)
(168,747,1)
(954,189,1)
(979,413,1)
(1323,573,1)
(820,1224,1)
(1156,154,1)
(522,223,1)
(700,1357,1)
(487,51,1)
(348,158,1)
(1172,318,1)
(1178,609,1)
(596,814,1)
(1088,171,1)
(1078,615,1)
(624,618,1)
(1361,60,1)
(465,1298,1)
(231,743,1)
(1152,317,1)
(510,683,1)
(1277,1299,1)
(242,585,1)
(79,1240,1)
(944,1010,1)
(453,1029,1)
(286,771,1)
(427,861,1)
(1304,733,1)
(796,720,1)
(445,1002,1)
(480,466,1)
(674,652,1)
(64,452,1)
(79,560,1)
(42,356,1)
(253,230,1)
(1344,260,1)
(1283,720,1)
(715,736,1)
(1038,368,1)
(340,563,1)
(419,767,1)
(339,720,1)
(952,1080,1)
(842,666,1)
(1144,720,1)
(1216,1306,1)
(485,666,1)
(84,720,1)
(650,256,1)
(859,466,1)
(746,1351,1)
(137,729,1)
(888,1278,1)
(1337,438,1)
(699,1263,1)
(443,996,1)
(1136,225,1)
(120,1206,1)
(159,1275,1)
(831,594,1)
(617,1303,1)
(199,389,1)
(926,396,1)
(805,677,1)
(126,530,1)
(1249,499,1)
(1026,195,1)
(793,1065,1)
(181,147,1)
(691,1209,1)
(663,787,1)
(936,563,1)
(1223,666,1)
(1351,377,1)
(456,130,1)
(1238,1309,1)
(921,1025,1)
(85,407,1)
(79,1160,1)
(168,407,1)
(90,945,1)
(294,97,1)
(260,927,1)
(1356,886,1)
(641,865,1)
(563,1225,1)
(429,1315,1)
(531,1243,1)
(57,546,1)
(195,612,1)
(79,1297,1)
(645,807,1)
(805,995,1)
(515,1143,1)
(1026,199,1)
(969,720,1)
(1296,720,1)
(420,1024,1)
(364,1117,1)
(209,288,1)
(801,308,1)
(292,720,1)
(256,1123,1)
(1301,289,1)
(949,439,1)
(486,1302,1)
(50,168,1)
(1220,746,1)
(1140,592,1)
(1274,72,1)
(667,1276,1)
(63,398,1)
(683,858,1)
(1063,935,1)
(196,720,1)
(734,107,1)
(648,1196,1)
(1026,954,1)
(3,33,1)
(482,931,1)
(1323,76,1)
(394,181,1)
(933,137,1)
(768,320,1)
(369,11,1)
(1269,248,1)
(310,63,1)
(491,1048,1)
(746,282,1)
(919,1345,1)
(655,492,1)
(555,1328,1)
(926,965,1)
(966,715,1)
(317,402,1)
(1167,1102,1)
(208,303,1)
(926,1182,1)
(335,137,1)
(630,404,1)
(125,666,1)
(951,108,1)
(883,690,1)
(1053,364,1)
(948,47,1)
(926,1314,1)
(522,1213,1)
(564,211,1)
(896,809,1)
(271,976,1)
(116,828,1)
(468,474,1)
(837,45,1)
(989,86,1)
(460,36,1)
(598,564,1)
(1306,1363,1)
(972,821,1)
(411,1290,1)
(79,1129,1)
(144,853,1)
(1052,720,1)
(1026,99,1)
(495,1193,1)
(81,1169,1)
(21,555,1)
(772,472,1)
(53,488,1)
(878,345,1)
(950,17,1)
(1286,1146,1)
(999,843,1)
(657,302,1)
(158,103,1)
(340,666,1)
(1007,361,1)
(39,1294,1)
(340,1142,1)
(154,408,1)
(926,28,1)
(754,1180,1)
(631,1309,1)
(519,1316,1)
(1142,386,1)
(936,666,1)
(87,524,1)
(796,147,1)
(774,711,1)
(415,532,1)
(467,573,1)
(734,706,1)
(610,935,1)
(1057,1178,1)
(962,363,1)
(519,700,1)
(160,1113,1)
(28,666,1)
(79,461,1)
(926,649,1)
(1026,677,1)
(621,720,1)
(1152,909,1)
(616,1316,1)
(1032,1361,1)
(1026,7,1)
(349,573,1)
(766,1253,1)
(451,457,1)
(467,605,1)
(31,1124,1)
(1354,342,1)
(397,1075,1)
(562,1045,1)
(399,14,1)
(360,500,1)
(1152,302,1)
(230,780,1)
(796,690,1)
(373,357,1)
(1349,657,1)
(846,49,1)
(767,784,1)
(1076,656,1)
(382,833,1)
(59,196,1)
(168,418,1)
(201,1032,1)
(573,1099,1)
(1142,672,1)
(349,76,1)
(803,538,1)
(1255,1324,1)
(719,1158,1)
(754,179,1)
(1255,839,1)
(1246,885,1)
(852,591,1)
(856,474,1)
(955,329,1)
(1201,80,1)
(395,496,1)
(79,65,1)
(869,1247,1)
(548,1092,1)
(1192,1229,1)
(1142,895,1)
(661,1226,1)
(292,1275,1)
(1019,692,1)
(218,237,1)
(1026,251,1)
(1248,51,1)
(276,238,1)
(962,1147,1)
(1135,849,1)
(1037,113,1)
(1280,720,1)
(1281,236,1)
(215,714,1)
(662,693,1)
(99,1356,1)
(1004,1250,1)
(398,737,1)
(1158,778,1)
(177,392,1)
(235,291,1)
(384,758,1)
(24,1162,1)
(309,1041,1)
(926,1240,1)
(932,1094,1)
(371,1101,1)
(817,158,1)
(538,690,1)
(1043,857,1)
(65,612,1)
(592,405,1)
(465,1268,1)
(709,1173,1)
(526,429,1)
(22,1115,1)
(504,720,1)
(883,1316,1)
(1026,125,1)
(173,451,1)
(900,1067,1)
(1185,514,1)
(1142,621,1)
(805,1124,1)
(1026,580,1)
(1070,190,1)
(17,552,1)
(89,720,1)
(473,157,1)
(1250,102,1)
(249,1037,1)
(643,720,1)
(947,902,1)
(926,677,1)
(567,1038,1)
(119,1272,1)
(349,1026,1)
(729,720,1)
(525,1223,1)
(370,1159,1)
(1127,720,1)
(717,687,1)
(5,720,1)
(79,276,1)
(196,113,1)
(1320,894,1)
(179,528,1)
(79,580,1)
(412,820,1)
(31,8,1)
(133,720,1)
(527,1127,1)
(926,35,1)
(378,720,1)
(1026,89,1)
(835,626,1)
(280,238,1)
(696,1058,1)
(26,529,1)
(1129,346,1)
(326,638,1)
(1080,805,1)
(634,56,1)
(483,1164,1)
(152,1254,1)
(407,720,1)
(201,758,1)
(444,614,1)
(853,1163,1)
(1049,796,1)
(1013,230,1)
(874,173,1)
(159,736,1)
(1328,824,1)
(1327,0,1)
(172,35,1)
(1021,274,1)
(978,352,1)
(31,7,1)
(1026,321,1)
(580,131,1)
(515,1252,1)
(1147,363,1)
(663,53,1)
(174,1172,1)
(1231,31,1)
(37,685,1)
(396,584,1)
(565,805,1)
(1319,915,1)
(1169,385,1)
(159,101,1)
(7,862,1)
(863,387,1)
(822,133,1)
(79,485,1)
(1321,576,1)
(1352,1061,1)
(1152,1052,1)
(925,720,1)
(409,132,1)
(389,84,1)
(255,1104,1)
(365,435,1)
(924,442,1)
(1341,1050,1)
(1142,1129,1)
(977,1196,1)
(129,627,1)
(1072,960,1)
(105,929,1)
(484,720,1)
(1069,555,1)
(467,937,1)
(132,1076,1)
(1026,407,1)
(859,480,1)
(872,720,1)
(1257,838,1)
(135,1183,1)
(1182,9,1)
(1111,935,1)
(1099,837,1)
(79,386,1)
(1298,52,1)
(1026,650,1)
(415,319,1)
(341,655,1)
(733,1292,1)
(257,443,1)
(809,22,1)
(616,720,1)
(1000,699,1)
(79,142,1)
(905,666,1)
(31,909,1)
(1057,319,1)
(1240,751,1)
(1122,916,1)
(1142,302,1)
(1108,1270,1)
(79,8,1)
(956,322,1)
(161,525,1)
(1026,218,1)
(926,109,1)
(1355,671,1)
(181,690,1)
(31,407,1)
(322,748,1)
(273,1171,1)
(861,988,1)
(610,315,1)
(378,432,1)
(175,842,1)
(421,1184,1)
(391,604,1)
(220,98,1)
(873,402,1)
(645,239,1)
(926,1297,1)
(705,802,1)
(645,122,1)
(79,621,1)
(228,973,1)
(1,340,1)
(1142,1240,1)
(188,805,1)
(878,460,1)
(381,629,1)
(468,991,1)
(1353,168,1)
(6,666,1)
(189,198,1)
(340,738,1)
(802,1275,1)
(583,919,1)
(1278,319,1)
(73,836,1)
(108,82,1)
(465,720,1)
(823,1089,1)
(926,8,1)
(771,61,1)
(168,153,1)
(1354,1355,1)
(503,210,1)
(415,311,1)
(290,89,1)
(667,987,1)
(799,412,1)
(268,310,1)
(168,99,1)
(1142,1314,1)
(983,850,1)
(355,1313,1)
(166,726,1)
(838,560,1)
(31,154,1)
(409,805,1)
(186,1203,1)
(499,544,1)
(1239,818,1)
(1043,792,1)
(265,119,1)
(1240,612,1)
(783,1198,1)
(1152,461,1)
(465,147,1)
(466,1017,1)
(1095,568,1)
(1282,120,1)
(922,720,1)
(901,876,1)
(771,26,1)
(1026,895,1)
(587,1055,1)
(457,345,1)
(79,1122,1)
(366,170,1)
(472,485,1)
(275,720,1)
(439,807,1)
(1086,512,1)
(270,19,1)
(103,1215,1)
(287,859,1)
(168,1144,1)
(1028,7,1)
(616,147,1)
(183,1187,1)
(130,720,1)
(444,720,1)
(781,269,1)
(518,972,1)
(327,1343,1)
(559,487,1)
(570,1046,1)
(240,720,1)
(1088,1209,1)
(384,579,1)
(851,6,1)
(959,890,1)
(547,690,1)
(926,276,1)
(1219,1128,1)
(77,1316,1)
(40,498,1)
(98,720,1)
(1026,245,1)
(1026,485,1)
(1007,843,1)
(153,1084,1)
(538,1316,1)
(808,45,1)
(394,1341,1)
(862,1031,1)
(1331,1030,1)
(781,520,1)
(1142,617,1)
(978,345,1)
(1304,935,1)
(876,1005,1)
(629,1322,1)
(354,1119,1)
(672,334,1)
(209,905,1)
(969,1334,1)
(727,997,1)
(706,1192,1)
(38,672,1)
(1132,1209,1)
(288,1090,1)
(1142,276,1)
(583,1345,1)
(405,1311,1)
(956,452,1)
(1308,642,1)
(853,845,1)
(1091,212,1)
(905,225,1)
(1087,628,1)
(1362,304,1)
(79,245,1)
(628,963,1)
(442,613,1)
(1139,913,1)
(1162,267,1)
(108,31,1)
(1290,1077,1)
(1339,930,1)
(1297,358,1)
(494,286,1)
(805,580,1)
(539,206,1)
(547,1268,1)
(514,1317,1)
(658,952,1)
(79,195,1)
(1067,327,1)
(926,1144,1)
(606,720,1)
(773,218,1)
(1124,974,1)
(660,1124,1)
(343,950,1)
(1142,218,1)
(1323,235,1)
(585,1156,1)
(1129,783,1)
(1035,920,1)
(1281,932,1)
(517,1023,1)
(1107,1015,1)
(880,720,1)
(278,1297,1)
(255,1047,1)
(1142,142,1)
(49,1152,1)
(79,781,1)
(170,563,1)
(213,1070,1)
(1072,720,1)
(715,759,1)
(401,867,1)
(31,461,1)
(911,456,1)
(1099,1254,1)
(1253,185,1)
(79,89,1)
(1120,1010,1)
(484,1073,1)
(526,569,1)
(532,1234,1)
(339,37,1)
(1042,709,1)
(1238,1209,1)
(883,147,1)
(859,843,1)
(905,56,1)
(16,299,1)
(1164,388,1)
(31,677,1)
(1263,1140,1)
(1208,881,1)
(698,789,1)
(407,1081,1)
(1313,144,1)
(331,1122,1)
(10,565,1)
(625,961,1)
(244,1127,1)
(167,921,1)
(34,1349,1)
(613,1144,1)
(299,374,1)
(94,1219,1)
(735,739,1)
(115,786,1)
(123,720,1)
(1140,1001,1)
(956,664,1)
(704,505,1)
(947,83,1)
(703,877,1)
(31,386,1)
(1223,401,1)
(777,901,1)
(1026,6,1)
(1258,728,1)
(679,836,1)
(886,720,1)
(1183,720,1)
(467,76,1)
(93,29,1)
(789,582,1)
(471,742,1)
(622,136,1)
(1024,693,1)
(485,513,1)
(338,683,1)
(1343,684,1)
(1142,65,1)
(1081,810,1)
(621,695,1)
(589,1255,1)
(805,275,1)
(1231,1205,1)
(680,158,1)
(33,776,1)
(1326,40,1)
(936,425,1)
(31,1129,1)
(949,1080,1)
(547,622,1)
(145,602,1)
(802,736,1)
(146,776,1)
(1026,995,1)
(1230,758,1)
(342,474,1)
(1087,37,1)
(35,92,1)
(479,249,1)
(51,1308,1)
(79,7,1)
(176,643,1)
(1330,148,1)
(849,538,1)
(1142,954,1)
(48,569,1)
(726,34,1)
(1142,8,1)
(833,1207,1)
(1141,878,1)
(157,1152,1)
(1143,720,1)
(79,672,1)
(744,345,1)
(79,1014,1)
(466,720,1)
(31,621,1)
(1026,1240,1)
(121,666,1)
(676,132,1)
(857,720,1)
(400,720,1)
(560,520,1)
(255,759,1)
(1348,395,1)
(430,457,1)
(1159,1009,1)
(11,163,1)
(805,99,1)
(538,503,1)
(1037,636,1)
(143,906,1)
(196,137,1)
(1080,843,1)
(558,800,1)
(141,720,1)
(355,44,1)
(438,276,1)
(468,168,1)
(410,158,1)
(7,720,1)
(1097,1006,1)
(881,202,1)
(725,315,1)
(164,817,1)
(673,694,1)
(875,2,1)
(79,455,1)
(1026,1035,1)
(547,1316,1)
(916,1044,1)
(81,979,1)
(489,46,1)
(279,990,1)
(840,474,1)
(680,412,1)
(102,541,1)
(467,767,1)
(1293,70,1)
(871,1132,1)
(709,211,1)
(1046,1004,1)
(514,1209,1)
(140,1350,1)
(1142,1144,1)
(313,321,1)
(666,1344,1)
(890,243,1)
(1118,969,1)
(1152,407,1)
(1096,61,1)
(1286,635,1)
(909,720,1)
(1300,865,1)
(258,55,1)
(134,1200,1)
(943,923,1)
(662,1050,1)
(1142,109,1)
(79,965,1)
(958,741,1)
(252,107,1)
(703,941,1)
(69,209,1)
(372,334,1)
(1121,539,1)
(49,319,1)
(1194,294,1)
(1204,1129,1)
(159,720,1)
(1355,1142,1)
(805,461,1)
(225,10,1)
(483,720,1)
(1109,1012,1)
(1304,315,1)
(878,158,1)
(481,95,1)
(904,790,1)
(933,86,1)
(864,1275,1)
(894,1157,1)
(46,211,1)
(566,1043,1)
(752,1242,1)
(925,1179,1)
(546,901,1)
(8,720,1)
(1243,339,1)
(690,479,1)
(510,338,1)
(1333,336,1)
(1154,1249,1)
(950,205,1)
(181,1316,1)
(595,925,1)
(1142,121,1)
(206,874,1)
(926,302,1)
(356,855,1)
(296,874,1)
(1142,125,1)
(1070,720,1)
(68,367,1)
(329,1146,1)
(79,1035,1)
(118,87,1)
(529,1096,1)
(498,162,1)
(1309,1023,1)
(1041,647,1)
(926,617,1)
(1142,154,1)
(1232,180,1)
(805,1014,1)
(1136,79,1)
(417,720,1)
(527,244,1)
(93,720,1)
(493,843,1)
(579,1314,1)
(1302,720,1)
(181,720,1)
(1310,678,1)
(1322,215,1)
(1050,242,1)
(223,20,1)
(623,1301,1)
(790,203,1)
(1251,332,1)
(904,882,1)
(1209,450,1)
(435,843,1)
(1136,371,1)
(936,1142,1)
(1026,109,1)
(776,494,1)
(892,200,1)
(991,1116,1)
(926,995,1)
(931,761,1)
(1357,1231,1)
(513,208,1)
(349,1192,1)
(620,1202,1)
(296,419,1)
(245,1109,1)
(776,836,1)
(325,1054,1)
(616,1108,1)
(922,305,1)
(79,1182,1)
(301,113,1)
(1340,594,1)
(490,757,1)
(668,720,1)
(79,649,1)
(762,778,1)
(77,825,1)
(79,202,1)
(953,1263,1)
(79,218,1)
(939,991,1)
(1101,745,1)
(800,453,1)
(905,371,1)
(372,1190,1)
(565,1015,1)
(1026,461,1)
(315,1280,1)
(142,273,1)
(1014,720,1)
(844,720,1)
(1102,975,1)
(330,306,1)
(123,948,1)
(1323,1026,1)
(342,219,1)
(79,121,1)
(1001,592,1)
(29,815,1)
(185,275,1)
(1026,455,1)
(79,154,1)
(385,566,1)
(288,843,1)
(488,378,1)
(836,241,1)
(31,580,1)
(830,1177,1)
(1100,520,1)
(758,1293,1)
(50,1175,1)
(753,794,1)
(1142,35,1)
(977,648,1)
(1195,690,1)
(454,1134,1)
(1026,1078,1)
(965,1347,1)
(1284,959,1)
(864,597,1)
(620,720,1)
(1142,1223,1)
(1196,1163,1)
(424,895,1)
(1152,99,1)
(31,99,1)
(806,251,1)
(1202,835,1)
(217,645,1)
(623,345,1)
(79,6,1)
(436,1277,1)
(905,941,1)
(665,373,1)
(1227,1251,1)
(805,302,1)
(1231,211,1)
(604,288,1)
(1086,620,1)
(1067,1343,1)
(1142,251,1)
(715,720,1)
(1252,1143,1)
(814,16,1)
(168,461,1)
(165,738,1)
(725,1085,1)
(769,1165,1)
(590,365,1)
(917,475,1)
(1012,425,1)
(843,907,1)
(654,854,1)
(1272,282,1)
(717,720,1)
(1058,427,1)
(703,1091,1)
(1005,1137,1)
(667,1097,1)
(520,370,1)
(926,1326,1)
(46,31,1)
(721,1007,1)
(670,1178,1)
(169,612,1)
(1092,675,1)
(222,287,1)
(342,491,1)
(1355,611,1)
(369,31,1)
(1142,856,1)
(61,841,1)
(805,1287,1)
(1153,720,1)
(608,1049,1)
(164,519,1)
(1142,1182,1)
(187,48,1)
(1229,343,1)
(1152,418,1)
(41,409,1)
(944,1152,1)
(1122,520,1)
(1142,374,1)
(797,903,1)
(1163,962,1)
(1157,43,1)
(847,720,1)
(285,720,1)
(852,107,1)
(1136,666,1)
(927,73,1)
(1082,583,1)
(464,1304,1)
(447,309,1)
(1142,275,1)
(995,720,1)
(858,1332,1)
(465,1316,1)
(1026,621,1)
(195,753,1)
(150,599,1)
(479,726,1)
(926,317,1)
(1262,1182,1)
(860,1061,1)
(196,316,1)
(737,316,1)
(584,634,1)
(265,107,1)
(1039,1011,1)
(83,399,1)
(1335,41,1)
(662,720,1)
(359,128,1)
(1199,1111,1)
(168,995,1)
(1152,531,1)
(31,418,1)
(1203,704,1)
(841,593,1)
(764,5,1)
(1323,605,1)
(60,345,1)
(1026,154,1)
(168,677,1)
(1355,666,1)
(450,186,1)
(864,720,1)
(340,193,1)
(710,1028,1)
(561,565,1)
(395,720,1)
(431,312,1)
(454,720,1)
(907,677,1)
(31,1144,1)
(926,822,1)
(1261,99,1)
(1137,1071,1)
(123,274,1)
(1077,894,1)
(320,411,1)
(434,926,1)
(330,768,1)
(518,836,1)
(260,73,1)
(538,1268,1)
(95,156,1)
(194,874,1)
(312,720,1)
(945,883,1)
(1087,274,1)
(154,720,1)
(711,647,1)
(768,282,1)
(961,925,1)
(168,580,1)
(127,455,1)
(1254,31,1)
(770,707,1)
(889,1209,1)
(1097,510,1)
(1161,1275,1)
(82,463,1)
(349,605,1)
(379,37,1)
(200,1112,1)
(926,199,1)
(1064,50,1)
(1190,827,1)
(1330,690,1)
(708,448,1)
(703,1,1)
(251,666,1)
(1152,7,1)
(292,759,1)
(1026,65,1)
(605,160,1)
(1142,453,1)
(1158,762,1)
(1026,276,1)
(839,400,1)
(425,468,1)
(689,1128,1)
(1158,874,1)
(1010,161,1)
(357,720,1)
(1260,410,1)
(992,782,1)
(79,372,1)
(1166,1221,1)
(703,56,1)
(926,275,1)
(997,1047,1)
(413,673,1)
(672,1233,1)
(467,1026,1)
(1025,470,1)
(848,382,1)
(930,720,1)
(1175,1296,1)
(1291,238,1)
(926,374,1)
(1011,135,1)
(1040,1362,1)
(157,319,1)
(1355,738,1)
(263,637,1)
(199,214,1)
(97,554,1)
(926,621,1)
(935,924,1)
(40,720,1)
(926,1014,1)
(504,661,1)
(724,1333,1)
(787,764,1)
(716,342,1)
(936,738,1)
(28,756,1)
(168,1287,1)
(1152,1129,1)
(89,1039,1)
(380,282,1)
(924,720,1)
(103,506,1)
(376,1191,1)
(578,1283,1)
(321,698,1)
(1195,1208,1)
(110,444,1)
(751,64,1)
(422,1337,1)
(496,708,1)
(1026,386,1)
(88,845,1)
(316,844,1)
(1191,523,1)
(819,281,1)
(870,570,1)
(337,325,1)
(428,804,1)
(1142,396,1)
(1133,720,1)
(1260,1330,1)
(1302,222,1)
(349,666,1)
(778,345,1)
(206,380,1)
(408,1021,1)
(1280,801,1)
(1136,1244,1)
(1221,519,1)
(1014,216,1)
(252,734,1)
(1026,302,1)
(156,691,1)
(46,537,1)
(917,720,1)
(1315,720,1)
(645,626,1)
(515,168,1)
(1310,720,1)
(1142,6,1)
(79,99,1)
(1113,31,1)
(405,720,1)
(1151,1060,1)
(1037,720,1)
(461,720,1)
(1205,240,1)
(729,350,1)
(123,37,1)
(926,407,1)
(1026,317,1)
(926,6,1)
(1288,157,1)
(458,82,1)
(1152,747,1)
(1007,805,1)
(887,258,1)
(639,720,1)
(31,747,1)
(511,1230,1)
(475,660,1)
(792,1319,1)
(946,1327,1)
(999,728,1)
(1226,580,1)
(1045,445,1)
(1152,89,1)
(805,8,1)
(138,897,1)
(109,666,1)
(86,227,1)
(609,298,1)
(937,1271,1)
(348,898,1)
(926,386,1)
(815,621,1)
(1026,453,1)
(1047,754,1)
(493,257,1)
(439,239,1)
(926,1124,1)
(439,452,1)
(574,721,1)
(1245,296,1)
(1056,954,1)
(611,232,1)
(877,1265,1)
(390,1240,1)
(1162,720,1)
(1256,1085,1)
(361,422,1)
(1233,165,1)
(1069,21,1)
(1010,720,1)
(865,843,1)
(339,274,1)
(1075,38,1)
(741,482,1)
(79,1326,1)
(1152,1014,1)
(1023,720,1)
(292,736,1)
(468,939,1)
(887,720,1)
(788,93,1)
(122,934,1)
(739,118,1)
(168,1014,1)
(1184,112,1)
(1038,720,1)
(973,663,1)
(883,1268,1)
(728,74,1)
(805,1052,1)
(79,617,1)
(1041,349,1)
(1087,720,1)
(1304,720,1)
(362,831,1)
(929,773,1)
(650,334,1)
(1113,105,1)
(645,1216,1)
(19,81,1)
(1225,709,1)
(304,662,1)
(1149,358,1)
(1283,207,1)
(1176,69,1)
(576,1093,1)
(180,947,1)
(1068,91,1)
(639,129,1)
(899,71,1)
(796,798,1)
(1063,549,1)
(52,176,1)
(1211,548,1)
(792,720,1)
(1065,720,1)
(77,147,1)
(501,863,1)
(546,1139,1)
(913,646,1)
(635,763,1)
(410,183,1)
(168,8,1)
(646,777,1)
(938,105,1)
(429,1241,1)
(691,1051,1)
(1026,747,1)
(176,31,1)
(121,819,1)
(1123,334,1)
(1235,279,1)
(1358,522,1)
(1026,1287,1)
(499,533,1)
(261,200,1)
(77,720,1)
(1026,842,1)
(790,1235,1)
(932,705,1)
(1117,1321,1)
(75,673,1)
(1026,142,1)
(79,418,1)
(439,122,1)
(60,978,1)
(182,339,1)
(616,690,1)
(664,1248,1)
(314,985,1)
(1203,1283,1)
(336,1105,1)
(307,910,1)
(1142,1035,1)
(396,334,1)
(647,168,1)
(779,1218,1)
(295,396,1)
(1116,390,1)
(695,1079,1)
(79,321,1)
(787,5,1)
(412,345,1)
(926,251,1)
(1338,239,1)
(1026,372,1)
(557,1078,1)
(802,875,1)
(765,674,1)
(455,666,1)
(1113,211,1)
(1002,382,1)
(937,217,1)
(1030,124,1)
(920,1210,1)
(523,1222,1)
(992,337,1)
(400,1047,1)
(956,239,1)
(531,740,1)
(1228,1217,1)
(784,176,1)
(136,444,1)
(481,992,1)
(756,918,1)
(141,511,1)
(731,1138,1)
(259,351,1)
(79,317,1)
(219,491,1)
(1066,193,1)
(821,1310,1)
(128,106,1)
(1174,720,1)
(645,666,1)
(647,1068,1)
(723,1086,1)
(349,937,1)
(77,1268,1)
(1026,35,1)
(968,330,1)
(437,761,1)
(548,720,1)
(1314,665,1)
(467,1192,1)
(168,317,1)
(538,147,1)
(1272,971,1)
(91,720,1)
(926,455,1)
(79,396,1)
(1279,937,1)
(709,31,1)
(610,720,1)
(1026,1326,1)
(144,884,1)
(341,383,1)
(895,204,1)
(157,1070,1)
(35,666,1)
(79,1124,1)
(581,866,1)
(168,89,1)
(74,984,1)
(259,744,1)
(1142,842,1)
(944,1120,1)
(351,744,1)
(1089,141,1)
(251,654,1)
(333,1113,1)
(535,312,1)
(1207,625,1)
(414,572,1)
(597,182,1)
(1362,1246,1)
(79,650,1)
(476,461,1)
(606,659,1)
(1330,1316,1)
(110,547,1)
(547,720,1)
(856,168,1)
(168,302,1)
(527,168,1)
(1239,167,1)
(374,366,1)
(467,666,1)
(702,1346,1)
(737,1273,1)
(975,1072,1)
(1323,1192,1)
(31,1287,1)
(289,77,1)
(416,638,1)
(736,880,1)
(824,832,1)
(302,727,1)
(259,158,1)
(168,1052,1)
(194,1209,1)
(1101,435,1)
(159,759,1)
(514,874,1)
(418,760,1)
(32,913,1)
(1074,140,1)
(157,213,1)
(51,1152,1)
(649,847,1)
(1142,321,1)
(784,526,1)
(444,693,1)
(829,1323,1)
(1303,139,1)
(196,943,1)
(1268,59,1)
(1154,605,1)
(527,474,1)
(744,1135,1)
(111,234,1)
(530,1026,1)
(84,911,1)
(297,335,1)
(519,147,1)
(750,1291,1)
(303,1136,1)
(926,842,1)
(1276,1097,1)
(431,535,1)
(203,393,1)
(1329,354,1)
(1026,202,1)
(1073,1295,1)
(363,381,1)
(439,626,1)
(236,994,1)
(1317,966,1)
(680,799,1)
(376,720,1)
(885,558,1)
(1146,1003,1)
(926,909,1)
(1231,240,1)
(285,68,1)
(317,873,1)
(1142,822,1)
(1215,506,1)
(778,724,1)
(936,611,1)
(349,774,1)
(250,143,1)
(1044,868,1)
(455,502,1)
(893,203,1)
(1055,79,1)
(282,1238,1)
(643,423,1)
(271,720,1)
(839,194,1)
(956,666,1)
(1302,1275,1)
(1142,485,1)
(1088,852,1)
(44,1313,1)
(926,453,1)
(1272,345,1)
(829,840,1)
(1133,1257,1)
(226,108,1)
(856,969,1)
(898,1227,1)
(340,25,1)
(1142,995,1)
(926,560,1)
(865,805,1)
(1142,909,1)
(1273,335,1)
(926,1160,1)
(86,720,1)
(821,666,1)
(1057,670,1)
(1023,1074,1)
(211,1195,1)
(1307,701,1)
(1245,874,1)
(986,1160,1)
(647,91,1)
(588,376,1)
(243,1145,1)
(713,1161,1)
(55,143,1)
(884,853,1)
(77,690,1)
(1315,187,1)
(807,467,1)
(151,1237,1)
(1145,1264,1)
(31,89,1)
(1184,1185,1)
(224,788,1)
(1110,58,1)
(976,681,1)
(1244,115,1)
(1323,937,1)
(1181,355,1)
(36,465,1)
(1235,23,1)
(255,1275,1)
(1263,845,1)
(377,1121,1)
(223,720,1)
(818,697,1)
(34,720,1)
(968,1163,1)
(265,1272,1)
(306,768,1)
(402,720,1)
(227,301,1)
(805,1035,1)
(882,31,1)
(459,874,1)
(1102,158,1)
(1323,666,1)
(868,1232,1)
(630,90,1)
(406,979,1)
(1152,154,1)
(415,1152,1)
(1142,28,1)
(168,275,1)
(79,1223,1)
(79,895,1)
(349,767,1)
(1142,1160,1)
(439,1335,1)
(197,371,1)
(79,1291,1)
(1152,677,1)
(1142,461,1)
(926,1078,1)
(1330,1268,1)
(616,1268,1)
(805,89,1)
(1106,348,1)
(618,995,1)
(855,304,1)
(1071,76,1)
(1112,1318,1)
(759,464,1)
(1017,295,1)
(1142,1122,1)
(31,1269,1)
(204,1174,1)
(497,31,1)
(448,1087,1)
(1159,719,1)
(92,516,1)
(277,1088,1)
(248,394,1)
(1355,425,1)
(671,716,1)
(1206,770,1)
(239,415,1)
(69,944,1)
(1020,900,1)
(343,1277,1)
(786,1086,1)
(1119,199,1)
(51,319,1)
(747,376,1)
(537,397,1)
(1277,18,1)
(701,146,1)
(441,85,1)
(1142,372,1)
(1144,266,1)
(726,462,1)
(974,601,1)
(692,177,1)
(1193,1342,1)
(1355,25,1)
(1026,121,1)
(1327,720,1)
(132,720,1)
(1228,1209,1)
(905,1,1)
(207,192,1)
(1160,1211,1)
(79,1144,1)
(283,1083,1)
(685,441,1)
(79,1314,1)
(934,326,1)
(636,191,1)
(738,527,1)
(461,1199,1)
(1292,1034,1)
(492,416,1)
(114,813,1)
(1114,912,1)
(1143,254,1)
(1136,56,1)
(1084,110,1)
(1035,720,1)
(56,1300,1)
(350,476,1)
(562,961,1)
(31,275,1)
(200,874,1)
(963,747,1)
(796,1316,1)
(1183,575,1)
(685,759,1)
(501,1255,1)
(1345,720,1)
(191,166,1)
(382,720,1)
(905,79,1)
(842,62,1)
(1085,1063,1)
(181,1095,1)
(1332,471,1)
(741,720,1)
(1282,1206,1)
(1026,396,1)
(519,690,1)
(586,280,1)
(224,93,1)
(210,882,1)
(449,846,1)
(926,121,1)
(218,666,1)
(308,8,1)
(903,497,1)
(780,473,1)
(856,1118,1)
(614,1204,1)
(1026,1182,1)
(796,1268,1)
(1002,848,1)
(240,571,1)
(457,201,1)
(564,31,1)
(1206,720,1)
(422,720,1)
(1321,720,1)
(58,914,1)
(544,533,1)
(885,720,1)
(190,172,1)
(617,666,1)
(269,197,1)
(98,145,1)
(571,1008,1)
(1243,864,1)
(1026,1160,1)
(999,1258,1)
(1142,747,1)
(662,39,1)
(686,1013,1)
(1063,135,1)
(435,1098,1)
(926,418,1)
(926,89,1)
(368,490,1)
(926,1223,1)
(45,1260,1)
(246,723,1)
(923,263,1)
(309,497,1)
(168,202,1)
(926,1287,1)
(1148,282,1)
(1142,580,1)
(79,909,1)
(1013,253,1)
(194,111,1)
(432,1186,1)
(601,759,1)
(934,859,1)
(53,378,1)
(905,1176,1)
(805,1326,1)
(326,341,1)
(926,125,1)
(1142,1014,1)
(497,814,1)
(97,720,1)
(766,720,1)
(17,720,1)
(1024,1050,1)
(90,720,1)
(109,587,1)
(62,434,1)
(12,430,1)
(1065,888,1)
(1142,1326,1)
(41,1281,1)
(926,781,1)
(1090,285,1)
(732,328,1)
(742,720,1)
(255,720,1)
(168,909,1)
(761,850,1)
(267,557,1)
(956,1335,1)
(926,999,1)
(439,666,1)
(1254,454,1)
(1142,650,1)
(242,720,1)
(600,1007,1)
(1142,1287,1)
(688,437,1)
(990,893,1)
(1328,736,1)
(832,123,1)
(31,202,1)
(926,195,1)
(1242,88,1)
(31,1014,1)
(1134,750,1)
(1037,137,1)
(1325,257,1)
(675,1152,1)
(805,1144,1)
(1142,1052,1)
(1079,736,1)
(805,909,1)
(0,66,1)
(79,453,1)
(400,574,1)
(679,518,1)
(1080,1150,1)
(241,826,1)
(837,731,1)
(1318,802,1)
(552,436,1)
(1297,1149,1)
(305,1262,1)
(1132,264,1)
(46,397,1)
(1013,843,1)
(1273,297,1)
(291,840,1)
(63,720,1)
(1350,158,1)
(1152,822,1)
(600,501,1)
(1198,188,1)
(344,1148,1)
(804,667,1)
(1026,275,1)
(1062,1042,1)
(623,158,1)
(719,1163,1)
(474,469,1)
(867,437,1)
(942,379,1)
(677,42,1)
(580,720,1)
(1347,689,1)
(1219,447,1)
(108,211,1)
(11,484,1)
(533,720,1)
(345,553,1)
(926,954,1)
(1026,1314,1)
(72,1,1)
(704,720,1)
(236,1126,1)
(1026,1223,1)
(1360,1353,1)
(703,1176,1)
(811,252,1)
(321,1266,1)
(554,702,1)
(59,263,1)
(261,892,1)
(850,720,1)
(358,1321,1)
(1200,386,1)
(506,118,1)
(960,313,1)
(153,110,1)
(1323,447,1)
(61,720,1)
(159,1047,1)
(1139,32,1)
(226,1354,1)
(124,333,1)
(995,360,1)
(826,546,1)
(1171,807,1)
(1142,649,1)
(142,666,1)
(95,54,1)
(921,720,1)
(1334,175,1)
(108,458,1)
(1323,767,1)
(298,195,1)
(961,595,1)
(1174,769,1)
(45,1170,1)
(582,567,1)
(470,818,1)
(882,1162,1)
(694,268,1)
(125,1274,1)
(1341,375,1)
(1142,317,1)
(926,485,1)
(1026,965,1)
(1225,682,1)
(1053,720,1)
(858,720,1)
(79,995,1)
(599,896,1)
(985,138,1)
(1105,206,1)
(789,720,1)
(1177,1167,1)
(467,732,1)
(645,1335,1)
(1346,887,1)
(572,1022,1)
(277,1302,1)
(168,649,1)
(156,159,1)
(346,783,1)
(999,805,1)
(409,676,1)
(1026,1122,1)
(79,1078,1)
(139,1142,1)
(1052,942,1)
(505,578,1)
(1131,1114,1)
(397,720,1)
(133,151,1)
(608,964,1)
(742,114,1)
(374,666,1)
(683,742,1)
(1026,1124,1)
(912,179,1)
(864,759,1)
(508,643,1)
(1127,899,1)
(254,1212,1)
(234,400,1)
(1328,720,1)
(230,720,1)
(565,843,1)
(1187,1330,1)
(1242,845,1)
(79,407,1)
(859,805,1)
(459,746,1)
(1314,373,1)
(506,1153,1)
(1015,116,1)
(1195,1316,1)
(113,779,1)
(9,272,1)
(101,561,1)
(1304,135,1)
(607,977,1)
(610,1131,1)
(1157,282,1)
(1153,735,1)
(957,57,1)
(1026,1144,1)
(926,650,1)
(840,1030,1)
(83,720,1)
(905,1091,1)
(1026,1297,1)
(31,649,1)
(1030,720,1)
(1328,1275,1)
(611,303,1)
(956,122,1)
(880,710,1)
(1152,580,1)
(1178,720,1)
(1142,7,1)
(524,889,1)
(540,603,1)
(685,1047,1)
(1247,932,1)
(516,1091,1)
(221,292,1)
(409,843,1)
(649,1168,1)
(163,484,1)
(216,353,1)
(936,324,1)
(339,134,1)
(1017,894,2)
(1142,856,2)
(639,63,2)
(1346,143,2)
(354,282,2)
(957,546,2)
(842,776,2)
(194,457,2)
(127,437,2)
(97,143,2)
(1220,457,2)
(894,143,2)
(926,1240,2)
(105,1249,2)
(7,81,2)
(79,649,2)
(1330,1316,2)
(645,239,2)
(831,457,2)
(1067,776,2)
(325,143,2)
(719,1158,2)
(691,143,2)
(926,1052,2)
(553,143,2)
(1149,143,2)
(385,63,2)
(719,1163,2)
(1026,8,2)
(12,143,2)
(99,886,2)
(267,457,2)
(805,99,2)
(744,345,2)
(1152,995,2)
(365,206,2)
(1341,693,2)
(31,1014,2)
(364,143,2)
(802,206,2)
(362,457,2)
(1279,1086,2)
(407,720,2)
(706,894,2)
(176,211,2)
(413,673,2)
(1355,611,2)
(519,690,2)
(685,720,2)
(1182,520,2)
(1281,206,2)
(863,457,2)
(1026,649,2)
(1288,686,2)
(1001,1263,2)
(887,143,2)
(1063,935,2)
(79,580,2)
(882,31,2)
(746,282,2)
(1355,25,2)
(20,776,2)
(768,345,2)
(745,283,2)
(1178,720,2)
(550,457,2)
(225,143,2)
(664,437,2)
(332,143,2)
(79,842,2)
(318,663,2)
(181,147,2)
(1216,1086,2)
(34,1061,2)
(439,626,2)
(1097,510,2)
(926,781,2)
(210,457,2)
(926,7,2)
(784,526,2)
(1227,143,2)
(971,894,2)
(132,206,2)
(1277,18,2)
(535,522,2)
(942,630,2)
(1361,143,2)
(247,143,2)
(292,759,2)
(1351,457,2)
(1148,143,2)
(926,374,2)
(864,759,2)
(1210,630,2)
(515,776,2)
(527,1127,2)
(992,782,2)
(465,690,2)
(35,666,2)
(159,1275,2)
(77,1316,2)
(1142,195,2)
(439,452,2)
(1026,1014,2)
(655,720,2)
(943,1061,2)
(1037,1061,2)
(83,720,2)
(944,1010,2)
(778,345,2)
(195,143,2)
(1086,620,2)
(1110,58,2)
(827,894,2)
(936,193,2)
(206,206,2)
(1207,961,2)
(1079,81,2)
(1195,1316,2)
(168,418,2)
(122,894,2)
(1052,630,2)
(400,1047,2)
(683,858,2)
(168,995,2)
(86,720,2)
(499,1067,2)
(1026,617,2)
(1129,11,2)
(1026,276,2)
(983,776,2)
(1263,1263,2)
(819,1086,2)
(594,457,2)
(309,497,2)
(468,991,2)
(936,563,2)
(1174,961,2)
(1026,455,2)
(565,143,2)
(79,1326,2)
(312,720,2)
(201,457,2)
(1257,206,2)
(839,194,2)
(95,156,2)
(1142,218,2)
(822,11,2)
(796,1316,2)
(350,86,2)
(339,720,2)
(522,223,2)
(583,805,2)
(28,666,2)
(693,630,2)
(956,664,2)
(292,894,2)
(749,720,2)
(58,968,2)
(373,357,2)
(1084,11,2)
(31,1144,2)
(370,1159,2)
(834,1085,2)
(108,31,2)
(1263,546,2)
(73,1163,2)
(1057,319,2)
(1157,282,2)
(780,663,2)
(1353,11,2)
(622,11,2)
(250,143,2)
(279,457,2)
(783,11,2)
(450,143,2)
(607,894,2)
(79,202,2)
(746,457,2)
(1334,776,2)
(122,934,2)
(606,720,2)
(335,720,2)
(795,961,2)
(1060,894,2)
(1215,143,2)
(176,206,2)
(1029,961,2)
(900,1067,2)
(1026,1035,2)
(686,663,2)
(235,1249,2)
(480,894,2)
(179,1061,2)
(79,6,2)
(1032,143,2)
(314,566,2)
(684,776,2)
(70,143,2)
(482,761,2)
(479,726,2)
(340,425,2)
(479,249,2)
(380,206,2)
(453,961,2)
(276,457,2)
(234,457,2)
(771,546,2)
(703,79,2)
(709,1128,2)
(1054,143,2)
(531,1243,2)
(1101,206,2)
(612,1110,2)
(1203,704,2)
(1152,1287,2)
(776,546,2)
(1330,690,2)
(10,565,2)
(926,245,2)
(31,1129,2)
(1142,321,2)
(334,894,2)
(677,42,2)
(1002,382,2)
(853,845,2)
(984,776,2)
(3,33,2)
(701,776,2)
(941,457,2)
(666,776,2)
(359,1061,2)
(104,206,2)
(199,143,2)
(223,720,2)
(1194,143,2)
(754,1061,2)
(789,143,2)
(821,1086,2)
(399,206,2)
(1152,909,2)
(124,1249,2)
(1112,206,2)
(252,143,2)
(262,63,2)
(242,630,2)
(617,666,2)
(1142,672,2)
(898,143,2)
(537,894,2)
(869,206,2)
(1209,450,2)
(248,11,2)
(156,691,2)
(949,437,2)
(1340,457,2)
(926,1314,2)
(79,251,2)
(79,1240,2)
(435,843,2)
(814,720,2)
(217,645,2)
(773,1249,2)
(837,457,2)
(82,1249,2)
(805,677,2)
(186,143,2)
(789,720,2)
(1302,720,2)
(261,1209,2)
(558,961,2)
(1255,839,2)
(837,731,2)
(583,1345,2)
(1152,1014,2)
(168,202,2)
(79,218,2)
(1140,592,2)
(1153,143,2)
(710,81,2)
(501,457,2)
(1102,158,2)
(201,143,2)
(514,874,2)
(976,1128,2)
(265,894,2)
(1142,7,2)
(415,457,2)
(253,663,2)
(1328,11,2)
(1303,776,2)
(1302,1275,2)
(801,1085,2)
(874,457,2)
(565,843,2)
(616,630,2)
(606,63,2)
(1026,1223,2)
(526,206,2)
(901,1005,2)
(1174,720,2)
(1172,720,2)
(977,894,2)
(421,206,2)
(893,457,2)
(60,457,2)
(926,154,2)
(856,969,2)
(1158,874,2)
(1026,1314,2)
(533,720,2)
(1225,1128,2)
(926,276,2)
(168,11,2)
(856,168,2)
(17,894,2)
(709,31,2)
(1026,453,2)
(1211,11,2)
(583,843,2)
(79,199,2)
(133,11,2)
(1316,766,2)
(1319,63,2)
(294,143,2)
(951,1249,2)
(926,251,2)
(31,1287,2)
(275,81,2)
(266,86,2)
(635,894,2)
(119,894,2)
(386,11,2)
(915,63,2)
(551,143,2)
(1142,1014,2)
(1146,894,2)
(547,1316,2)
(805,7,2)
(340,868,2)
(620,720,2)
(913,901,2)
(79,493,2)
(956,239,2)
(239,457,2)
(936,868,2)
(1080,437,2)
(1142,6,2)
(31,1124,2)
(61,776,2)
(1109,143,2)
(1142,1129,2)
(151,11,2)
(490,143,2)
(224,81,2)
(1080,417,2)
(1323,76,2)
(1225,709,2)
(909,720,2)
(50,474,2)
(703,941,2)
(555,1328,2)
(27,11,2)
(257,720,2)
(1163,962,2)
(1166,143,2)
(447,309,2)
(1143,720,2)
(1142,677,2)
(1165,961,2)
(840,168,2)
(517,143,2)
(1362,304,2)
(1156,630,2)
(409,805,2)
(593,546,2)
(594,1163,2)
(926,1014,2)
(798,206,2)
(1113,1249,2)
(547,11,2)
(750,457,2)
(796,720,2)
(1343,776,2)
(1142,822,2)
(1133,720,2)
(464,1061,2)
(796,206,2)
(400,1275,2)
(5,776,2)
(328,1086,2)
(1129,783,2)
(805,89,2)
(422,457,2)
(452,143,2)
(1181,1263,2)
(321,698,2)
(51,319,2)
(815,81,2)
(1247,206,2)
(283,206,2)
(296,874,2)
(1026,1144,2)
(519,720,2)
(1139,913,2)
(214,143,2)
(1205,143,2)
(168,1124,2)
(1229,46,2)
(415,319,2)
(349,767,2)
(1113,105,2)
(69,437,2)
(630,90,2)
(467,666,2)
(121,666,2)
(691,107,2)
(930,720,2)
(435,1133,2)
(699,1263,2)
(168,89,2)
(565,805,2)
(1238,1309,2)
(200,206,2)
(314,81,2)
(1111,86,2)
(840,1249,2)
(1196,1163,2)
(181,1316,2)
(189,457,2)
(518,836,2)
(757,143,2)
(529,776,2)
(864,11,2)
(764,776,2)
(79,28,2)
(1187,457,2)
(956,663,2)
(1136,79,2)
(1142,453,2)
(79,677,2)
(108,82,2)
(1122,206,2)
(1142,895,2)
(292,1047,2)
(947,83,2)
(261,206,2)
(1323,1249,2)
(168,621,2)
(921,720,2)
(79,776,2)
(1152,1144,2)
(999,776,2)
(1159,206,2)
(493,257,2)
(506,143,2)
(88,1263,2)
(457,201,2)
(826,546,2)
(853,1163,2)
(416,894,2)
(3,1194,2)
(371,1101,2)
(926,89,2)
(616,1316,2)
(1026,1326,2)
(735,143,2)
(236,994,2)
(1304,935,2)
(559,437,2)
(294,1346,2)
(226,1354,2)
(944,1152,2)
(400,720,2)
(506,1153,2)
(686,1013,2)
(839,457,2)
(79,461,2)
(360,1273,2)
(1337,457,2)
(729,86,2)
(1160,548,2)
(1300,865,2)
(1026,142,2)
(38,894,2)
(790,203,2)
(339,37,2)
(65,612,2)
(703,371,2)
(859,805,2)
(363,143,2)
(256,894,2)
(37,630,2)
(79,276,2)
(375,11,2)
(838,206,2)
(29,81,2)
(608,1049,2)
(926,842,2)
(444,1050,2)
(221,894,2)
(33,546,2)
(864,720,2)
(220,98,2)
(439,666,2)
(79,1052,2)
(878,206,2)
(324,1128,2)
(164,143,2)
(396,334,2)
(926,142,2)
(79,89,2)
(382,961,2)
(966,206,2)
(1082,663,2)
(877,663,2)
(165,894,2)
(168,1014,2)
(69,944,2)
(1320,894,2)
(822,133,2)
(1093,143,2)
(1238,143,2)
(1229,343,2)
(1306,1086,2)
(1142,65,2)
(66,894,2)
(431,312,2)
(464,1034,2)
(265,107,2)
(662,720,2)
(457,457,2)
(734,107,2)
(723,1086,2)
(1242,1263,2)
(196,137,2)
(884,1263,2)
(770,78,2)
(1286,635,2)
(273,1086,2)
(1142,1078,2)
(721,457,2)
(77,147,2)
(751,143,2)
(1266,143,2)
(31,386,2)
(632,457,2)
(236,1126,2)
(564,211,2)
(771,61,2)
(77,894,2)
(956,1335,2)
(286,546,2)
(1132,107,2)
(82,720,2)
(1026,1124,2)
(1167,1102,2)
(419,206,2)
(199,389,2)
(1321,143,2)
(805,1287,2)
(271,1128,2)
(31,580,2)
(871,894,2)
(3,953,2)
(1034,1061,2)
(497,211,2)
(925,720,2)
(936,1128,2)
(160,829,2)
(106,1061,2)
(25,904,2)
(1098,206,2)
(1026,199,2)
(771,776,2)
(79,275,2)
(715,720,2)
(712,961,2)
(1001,546,2)
(663,53,2)
(1136,1091,2)
(81,63,2)
(926,999,2)
(1291,457,2)
(1154,776,2)
(349,666,2)
(859,466,2)
(1026,965,2)
(330,143,2)
(1142,1035,2)
(1142,28,2)
(1091,663,2)
(259,158,2)
(1074,143,2)
(511,143,2)
(1203,1283,2)
(1304,135,2)
(979,413,2)
(787,776,2)
(244,894,2)
(1013,843,2)
(1013,663,2)
(926,396,2)
(936,25,2)
(1021,630,2)
(52,206,2)
(1141,206,2)
(394,1341,2)
(1142,842,2)
(220,1086,2)
(1026,396,2)
(296,206,2)
(1186,787,2)
(230,663,2)
(1195,1268,2)
(1056,457,2)
(934,326,2)
(6,663,2)
(762,206,2)
(1026,1160,2)
(237,1249,2)
(425,143,2)
(1355,1249,2)
(999,843,2)
(110,11,2)
(1311,1263,2)
(337,143,2)
(918,776,2)
(811,143,2)
(745,206,2)
(576,143,2)
(1260,457,2)
(899,894,2)
(401,437,2)
(616,147,2)
(646,901,2)
(260,73,2)
(268,63,2)
(31,909,2)
(1309,1023,2)
(483,720,2)
(1301,894,2)
(13,457,2)
(288,843,2)
(144,853,2)
(173,457,2)
(1077,143,2)
(1255,457,2)
(255,736,2)
(938,1249,2)
(193,226,2)
(856,776,2)
(1034,619,2)
(303,1136,2)
(808,457,2)
(79,245,2)
(956,122,2)
(194,1209,2)
(386,930,2)
(349,573,2)
(926,1223,2)
(1260,410,2)
(1101,745,2)
(805,407,2)
(698,789,2)
(769,961,2)
(236,206,2)
(1180,1061,2)
(705,261,2)
(643,206,2)
(79,154,2)
(1026,202,2)
(1142,317,2)
(1328,736,2)
(329,894,2)
(914,143,2)
(954,457,2)
(373,141,2)
(1142,1314,2)
(1152,89,2)
(917,1061,2)
(1,1086,2)
(1296,1128,2)
(805,1052,2)
(31,822,2)
(130,720,2)
(323,961,2)
(1310,1086,2)
(715,1275,2)
(608,964,2)
(144,1263,2)
(437,761,2)
(840,1030,2)
(292,736,2)
(1286,1146,2)
(446,894,2)
(919,663,2)
(1026,125,2)
(1152,747,2)
(1213,776,2)
(467,1086,2)
(1142,560,2)
(508,206,2)
(926,672,2)
(345,143,2)
(31,461,2)
(1026,218,2)
(999,728,2)
(968,330,2)
(1163,143,2)
(461,86,2)
(626,663,2)
(1063,720,2)
(1106,348,2)
(181,1268,2)
(545,206,2)
(168,822,2)
(1038,720,2)
(583,663,2)
(862,81,2)
(926,372,2)
(894,894,2)
(1281,932,2)
(1136,225,2)
(650,894,2)
(926,580,2)
(1144,86,2)
(693,616,2)
(705,802,2)
(475,1061,2)
(31,7,2)
(415,1152,2)
(409,843,2)
(926,8,2)
(624,1273,2)
(1172,663,2)
(245,612,2)
(805,11,2)
(463,1249,2)
(586,457,2)
(742,720,2)
(200,874,2)
(926,909,2)
(19,81,2)
(198,457,2)
(805,1144,2)
(459,457,2)
(159,1047,2)
(1344,260,2)
(947,902,2)
(1323,605,2)
(206,457,2)
(1151,894,2)
(142,1086,2)
(139,776,2)
(571,143,2)
(1142,1160,2)
(502,437,2)
(775,206,2)
(852,107,2)
(159,143,2)
(261,200,2)
(400,759,2)
(31,747,2)
(728,776,2)
(1026,28,2)
(79,995,2)
(168,909,2)
(1335,206,2)
(714,143,2)
(45,1170,2)
(1086,776,2)
(500,1273,2)
(1152,1129,2)
(1026,954,2)
(1067,1343,2)
(409,206,2)
(1195,147,2)
(26,720,2)
(121,1086,2)
(741,761,2)
(926,1182,2)
(926,485,2)
(1057,1152,2)
(1063,135,2)
(1183,720,2)
(168,677,2)
(926,202,2)
(645,1335,2)
(573,1099,2)
(473,663,2)
(880,720,2)
(1292,1061,2)
(1049,206,2)
(1053,143,2)
(47,11,2)
(1272,282,2)
(828,143,2)
(1014,720,2)
(672,334,2)
(658,437,2)
(1274,1086,2)
(26,776,2)
(79,560,2)
(137,729,2)
(1088,1209,2)
(389,130,2)
(905,371,2)
(1152,99,2)
(703,663,2)
(649,847,2)
(346,11,2)
(991,143,2)
(368,143,2)
(45,1260,2)
(191,1061,2)
(538,1316,2)
(56,1300,2)
(1323,1192,2)
(1142,461,2)
(1318,206,2)
(542,437,2)
(805,1014,2)
(335,137,2)
(40,720,2)
(456,143,2)
(580,1061,2)
(1026,317,2)
(1026,842,2)
(1158,778,2)
(905,1,2)
(1140,1263,2)
(288,285,2)
(1328,759,2)
(936,666,2)
(1202,776,2)
(1199,86,2)
(910,63,2)
(857,63,2)
(313,143,2)
(1152,1124,2)
(1026,822,2)
(287,894,2)
(355,1313,2)
(337,720,2)
(218,666,2)
(1113,211,2)
(501,863,2)
(138,720,2)
(154,630,2)
(806,1249,2)
(465,1316,2)
(341,383,2)
(1219,776,2)
(497,1128,2)
(647,1128,2)
(1260,1330,2)
(1000,1263,2)
(1136,1176,2)
(1099,1254,2)
(425,468,2)
(255,1275,2)
(1007,457,2)
(792,720,2)
(1135,457,2)
(729,720,2)
(226,108,2)
(878,345,2)
(835,776,2)
(1195,690,2)
(497,31,2)
(926,1124,2)
(905,1176,2)
(1065,720,2)
(1045,445,2)
(934,859,2)
(168,1287,2)
(1043,857,2)
(31,677,2)
(977,1196,2)
(546,1139,2)
(41,206,2)
(467,76,2)
(1223,666,2)
(254,776,2)
(521,1239,2)
(1248,949,2)
(593,776,2)
(15,1263,2)
(926,386,2)
(1071,143,2)
(859,843,2)
(865,894,2)
(1026,35,2)
(141,720,2)
(340,666,2)
(1142,142,2)
(472,1086,2)
(79,909,2)
(439,437,2)
(371,206,2)
(118,720,2)
(143,804,2)
(286,776,2)
(612,143,2)
(631,143,2)
(641,894,2)
(164,817,2)
(741,720,2)
(1089,143,2)
(501,1255,2)
(1249,776,2)
(1064,1128,2)
(897,81,2)
(1177,143,2)
(680,412,2)
(1249,1067,2)
(926,1160,2)
(156,143,2)
(905,1091,2)
(807,467,2)
(305,206,2)
(928,457,2)
(203,393,2)
(21,11,2)
(1206,78,2)
(1026,99,2)
(1325,776,2)
(79,8,2)
(1355,868,2)
(196,1061,2)
(765,143,2)
(1119,143,2)
(355,1263,2)
(8,1085,2)
(1341,1050,2)
(860,1061,2)
(1251,720,2)
(784,176,2)
(608,206,2)
(245,143,2)
(269,206,2)
(926,35,2)
(79,650,2)
(454,720,2)
(159,720,2)
(343,950,2)
(168,154,2)
(1293,1106,2)
(960,143,2)
(1190,894,2)
(1134,457,2)
(175,776,2)
(1354,1355,2)
(270,81,2)
(1152,621,2)
(226,1249,2)
(292,720,2)
(1080,843,2)
(1142,1287,2)
(1123,894,2)
(724,206,2)
(1302,1047,2)
(1142,154,2)
(711,1128,2)
(79,747,2)
(1078,238,2)
(1030,720,2)
(530,776,2)
(1041,647,2)
(738,527,2)
(494,546,2)
(363,215,2)
(1281,236,2)
(341,655,2)
(616,720,2)
(610,135,2)
(825,894,2)
(1254,454,2)
(926,1035,2)
(9,206,2)
(926,649,2)
(905,79,2)
(519,143,2)
(837,45,2)
(781,206,2)
(538,147,2)
(36,206,2)
(1152,1326,2)
(400,736,2)
(679,776,2)
(824,11,2)
(935,86,2)
(11,484,2)
(1276,1097,2)
(111,457,2)
(494,776,2)
(1047,754,2)
(476,86,2)
(805,418,2)
(140,143,2)
(978,345,2)
(340,193,2)
(1015,720,2)
(493,776,2)
(1146,871,2)
(61,546,2)
(134,11,2)
(145,1086,2)
(97,720,2)
(1132,894,2)
(992,337,2)
(1277,1299,2)
(613,86,2)
(1169,63,2)
(79,954,2)
(864,1275,2)
(567,143,2)
(1327,720,2)
(79,121,2)
(78,63,2)
(1117,143,2)
(167,143,2)
(340,1142,2)
(754,179,2)
(1262,206,2)
(805,909,2)
(77,1268,2)
(1328,1275,2)
(717,457,2)
(79,895,2)
(614,11,2)
(752,546,2)
(46,31,2)
(432,787,2)
(1026,251,2)
(788,81,2)
(761,850,2)
(1051,143,2)
(1239,143,2)
(546,143,2)
(1240,612,2)
(168,580,2)
(652,143,2)
(468,143,2)
(852,894,2)
(924,86,2)
(1329,143,2)
(926,677,2)
(370,206,2)
(561,143,2)
(168,99,2)
(326,894,2)
(1152,461,2)
(319,255,2)
(1142,1291,2)
(1110,143,2)
(1102,143,2)
(88,845,2)
(79,1160,2)
(152,457,2)
(90,720,2)
(1057,143,2)
(592,1263,2)
(31,11,2)
(803,457,2)
(1026,650,2)
(437,776,2)
(569,206,2)
(441,630,2)
(249,1037,2)
(1096,546,2)
(289,894,2)
(590,206,2)
(850,776,2)
(1026,302,2)
(77,720,2)
(1345,720,2)
(1035,720,2)
(494,771,2)
(941,600,2)
(68,437,2)
(79,617,2)
(1254,457,2)
(1142,1124,2)
(451,457,2)
(932,1094,2)
(15,546,2)
(1025,143,2)
(805,995,2)
(59,1061,2)
(709,211,2)
(715,759,2)
(948,11,2)
(944,319,2)
(1128,776,2)
(155,457,2)
(49,1172,2)
(118,143,2)
(1081,630,2)
(489,894,2)
(1002,961,2)
(1242,546,2)
(79,396,2)
(206,380,2)
(814,1128,2)
(292,1275,2)
(79,672,2)
(147,224,2)
(539,457,2)
(417,720,2)
(203,803,2)
(79,109,2)
(594,459,2)
(1200,11,2)
(207,143,2)
(31,1326,2)
(610,935,2)
(300,522,2)
(1147,143,2)
(1026,374,2)
(382,720,2)
(277,1088,2)
(79,1314,2)
(1128,522,2)
(1230,143,2)
(1026,909,2)
(431,522,2)
(79,822,2)
(905,225,2)
(309,1041,2)
(340,611,2)
(405,1263,2)
(439,239,2)
(1310,720,2)
(580,720,2)
(1048,1249,2)
(120,78,2)
(1176,437,2)
(829,840,2)
(518,776,2)
(805,580,2)
(103,143,2)
(514,206,2)
(79,1297,2)
(1159,719,2)
(1228,143,2)
(84,720,2)
(1167,143,2)
(380,457,2)
(31,302,2)
(611,1086,2)
(1161,81,2)
(1007,843,2)
(405,546,2)
(1026,995,2)
(131,1061,2)
(1255,1324,2)
(1299,77,2)
(665,143,2)
(731,457,2)
(225,10,2)
(601,1061,2)
(585,630,2)
(487,437,2)
(342,168,2)
(44,1263,2)
(592,405,2)
(538,457,2)
(211,1195,2)
(197,206,2)
(168,8,2)
(298,143,2)
(800,961,2)
(1249,499,2)
(1321,720,2)
(263,1061,2)
(390,143,2)
(768,143,2)
(1032,457,2)
(726,1061,2)
(389,143,2)
(343,894,2)
(1347,1128,2)
(1026,154,2)
(1293,158,2)
(147,81,2)
(85,630,2)
(1090,437,2)
(1142,302,2)
(1355,738,2)
(1026,275,2)
(79,1144,2)
(645,452,2)
(363,381,2)
(525,437,2)
(820,206,2)
(491,720,2)
(844,720,2)
(645,666,2)
(384,758,2)
(196,113,2)
(1023,720,2)
(423,206,2)
(49,1152,2)
(1062,1128,2)
(765,652,2)
(1023,143,2)
(715,206,2)
(424,961,2)
(279,720,2)
(358,1321,2)
(25,457,2)
(1153,720,2)
(791,143,2)
(926,650,2)
(704,143,2)
(1009,206,2)
(1142,245,2)
(219,1249,2)
(841,776,2)
(719,206,2)
(563,1225,2)
(532,457,2)
(946,894,2)
(291,1249,2)
(527,168,2)
(223,776,2)
(79,455,2)
(1026,245,2)
(1308,720,2)
(182,11,2)
(1026,65,2)
(1026,1052,2)
(107,143,2)
(483,630,2)
(349,1192,2)
(1042,1128,2)
(280,457,2)
(1234,457,2)
(168,461,2)
(1323,767,2)
(1184,206,2)
(829,1249,2)
(868,206,2)
(851,663,2)
(758,143,2)
(358,143,2)
(196,720,2)
(285,720,2)
(1053,720,2)
(674,143,2)
(302,720,2)
(1028,81,2)
(1087,274,2)
(486,894,2)
(1212,776,2)
(461,720,2)
(160,1249,2)
(1256,1085,2)
(672,894,2)
(41,1281,2)
(1142,121,2)
(1237,11,2)
(412,345,2)
(1037,113,2)
(407,630,2)
(443,776,2)
(802,736,2)
(892,206,2)
(1357,143,2)
(1136,56,2)
(439,664,2)
(1245,457,2)
(1290,143,2)
(1185,206,2)
(444,720,2)
(17,720,2)
(311,457,2)
(668,894,2)
(955,894,2)
(600,457,2)
(1291,238,2)
(31,621,2)
(1203,143,2)
(1126,206,2)
(128,1061,2)
(224,979,2)
(61,720,2)
(999,805,2)
(1139,901,2)
(468,168,2)
(457,345,2)
(1282,1206,2)
(439,1335,2)
(796,147,2)
(171,894,2)
(349,605,2)
(1072,143,2)
(1270,630,2)
(694,63,2)
(605,1249,2)
(544,1067,2)
(466,720,2)
(952,437,2)
(168,153,2)
(303,1086,2)
(894,107,2)
(921,143,2)
(212,1082,2)
(458,1249,2)
(1304,720,2)
(157,319,2)
(926,1326,2)
(673,63,2)
(1116,143,2)
(972,776,2)
(926,418,2)
(664,1248,2)
(1352,1061,2)
(1102,1072,2)
(1330,147,2)
(1355,666,2)
(1026,1287,2)
(538,720,2)
(1043,792,2)
(1026,781,2)
(805,461,2)
(1026,1129,2)
(1268,59,2)
(1142,650,2)
(1026,747,2)
(1198,11,2)
(115,1086,2)
(1313,1263,2)
(206,874,2)
(349,1128,2)
(821,666,2)
(1315,720,2)
(132,720,2)
(1010,720,2)
(316,844,2)
(1142,251,2)
(374,1128,2)
(72,1086,2)
(1152,407,2)
(936,1142,2)
(995,1273,2)
(299,1128,2)
(339,274,2)
(760,1061,2)
(985,81,2)
(73,836,2)
(1362,885,2)
(193,1249,2)
(962,363,2)
(1035,630,2)
(308,1085,2)
(1204,11,2)
(926,1078,2)
(592,15,2)
(1269,11,2)
(974,1061,2)
(927,776,2)
(682,1128,2)
(1142,617,2)
(1243,11,2)
(538,1268,2)
(584,894,2)
(923,1061,2)
(1026,776,2)
(830,143,2)
(37,685,2)
(504,720,2)
(563,1128,2)
(926,275,2)
(5,720,2)
(848,961,2)
(1142,995,2)
(781,520,2)
(871,1132,2)
(610,1061,2)
(330,107,2)
(932,206,2)
(858,720,2)
(516,663,2)
(158,143,2)
(1362,961,2)
(465,1268,2)
(79,317,2)
(1107,143,2)
(136,11,2)
(1142,407,2)
(1355,425,2)
(31,202,2)
(1330,720,2)
(520,370,2)
(408,630,2)
(1099,837,2)
(1072,720,2)
(179,528,2)
(1293,143,2)
(1335,41,2)
(611,303,2)
(1026,672,2)
(533,1067,2)
(1020,1067,2)
(80,546,2)
(79,1124,2)
(1142,747,2)
(418,720,2)
(493,843,2)
(1142,89,2)
(1142,199,2)
(400,457,2)
(569,1033,2)
(986,11,2)
(1192,1229,2)
(704,720,2)
(555,123,2)
(372,894,2)
(330,768,2)
(552,894,2)
(62,776,2)
(208,1086,2)
(1232,564,2)
(48,206,2)
(447,1128,2)
(449,663,2)
(926,461,2)
(8,720,2)
(805,302,2)
(885,720,2)
(79,1291,2)
(602,1086,2)
(322,663,2)
(1300,1286,2)
(488,787,2)
(555,11,2)
(566,1043,2)
(1127,720,2)
(79,1078,2)
(1361,457,2)
(605,160,2)
(467,447,2)
(956,452,2)
(1271,1086,2)
(1142,1326,2)
(954,238,2)
(1251,143,2)
(228,663,2)
(79,1129,2)
(349,1026,2)
(515,474,2)
(645,122,2)
(596,1128,2)
(344,143,2)
(865,1327,2)
(95,143,2)
(1152,7,2)
(59,263,2)
(1068,1128,2)
(690,1061,2)
(695,81,2)
(784,206,2)
(31,89,2)
(232,1086,2)
(560,206,2)
(491,1249,2)
(1223,437,2)
(309,1128,2)
(657,1061,2)
(805,1069,2)
(242,720,2)
(251,666,2)
(947,206,2)
(865,843,2)
(1007,805,2)
(1231,143,2)
(438,457,2)
(110,547,2)
(642,437,2)
(181,690,2)
(372,334,2)
(856,474,2)
(635,668,2)
(1142,781,2)
(167,556,2)
(818,143,2)
(1088,852,2)
(202,1065,2)
(566,63,2)
(758,1293,2)
(1128,431,2)
(911,143,2)
(634,894,2)
(378,720,2)
(294,97,2)
(283,872,2)
(1184,1185,2)
(1358,522,2)
(224,93,2)
(470,143,2)
(863,749,2)
(1217,143,2)
(685,1047,2)
(726,462,2)
(969,720,2)
(79,485,2)
(315,1085,2)
(359,720,2)
(1142,109,2)
(397,720,2)
(485,1086,2)
(1150,437,2)
(168,407,2)
(802,1047,2)
(1201,1263,2)
(1152,11,2)
(281,1086,2)
(1317,206,2)
(45,457,2)
(466,894,2)
(1158,206,2)
(846,663,2)
(1299,623,2)
(803,538,2)
(1142,1240,2)
(31,418,2)
(342,491,2)
(1185,514,2)
(1152,8,2)
(1070,720,2)
(31,317,2)
(79,302,2)
(937,1086,2)
(969,776,2)
(336,206,2)
(587,776,2)
(149,206,2)
(831,594,2)
(990,457,2)
(31,407,2)
(776,494,2)
(1061,78,2)
(850,720,2)
(759,464,2)
(726,34,2)
(926,1291,2)
(926,617,2)
(663,776,2)
(920,630,2)
(655,894,2)
(868,1232,2)
(515,1143,2)
(810,630,2)
(615,457,2)
(1354,342,2)
(222,894,2)
(996,776,2)
(548,11,2)
(1248,437,2)
(1152,1035,2)
(1297,143,2)
(1026,895,2)
(1272,345,2)
(667,1097,2)
(1013,230,2)
(926,65,2)
(736,81,2)
(452,1057,2)
(1037,720,2)
(340,1086,2)
(803,259,2)
(753,143,2)
(302,1061,2)
(1052,720,2)
(768,282,2)
(1037,137,2)
(362,831,2)
(703,1176,2)
(678,1086,2)
(527,474,2)
(1296,720,2)
(450,1203,2)
(616,1268,2)
(314,138,2)
(847,720,2)
(717,720,2)
(84,143,2)
(1162,720,2)
(666,1344,2)
(926,121,2)
(1142,99,2)
(1316,81,2)
(335,113,2)
(685,736,2)
(557,457,2)
(811,894,2)
(331,206,2)
(905,941,2)
(181,11,2)
(10,481,2)
(1302,894,2)
(437,958,2)
(905,56,2)
(1142,965,2)
(1152,317,2)
(1076,206,2)
(912,1061,2)
(931,761,2)
(467,1192,2)
(682,936,2)
(439,807,2)
(80,1263,2)
(686,956,2)
(1026,6,2)
(241,546,2)
(917,720,2)
(1136,1,2)
(415,532,2)
(794,143,2)
(87,143,2)
(832,11,2)
(564,206,2)
(413,63,2)
(1157,894,2)
(1302,736,2)
(1095,11,2)
(872,720,2)
(926,302,2)
(1002,448,2)
(265,1272,2)
(958,741,2)
(979,63,2)
(1239,818,2)
(1091,212,2)
(1100,206,2)
(505,143,2)
(1323,573,2)
(1171,1086,2)
(913,720,2)
(274,483,2)
(1142,485,2)
(673,720,2)
(790,457,2)
(465,720,2)
(1142,275,2)
(499,533,2)
(904,882,2)
(1141,878,2)
(156,159,2)
(481,143,2)
(1275,81,2)
(547,690,2)
(71,894,2)
(7,720,2)
(875,206,2)
(1288,157,2)
(774,1128,2)
(31,649,2)
(926,995,2)
(1178,143,2)
(79,1287,2)
(620,776,2)
(323,720,2)
(464,1304,2)
(442,86,2)
(340,25,2)
(79,195,2)
(50,1296,2)
(1026,515,2)
(255,759,2)
(950,205,2)
(295,894,2)
(366,1128,2)
(79,142,2)
(484,720,2)
(1082,703,2)
(709,271,2)
(512,776,2)
(1142,776,2)
(926,28,2)
(926,965,2)
(524,143,2)
(705,206,2)
(1118,776,2)
(53,378,2)
(288,805,2)
(79,7,2)
(192,143,2)
(799,206,2)
(1206,720,2)
(1322,143,2)
(1333,206,2)
(647,168,2)
(839,400,2)
(609,143,2)
(1152,649,2)
(276,238,2)
(135,1183,2)
(430,143,2)
(104,457,2)
(46,894,2)
(373,143,2)
(1126,720,2)
(46,397,2)
(249,1061,2)
(56,894,2)
(327,776,2)
(354,143,2)
(1258,776,2)
(886,720,2)
(455,437,2)
(936,425,2)
(1085,1063,2)
(429,1241,2)
(411,143,2)
(936,738,2)
(733,1061,2)
(638,277,2)
(252,894,2)
(1232,206,2)
(703,666,2)
(987,1097,2)
(1254,31,2)
(876,143,2)
(600,501,2)
(457,143,2)
(410,158,2)
(1142,1052,2)
(1026,560,2)
(396,894,2)
(460,206,2)
(342,474,2)
(767,206,2)
(1224,206,2)
(818,697,2)
(406,63,2)
(272,206,2)
(1142,35,2)
(98,720,2)
(610,315,2)
(278,143,2)
(180,947,2)
(926,321,2)
(626,1288,2)
(1078,457,2)
(340,563,2)
(739,143,2)
(818,164,2)
(568,11,2)
(1092,11,2)
(663,787,2)
(123,37,2)
(1323,937,2)
(81,566,2)
(465,206,2)
(738,894,2)
(1152,202,2)
(1080,805,2)
(1142,276,2)
(647,474,2)
(282,1238,2)
(481,95,2)
(629,143,2)
(521,143,2)
(527,894,2)
(1209,143,2)
(1136,371,2)
(159,736,2)
(841,546,2)
(26,546,2)
(859,894,2)
(924,720,2)
(1142,386,2)
(389,84,2)
(1010,437,2)
(89,720,2)
(547,720,2)
(728,720,2)
(1349,1061,2)
(786,1086,2)
(1268,1061,2)
(108,211,2)
(1355,193,2)
(63,720,2)
(164,519,2)
(956,926,2)
(968,1163,2)
(1124,720,2)
(1136,666,2)
(683,742,2)
(204,961,2)
(610,720,2)
(715,736,2)
(548,720,2)
(578,143,2)
(597,11,2)
(703,1091,2)
(953,546,2)
(950,17,2)
(377,457,2)
(787,5,2)
(1263,845,2)
(453,323,2)
(1082,583,2)
(28,776,2)
(41,409,2)
(1049,796,2)
(93,81,2)
(1026,1240,2)
(783,720,2)
(410,457,2)
(218,1249,2)
(258,143,2)
(113,779,2)
(867,437,2)
(230,720,2)
(1323,666,2)
(1012,143,2)
(1341,11,2)
(1005,720,2)
(79,99,2)
(607,977,2)
(179,359,2)
(650,334,2)
(662,1050,2)
(623,894,2)
(779,720,2)
(564,922,2)
(429,1315,2)
(975,143,2)
(448,1087,2)
(829,1323,2)
(771,26,2)
(1350,143,2)
(817,143,2)
(49,663,2)
(865,805,2)
(1142,621,2)
(444,693,2)
(895,1174,2)
(459,874,2)
(805,202,2)
(506,118,2)
(887,720,2)
(759,1061,2)
(962,143,2)
(497,814,2)
(1142,1223,2)
(1152,822,2)
(168,1052,2)
(598,206,2)
(926,621,2)
(707,78,2)
(926,317,2)
(734,894,2)
(645,1086,2)
(109,776,2)
(1026,386,2)
(129,63,2)
(133,720,2)
(844,1273,2)
(1152,302,2)
(105,720,2)
(1026,321,2)
(668,720,2)
(842,666,2)
(807,1086,2)
(926,195,2)
(853,1263,2)
(513,1086,2)
(79,418,2)
(1133,206,2)
(670,143,2)
(519,147,2)
(944,437,2)
(569,1141,2)
(805,317,2)
(1007,422,2)
(1273,335,2)
(422,720,2)
(689,1128,2)
(1196,894,2)
(703,225,2)
(1269,394,2)
(263,637,2)
(991,720,2)
(1026,407,2)
(1099,457,2)
(776,776,2)
(1283,720,2)
(744,457,2)
(1263,1140,2)
(1232,180,2)
(1142,418,2)
(1160,11,2)
(168,275,2)
(275,720,2)
(1040,1362,2)
(180,608,2)
(849,457,2)
(956,626,2)
(141,143,2)
(435,805,2)
(746,345,2)
(240,143,2)
(240,720,2)
(564,31,2)
(209,905,2)
(652,720,2)
(731,1138,2)
(736,880,2)
(1307,776,2)
(1142,580,2)
(1152,531,2)
(34,720,2)
(395,720,2)
(79,125,2)
(31,995,2)
(1355,563,2)
(817,158,2)
(805,8,2)
(361,457,2)
(1314,373,2)
(968,143,2)
(519,1268,2)
(636,1061,2)
(895,961,2)
(659,63,2)
(79,621,2)
(939,143,2)
(872,206,2)
(797,1128,2)
(958,761,2)
(94,776,2)
(209,437,2)
(1026,1182,2)
(1152,418,2)
(802,1275,2)
(257,776,2)
(1026,89,2)
(638,1103,2)
(836,546,2)
(95,54,2)
(1137,143,2)
(263,917,2)
(1182,206,2)
(259,744,2)
(1026,580,2)
(790,1235,2)
(978,457,2)
(716,1249,2)
(1252,776,2)
(367,437,2)
(905,666,2)
(654,1249,2)
(904,457,2)
(685,630,2)
(283,1083,2)
(412,206,2)
(1327,894,2)
(333,1249,2)
(926,1144,2)
(465,147,2)
(669,437,2)
(146,776,2)
(1323,447,2)
(125,666,2)
(0,894,2)
(42,720,2)
(1195,720,2)
(168,1144,2)
(1244,1086,2)
(592,546,2)
(185,81,2)
(623,345,2)
(492,894,2)
(1339,11,2)
(168,1326,2)
(623,158,2)
(989,86,2)
(1283,143,2)
(58,143,2)
(648,894,2)
(805,1035,2)
(1114,1061,2)
(660,1061,2)
(1066,1249,2)
(1288,663,2)
(1125,761,2)
(435,206,2)
(1231,211,2)
(1302,759,2)
(965,666,2)
(833,961,2)
(520,206,2)
(1314,143,2)
(905,437,2)
(51,1308,2)
(926,109,2)
(503,457,2)
(973,663,2)
(589,457,2)
(92,663,2)
(1243,864,2)
(1363,1086,2)
(1037,316,2)
(882,1162,2)
(1277,894,2)
(627,63,2)
(183,457,2)
(201,758,2)
(916,206,2)
(949,1080,2)
(547,147,2)
(792,63,2)
(922,206,2)
(757,765,2)
(167,921,2)
(1225,682,2)
(531,11,2)
(926,1122,2)
(91,720,2)
(703,56,2)
(341,894,2)
(79,386,2)
(796,690,2)
(685,759,2)
(645,626,2)
(79,453,2)
(246,1086,2)
(635,763,2)
(43,894,2)
(1245,206,2)
(778,206,2)
(645,926,2)
(756,776,2)
(1026,109,2)
(357,143,2)
(1142,455,2)
(926,99,2)
(1231,240,2)
(180,206,2)
(1005,143,2)
(926,560,2)
(1015,143,2)
(77,690,2)
(339,11,2)
(573,457,2)
(616,690,2)
(926,125,2)
(24,457,2)
(1152,275,2)
(1026,1291,2)
(731,717,2)
(995,720,2)
(688,776,2)
(526,429,2)
(123,274,2)
(878,158,2)
(926,6,2)
(98,1086,2)
(936,611,2)
(1031,81,2)
(481,992,2)
(109,666,2)
(1041,349,2)
(467,767,2)
(212,49,2)
(1240,143,2)
(1069,555,2)
(956,807,2)
(1331,1249,2)
(251,1249,2)
(1121,457,2)
(1061,63,2)
(315,1280,2)
(1253,81,2)
(413,606,2)
(1173,1128,2)
(1026,418,2)
(2,206,2)
(687,457,2)
(384,143,2)
(767,784,2)
(740,11,2)
(1113,31,2)
(304,662,2)
(110,444,2)
(215,720,2)
(1142,125,2)
(81,979,2)
(1355,1142,2)
(547,1268,2)
(776,836,2)
(956,666,2)
(65,143,2)
(1338,457,2)
(79,1035,2)
(176,31,2)
(195,612,2)
(1175,1128,2)
(1142,374,2)
(154,720,2)
(926,895,2)
(579,143,2)
(101,143,2)
(1146,1003,2)
(76,521,2)
(1311,546,2)
(157,1152,2)
(1026,677,2)
(153,11,2)
(1142,954,2)
(761,776,2)
(35,663,2)
(885,961,2)
(215,143,2)
(168,1035,2)
(239,415,2)
(316,1273,2)
(871,292,2)
(681,1128,2)
(43,143,2)
(857,720,2)
(459,746,2)
(31,1052,2)
(1309,1228,2)
(662,693,2)
(1344,776,2)
(409,132,2)
(1238,1209,2)
(312,522,2)
(901,143,2)
(1323,1026,2)
(79,1122,2)
(467,1026,2)
(79,321,2)
(661,1061,2)
(1231,31,2)
(515,168,2)
(351,457,2)
(1142,202,2)
(926,218,2)
(805,275,2)
(926,453,2)
(965,1128,2)
(55,143,2)
(358,1053,2)
(700,143,2)
(168,747,2)
(802,720,2)
(1142,1297,2)
(1345,663,2)
(805,649,2)
(1343,720,2)
(766,81,2)
(1108,630,2)
(320,143,2)
(1275,314,2)
(1050,630,2)
(434,776,2)
(1304,315,2)
(196,316,2)
(1300,894,2)
(560,520,2)
(926,455,2)
(310,63,2)
(926,1287,2)
(493,805,2)
(1030,1249,2)
(1096,776,2)
(334,607,2)
(158,103,2)
(926,199,2)
(1287,395,2)
(682,50,2)
(504,1061,2)
(479,1061,2)
(880,81,2)
(680,158,2)
(238,362,2)
(455,666,2)
(349,76,2)
(79,965,2)
(51,437,2)
(643,720,2)
(1152,580,2)
(992,143,2)
(747,376,2)
(543,143,2)
(126,776,2)
(174,663,2)
(1176,69,2)
(74,776,2)
(213,663,2)
(381,720,2)
(238,457,2)
(882,457,2)
(125,1086,2)
(656,206,2)
(1026,195,2)
(1142,396,2)
(804,667,2)
(1313,144,2)
(285,437,2)
(445,961,2)
(79,1182,2)
(260,776,2)
(1075,894,2)
(1226,1061,2)
(1044,206,2)
(765,1209,2)
(75,63,2)
(103,506,2)
(321,143,2)
(727,1061,2)
(821,1310,2)
(621,81,2)
(46,211,2)
(805,1124,2)
(685,1275,2)
(352,457,2)
(307,63,2)
(1228,1209,2)
(1043,63,2)
(772,1086,2)
(1235,23,2)
(671,1249,2)
(378,787,2)
(1026,1078,2)
(638,894,2)
(1142,1182,2)
(805,154,2)
(79,374,2)
(929,1249,2)
(1088,894,2)
(444,11,2)
(529,546,2)
(935,924,2)
(676,206,2)
(31,275,2)
(1201,546,2)
(1164,630,2)
(1254,211,2)
(909,81,2)
(348,143,2)
(639,720,2)
(31,1035,2)
(93,720,2)
(1308,437,2)
(903,1128,2)
(4,81,2)
(79,1014,2)
(961,925,2)
(617,776,2)
(1120,437,2)
(514,1209,2)
(53,787,2)
(166,1061,2)
(79,65,2)
(79,407,2)
(170,1128,2)
(854,1249,2)
(600,1007,2)
(926,1129,2)
(1280,1085,2)
(1157,143,2)
(116,143,2)
(379,630,2)
(894,1157,2)
(932,705,2)
(532,720,2)
(388,630,2)
(521,1231,2)
(1299,894,2)
(926,1297,2)
(374,666,2)
(78,639,2)
(340,738,2)
(1087,720,2)
(1131,1061,2)
(926,747,2)
(467,605,2)
(1105,206,2)
(1341,720,2)
(647,91,2)
(31,154,2)
(645,664,2)
(1152,677,2)
(546,901,2)
(32,901,2)
(1141,465,2)
(618,1273,2)
(381,143,2)
(168,302,2)
(1265,663,2)
(691,1209,2)
(1026,485,2)
(882,211,2)
(937,217,2)
(1038,143,2)
(159,759,2)
(582,143,2)
(255,720,2)
(108,1249,2)
(754,1180,2)
(1142,909,2)
(632,206,2)
(1192,894,2)
(1196,265,2)
(15,720,2)
(1286,894,2)
(680,206,2)
(1328,1047,2)
(326,341,2)
(436,894,2)
(1360,11,2)
(317,402,2)
(805,1326,2)
(402,720,2)
(138,81,2)
(1233,894,2)
(79,781,2)
(76,143,2)
(1328,720,2)
(306,143,2)
(1057,1178,2)
(538,690,2)
(209,288,2)
(1026,7,2)
(926,822,2)
(698,143,2)
(349,937,2)
(1282,78,2)
(565,1015,2)
(1040,961,2)
(190,663,2)
(264,894,2)
(1162,457,2)
(203,457,2)
(417,437,2)
(1235,279,2)
(1330,457,2)
(591,894,2)
(467,937,2)
(1127,894,2)
(57,546,2)
(713,81,2)
(326,638,2)
(817,345,2)
(282,143,2)
(1142,1144,2)
(752,1263,2)
(703,1,2)
(194,874,2)
(926,776,2)
(349,447,2)
(805,747,2)
(1069,11,2)
(176,643,2)
(625,961,2)
(1142,8,2)
(1304,1061,2)
(823,143,2)
(1106,143,2)
(445,1002,2)
(1246,961,2)
(645,807,2)
(1013,805,2)
(51,1152,2)
(604,437,2)
(864,736,2)
(1280,720,2)
(1346,887,2)
(1229,894,2)
(79,1223,2)
(49,319,2)
(1142,649,2)
(6,666,2)
(91,1128,2)
(439,122,2)
(50,168,2)
(1047,1061,2)
(271,720,2)
(169,143,2)
(748,663,2)
(69,209,2)
(50,1128,2)
(1101,435,2)
(1087,37,2)
(1026,121,2)
(1049,680,2)
(1180,610,2)
(1140,546,2)
(1142,1122,2)
(288,437,2)
(675,11,2)
(168,317,2)
(1184,112,2)
(439,926,2)
(1045,961,2)
(1144,720,2)
(220,666,2)
(130,143,2)
(1041,1128,2)
(863,387,2)
(930,11,2)
(777,901,2)
(1132,1209,2)
(1330,1268,2)
(60,143,2)
(922,720,2)
(1061,1282,2)
(749,457,2)
(394,11,2)
(997,1061,2)
(357,720,2)
(168,7,2)
(1050,242,2)
(554,143,2)
(277,1302,2)
(148,457,2)
(157,663,2)
(904,790,2)
(1152,154,2)
(519,1316,2)
(1026,461,2)
(864,1047,2)
(391,437,2)
(934,894,2)
(342,1249,2)
(429,206,2)
(259,457,2)
(1221,143,2)
(157,1070,2)
(1354,1249,2)
(123,720,2)
(950,894,2)
(1124,1061,2)
(1309,143,2)
(59,196,2)
(802,759,2)
(348,158,2)
(949,439,2)
(840,474,2)
(745,1184,2)
(526,569,2)
(1248,51,2)
(79,35,2)
(766,720,2)
(142,666,2)
(410,345,2)
(188,11,2)
(217,1086,2)
(73,776,2)
(10,143,2)
(397,894,2)
(510,683,2)
(1106,1251,2)
(83,206,2)
(1070,663,2)
(485,666,2)
(679,546,2)
(79,372,2)
(418,1061,2)
(468,474,2)
(1026,1122,2)
(168,649,2)
(277,894,2)
(1136,941,2)
(153,110,2)
(187,206,2)
(1326,40,2)
(1055,776,2)
(255,1047,2)
(690,479,2)
(926,954,2)
(715,1047,2)
(31,1269,2)
(394,181,2)
(405,720,2)
(123,11,2)
(64,143,2)
(1315,206,2)
(1142,372,2)
(16,1128,2)
(732,1086,2)
(702,143,2)
(1034,504,2)
(1298,206,2)
(137,86,2)
(181,720,2)
(31,99,2)
(1008,143,2)
(212,663,2)
(161,437,2)
(1,340,2)
(796,1268,2)
(172,663,2)
(1152,1052,2)
(1026,621,2)
(1026,1297,2)
(805,621,2)
(343,1277,2)
(160,1113,2)
(1239,167,2)
(1185,715,2)
(778,282,2)
(1143,776,2)
(31,8,2)
(845,546,2)
(454,457,2)
(1026,372,2)
(1272,894,2)
(785,143,2)
(621,720,2)
(889,143,2)
(14,206,2)
(1297,358,2)
(380,282,2)
(376,720,2)
(1243,339,2)
(274,630,2)
(1136,1086,2)
(522,776,2)
(926,407,2)
(467,573,2)
(1235,457,2)
(1122,520,2)
(574,457,2)
(698,1038,2)
-----------------------------------
(0,pdf_imagebox)
(1,boxp->x1 = boxp->y1)
(2,t2p)
(3,RET)
(4,t2p)
(5,t2p->tiff_orientation)
(6,boxp->x1)
(7,t2p->pdf_imagewidth)
(8,t2p->pdf_xres)
(9,y1)
(10,t2p->pdf_imagebox.x1 \\n\\t\\t\\t+ ((float)
(11,t2p->pdf_overridepagesize!=0)
(12,0)
(13,y2)
(14,t2p)
(15,t2p->pdf_page)
(16,pdf_imagebox)
(17,t2p->tiff_length)
(18,float)
(19,t2p)
(20,tiff_orientation)
(21,2.0F)
(22,0)
(23,float)
(24,y2)
(25,boxp->y1 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(26,t2p->pdf_page)
(27,x1)
(28,boxp->x1)
(29,tiff_length)
(30,if(t2p->pdf_xres == 0.0)
(31,t2p->pdf_imagebox.y2+=((t2p->pdf_pagelength-t2p->pdf_imagelength)
(32,1)
(33,return;)
(34,t2p->tiff_length)
(35,boxp->x2)
(36,i2)
(37,t2p->pdf_pagewidth = t2p->pdf_imagewidth)
(38,t2p)
(39,pdf_pagelength)
(40,t2p->pdf_imagebox)
(41,t2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t\\t+ ((float)
(42,t2p->pdf_imagebox)
(43,1)
(44,0)
(45,(float)
(46,t2p->pdf_imagebox.y2)
(47,t2p)
(48,t2p)
(49,t2p->pdf_imagebox.x2)
(50,t2p->pdf_imagebox.y1)
(51,t2p->pdf_imagebox.x2)
(52,t2p)
(53,t2p->tiff_orientation==6)
(54,float)
(55,t2p)
(56,boxp->x1 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(57,i)
(58,tiles[i2*tilecountx+i].tile_box)
(59,((float)
(60,i2)
(61,t2p->tiff_tiles)
(62,y1)
(63,t2p->pdf_image_fillpage)
(64,boxp)
(65,boxp->x1)
(66,t2p)
(67,for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page])
(68,pdf_imagebox)
(69,t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1)
(70,tilelength)
(71,t2p)
(72,boxp)
(73,tiles[i])
(74,pdf_imagebox)
(75,t2p)
(76,boxp->y2 = \\n\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t- ((float)
(77,t2p->pdf_imagelength)
(78,t2p->tiff_resunit != RESUNIT_CENTIMETER)
(79,boxp->x1 -= t2p->pdf_imagebox.x1)
(80,t2p)
(81,width_ratio < length_ratio)
(82,t2p->pdf_imagebox)
(83,t2p->tiff_length)
(84,t2p->pdf_page)
(85,t2p)
(86,t2p->pdf_overrideres)
(87,tiff_tiles)
(88,i++)
(89,t2p->pdf_yres)
(90,t2p->pdf_overridepagesize)
(91,t2p->pdf_imagebox)
(92,x2)
(93,t2p->tiff_length)
(94,tiff_orientation)
(95,(float)
(96,if(t2p->pdf_overridepagesize != 0)
(97,t2p->tiff_orientation)
(98,t2p->tiff_orientation)
(99,t2p->pdf_imagebox.x2)
(100,if(t2p->tiff_orientation > 4)
(101,pdf_imagewidth)
(102,0)
(103,(t2p->tiff_tiles[t2p->pdf_page])
(104,1)
(105,t2p->pdf_imagebox)
(106,t2p)
(107,i=0)
(108,t2p->pdf_imagebox.y2)
(109,boxp->x2)
(110,t2p->pdf_pagelength-t2p->pdf_imagelength)
(111,tilewidth)
(112,float)
(113,t2p->pdf_yres = t2p->tiff_yres)
(114,tiff_tiles)
(115,boxp)
(116,pdf_imagebox)
(117,tiles)
(118,t2p->tiff_tiles)
(119,i)
(120,RESUNIT_INCH)
(121,boxp->x2)
(122,boxp->x2 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(123,t2p->pdf_pagewidth)
(124,pdf_imagebox)
(125,boxp->y1)
(126,tiff_orientation)
(127,t2p)
(128,tiff_width)
(129,tiff_resunit)
(130,t2p->tiff_tiles)
(131,pdf_imagewidth)
(132,t2p->pdf_imagebox)
(133,t2p->pdf_imagebox)
(134,pdf_pagewidth)
(135,t2p->pdf_xres = t2p->tiff_xres)
(136,t2p)
(137,t2p->pdf_yres = t2p->pdf_defaultyres)
(138,t2p->tiff_width)
(139,boxp)
(140,t2p)
(141,t2p->tiff_tiles)
(142,boxp->y2)
(143,istiled==0)
(144,tiles[i].tile_box)
(145,tiff_orientation)
(146,boxp)
(147,t2p->pdf_imagelength = t2p->tiff_length * width_ratio)
(148,pdf_imagelength)
(149,y2)
(150,istiled=0)
(151,pdf_imagebox)
(152,t2p)
(153,(t2p->pdf_pagelength-t2p->pdf_imagelength)
(154,t2p->pdf_pagelength)
(155,boxp)
(156,t2p->pdf_imagewidth * i * tilewidth)
(157,t2p->pdf_imagebox.x2)
(158,tilelength=(t2p->tiff_tiles[t2p->pdf_page])
(159,t2p->pdf_imagewidth)
(160,t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2)
(161,pdf_imagebox)
(162,t2p)
(163,0)
(164,t2p->pdf_imagelength * i2 * tilelength)
(165,boxp)
(166,PS_UNIT_SIZE)
(167,(float)
(168,t2p->pdf_imagebox.y1+=((t2p->pdf_pagelength-t2p->pdf_imagelength)
(169,boxp)
(170,boxp)
(171,tilewidth)
(172,t2p)
(173,0)
(174,x2)
(175,t2p)
(176,t2p->pdf_imagebox.y2)
(177,width_ratio)
(178,)
(179,(float)
(180,(float)
(181,t2p->pdf_imagelength)
(182,t2p)
(183,tilelength)
(184,for(i=0;i<tilecountx-1;i++)
(185,t2p)
(186,tiles_tilewidth)
(187,tiff_length)
(188,t2p)
(189,x2)
(190,pdf_imagebox)
(191,t2p)
(192,t2p)
(193,boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1)
(194,i * tilewidth)
(195,boxp->x2)
(196,t2p->pdf_yres)
(197,boxp)
(198,boxp)
(199,(t2p->tiff_tiles[t2p->pdf_page])
(200,i+1)
(201,tilecounty-1)
(202,t2p->pdf_imagebox.y2)
(203,(float)
(204,y2)
(205,float)
(206,i<tilecountx-1)
(207,tiff_tiles)
(208,boxp)
(209,t2p->pdf_imagebox.x1 - boxp->x1)
(210,t2p)
(211,t2p->pdf_imagebox.y2=t2p->pdf_imagelength)
(212,t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1)
(213,x2)
(214,tiles_tilecountx)
(215,t2p->tiff_tiles)
(216,pdf_xres)
(217,f=boxp->x2)
(218,boxp->y2)
(219,y1)
(220,t2p_compose_pdf_page_orient_flip(boxp, t2p->tiff_orientation)
(221,i)
(222,pdf_imagewidth)
(223,t2p->tiff_orientation)
(224,t2p->tiff_length * width_ratio)
(225,boxp->x1 = \\n\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t+ ((float)
(226,t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1)
(227,pdf_overrideres)
(228,x1)
(229,if(istiled==0)
(230,t2p->pdf_imagebox)
(231,pdf_imagebox)
(232,f)
(233,istiled)
(234,i)
(235,y2)
(236,(float)
(237,y2)
(238,boxp=&(tiles[i2*tilecountx+i].tile_box)
(239,boxp->x2 = t2p->pdf_imagebox.x2)
(240,t2p->pdf_imagebox)
(241,0)
(242,t2p->pdf_defaultpagelength)
(243,tilecountx)
(244,y1)
(245,boxp->y2)
(246,t2p)
(247,t2p)
(248,2.0F)
(249,PS_UNIT_SIZE/t2p->pdf_yres)
(250,tilewidth)
(251,boxp->y1)
(252,i)
(253,x1)
(254,pdf_imagebox)
(255,t2p->pdf_imagewidth)
(256,x1)
(257,t2p->pdf_imagebox)
(258,pdf_imagebox)
(259,(i2+1)
(260,tiles[i].tile_box)
(261,(i+1)
(262,RESUNIT_CENTIMETER)
(263,(float)
(264,tilewidth)
(265,i2*tilecountx+i)
(266,pdf_xres)
(267,pdf_imagebox)
(268,t2p)
(269,x2)
(270,pdf_imagewidth)
(271,t2p->pdf_imagebox)
(272,boxp)
(273,y2)
(274,t2p->pdf_pagewidth = t2p->pdf_defaultpagewidth)
(275,t2p->pdf_imagelength)
(276,boxp->x1)
(277,t2p->pdf_imagewidth * (i+1)
(278,t2p)
(279,t2p->tiff_length)
(280,boxp)
(281,boxp)
(282,tilecountx=(t2p->tiff_width + \\n\\t\\t\\ttilewidth -1)
(283,(float)
(284,tilecounty)
(285,t2p->pdf_imagebox)
(286,tiles_tilecount)
(287,t2p)
(288,t2p->pdf_imagebox.x1)
(289,i2)
(290,t2p)
(291,boxp)
(292,t2p->pdf_imagewidth)
(293,)
(294,t2p_compose_pdf_page_orient(&(t2p->pdf_imagebox)
(295,t2p)
(296,i++)
(297,0.0)
(298,t2p)
(299,t2p)
(300,tiff_orientation)
(301,t2p)
(302,t2p->pdf_imagelength)
(303,f=boxp->x1)
(304,t2p->pdf_mediabox.y2=t2p->pdf_pagelength)
(305,pdf_imagebox)
(306,i)
(307,tiff_length)
(308,t2p)
(309,t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2)
(310,width_ratio)
(311,x2)
(312,t2p->tiff_orientation)
(313,t2p)
(314,t2p->tiff_width * length_ratio)
(315,t2p->pdf_xres = t2p->pdf_defaultxres)
(316,t2p->pdf_yres = t2p->pdf_defaultyres)
(317,t2p->pdf_mediabox.y1)
(318,pdf_imagebox)
(319,t2p->pdf_imagebox.x2=t2p->pdf_imagewidth)
(320,tilecountx)
(321,(t2p->tiff_tiles[t2p->pdf_page])
(322,x2)
(323,t2p->pdf_mediabox)
(324,y1)
(325,tiff_width)
(326,(float)
(327,3)
(328,boxp)
(329,t2p)
(330,i2*tilecountx+i)
(331,t2p)
(332,tiff_length)
(333,t2p)
(334,boxp=&(tiles[i2*tilecountx+i].tile_box)
(335,t2p->pdf_yres)
(336,tiles)
(337,t2p->tiff_width)
(338,tiles_tilecount)
(339,t2p->pdf_pagewidth)
(340,boxp->y1)
(341,(float)
(342,t2p->pdf_imagebox.y1)
(343,(float)
(344,tiff_tiles)
(345,i2=0)
(346,y1)
(347,if(t2p->tiff_orientation==2 || t2p->tiff_orientation==3)
(348,tilelength -1)
(349,boxp->y2)
(350,pdf_defaultyres)
(351,tilelength)
(352,i2)
(353,t2p)
(354,(t2p->tiff_tiles[t2p->pdf_page])
(355,t2p_compose_pdf_page_orient( &(tiles[i].tile_box)
(356,pdf_imagebox)
(357,t2p->pdf_page)
(358,t2p->tiff_tiles[t2p->pdf_page])
(359,t2p->tiff_width)
(360,pdf_yres)
(361,x1)
(362,&(tiles[i2*tilecountx+i].tile_box)
(363,t2p->tiff_tiles[t2p->pdf_page])
(364,pdf_page)
(365,t2p)
(366,y2)
(367,t2p)
(368,tiff_tiles)
(369,t2p)
(370,&(tiles[i2*tilecountx+i].tile_box)
(371,boxp->x1 = \\n\\t\\t\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t\\t+ ((float)
(372,boxp->y1)
(373,t2p->tiff_tiles[t2p->pdf_page])
(374,boxp->y2)
(375,pdf_pagelength)
(376,t2p->pdf_mediabox)
(377,i2)
(378,t2p->tiff_orientation)
(379,t2p)
(380,tilecountx-1)
(381,t2p->pdf_page)
(382,t2p->pdf_mediabox)
(383,float)
(384,(t2p->tiff_tiles[t2p->pdf_page])
(385,width_ratio)
(386,t2p->pdf_imagebox.x2)
(387,float)
(388,t2p)
(389,t2p->tiff_tiles[t2p->pdf_page])
(390,t2p)
(391,x1)
(392,f=0)
(393,float)
(394,t2p->pdf_pagelength-t2p->pdf_imagelength)
(395,t2p->pdf_mediabox)
(396,boxp->x2)
(397,t2p->pdf_imagebox)
(398,pdf_image_fillpage)
(399,tiff_length)
(400,t2p->pdf_imagewidth)
(401,x1)
(402,t2p->pdf_mediabox)
(403,for(i=0;i<(t2p->tiff_tiles[t2p->pdf_page])
(404,0)
(405,t2p->tiff_tiles)
(406,length_ratio)
(407,t2p->pdf_pagewidth)
(408,pdf_pagelength)
(409,t2p->pdf_imagebox.x1)
(410,i2 * tilelength)
(411,i2)
(412,i2+1)
(413,t2p->pdf_defaultpagewidth/t2p->tiff_width)
(414,length_ratio=0)
(415,t2p->pdf_imagebox.x2)
(416,t2p)
(417,t2p->pdf_imagebox)
(418,t2p->pdf_imagewidth)
(419,i)
(420,pdf_mediabox)
(421,t2p)
(422,t2p->pdf_imagebox)
(423,pdf_imagebox)
(424,f)
(425,boxp->y1 = t2p->pdf_imagebox.y1)
(426,)
(427,tilewidth)
(428,istiled)
(429,(float)
(430,i)
(431,t2p->tiff_orientation==5)
(432,tiff_orientation)
(433,)
(434,boxp)
(435,t2p->pdf_imagebox.x1)
(436,t2p)
(437,t2p->tiff_orientation==2 || t2p->tiff_orientation==3)
(438,t2p)
(439,boxp->x2)
(440,length_ratio)
(441,pdf_imagewidth)
(442,pdf_defaultxres)
(443,pdf_imagebox)
(444,t2p->pdf_pagelength)
(445,f=t2p->pdf_mediabox.x2)
(446,pdf_imagewidth)
(447,boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2)
(448,t2p->pdf_mediabox.x2=t2p->pdf_pagewidth)
(449,pdf_imagebox)
(450,(t2p->tiff_tiles[t2p->pdf_page])
(451,i)
(452,boxp->x2 = t2p->pdf_imagebox.x2)
(453,t2p->pdf_mediabox.x2)
(454,t2p->pdf_imagebox)
(455,boxp->x2)
(456,t2p)
(457,i2<tilecounty-1)
(458,y2)
(459,i2*tilecountx+i)
(460,tilelength)
(461,t2p->pdf_yres)
(462,float)
(463,pdf_imagebox)
(464,((float)
(465,t2p->pdf_imagelength)
(466,t2p->pdf_imagebox)
(467,boxp->y2)
(468,t2p->pdf_imagebox.y1)
(469,0.0)
(470,t2p)
(471,t2p)
(472,boxp)
(473,t2p)
(474,t2p->pdf_imagebox.y1=0.0)
(475,tiff_length)
(476,t2p)
(477,tilecountx)
(478,)
(479,((float)
(480,x1)
(481,(float)
(482,tiff_orientation)
(483,t2p->pdf_defaultpagewidth)
(484,t2p->pdf_overridepagesize)
(485,boxp->x1)
(486,i)
(487,t2p)
(488,6)
(489,t2p)
(490,t2p)
(491,t2p->pdf_imagebox)
(492,tiff_width)
(493,t2p->pdf_imagebox.x1)
(494,(t2p->tiff_tiles[t2p->pdf_page])
(495,pdf_mediabox)
(496,pdf_mediabox)
(497,t2p->pdf_imagebox.y2)
(498,pdf_imagebox)
(499,t2p->tiff_orientation==4)
(500,t2p)
(501,(float)
(502,x2)
(503,pdf_imagelength)
(504,t2p->tiff_width)
(505,pdf_page)
(506,t2p->tiff_tiles[t2p->pdf_page])
(507,)
(508,y2)
(509,width_ratio)
(510,(t2p->tiff_tiles[t2p->pdf_page])
(511,tiff_tiles)
(512,4)
(513,x1)
(514,i * tilewidth)
(515,t2p->pdf_imagebox.y1)
(516,boxp)
(517,tilewidth)
(518,i++)
(519,t2p->pdf_imagelength)
(520,boxp=&(tiles[i2*tilecountx+i].tile_box)
(521,t2p->pdf_imagebox.y2 \\n\\t\\t\\t- ((float)
(522,t2p->tiff_orientation==8)
(523,t2p)
(524,t2p)
(525,t2p)
(526,(float)
(527,t2p->pdf_imagebox.y1)
(528,float)
(529,pdf_page)
(530,t2p)
(531,(t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(532,t2p->pdf_imagebox)
(533,t2p->tiff_orientation)
(534,)
(535,5)
(536,y1)
(537,y2)
(538,t2p->pdf_imagelength)
(539,boxp)
(540,0)
(541,i2)
(542,x2)
(543,x1)
(544,4)
(545,tiff_width)
(546,t2p->tiff_orientation==0 || t2p->tiff_orientation==1)
(547,t2p->pdf_imagelength)
(548,t2p->pdf_imagebox)
(549,pdf_xres)
(550,y2)
(551,i)
(552,tiff_length)
(553,0)
(554,tiff_orientation)
(555,t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(556,float)
(557,t2p)
(558,pdf_mediabox)
(559,pdf_imagebox)
(560,boxp->x1)
(561,t2p)
(562,istiled)
(563,boxp->y1 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1)
(564,t2p->pdf_imagebox.y2)
(565,t2p->pdf_imagebox.x1)
(566,length_ratio = t2p->pdf_defaultpagelength/t2p->tiff_length)
(567,t2p)
(568,t2p)
(569,(float)
(570,* tiles=NULL)
(571,pdf_imagebox)
(572,0)
(573,boxp->y2 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(574,pdf_imagewidth)
(575,tiff_xres)
(576,tiff_tiles)
(577,)
(578,t2p)
(579,tilecounty)
(580,t2p->pdf_imagewidth)
(581,i=0)
(582,pdf_page)
(583,t2p->pdf_imagebox.x1)
(584,x2)
(585,pdf_defaultpagelength)
(586,x1)
(587,x2)
(588,x2)
(589,t2p)
(590,pdf_imagewidth)
(591,1)
(592,t2p->tiff_tiles[t2p->pdf_page])
(593,t2p)
(594,tiles[i2*tilecountx+i])
(595,4)
(596,y2)
(597,pdf_imagewidth)
(598,t2p)
(599,0)
(600,t2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(601,t2p)
(602,t2p)
(603,f)
(604,boxp)
(605,boxp->y2 = t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y2)
(606,t2p->tiff_width)
(607,&(tiles[i2*tilecountx+i].tile_box)
(608,(float)
(609,pdf_imagebox)
(610,t2p->pdf_xres)
(611,boxp->y1 = f)
(612,boxp=&(tiles[i2*tilecountx+i].tile_box)
(613,t2p)
(614,pdf_pagelength)
(615,y1)
(616,t2p->pdf_imagelength)
(617,boxp->y2)
(618,t2p)
(619,float)
(620,t2p->tiff_orientation)
(621,t2p->pdf_imagelength)
(622,pdf_imagelength)
(623,i2 * tilelength)
(624,pdf_defaultyres)
(625,f)
(626,boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2)
(627,t2p)
(628,pdf_pagewidth)
(629,pdf_page)
(630,t2p->pdf_overridepagesize != 0)
(631,tilewidth)
(632,tilecountx)
(633,)
(634,boxp)
(635,(float)
(636,pdf_yres)
(637,float)
(638,(float)
(639,t2p->tiff_resunit)
(640,f)
(641,t2p)
(642,pdf_imagebox)
(643,t2p->pdf_imagebox)
(644,)
(645,boxp->x2)
(646,tiff_orientation)
(647,t2p->pdf_imagebox.y1)
(648,tile_box)
(649,t2p->pdf_mediabox.x1)
(650,boxp->x1)
(651,i)
(652,t2p->tiff_width)
(653,i)
(654,y1)
(655,t2p->tiff_width)
(656,t2p)
(657,t2p)
(658,x2)
(659,tiff_width)
(660,t2p)
(661,tiff_width)
(662,t2p->pdf_pagelength)
(663,t2p->tiff_orientation==5 || t2p->tiff_orientation==6)
(664,boxp->x2 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2)
(665,tiles_tilecounty)
(666,boxp=&(tiles[i].tile_box)
(667,((t2p->tiff_tiles[t2p->pdf_page])
(668,t2p->tiff_width)
(669,boxp)
(670,x2)
(671,y1)
(672,boxp->y2)
(673,t2p->pdf_defaultpagewidth)
(674,tilewidth)
(675,t2p)
(676,x1)
(677,t2p->pdf_imagebox.x1)
(678,tiff_orientation)
(679,i)
(680,(i2+1)
(681,t2p)
(682,t2p->pdf_imagebox.y1 - boxp->y1)
(683,t2p->tiff_tiles[t2p->pdf_page])
(684,tiff_orientation)
(685,t2p->pdf_imagewidth)
(686,t2p->pdf_imagebox.x1 - boxp->x2)
(687,tiff_length)
(688,t2p)
(689,boxp)
(690,t2p->pdf_imagelength = \\n\\t\\t\\t((float)
(691,i * tilewidth)
(692,0)
(693,t2p->pdf_pagelength = t2p->pdf_imagelength)
(694,pdf_defaultpagewidth)
(695,pdf_imagelength)
(696,tilewidth=0)
(697,float)
(698,t2p->tiff_tiles[t2p->pdf_page])
(699,tiles)
(700,pdf_imagelength)
(701,tiles)
(702,t2p)
(703,boxp->x1)
(704,t2p->pdf_page)
(705,t2p->pdf_imagewidth * (i+1)
(706,i)
(707,t2p)
(708,t2p)
(709,t2p->pdf_imagebox.y2)
(710,pdf_defaultpagewidth)
(711,boxp)
(712,pdf_mediabox)
(713,pdf_imagelength)
(714,tiff_tiles)
(715,t2p->pdf_imagewidth)
(716,boxp)
(717,t2p->tiff_length)
(718,if(t2p->tiff_orientation > 4)
(719,tiles[i2*tilecountx+i])
(720,T2P* t2p)
(721,t2p)
(722,if(t2p->pdf_overrideres)
(723,boxp)
(724,tilecountx)
(725,t2p)
(726,(float)
(727,pdf_imagelength)
(728,t2p->pdf_imagebox)
(729,t2p->pdf_defaultyres)
(730,if(t2p->tiff_orientation==5 || t2p->tiff_orientation==6)
(731,(float)
(732,y2)
(733,pdf_xres)
(734,i++)
(735,pdf_page)
(736,t2p->pdf_imagewidth = t2p->pdf_defaultpagewidth)
(737,t2p)
(738,boxp->y1 = t2p->pdf_imagebox.y1)
(739,t2p)
(740,2.0F)
(741,t2p->tiff_orientation)
(742,t2p->tiff_tiles)
(743,t2p)
(744,i2+1)
(745,(float)
(746,i2*tilecountx)
(747,t2p->pdf_mediabox.x2)
(748,boxp)
(749,t2p->tiff_width)
(750,t2p)
(751,y1)
(752,t2p)
(753,x2)
(754,((float)
(755,if (width_ratio < length_ratio )
(756,x1)
(757,(t2p->tiff_tiles[t2p->pdf_page])
(758,tilecounty=(t2p->tiff_length + \\n\\t\\t\\ttilelength -1)
(759,t2p->pdf_imagewidth = ((float)
(760,pdf_imagewidth)
(761,t2p->tiff_orientation==2)
(762,i)
(763,float)
(764,5)
(765,t2p->tiff_width % tilewidth)
(766,t2p->pdf_defaultpagelength)
(767,boxp->y2 = \\n\\t\\t\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t\\t- ((float)
(768,i2*tilecountx)
(769,pdf_mediabox)
(770,tiff_resunit)
(771,t2p->tiff_tiles[t2p->pdf_page])
(772,y1)
(773,t2p)
(774,y2)
(775,x1)
(776,i<(t2p->tiff_tiles[t2p->pdf_page])
(777,t2p)
(778,i2*tilecountx)
(779,t2p->tiff_yres)
(780,pdf_imagebox)
(781,boxp->x2)
(782,float)
(783,t2p->pdf_imagebox)
(784,t2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t\\t- ((float)
(785,i2)
(786,f)
(787,t2p->tiff_orientation==5)
(788,width_ratio)
(789,t2p->pdf_page)
(790,(float)
(791,tiff_width)
(792,t2p->pdf_defaultpagelength)
(793,y2)
(794,boxp)
(795,t2p)
(796,t2p->pdf_imagelength)
(797,pdf_imagebox)
(798,pdf_imagelength)
(799,tilelength)
(800,t2p)
(801,pdf_defaultxres)
(802,t2p->pdf_imagewidth)
(803,t2p->pdf_imagelength * (i2+1)
(804,istiled=((t2p->tiff_tiles[t2p->pdf_page])
(805,t2p->pdf_imagebox.x1+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(806,t2p)
(807,boxp->x2 = boxp->y2)
(808,t2p)
(809,tilelength=0)
(810,t2p)
(811,tilecountx)
(812,)
(813,t2p)
(814,t2p->pdf_imagebox)
(815,t2p)
(816,)
(817,i2 * tilelength)
(818,(float)
(819,x2)
(820,1)
(821,t2p_compose_pdf_page_orient(boxp, t2p->tiff_orientation)
(822,t2p->pdf_imagebox.x1)
(823,pdf_page)
(824,pdf_imagewidth)
(825,pdf_imagelength)
(826,i)
(827,boxp)
(828,t2p)
(829,t2p->pdf_imagebox.y1 - boxp->y2)
(830,t2p)
(831,tiles[i2*tilecountx+i].tile_box)
(832,t2p)
(833,pdf_mediabox)
(834,pdf_xres)
(835,t2p)
(836,i=0)
(837,(float)
(838,t2p)
(839,t2p->pdf_imagewidth * i * tilewidth)
(840,t2p->pdf_imagebox.y1)
(841,tiff_tiles)
(842,boxp->y1)
(843,t2p->pdf_imagebox.x1=0.0)
(844,t2p->pdf_defaultyres)
(845,i=0)
(846,t2p)
(847,t2p->pdf_mediabox)
(848,x2)
(849,i2)
(850,t2p->tiff_orientation)
(851,t2p)
(852,i+1)
(853,tiles[i])
(854,boxp)
(855,t2p)
(856,t2p->pdf_imagebox.y1)
(857,t2p->tiff_length)
(858,t2p->pdf_page)
(859,t2p->pdf_imagebox.x1)
(860,t2p)
(861,tilecounty=0)
(862,pdf_imagewidth)
(863,(float)
(864,t2p->pdf_imagewidth)
(865,t2p->pdf_imagebox.x1)
(866,0)
(867,boxp)
(868,boxp->y1 = \\n\\t\\t\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t\\t- ((float)
(869,tiff_width)
(870,boxp)
(871,t2p->pdf_imagewidth * i * tilewidth)
(872,t2p->tiff_width)
(873,y1)
(874,i=0)
(875,pdf_imagewidth)
(876,0)
(877,x1)
(878,i2 * tilelength)
(879,)
(880,t2p->pdf_defaultpagewidth)
(881,t2p)
(882,t2p->pdf_imagebox.y2)
(883,t2p)
(884,tile_box)
(885,t2p->pdf_mediabox)
(886,t2p->pdf_imagebox)
(887,t2p->pdf_imagebox)
(888,pdf_imagebox)
(889,tilelength)
(890,0)
(891,if(t2p->pdf_yres == 0.0)
(892,tilewidth)
(893,t2p)
(894,i<tilecountx-1)
(895,t2p->pdf_mediabox.y2)
(896,istiled)
(897,tiff_width)
(898,1)
(899,pdf_imagebox)
(900,t2p)
(901,t2p->tiff_orientation==0)
(902,float)
(903,t2p)
(904,t2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(905,boxp->x1)
(906,0)
(907,0.0)
(908,)
(909,t2p->pdf_imagewidth)
(910,t2p)
(911,pdf_page)
(912,PS_UNIT_SIZE)
(913,t2p->tiff_orientation)
(914,tile_box)
(915,t2p)
(916,y2)
(917,t2p->tiff_length)
(918,boxp)
(919,x1)
(920,pdf_pagewidth)
(921,t2p->tiff_length)
(922,t2p->pdf_imagebox)
(923,t2p)
(924,t2p->pdf_defaultxres)
(925,t2p->tiff_orientation)
(926,boxp->x2 -= t2p->pdf_imagebox.x1)
(927,tile_box)
(928,tiff_width)
(929,pdf_imagebox)
(930,t2p->pdf_imagebox)
(931,t2p)
(932,(float)
(933,t2p)
(934,t2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(935,t2p->pdf_xres = t2p->pdf_defaultxres)
(936,boxp->y1)
(937,boxp->y2 = f)
(938,y2)
(939,y1)
(940,)
(941,boxp->x1 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(942,pdf_pagelength)
(943,pdf_yres)
(944,t2p->pdf_imagebox.x2)
(945,pdf_overridepagesize)
(946,x1)
(947,(float)
(948,pdf_pagewidth)
(949,t2p->pdf_imagebox.x1 - boxp->x2)
(950,(float)
(951,t2p)
(952,boxp)
(953,return;)
(954,boxp->x2)
(955,tiff_width)
(956,boxp->x2)
(957,0)
(958,t2p->tiff_orientation==3)
(959,tilecountx=0)
(960,tiff_length)
(961,t2p->tiff_orientation > 4)
(962,(t2p->tiff_tiles[t2p->pdf_page])
(963,t2p)
(964,float)
(965,boxp->y1)
(966,i)
(967,)
(968,tiles[i2*tilecountx+i])
(969,t2p->pdf_imagebox)
(970,)
(971,tilecountx)
(972,i)
(973,boxp)
(974,pdf_imagelength)
(975,tilelength)
(976,pdf_imagebox)
(977,tiles[i2*tilecountx+i].tile_box)
(978,i2++)
(979,width_ratio = t2p->pdf_defaultpagewidth/t2p->tiff_width)
(980,)
(981,)
(982,pdf_yres)
(983,2)
(984,t2p)
(985,length_ratio)
(986,t2p)
(987,0)
(988,0)
(989,t2p)
(990,tiff_length)
(991,t2p->pdf_imagebox)
(992,(float)
(993,x1)
(994,float)
(995,t2p->pdf_yres)
(996,t2p)
(997,t2p)
(998,0.0)
(999,t2p->pdf_imagebox.x1)
(1000,i)
(1001,tiles_tilecount)
(1002,t2p->pdf_mediabox.x2)
(1003,float)
(1004,tiles)
(1005,t2p->tiff_orientation)
(1006,0)
(1007,t2p->pdf_imagebox.x1)
(1008,t2p)
(1009,tile_box)
(1010,t2p->pdf_imagebox)
(1011,t2p)
(1012,boxp)
(1013,t2p->pdf_imagebox.x1)
(1014,t2p->pdf_xres)
(1015,t2p->pdf_imagebox)
(1016,)
(1017,pdf_imagebox)
(1018,0.0)
(1019,width_ratio=0)
(1020,tiff_orientation)
(1021,t2p)
(1022,length_ratio)
(1023,t2p->tiff_width)
(1024,t2p)
(1025,tiff_length)
(1026,boxp->y2 -= t2p->pdf_imagebox.y1)
(1027,)
(1028,t2p)
(1029,x2)
(1030,t2p->pdf_imagebox)
(1031,t2p)
(1032,1)
(1033,float)
(1034,(float)
(1035,t2p->pdf_pagewidth)
(1036,)
(1037,t2p->pdf_yres)
(1038,t2p->tiff_tiles)
(1039,pdf_yres)
(1040,t2p->pdf_mediabox.x2=t2p->pdf_mediabox.y2)
(1041,t2p->pdf_imagebox.y1 - boxp->y2)
(1042,t2p)
(1043,t2p->pdf_defaultpagelength/t2p->tiff_length)
(1044,boxp)
(1045,t2p->pdf_mediabox.y2=f)
(1046,NULL)
(1047,t2p->pdf_imagewidth = \\n\\t\\t\\t((float)
(1048,pdf_imagebox)
(1049,t2p->pdf_imagelength * (i2+1)
(1050,t2p->pdf_pagelength = t2p->pdf_defaultpagelength)
(1051,tilewidth)
(1052,t2p->pdf_pagelength)
(1053,t2p->pdf_page)
(1054,t2p)
(1055,boxp)
(1056,t2p)
(1057,t2p->pdf_imagebox.x2)
(1058,0)
(1059,0.0)
(1060,tiles)
(1061,t2p->tiff_resunit != RESUNIT_CENTIMETER\\t/* RESUNIT_NONE and */\\n\\t\\t&& t2p->tiff_resunit != RESUNIT_INCH)
(1062,pdf_imagebox)
(1063,t2p->pdf_xres)
(1064,boxp)
(1065,t2p->pdf_imagebox)
(1066,boxp)
(1067,t2p->tiff_orientation==3)
(1068,y1)
(1069,(t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(1070,t2p->pdf_imagebox)
(1071,t2p)
(1072,t2p->tiff_length)
(1073,pdf_overridepagesize)
(1074,tiff_width)
(1075,pdf_imagebox)
(1076,pdf_imagebox)
(1077,boxp)
(1078,boxp->y1)
(1079,t2p)
(1080,t2p->pdf_imagebox.x1)
(1081,pdf_pagewidth)
(1082,t2p->pdf_imagebox.x1 - boxp->x1)
(1083,float)
(1084,2.0F)
(1085,t2p->pdf_xres == 0.0)
(1086,t2p->tiff_orientation > 4)
(1087,t2p->pdf_pagewidth)
(1088,(i+1)
(1089,t2p)
(1090,x1)
(1091,boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1)
(1092,pdf_imagebox)
(1093,t2p)
(1094,float)
(1095,pdf_imagelength)
(1096,t2p)
(1097,(t2p->tiff_tiles[t2p->pdf_page])
(1098,x1)
(1099,t2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(1100,boxp)
(1101,t2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t\\t+ ((float)
(1102,t2p->tiff_length % tilelength)
(1103,float)
(1104,pdf_imagewidth)
(1105,boxp)
(1106,t2p->tiff_length + \\n\\t\\t\\ttilelength -1)
(1107,x1)
(1108,pdf_imagelength)
(1109,y2)
(1110,&(tiles[i2*tilecountx+i].tile_box)
(1111,t2p)
(1112,1)
(1113,t2p->pdf_imagebox.y2)
(1114,t2p)
(1115,tilelength)
(1116,pdf_imagebox)
(1117,t2p)
(1118,y1)
(1119,tilecountx)
(1120,x2)
(1121,tiles)
(1122,boxp->y2)
(1123,boxp)
(1124,t2p->pdf_imagelength)
(1125,3)
(1126,t2p->tiff_width)
(1127,t2p->pdf_imagebox)
(1128,t2p->tiff_orientation==8 || t2p->tiff_orientation==5)
(1129,t2p->pdf_imagebox.y1)
(1130,for(i2=0;i2<tilecounty-1;i2++)
(1131,pdf_xres)
(1132,i * tilewidth)
(1133,t2p->pdf_imagebox)
(1134,pdf_imagebox)
(1135,1)
(1136,boxp->x1)
(1137,tiff_orientation)
(1138,float)
(1139,t2p->tiff_orientation==1)
(1140,(t2p->tiff_tiles[t2p->pdf_page])
(1141,t2p->pdf_imagelength * i2 * tilelength)
(1142,boxp->y1 -= t2p->pdf_imagebox.y1)
(1143,t2p->pdf_imagebox)
(1144,t2p->pdf_xres)
(1145,* boxp=NULL)
(1146,(float)
(1147,tiles_tiles)
(1148,t2p)
(1149,tiles_edgetilewidth)
(1150,x1)
(1151,i2)
(1152,t2p->pdf_imagebox.x2+=((t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(1153,t2p->pdf_page)
(1154,t2p)
(1155,boxp)
(1156,t2p)
(1157,tilecountx-1)
(1158,i2*tilecountx+i)
(1159,tiles[i2*tilecountx+i].tile_box)
(1160,t2p->pdf_imagebox.y2)
(1161,t2p)
(1162,t2p->pdf_imagebox)
(1163,tiles=(t2p->tiff_tiles[t2p->pdf_page])
(1164,pdf_defaultpagewidth)
(1165,t2p)
(1166,tilelength)
(1167,(t2p->tiff_tiles[t2p->pdf_page])
(1168,x1)
(1169,length_ratio)
(1170,float)
(1171,boxp)
(1172,t2p->pdf_imagebox)
(1173,y2)
(1174,t2p->pdf_mediabox)
(1175,y1)
(1176,boxp->x1 = t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x1)
(1177,tiles)
(1178,t2p->pdf_imagebox)
(1179,tiff_orientation)
(1180,PS_UNIT_SIZE/t2p->pdf_xres)
(1181,i)
(1182,boxp->y1)
(1183,t2p->tiff_xres)
(1184,(float)
(1185,t2p->pdf_imagewidth * i * tilewidth)
(1186,t2p)
(1187,i2)
(1188,if(t2p->tiff_orientation==8 || t2p->tiff_orientation==5)
(1189,)
(1190,y1)
(1191,pdf_mediabox)
(1192,boxp->y2 = \\n\\t\\t\\t\\tt2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(1193,t2p)
(1194,return;)
(1195,t2p->pdf_imagelength)
(1196,tiles[i2*tilecountx+i])
(1197,for(i=0;i<tilecountx-1;i++)
(1198,pdf_imagebox)
(1199,pdf_yres)
(1200,t2p)
(1201,pdf_page)
(1202,tiff_orientation)
(1203,t2p->tiff_tiles[t2p->pdf_page])
(1204,t2p)
(1205,y2)
(1206,t2p->tiff_resunit)
(1207,t2p)
(1208,pdf_imagelength)
(1209,tilewidth=(t2p->tiff_tiles[t2p->pdf_page])
(1210,t2p)
(1211,y2)
(1212,t2p)
(1213,8)
(1214,i2)
(1215,tiles_tilelength)
(1216,x2)
(1217,1)
(1218,tiff_yres)
(1219,t2p)
(1220,i)
(1221,i2)
(1222,t2p->pdf_mediabox.y1=0.0)
(1223,boxp->x1)
(1224,i2)
(1225,t2p->pdf_imagebox.y2 - t2p->pdf_imagebox.y1 - boxp->y1)
(1226,t2p)
(1227,tilelength)
(1228,tilewidth -1)
(1229,t2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t- ((float)
(1230,t2p)
(1231,t2p->pdf_imagebox.y2)
(1232,t2p->pdf_imagebox.y2 \\n\\t\\t\\t\\t\\t- ((float)
(1233,y2)
(1234,pdf_imagebox)
(1235,(float)
(1236,tilelength)
(1237,t2p)
(1238,(t2p->tiff_width + \\n\\t\\t\\ttilewidth -1)
(1239,(float)
(1240,boxp->y1)
(1241,float)
(1242,i)
(1243,t2p->pdf_pagewidth-t2p->pdf_imagewidth)
(1244,x1)
(1245,i)
(1246,y2)
(1247,t2p)
(1248,t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2)
(1249,t2p->tiff_orientation==3 || t2p->tiff_orientation==4)
(1250,i2=0)
(1251,t2p->tiff_length)
(1252,y1)
(1253,pdf_defaultpagelength)
(1254,t2p->pdf_imagebox.y2)
(1255,(float)
(1256,t2p)
(1257,pdf_imagebox)
(1258,x1)
(1259,if (t2p->pdf_image_fillpage)
(1260,t2p->pdf_imagelength * i2 * tilelength)
(1261,t2p)
(1262,t2p)
(1263,i<(t2p->tiff_tiles[t2p->pdf_page])
(1264,NULL)
(1265,boxp)
(1266,tiles_edgetilelength)
(1267,if(t2p->tiff_orientation==0 || t2p->tiff_orientation==1)
(1268,t2p->pdf_imagelength = ((float)
(1269,(t2p->pdf_pagelength-t2p->pdf_imagelength)
(1270,t2p)
(1271,f)
(1272,i2*tilecountx)
(1273,t2p->pdf_yres == 0.0)
(1274,y1)
(1275,t2p->pdf_imagewidth = t2p->tiff_width * length_ratio)
(1276,1)
(1277,(float)
(1278,t2p)
(1279,boxp)
(1280,t2p->pdf_defaultxres)
(1281,(float)
(1282,t2p->tiff_resunit != RESUNIT_INCH)
(1283,t2p->tiff_tiles)
(1284,tilecounty)
(1285,tilewidth)
(1286,(float)
(1287,t2p->pdf_mediabox.y2)
(1288,t2p->pdf_imagebox.x2 - t2p->pdf_imagebox.x1 - boxp->x2)
(1289,if(t2p->tiff_orientation==3 || t2p->tiff_orientation==4)
(1290,tiles)
(1291,boxp->y2)
(1292,t2p)
(1293,(t2p->tiff_length + \\n\\t\\t\\ttilelength -1)
(1294,t2p)
(1295,t2p)
(1296,t2p->pdf_imagebox)
(1297,(t2p->tiff_tiles[t2p->pdf_page])
(1298,pdf_imagelength)
(1299,t2p->pdf_imagelength * i2 * tilelength)
(1300,t2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t+ ((float)
(1301,tilelength)
(1302,t2p->pdf_imagewidth)
(1303,y2)
(1304,t2p->pdf_xres)
(1305,if(t2p->pdf_overridepagesize!=0)
(1306,boxp)
(1307,i)
(1308,t2p->pdf_imagebox)
(1309,t2p->tiff_width + \\n\\t\\t\\ttilewidth -1)
(1310,t2p->tiff_orientation)
(1311,tiff_tiles)
(1312,)
(1313,&(tiles[i].tile_box)
(1314,(t2p->tiff_tiles[t2p->pdf_page])
(1315,t2p->tiff_length)
(1316,t2p->pdf_imagelength = t2p->pdf_defaultpagelength)
(1317,tilewidth)
(1318,i)
(1319,pdf_defaultpagelength)
(1320,boxp)
(1321,t2p->tiff_tiles)
(1322,t2p)
(1323,boxp->y2)
(1324,float)
(1325,x1)
(1326,t2p->pdf_imagebox.y1)
(1327,t2p->pdf_imagebox)
(1328,t2p->pdf_imagewidth)
(1329,tilecounty)
(1330,t2p->pdf_imagelength)
(1331,y1)
(1332,pdf_page)
(1333,i2)
(1334,pdf_imagebox)
(1335,boxp->x2 = \\n\\t\\t\\t\\t\\tt2p->pdf_imagebox.x1 \\n\\t\\t\\t\\t\\t+ ((float)
(1336,)
(1337,pdf_imagebox)
(1338,boxp)
(1339,x2)
(1340,tile_box)
(1341,t2p->pdf_pagelength)
(1342,t2p->pdf_mediabox.x1=0.0)
(1343,t2p->tiff_orientation)
(1344,&(tiles[i].tile_box)
(1345,t2p->pdf_imagebox)
(1346,&(t2p->pdf_imagebox)
(1347,y1)
(1348,y2)
(1349,tiff_length)
(1350,tilecountx)
(1351,tilecountx)
(1352,t2p)
(1353,t2p)
(1354,t2p->pdf_imagebox.y1 - boxp->y1)
(1355,boxp->y1)
(1356,x2)
(1357,t2p)
(1358,t2p)
(1359,t2p)
(1360,pdf_imagebox)
(1361,tilecounty)
(1362,t2p->pdf_mediabox.y2)
(1363,f)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
