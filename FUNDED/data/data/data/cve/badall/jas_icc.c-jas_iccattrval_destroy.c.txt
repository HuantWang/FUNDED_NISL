-----label-----
1
-----code-----
void jas_iccattrval_destroy(jas_iccattrval_t *attrval)
{
#if 0
jas_eprintf("refcnt=%d\n", attrval->refcnt);
#endif
	if (--attrval->refcnt <= 0) {
		if (attrval->ops->destroy)
			(*attrval->ops->destroy)(attrval);
		jas_free(attrval);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
15,16
15,17
16,17
20,21
20,22
21,22
21,23
22,23
22,24
23,24
23,25
24,25
28,29
29,30
29,31
30,31
31,32
32,33
32,34
33,34
33,35
34,35
38,39
40,41
41,42
41,43
42,43
44,45
-----nextToken-----
2,4,7,9,10,17,18,19,25,26,27,35,36,37,39,43,45
-----computeFrom-----
13,14
13,15
-----guardedBy-----
17,45
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;FieldReference;IdExpression;Name;Name;LiteralExpression;CompoundStatement;IfStatement;FieldReference;FieldReference;IdExpression;Name;Name;Name;ExpressionStatement;FunctionCallExpression;UnaryExpression;UnaryExpression;FieldReference;FieldReference;IdExpression;Name;Name;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void jas_iccattrval_destroy(jas_iccattrval_t *attrval){#if 0jas_eprintf("refcnt=%d\n", attrval->refcnt);#endif	if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}}
void
jas_iccattrval_destroy(jas_iccattrval_t *attrval)
jas_iccattrval_destroy
jas_iccattrval_t *attrval
jas_iccattrval_t
jas_iccattrval_t
*attrval
*
attrval
{#if 0jas_eprintf("refcnt=%d\n", attrval->refcnt);#endif	if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}}
if (--attrval->refcnt <= 0) {		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}
--attrval->refcnt <= 0
--attrval->refcnt
attrval->refcnt
attrval
attrval
refcnt
0
{		if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);		jas_free(attrval);	}
if (attrval->ops->destroy)			(*attrval->ops->destroy)(attrval);
attrval->ops->destroy
attrval->ops
attrval
attrval
ops
destroy
(*attrval->ops->destroy)(attrval);
(*attrval->ops->destroy)(attrval)
(*attrval->ops->destroy)
*attrval->ops->destroy
attrval->ops->destroy
attrval->ops
attrval
attrval
ops
destroy
attrval
attrval
jas_free(attrval);
jas_free(attrval)
jas_free
jas_free
attrval
attrval
-----joern-----
(2,25,0)
(13,9,0)
(25,2,0)
(23,12,0)
(21,2,0)
(15,9,0)
(7,13,0)
(0,25,0)
(10,16,0)
(17,7,0)
(3,18,0)
(11,5,0)
(5,1,0)
(1,5,0)
(0,9,0)
(19,13,0)
(24,13,0)
(7,12,0)
(18,16,0)
(4,0,0)
(18,9,0)
(14,15,0)
(22,1,0)
(8,0,0)
(6,1,0)
(25,0,0)
(1,9,0)
(13,7,0)
(13,24,1)
(7,13,1)
(19,17,1)
(14,5,1)
(0,8,1)
(21,25,1)
(0,9,1)
(15,9,1)
(5,1,1)
(25,0,1)
(2,21,1)
(3,5,1)
(18,3,1)
(4,7,1)
(13,9,1)
(24,19,1)
(3,15,1)
(15,14,1)
(1,6,1)
(20,2,1)
(6,22,1)
(1,9,1)
(2,25,1)
(5,11,1)
(8,4,1)
(22,2,1)
(18,9,1)
(20,18,1)
(11,1,1)
(18,2,2)
(25,0,2)
(22,2,2)
(14,5,2)
(3,2,2)
(5,1,2)
(1,9,2)
(15,9,2)
(11,2,2)
(7,13,2)
(1,2,2)
(6,2,2)
(18,9,2)
(5,2,2)
(2,25,2)
(15,5,2)
(13,9,2)
(0,9,2)
-----------------------------------
(0,attrval->refcnt)
(1,attrval->ops)
(2,--attrval->refcnt <= 0)
(3,attrval)
(4,attrval)
(5,attrval->ops->destroy)
(6,ops)
(7,jas_eprintf("refcnt=%d\\n", attrval->refcnt)
(8,refcnt)
(9,jas_iccattrval_t *attrval)
(10,if (attrval->ops->destroy)
(11,destroy)
(12,)
(13,attrval->refcnt)
(14,attrval)
(15,(*attrval->ops->destroy)
(16,)
(17,"refcnt=%d\\n")
(18,jas_free(attrval)
(19,attrval)
(20,RET)
(21,0)
(22,attrval)
(23,if (--attrval->refcnt <= 0)
(24,refcnt)
(25,--attrval->refcnt)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
