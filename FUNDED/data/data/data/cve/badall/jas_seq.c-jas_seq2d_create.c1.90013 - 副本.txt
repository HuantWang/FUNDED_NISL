-----label-----
1
-----code-----
jas_matrix_t *jas_seq2d_create(int xstart, int ystart, int xend, int yend)
{
	jas_matrix_t *matrix;
	assert(xstart <= xend && ystart <= yend);
	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {
		return 0;
	}
	matrix->xstart_ = xstart;
	matrix->ystart_ = ystart;
	matrix->xend_ = xend;
	matrix->yend_ = yend;
	return matrix;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
4,9
4,10
7,8
7,9
9,10
11,12
11,13
13,14
15,16
15,17
17,18
19,20
19,21
21,22
23,24
23,25
23,26
23,27
23,28
23,29
23,30
23,31
24,25
25,26
25,27
26,27
28,29
28,30
31,32
32,33
32,34
33,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
41,43
42,43
44,45
46,47
46,48
47,48
48,49
49,50
49,51
50,51
52,53
52,54
52,55
53,54
55,56
55,57
56,57
58,59
60,61
60,62
61,62
63,64
65,66
66,67
68,69
69,70
69,71
70,71
70,72
71,72
74,75
76,77
77,78
77,79
78,79
78,80
79,80
82,83
84,85
85,86
85,87
86,87
86,88
87,88
90,91
92,93
93,94
93,95
94,95
94,96
95,96
98,99
100,101
101,102
-----nextToken-----
3,5,6,8,10,12,14,16,18,20,22,27,29,30,34,38,40,43,45,51,54,57,59,62,64,67,72,73,75,80,81,83,88,89,91,96,97,99,102
-----computeFrom-----
35,36
35,37
36,37
36,38
41,42
41,43
49,50
49,51
55,56
55,57
60,61
60,62
69,70
69,71
77,78
77,79
85,86
85,87
93,94
93,95
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
jas_matrix_t *jas_seq2d_create(int xstart, int ystart, int xend, int yend){	jas_matrix_t *matrix;	assert(xstart <= xend && ystart <= yend);	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}	matrix->xstart_ = xstart;	matrix->ystart_ = ystart;	matrix->xend_ = xend;	matrix->yend_ = yend;	return matrix;}
jas_matrix_t
jas_matrix_t
*jas_seq2d_create(int xstart, int ystart, int xend, int yend)
*
jas_seq2d_create
int xstart
int
xstart
xstart
int ystart
int
ystart
ystart
int xend
int
xend
xend
int yend
int
yend
yend
{	jas_matrix_t *matrix;	assert(xstart <= xend && ystart <= yend);	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}	matrix->xstart_ = xstart;	matrix->ystart_ = ystart;	matrix->xend_ = xend;	matrix->yend_ = yend;	return matrix;}
jas_matrix_t *matrix;
jas_matrix_t *matrix;
jas_matrix_t
jas_matrix_t
*matrix
*
matrix
assert(xstart <= xend && ystart <= yend);
assert(xstart <= xend && ystart <= yend)
assert
assert
xstart <= xend && ystart <= yend
xstart <= xend
xstart
xstart
xend
xend
ystart <= yend
ystart
ystart
yend
yend
if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}
!(matrix = jas_matrix_create(yend - ystart, xend - xstart))
(matrix = jas_matrix_create(yend - ystart, xend - xstart))
matrix = jas_matrix_create(yend - ystart, xend - xstart)
matrix
matrix
jas_matrix_create(yend - ystart, xend - xstart)
jas_matrix_create
jas_matrix_create
yend - ystart
yend
yend
ystart
ystart
xend - xstart
xend
xend
xstart
xstart
{		return 0;	}
return 0;
0
matrix->xstart_ = xstart;
matrix->xstart_ = xstart
matrix->xstart_
matrix
matrix
xstart_
xstart
xstart
matrix->ystart_ = ystart;
matrix->ystart_ = ystart
matrix->ystart_
matrix
matrix
ystart_
ystart
ystart
matrix->xend_ = xend;
matrix->xend_ = xend
matrix->xend_
matrix
matrix
xend_
xend
xend
matrix->yend_ = yend;
matrix->yend_ = yend
matrix->yend_
matrix
matrix
yend_
yend
yend
return matrix;
matrix
matrix
-----joern-----
(13,10,0)
(46,38,0)
(34,32,0)
(12,41,0)
(32,48,0)
(5,17,0)
(4,13,0)
(43,10,0)
(22,32,0)
(41,38,0)
(24,17,0)
(5,10,0)
(28,15,0)
(0,6,0)
(32,22,0)
(16,47,0)
(26,36,0)
(47,39,0)
(33,2,0)
(47,22,0)
(49,37,0)
(32,2,0)
(49,48,0)
(42,50,0)
(37,18,0)
(7,5,0)
(47,6,0)
(14,49,0)
(20,39,0)
(49,2,0)
(25,50,0)
(15,13,0)
(25,5,0)
(15,17,0)
(21,15,0)
(44,20,0)
(38,10,0)
(38,48,0)
(29,49,0)
(22,47,0)
(18,10,0)
(3,0,0)
(33,10,0)
(27,24,0)
(8,41,0)
(18,37,0)
(11,47,0)
(31,32,0)
(20,10,0)
(37,0,0)
(36,20,0)
(17,22,0)
(23,36,0)
(17,9,0)
(24,33,0)
(40,0,0)
(19,33,0)
(0,37,0)
(0,39,0)
(45,10,0)
(30,24,0)
(13,6,0)
(37,49,0)
(36,17,0)
(50,1,0)
(9,17,0)
(35,17,0)
(22,17,0)
(41,17,0)
(15,17,1)
(49,14,1)
(12,13,1)
(3,49,1)
(25,5,1)
(47,6,1)
(35,18,1)
(33,19,1)
(37,0,1)
(8,12,1)
(47,39,1)
(4,15,1)
(21,28,1)
(23,38,1)
(28,33,1)
(26,23,1)
(0,39,1)
(47,11,1)
(44,36,1)
(41,8,1)
(36,17,1)
(27,9,1)
(34,47,1)
(40,3,1)
(41,17,1)
(16,35,1)
(37,49,1)
(42,9,1)
(32,31,1)
(25,50,1)
(0,6,1)
(31,34,1)
(13,6,1)
(19,24,1)
(13,4,1)
(7,20,1)
(24,30,1)
(5,7,1)
(24,17,1)
(22,47,1)
(9,17,1)
(14,29,1)
(49,2,1)
(0,40,1)
(38,46,1)
(49,48,1)
(22,32,1)
(5,17,1)
(17,22,1)
(30,27,1)
(18,37,1)
(46,41,1)
(15,21,1)
(20,39,1)
(50,42,1)
(32,2,1)
(38,48,1)
(32,48,1)
(36,26,1)
(20,44,1)
(11,16,1)
(33,2,1)
(18,37,2)
(47,6,2)
(49,48,2)
(21,9,2)
(22,32,2)
(25,50,2)
(19,9,2)
(15,9,2)
(20,39,2)
(8,9,2)
(24,9,2)
(25,5,2)
(0,39,2)
(33,2,2)
(20,9,2)
(40,49,2)
(41,17,2)
(44,9,2)
(23,9,2)
(28,9,2)
(27,9,2)
(26,9,2)
(0,49,2)
(33,9,2)
(41,9,2)
(15,17,2)
(12,9,2)
(47,39,2)
(3,49,2)
(50,9,2)
(5,17,2)
(22,47,2)
(4,9,2)
(46,9,2)
(9,17,2)
(36,17,2)
(37,0,2)
(30,9,2)
(24,17,2)
(17,22,2)
(5,9,2)
(49,2,2)
(32,2,2)
(0,6,2)
(37,49,2)
(38,48,2)
(38,9,2)
(13,9,2)
(36,9,2)
(7,9,2)
(32,48,2)
(13,6,2)
(42,9,2)
-----------------------------------
(0,ystart <= yend)
(1,)
(2,int xstart)
(3,ystart)
(4,ystart)
(5,return matrix;)
(6,int ystart)
(7,matrix)
(8,xend_)
(9,!(matrix = jas_matrix_create(yend - ystart, xend - xstart)
(10,)
(11,ystart)
(12,matrix)
(13,matrix->ystart_ = ystart)
(14,xend)
(15,matrix->ystart_)
(16,yend)
(17,matrix = jas_matrix_create(yend - ystart, xend - xstart)
(18,assert(xstart <= xend && ystart <= yend)
(19,xstart)
(20,matrix->yend_ = yend)
(21,ystart_)
(22,jas_matrix_create(yend - ystart, xend - xstart)
(23,matrix)
(24,matrix->xstart_)
(25,RET)
(26,yend_)
(27,matrix)
(28,matrix)
(29,xstart)
(30,xstart_)
(31,xstart)
(32,xend - xstart)
(33,matrix->xstart_ = xstart)
(34,xend)
(35,matrix)
(36,matrix->yend_)
(37,xstart <= xend && ystart <= yend)
(38,matrix->xend_ = xend)
(39,int yend)
(40,yend)
(41,matrix->xend_)
(42,0)
(43,if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart)
(44,yend)
(45,matrix)
(46,xend)
(47,yend - ystart)
(48,int xend)
(49,xstart <= xend)
(50,return 0;)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
