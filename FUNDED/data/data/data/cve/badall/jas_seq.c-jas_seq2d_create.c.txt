-----label-----
1
-----code-----
jas_matrix_t *jas_seq2d_create(int xstart, int ystart, int xend, int yend)
{
	jas_matrix_t *matrix;
	assert(xstart <= xend && ystart <= yend);
	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {
		return 0;
	}
	matrix->xstart_ = xstart;
	matrix->ystart_ = ystart;
	matrix->xend_ = xend;
	matrix->yend_ = yend;
	return matrix;
}
-----children-----
1,2
1,3
1,4
2,3
4,5
4,6
4,7
4,8
4,9
4,10
7,8
7,9
9,10
11,12
11,13
13,14
15,16
15,17
17,18
19,20
19,21
21,22
23,24
23,25
23,26
23,27
23,28
23,29
23,30
23,31
24,25
25,26
25,27
26,27
28,29
28,30
31,32
32,33
32,34
33,34
35,36
35,37
36,37
36,38
37,38
39,40
41,42
41,43
42,43
44,45
46,47
46,48
47,48
48,49
49,50
49,51
50,51
52,53
52,54
52,55
53,54
55,56
55,57
56,57
58,59
60,61
60,62
61,62
63,64
65,66
66,67
68,69
69,70
69,71
70,71
70,72
71,72
74,75
76,77
77,78
77,79
78,79
78,80
79,80
82,83
84,85
85,86
85,87
86,87
86,88
87,88
90,91
92,93
93,94
93,95
94,95
94,96
95,96
98,99
100,101
101,102
-----nextToken-----
3,5,6,8,10,12,14,16,18,20,22,27,29,30,34,38,40,43,45,51,54,57,59,62,64,67,72,73,75,80,81,83,88,89,91,96,97,99,102
-----computeFrom-----
35,36
35,37
36,37
36,38
41,42
41,43
49,50
49,51
55,56
55,57
60,61
60,62
69,70
69,71
77,78
77,79
85,86
85,87
93,94
93,95
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;NamedTypeSpecifier;Name;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;UnaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ReturnStatement;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
jas_matrix_t *jas_seq2d_create(int xstart, int ystart, int xend, int yend){	jas_matrix_t *matrix;	assert(xstart <= xend && ystart <= yend);	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}	matrix->xstart_ = xstart;	matrix->ystart_ = ystart;	matrix->xend_ = xend;	matrix->yend_ = yend;	return matrix;}
jas_matrix_t
jas_matrix_t
*jas_seq2d_create(int xstart, int ystart, int xend, int yend)
*
jas_seq2d_create
int xstart
int
xstart
xstart
int ystart
int
ystart
ystart
int xend
int
xend
xend
int yend
int
yend
yend
{	jas_matrix_t *matrix;	assert(xstart <= xend && ystart <= yend);	if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}	matrix->xstart_ = xstart;	matrix->ystart_ = ystart;	matrix->xend_ = xend;	matrix->yend_ = yend;	return matrix;}
jas_matrix_t *matrix;
jas_matrix_t *matrix;
jas_matrix_t
jas_matrix_t
*matrix
*
matrix
assert(xstart <= xend && ystart <= yend);
assert(xstart <= xend && ystart <= yend)
assert
assert
xstart <= xend && ystart <= yend
xstart <= xend
xstart
xstart
xend
xend
ystart <= yend
ystart
ystart
yend
yend
if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart))) {		return 0;	}
!(matrix = jas_matrix_create(yend - ystart, xend - xstart))
(matrix = jas_matrix_create(yend - ystart, xend - xstart))
matrix = jas_matrix_create(yend - ystart, xend - xstart)
matrix
matrix
jas_matrix_create(yend - ystart, xend - xstart)
jas_matrix_create
jas_matrix_create
yend - ystart
yend
yend
ystart
ystart
xend - xstart
xend
xend
xstart
xstart
{		return 0;	}
return 0;
0
matrix->xstart_ = xstart;
matrix->xstart_ = xstart
matrix->xstart_
matrix
matrix
xstart_
xstart
xstart
matrix->ystart_ = ystart;
matrix->ystart_ = ystart
matrix->ystart_
matrix
matrix
ystart_
ystart
ystart
matrix->xend_ = xend;
matrix->xend_ = xend
matrix->xend_
matrix
matrix
xend_
xend
xend
matrix->yend_ = yend;
matrix->yend_ = yend
matrix->yend_
matrix
matrix
yend_
yend
yend
return matrix;
matrix
matrix
-----joern-----
(45,21,0)
(37,40,0)
(1,12,0)
(19,30,0)
(42,31,0)
(30,32,0)
(47,27,0)
(38,41,0)
(4,19,0)
(6,42,0)
(38,21,0)
(40,19,0)
(12,40,0)
(9,21,0)
(5,33,0)
(27,14,0)
(49,42,0)
(0,17,0)
(7,2,0)
(0,2,0)
(10,31,0)
(37,45,0)
(42,2,0)
(18,5,0)
(48,14,0)
(27,40,0)
(7,21,0)
(28,4,0)
(14,21,0)
(12,10,0)
(25,37,0)
(13,46,0)
(8,5,0)
(2,42,0)
(4,41,0)
(20,40,0)
(39,30,0)
(29,27,0)
(10,21,0)
(3,0,0)
(2,7,0)
(23,40,0)
(36,30,0)
(19,4,0)
(35,38,0)
(50,0,0)
(42,32,0)
(4,17,0)
(46,40,0)
(2,0,0)
(40,23,0)
(43,21,0)
(30,19,0)
(0,41,0)
(16,24,0)
(45,17,0)
(30,31,0)
(46,38,0)
(11,45,0)
(34,10,0)
(15,4,0)
(19,40,0)
(26,12,0)
(44,46,0)
(24,21,0)
(24,40,0)
(22,37,0)
(8,24,0)
(14,32,0)
(10,31,1)
(16,10,1)
(35,46,1)
(24,16,1)
(13,44,1)
(0,50,1)
(42,31,1)
(26,45,1)
(30,39,1)
(27,40,1)
(39,36,1)
(24,40,1)
(34,12,1)
(6,0,1)
(42,49,1)
(20,7,1)
(4,15,1)
(5,18,1)
(4,17,1)
(30,32,1)
(19,30,1)
(10,34,1)
(23,40,1)
(0,17,1)
(38,41,1)
(29,47,1)
(18,23,1)
(15,28,1)
(38,35,1)
(8,24,1)
(30,31,1)
(40,19,1)
(12,1,1)
(46,13,1)
(0,41,1)
(50,3,1)
(49,6,1)
(36,20,1)
(28,30,1)
(19,4,1)
(25,14,1)
(42,32,1)
(37,22,1)
(1,26,1)
(14,48,1)
(22,25,1)
(4,41,1)
(44,23,1)
(46,40,1)
(7,2,1)
(48,27,1)
(45,11,1)
(14,32,1)
(8,5,1)
(47,38,1)
(27,29,1)
(12,40,1)
(2,42,1)
(37,40,1)
(45,17,1)
(11,37,1)
(2,0,1)
(38,23,2)
(23,40,2)
(38,41,2)
(44,23,2)
(4,41,2)
(8,24,2)
(14,23,2)
(14,32,2)
(40,19,2)
(8,5,2)
(0,41,2)
(18,23,2)
(13,23,2)
(24,40,2)
(27,40,2)
(46,23,2)
(37,40,2)
(2,0,2)
(16,23,2)
(12,40,2)
(19,4,2)
(45,17,2)
(12,23,2)
(30,32,2)
(42,0,2)
(42,32,2)
(24,23,2)
(19,30,2)
(0,17,2)
(2,42,2)
(22,23,2)
(35,23,2)
(7,2,2)
(48,23,2)
(46,40,2)
(45,23,2)
(42,31,2)
(10,31,2)
(37,23,2)
(11,23,2)
(30,31,2)
(34,23,2)
(29,23,2)
(6,0,2)
(10,23,2)
(26,23,2)
(49,0,2)
(47,23,2)
(25,23,2)
(5,23,2)
(4,17,2)
(27,23,2)
(1,23,2)
-----------------------------------
(0,xstart <= xend)
(1,yend_)
(2,xstart <= xend && ystart <= yend)
(3,xstart)
(4,xend - xstart)
(5,return 0;)
(6,ystart)
(7,assert(xstart <= xend && ystart <= yend)
(8,RET)
(9,matrix)
(10,matrix->yend_ = yend)
(11,xend)
(12,matrix->yend_)
(13,xstart_)
(14,matrix->ystart_ = ystart)
(15,xstart)
(16,matrix)
(17,int xend)
(18,0)
(19,jas_matrix_create(yend - ystart, xend - xstart)
(20,matrix)
(21,)
(22,xend_)
(23,!(matrix = jas_matrix_create(yend - ystart, xend - xstart)
(24,return matrix;)
(25,matrix)
(26,matrix)
(27,matrix->ystart_)
(28,xend)
(29,ystart_)
(30,yend - ystart)
(31,int yend)
(32,int ystart)
(33,)
(34,yend)
(35,xstart)
(36,yend)
(37,matrix->xend_)
(38,matrix->xstart_ = xstart)
(39,ystart)
(40,matrix = jas_matrix_create(yend - ystart, xend - xstart)
(41,int xstart)
(42,ystart <= yend)
(43,if (!(matrix = jas_matrix_create(yend - ystart, xend - xstart)
(44,matrix)
(45,matrix->xend_ = xend)
(46,matrix->xstart_)
(47,matrix)
(48,ystart)
(49,yend)
(50,xend)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
