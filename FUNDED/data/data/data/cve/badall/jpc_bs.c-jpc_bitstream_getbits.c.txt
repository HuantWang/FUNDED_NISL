-----label-----
1
-----code-----
long jpc_bitstream_getbits(jpc_bitstream_t *bitstream, int n)
{
	long v;
	int u;

	/* We can reliably get at most 31 bits since ISO/IEC 9899 only
	  guarantees that a long can represent values up to 2^31-1. */
	//assert(n >= 0 && n < 32);
	if (n < 0 || n >= 32) {
		return -1;
	}

	/* Get the number of bits requested from the specified bit stream. */
	v = 0;
	while (--n >= 0) {
		if ((u = jpc_bitstream_getbit(bitstream)) < 0) {
			return -1;
		}
		v = (v << 1) | u;
	}
	return v;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
5,6
5,7
6,7
8,9
8,10
11,12
11,13
13,14
15,16
15,17
15,18
15,19
15,20
15,21
16,17
17,18
17,19
19,20
21,22
22,23
22,24
24,25
26,27
26,28
27,28
27,29
28,29
28,30
29,30
32,33
32,34
33,34
36,37
37,38
38,39
40,41
41,42
41,43
42,43
45,46
45,47
46,47
46,48
47,48
48,49
51,52
51,53
52,53
52,54
53,54
53,55
54,55
55,56
55,57
56,57
58,59
58,60
59,60
61,62
64,65
65,66
66,67
68,69
69,70
69,71
70,71
72,73
72,74
73,74
74,75
74,76
75,76
78,79
80,81
81,82
-----nextToken-----
2,4,7,9,10,12,14,18,20,23,25,30,31,34,35,39,43,44,49,50,57,60,62,63,67,71,76,77,79,82
-----computeFrom-----
27,28
27,29
28,29
28,30
32,33
32,34
41,42
41,43
46,47
46,48
53,54
53,55
55,56
55,57
69,70
69,71
72,73
72,74
74,75
74,76
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;WhileStatement;BinaryExpression;UnaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ReturnStatement;UnaryExpression;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;BinaryExpression;UnaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
long jpc_bitstream_getbits(jpc_bitstream_t *bitstream, int n){	long v;	int u;	/* We can reliably get at most 31 bits since ISO/IEC 9899 only	  guarantees that a long can represent values up to 2^31-1. */	//assert(n >= 0 && n < 32);	if (n < 0 || n >= 32) {		return -1;	}	/* Get the number of bits requested from the specified bit stream. */	v = 0;	while (--n >= 0) {		if ((u = jpc_bitstream_getbit(bitstream)) < 0) {			return -1;		}		v = (v << 1) | u;	}	return v;}
long
jpc_bitstream_getbits(jpc_bitstream_t *bitstream, int n)
jpc_bitstream_getbits
jpc_bitstream_t *bitstream
jpc_bitstream_t
jpc_bitstream_t
*bitstream
*
bitstream
int n
int
n
n
{	long v;	int u;	/* We can reliably get at most 31 bits since ISO/IEC 9899 only	  guarantees that a long can represent values up to 2^31-1. */	//assert(n >= 0 && n < 32);	if (n < 0 || n >= 32) {		return -1;	}	/* Get the number of bits requested from the specified bit stream. */	v = 0;	while (--n >= 0) {		if ((u = jpc_bitstream_getbit(bitstream)) < 0) {			return -1;		}		v = (v << 1) | u;	}	return v;}
long v;
long v;
long
v
v
int u;
int u;
int
u
u
if (n < 0 || n >= 32) {		return -1;	}
n < 0 || n >= 32
n < 0
n
n
0
n >= 32
n
n
32
{		return -1;	}
return -1;
-1
1
v = 0;
v = 0
v
v
0
while (--n >= 0) {		if ((u = jpc_bitstream_getbit(bitstream)) < 0) {			return -1;		}		v = (v << 1) | u;	}
--n >= 0
--n
n
n
0
{		if ((u = jpc_bitstream_getbit(bitstream)) < 0) {			return -1;		}		v = (v << 1) | u;	}
if ((u = jpc_bitstream_getbit(bitstream)) < 0) {			return -1;		}
(u = jpc_bitstream_getbit(bitstream)) < 0
(u = jpc_bitstream_getbit(bitstream))
u = jpc_bitstream_getbit(bitstream)
u
u
jpc_bitstream_getbit(bitstream)
jpc_bitstream_getbit
jpc_bitstream_getbit
bitstream
bitstream
0
{			return -1;		}
return -1;
-1
1
v = (v << 1) | u;
v = (v << 1) | u
v
v
(v << 1) | u
(v << 1)
v << 1
v
v
1
u
u
return v;
v
v
-----joern-----
(11,25,0)
(14,13,0)
(30,41,0)
(15,20,0)
(35,10,0)
(12,29,0)
(11,20,0)
(26,16,0)
(37,46,0)
(24,46,0)
(45,11,0)
(17,13,0)
(13,17,0)
(23,41,0)
(9,32,0)
(13,0,0)
(34,7,0)
(28,1,0)
(41,25,0)
(4,22,0)
(5,0,0)
(3,6,0)
(33,25,0)
(6,22,0)
(11,41,0)
(40,25,0)
(20,32,0)
(46,0,0)
(22,6,0)
(46,37,0)
(7,26,0)
(19,25,0)
(8,43,0)
(1,27,0)
(42,37,0)
(17,5,0)
(38,10,0)
(32,6,0)
(39,11,0)
(39,1,0)
(20,29,0)
(39,26,0)
(6,8,0)
(10,41,0)
(5,17,0)
(10,20,0)
(36,5,0)
(32,10,0)
(2,5,0)
(21,13,0)
(31,8,0)
(18,25,0)
(8,6,0)
(32,20,0)
(44,28,0)
(10,32,0)
(39,26,1)
(37,46,1)
(41,23,1)
(11,45,1)
(42,46,1)
(39,1,1)
(21,5,1)
(6,8,1)
(24,20,1)
(28,44,1)
(35,15,1)
(23,30,1)
(46,0,1)
(8,43,1)
(44,17,1)
(7,34,1)
(5,2,1)
(3,37,1)
(30,17,1)
(10,41,1)
(4,6,1)
(37,42,1)
(15,22,1)
(31,3,1)
(32,10,1)
(8,31,1)
(32,9,1)
(22,4,1)
(5,0,1)
(17,13,1)
(38,35,1)
(45,37,1)
(11,41,1)
(1,28,1)
(46,24,1)
(22,6,1)
(34,22,1)
(10,38,1)
(32,6,1)
(10,20,1)
(20,32,1)
(17,5,1)
(39,11,1)
(13,14,1)
(26,7,1)
(11,20,1)
(13,0,1)
(24,41,1)
(9,10,1)
(2,36,1)
(14,21,1)
(42,22,2)
(8,43,2)
(15,22,2)
(17,13,2)
(1,17,2)
(39,11,2)
(46,22,2)
(20,32,2)
(42,17,2)
(10,41,2)
(13,0,2)
(26,22,2)
(24,17,2)
(10,20,2)
(22,6,2)
(41,17,2)
(6,37,2)
(37,17,2)
(35,22,2)
(23,17,2)
(4,37,2)
(5,0,2)
(28,17,2)
(8,37,2)
(9,22,2)
(32,10,2)
(21,5,2)
(3,37,2)
(14,5,2)
(6,8,2)
(11,37,2)
(46,17,2)
(45,37,2)
(11,41,2)
(37,46,2)
(39,1,2)
(32,22,2)
(46,0,2)
(34,22,2)
(20,22,2)
(17,5,2)
(10,22,2)
(13,5,2)
(11,20,2)
(39,26,2)
(31,37,2)
(32,6,2)
(44,17,2)
(22,37,2)
(30,17,2)
(24,22,2)
(38,22,2)
(7,22,2)
(37,22,2)
-----------------------------------
(0,int n)
(1,return -1;)
(2,0)
(3,u)
(4,0)
(5,n < 0)
(6,u = jpc_bitstream_getbit(bitstream)
(7,-1)
(8,jpc_bitstream_getbit(bitstream)
(9,u)
(10,v << 1)
(11,return v;)
(12,if ((u = jpc_bitstream_getbit(bitstream)
(13,n >= 32)
(14,32)
(15,v)
(16,)
(17,n < 0 || n >= 32)
(18,if (n < 0 || n >= 32)
(19,v)
(20,v = (v << 1)
(21,n)
(22,(u = jpc_bitstream_getbit(bitstream)
(23,0)
(24,n)
(25,)
(26,return -1;)
(27,)
(28,-1)
(29,)
(30,v)
(31,bitstream)
(32,(v << 1)
(33,while (--n >= 0)
(34,1)
(35,v)
(36,n)
(37,--n >= 0)
(38,1)
(39,RET)
(40,u)
(41,v = 0)
(42,0)
(43,jpc_bitstream_t *bitstream)
(44,1)
(45,v)
(46,--n)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
