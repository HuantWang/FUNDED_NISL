-----label-----
1
-----code-----
static void pirlvl_destroy(jpc_pirlvl_t *rlvl)
{
	if (rlvl->prclyrnos) {
		jas_free(rlvl->prclyrnos);
	}
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
6,7
8,9
8,10
11,12
12,13
12,14
13,14
13,15
14,15
17,18
18,19
19,20
19,21
20,21
22,23
22,24
23,24
-----nextToken-----
2,4,7,9,10,15,16,21,24,25
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;CompoundStatement;IfStatement;FieldReference;IdExpression;Name;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;FieldReference;IdExpression;Name;Name;
-----ast_node-----
static void pirlvl_destroy(jpc_pirlvl_t *rlvl){	if (rlvl->prclyrnos) {		jas_free(rlvl->prclyrnos);	}}
static void
pirlvl_destroy(jpc_pirlvl_t *rlvl)
pirlvl_destroy
jpc_pirlvl_t *rlvl
jpc_pirlvl_t
jpc_pirlvl_t
*rlvl
*
rlvl
{	if (rlvl->prclyrnos) {		jas_free(rlvl->prclyrnos);	}}
if (rlvl->prclyrnos) {		jas_free(rlvl->prclyrnos);	}
rlvl->prclyrnos
rlvl
rlvl
prclyrnos
{		jas_free(rlvl->prclyrnos);	}
jas_free(rlvl->prclyrnos);
jas_free(rlvl->prclyrnos)
jas_free
jas_free
rlvl->prclyrnos
rlvl
rlvl
prclyrnos
-----joern-----
(1,4,0)
(6,3,0)
(8,6,0)
(5,6,0)
(7,2,0)
(10,9,0)
(9,3,0)
(6,1,0)
(11,9,0)
(1,6,0)
(0,9,1)
(1,6,1)
(8,9,1)
(0,1,1)
(11,10,1)
(6,3,1)
(9,11,1)
(9,3,1)
(5,8,1)
(6,5,1)
(5,9,2)
(1,9,2)
(8,9,2)
(6,3,2)
(1,6,2)
(9,3,2)
(6,9,2)
-----------------------------------
(0,RET)
(1,jas_free(rlvl->prclyrnos)
(2,)
(3,jpc_pirlvl_t *rlvl)
(4,)
(5,prclyrnos)
(6,rlvl->prclyrnos)
(7,if (rlvl->prclyrnos)
(8,rlvl)
(9,rlvl->prclyrnos)
(10,rlvl)
(11,prclyrnos)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
