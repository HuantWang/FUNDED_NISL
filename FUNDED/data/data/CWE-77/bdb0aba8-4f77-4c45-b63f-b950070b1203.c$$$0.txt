-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType myUnion;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    wcscat(data, L"*.*");
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            FILE *pipe;
            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
            pipe = POPEN(data, L"w");
            if (pipe != NULL)
            {
                PCLOSE(pipe);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
61,63
61,64
62,63
63,64
63,65
64,65
66,67
66,68
69,70
70,71
70,72
71,72
73,74
73,75
73,76
74,75
76,77
79,80
79,81
80,81
80,82
81,82
83,84
85,86
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,65,67,68,72,75,77,78,82,84,89,91
-----computeFrom-----
29,30
29,31
42,43
42,44
70,71
70,72
80,81
80,82
-----guardedBy-----
82,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
static void
goodG2B()
goodG2B
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType
CWE78_OS_Command_Injection__wchar_t_console_popen_34_unionType
myUnion
myUnion
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)            {                PCLOSE(pipe);            }
pipe != NULL
pipe
pipe
NULL
NULL
{                PCLOSE(pipe);            }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(13,2,0)
(21,16,0)
(29,2,0)
(26,2,0)
(24,23,0)
(3,30,0)
(0,2,0)
(4,2,0)
(25,27,0)
(16,4,0)
(15,4,0)
(30,4,0)
(22,29,0)
(6,22,0)
(12,22,0)
(11,16,0)
(1,27,0)
(10,9,0)
(27,22,0)
(28,1,0)
(20,14,0)
(31,9,0)
(5,29,0)
(23,18,0)
(19,1,0)
(17,14,0)
(27,2,0)
(22,2,0)
(8,29,0)
(9,30,0)
(30,9,0)
(12,29,1)
(9,31,1)
(30,9,1)
(17,20,1)
(22,6,1)
(27,22,1)
(25,1,1)
(1,28,1)
(19,22,1)
(31,10,1)
(24,14,1)
(27,25,1)
(5,8,1)
(29,5,1)
(7,14,1)
(23,24,1)
(22,29,1)
(28,19,1)
(7,23,1)
(10,3,1)
(6,12,1)
(20,30,1)
(3,27,1)
(14,17,1)
(30,9,2)
(22,29,2)
(23,14,2)
(27,22,2)
(24,14,2)
-----------------------------------
(0,myUnion)
(1,myUnion.unionFirst)
(2,)
(3,data)
(4,)
(5,FULL_COMMAND)
(6,data_buf)
(7,RET)
(8,data_buf)
(9,myUnion.unionSecond)
(10,myUnion)
(11,if (pipe != NULL)
(12,data)
(13,data_buf)
(14,pipe != NULL)
(15,data)
(16,)
(17,NULL)
(18,)
(19,myUnion)
(20,pipe)
(21,pipe)
(22,data = data_buf)
(23,PCLOSE(pipe)
(24,pipe)
(25,data)
(26,data)
(27,myUnion.unionFirst = data)
(28,unionFirst)
(29,data_buf[100] = FULL_COMMAND)
(30,* data = myUnion.unionSecond)
(31,unionSecond)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
