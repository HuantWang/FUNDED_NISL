-----label-----
1
-----code-----
static void badSink()
{
    char * data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData;
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECV(COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
6,7
7,8
7,9
9,10
9,11
9,12
12,13
13,14
15,16
15,17
16,17
17,18
17,19
19,20
19,21
19,22
19,23
23,24
24,25
24,26
24,27
24,28
25,26
27,28
29,30
31,32
33,34
34,35
34,36
34,37
35,36
37,38
39,40
-----nextToken-----
2,4,8,10,11,14,18,20,21,22,26,28,30,32,36,38,40
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(){    char * data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData;    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
static void
badSink()
badSink
{    char * data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData;    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
char * data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData;
char * data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData;
char
* data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData
*
data
= CWE78_OS_Command_Injection__char_file_w32_execv_45_badData
CWE78_OS_Command_Injection__char_file_w32_execv_45_badData
CWE78_OS_Command_Injection__char_file_w32_execv_45_badData
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECV(COMMAND_INT_PATH, args);
EXECV(COMMAND_INT_PATH, args)
EXECV
EXECV
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(8,3,0)
(7,6,0)
(5,6,0)
(9,3,0)
(3,2,0)
(4,2,0)
(12,11,0)
(0,7,0)
(1,11,0)
(11,7,0)
(11,6,0)
(6,2,0)
(8,9,1)
(7,0,1)
(12,1,1)
(11,7,1)
(11,12,1)
(10,11,1)
(3,8,1)
(0,3,1)
(1,7,1)
(11,7,2)
-----------------------------------
(0,args)
(1,COMMAND_INT_PATH)
(2,)
(3,* data = CWE78_OS_Command_Injection__char_file_w32_execv_45_badData)
(4,data)
(5,args)
(6,)
(7,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(8,CWE78_OS_Command_Injection__char_file_w32_execv_45_badData)
(9,data)
(10,RET)
(11,EXECV(COMMAND_INT_PATH, args)
(12,args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
