-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char * *dataPtr1 = &data;
    char * *dataPtr2 = &data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        char * data = *dataPtr1;
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
        *dataPtr1 = data;
    }
    {
        char * data = *dataPtr2;
        /* spawnlp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
42,43
44,45
45,46
45,47
46,47
48,49
50,51
50,52
50,53
51,52
52,53
52,54
54,55
54,56
54,57
57,58
58,59
59,60
61,62
62,63
62,64
62,65
63,64
65,66
68,69
69,70
69,71
70,71
71,72
73,74
75,76
75,77
76,77
77,78
77,79
79,80
79,81
79,82
82,83
83,84
84,85
86,87
87,88
87,89
87,90
87,91
87,92
87,93
87,94
88,89
90,91
92,93
94,95
96,97
98,99
100,101
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,36,38,40,43,47,49,53,55,56,60,64,66,67,72,74,78,80,81,85,89,91,93,95,97,99,101
-----computeFrom-----
45,46
45,47
69,70
69,71
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        /* spawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
static void
goodG2B()
goodG2B
{    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        /* spawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
char * *dataPtr1 = &data;
char * *dataPtr1 = &data;
char
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
char * *dataPtr2 = &data;
char * *dataPtr2 = &data;
char
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }
char * data = *dataPtr1;
char * data = *dataPtr1;
char
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        char * data = *dataPtr2;        /* spawnlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * data = *dataPtr2;
char * data = *dataPtr2;
char
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(35,28,0)
(45,28,0)
(10,7,0)
(2,31,0)
(11,2,0)
(20,28,0)
(5,18,0)
(31,36,0)
(21,45,0)
(4,34,0)
(25,28,0)
(15,18,0)
(34,28,0)
(16,34,0)
(26,24,0)
(7,33,0)
(40,18,0)
(36,22,0)
(39,27,0)
(31,12,0)
(24,36,0)
(17,18,0)
(27,25,0)
(12,28,0)
(30,33,0)
(41,18,0)
(22,20,0)
(23,45,0)
(13,20,0)
(33,7,0)
(14,31,0)
(27,39,0)
(32,43,0)
(42,22,0)
(22,36,0)
(38,36,0)
(8,18,0)
(24,12,0)
(0,28,0)
(18,25,0)
(1,27,0)
(9,24,0)
(7,28,0)
(44,28,0)
(20,43,0)
(37,39,0)
(36,12,0)
(29,28,0)
(19,25,0)
(2,20,0)
(3,12,0)
(34,45,0)
(39,7,0)
(43,20,0)
(31,36,1)
(40,5,1)
(22,42,1)
(24,36,1)
(33,30,1)
(7,33,1)
(39,7,1)
(30,10,1)
(10,20,1)
(2,11,1)
(41,27,1)
(43,32,1)
(36,22,1)
(45,23,1)
(2,20,1)
(9,36,1)
(1,31,1)
(34,45,1)
(27,39,1)
(22,20,1)
(8,17,1)
(34,16,1)
(17,40,1)
(20,43,1)
(26,9,1)
(31,14,1)
(4,45,1)
(11,24,1)
(38,34,1)
(37,1,1)
(16,4,1)
(39,37,1)
(23,21,1)
(32,13,1)
(14,2,1)
(24,26,1)
(18,8,1)
(15,41,1)
(5,15,1)
(6,18,1)
(21,7,1)
(42,38,1)
(22,20,2)
(36,22,2)
(2,20,2)
(20,43,2)
(24,36,2)
(31,36,2)
(27,39,2)
(34,45,2)
(7,33,2)
(39,7,2)
-----------------------------------
(0,data)
(1,data)
(2,*dataPtr1)
(3,data)
(4,data)
(5,COMMAND_INT)
(6,RET)
(7,* *dataPtr2 = &data)
(8,NULL)
(9,data)
(10,dataPtr2)
(11,dataPtr1)
(12,)
(13,dataPtr1)
(14,data)
(15,COMMAND_INT)
(16,dataBuffer)
(17,COMMAND_ARG3)
(18,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(19,data)
(20,* *dataPtr1 = &data)
(21,dataBuffer)
(22,*dataPtr1)
(23,COMMAND_ARG2)
(24,strcat(data, "*.*")
(25,)
(26,"*.*")
(27,* data = *dataPtr2)
(28,)
(29,dataPtr2)
(30,data)
(31,*dataPtr1 = data)
(32,data)
(33,&data)
(34,data = dataBuffer)
(35,dataBuffer)
(36,* data = *dataPtr1)
(37,dataPtr2)
(38,data)
(39,*dataPtr2)
(40,COMMAND_ARG1)
(41,_P_WAIT)
(42,dataPtr1)
(43,&data)
(44,dataPtr1)
(45,dataBuffer[100] = COMMAND_ARG2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
