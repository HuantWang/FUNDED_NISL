-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_05_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
82,83
82,84
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_05_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_05_bad()
CWE78_OS_Command_Injection__char_environment_system_05_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(5,38,0)
(25,44,0)
(8,5,0)
(1,22,0)
(17,25,0)
(44,25,0)
(13,15,0)
(15,13,0)
(20,32,0)
(2,28,0)
(16,28,0)
(31,20,0)
(19,13,0)
(5,37,0)
(36,38,0)
(25,9,0)
(15,6,0)
(43,38,0)
(39,18,0)
(0,29,0)
(24,44,0)
(44,29,0)
(33,16,0)
(40,23,0)
(4,1,0)
(25,48,0)
(29,28,0)
(34,6,0)
(35,6,0)
(9,5,0)
(10,37,0)
(11,38,0)
(21,32,0)
(29,44,0)
(42,29,0)
(28,6,0)
(32,5,0)
(6,46,0)
(14,9,0)
(30,37,0)
(28,16,0)
(23,22,0)
(16,5,0)
(27,18,0)
(32,20,0)
(41,5,0)
(25,15,0)
(9,28,0)
(47,6,0)
(18,15,0)
(3,38,0)
(37,38,0)
(9,25,0)
(45,15,0)
(26,9,0)
(18,27,1)
(15,13,1)
(25,9,1)
(9,26,1)
(1,4,1)
(21,12,1)
(14,18,1)
(42,0,1)
(37,30,1)
(7,23,1)
(4,20,1)
(32,21,1)
(5,8,1)
(40,1,1)
(25,15,1)
(20,32,1)
(19,45,1)
(23,40,1)
(25,44,1)
(26,14,1)
(33,2,1)
(29,42,1)
(27,39,1)
(32,5,1)
(24,17,1)
(45,28,1)
(5,37,1)
(13,19,1)
(9,28,1)
(21,18,1)
(44,29,1)
(41,37,1)
(9,5,1)
(16,5,1)
(29,28,1)
(17,9,1)
(0,24,1)
(7,20,1)
(8,41,1)
(16,33,1)
(2,12,1)
(21,25,1)
(12,5,1)
(30,10,1)
(18,15,1)
(20,31,1)
(28,16,1)
(31,32,1)
(39,15,1)
(25,44,2)
(39,12,2)
(15,13,2)
(9,5,2)
(28,12,2)
(4,20,2)
(16,12,2)
(29,28,2)
(28,16,2)
(18,15,2)
(44,18,2)
(33,12,2)
(25,15,2)
(14,18,2)
(5,37,2)
(9,18,2)
(18,12,2)
(32,5,2)
(17,18,2)
(9,28,2)
(29,18,2)
(27,12,2)
(16,5,2)
(45,12,2)
(2,12,2)
(26,18,2)
(25,18,2)
(15,12,2)
(19,12,2)
(24,18,2)
(1,20,2)
(42,18,2)
(25,9,2)
(13,12,2)
(23,20,2)
(44,29,2)
(0,18,2)
(20,32,2)
(40,20,2)
-----------------------------------
(0,dataLen)
(1,printLine("command execution failed!")
(2,dataLen)
(3,data_buf)
(4,"command execution failed!")
(5,data = data_buf)
(6,)
(7,RET)
(8,data_buf)
(9,data+dataLen)
(10,data_buf)
(11,if (SYSTEM(data)
(12,staticTrue)
(13,GETENV(ENV_VARIABLE)
(14,data)
(15,* environment = GETENV(ENV_VARIABLE)
(16,strlen(data)
(17,environment)
(18,environment != NULL)
(19,ENV_VARIABLE)
(20,SYSTEM(data)
(21,data)
(22,)
(23,exit(1)
(24,100)
(25,strncat(data+dataLen, environment, 100-dataLen-1)
(26,dataLen)
(27,NULL)
(28,dataLen = strlen(data)
(29,dataLen-1)
(30,FULL_COMMAND)
(31,0)
(32,SYSTEM(data)
(33,data)
(34,dataLen)
(35,environment)
(36,if(staticTrue)
(37,data_buf[100] = FULL_COMMAND)
(38,)
(39,environment)
(40,1)
(41,data)
(42,1)
(43,data)
(44,100-dataLen-1)
(45,environment)
(46,)
(47,if (environment != NULL)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
