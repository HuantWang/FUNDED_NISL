-----label-----
0
-----code-----
static void goodG2B2()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B2Static = 1; /* true */
    data = goodG2B2Source(data);
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wexecvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
46,49
46,50
50,51
51,52
51,53
51,54
51,55
52,53
54,55
56,57
58,59
60,61
61,62
61,63
61,64
62,63
64,65
66,67
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,48,49,53,55,57,59,63,65,67
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B2Static = 1; /* true */    data = goodG2B2Source(data);    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
static void
goodG2B2()
goodG2B2
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B2Static = 1; /* true */    data = goodG2B2Source(data);    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B2Static = 1;
goodG2B2Static = 1
goodG2B2Static
goodG2B2Static
1
data = goodG2B2Source(data);
data = goodG2B2Source(data)
data
data
goodG2B2Source(data)
goodG2B2Source
goodG2B2Source
data
data
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(20,18,0)
(8,16,0)
(13,20,0)
(1,15,0)
(4,23,0)
(9,18,0)
(11,16,0)
(22,15,0)
(14,15,0)
(12,10,0)
(7,2,0)
(16,2,0)
(3,14,0)
(10,2,0)
(19,23,0)
(6,14,0)
(18,20,0)
(16,10,0)
(17,0,0)
(23,15,0)
(18,15,0)
(21,0,0)
(20,23,0)
(23,0,0)
(0,15,0)
(2,15,0)
(13,9,1)
(21,17,1)
(16,10,1)
(11,10,1)
(20,13,1)
(19,0,1)
(23,0,1)
(14,3,1)
(10,12,1)
(6,23,1)
(23,4,1)
(9,14,1)
(16,8,1)
(18,20,1)
(12,18,1)
(5,16,1)
(20,23,1)
(0,21,1)
(4,19,1)
(3,6,1)
(8,11,1)
(16,10,2)
(23,0,2)
(20,23,2)
(18,20,2)
-----------------------------------
(0,dataBuffer[100] = COMMAND_ARG2)
(1,dataBuffer)
(2,)
(3,1)
(4,dataBuffer)
(5,RET)
(6,goodG2B2Static)
(7,args)
(8,args)
(9,data)
(10,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(11,COMMAND_INT)
(12,args)
(13,data)
(14,goodG2B2Static = 1)
(15,)
(16,EXECVP(COMMAND_INT, args)
(17,dataBuffer)
(18,data = goodG2B2Source(data)
(19,data)
(20,goodG2B2Source(data)
(21,COMMAND_ARG2)
(22,data)
(23,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
