-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
82,83
83,84
83,85
85,86
85,87
85,88
85,89
89,90
90,91
90,92
90,93
90,94
91,92
93,94
95,96
97,98
99,100
100,101
100,102
100,103
100,104
101,102
103,104
105,106
107,108
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,87,88,92,94,96,98,102,104,106,108
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_16_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(41,32,0)
(37,17,0)
(13,30,0)
(46,30,0)
(44,19,0)
(25,19,0)
(18,36,0)
(2,0,0)
(27,0,0)
(35,44,0)
(34,6,0)
(1,17,0)
(30,32,0)
(19,6,0)
(0,4,0)
(7,21,0)
(23,3,0)
(14,18,0)
(3,2,0)
(31,6,0)
(20,19,0)
(5,45,0)
(33,46,0)
(45,19,0)
(45,46,0)
(44,0,0)
(36,17,0)
(2,3,0)
(16,10,0)
(18,21,0)
(10,16,0)
(3,46,0)
(19,17,0)
(12,18,0)
(11,18,0)
(6,17,0)
(29,36,0)
(38,16,0)
(8,44,0)
(42,43,0)
(43,10,0)
(0,10,0)
(0,2,0)
(0,44,0)
(9,10,0)
(22,30,0)
(10,30,0)
(39,43,0)
(28,30,0)
(46,45,0)
(44,46,0)
(21,36,0)
(26,17,0)
(40,2,0)
(15,3,0)
(18,21,1)
(40,27,1)
(35,43,1)
(11,12,1)
(0,10,1)
(33,24,1)
(7,24,1)
(24,19,1)
(45,19,1)
(0,2,1)
(20,25,1)
(44,46,1)
(7,41,1)
(16,38,1)
(21,7,1)
(9,46,1)
(23,15,1)
(10,16,1)
(3,46,1)
(41,43,1)
(41,0,1)
(44,8,1)
(0,44,1)
(39,42,1)
(2,3,1)
(38,9,1)
(19,6,1)
(44,19,1)
(12,14,1)
(25,6,1)
(43,10,1)
(42,10,1)
(14,21,1)
(8,35,1)
(34,31,1)
(45,5,1)
(3,23,1)
(6,34,1)
(46,45,1)
(5,33,1)
(27,44,1)
(47,18,1)
(15,40,1)
(18,11,1)
(19,20,1)
(43,39,1)
(0,44,2)
(44,19,2)
(44,46,2)
(16,24,2)
(35,43,2)
(2,3,2)
(46,45,2)
(10,24,2)
(40,43,2)
(27,43,2)
(38,24,2)
(8,43,2)
(18,21,2)
(45,19,2)
(33,24,2)
(3,43,2)
(0,2,2)
(43,24,2)
(2,43,2)
(3,46,2)
(15,43,2)
(44,43,2)
(5,24,2)
(41,24,2)
(45,24,2)
(43,10,2)
(46,24,2)
(10,16,2)
(0,43,2)
(42,24,2)
(19,6,2)
(0,10,2)
(23,43,2)
(9,24,2)
(39,24,2)
-----------------------------------
(0,strncat(data+dataLen, environment, 100-dataLen-1)
(1,while(1)
(2,100-dataLen-1)
(3,dataLen-1)
(4,)
(5,data)
(6,dataBuffer[100] = COMMAND_ARG2)
(7,args)
(8,dataLen)
(9,environment)
(10,* environment = GETENV(ENV_VARIABLE)
(11,args)
(12,COMMAND_INT)
(13,if (environment != NULL)
(14,_P_WAIT)
(15,dataLen)
(16,GETENV(ENV_VARIABLE)
(17,)
(18,_spawnvp(_P_WAIT, COMMAND_INT, args)
(19,data = dataBuffer)
(20,dataBuffer)
(21,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(22,environment)
(23,1)
(24,1)
(25,data)
(26,dataBuffer)
(27,environment)
(28,dataLen)
(29,args)
(30,)
(31,dataBuffer)
(32,)
(33,dataLen)
(34,COMMAND_ARG2)
(35,data)
(36,)
(37,data)
(38,ENV_VARIABLE)
(39,NULL)
(40,100)
(41,break;)
(42,environment)
(43,environment != NULL)
(44,data+dataLen)
(45,strlen(data)
(46,dataLen = strlen(data)
(47,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
