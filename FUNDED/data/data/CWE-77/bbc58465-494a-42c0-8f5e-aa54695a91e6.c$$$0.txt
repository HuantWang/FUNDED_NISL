-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32_execvp_64_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
121,122
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,122
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32_execvp_64_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data);}
void
CWE78_OS_Command_Injection__char_file_w32_execvp_64_bad()
CWE78_OS_Command_Injection__char_file_w32_execvp_64_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data);
CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data)
CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink
CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink
&data
data
data
-----joern-----
(34,36,0)
(46,34,0)
(11,48,0)
(37,46,0)
(2,26,0)
(13,30,0)
(56,48,0)
(9,52,0)
(18,56,0)
(24,22,0)
(33,44,0)
(40,30,0)
(12,30,0)
(12,19,0)
(11,4,0)
(25,41,0)
(44,46,0)
(56,44,0)
(0,19,0)
(24,56,0)
(32,9,0)
(44,36,0)
(59,56,0)
(2,46,0)
(16,36,0)
(47,2,0)
(48,35,0)
(55,30,0)
(57,46,0)
(44,56,0)
(51,30,0)
(42,14,0)
(21,13,0)
(19,36,0)
(26,14,0)
(49,4,0)
(23,54,0)
(36,30,0)
(6,57,0)
(28,52,0)
(54,48,0)
(36,55,0)
(27,13,0)
(45,55,0)
(2,36,0)
(43,36,0)
(41,48,0)
(19,12,0)
(29,59,0)
(56,59,0)
(46,13,0)
(17,52,0)
(58,41,0)
(8,48,0)
(3,13,0)
(34,46,0)
(52,46,0)
(7,26,0)
(57,24,0)
(20,11,0)
(56,24,0)
(15,42,0)
(5,34,0)
(52,9,0)
(24,57,0)
(50,54,0)
(1,2,0)
(39,44,0)
(22,24,0)
(48,41,0)
(31,57,0)
(53,55,0)
(38,35,0)
(16,43,1)
(20,26,1)
(44,46,1)
(28,46,1)
(9,52,1)
(53,45,1)
(46,34,1)
(34,36,1)
(23,48,1)
(2,1,1)
(54,50,1)
(17,28,1)
(56,44,1)
(52,46,1)
(41,58,1)
(24,22,1)
(43,55,1)
(56,18,1)
(54,48,1)
(19,36,1)
(0,54,1)
(9,32,1)
(2,46,1)
(39,33,1)
(24,57,1)
(11,20,1)
(11,48,1)
(47,42,1)
(29,56,1)
(36,55,1)
(42,15,1)
(7,2,1)
(57,6,1)
(26,7,1)
(34,5,1)
(1,47,1)
(31,44,1)
(25,8,1)
(59,56,1)
(52,17,1)
(6,31,1)
(5,37,1)
(58,25,1)
(15,59,1)
(48,41,1)
(0,9,1)
(20,59,1)
(32,52,1)
(2,36,1)
(55,53,1)
(56,24,1)
(36,16,1)
(56,48,1)
(37,36,1)
(18,24,1)
(44,36,1)
(44,39,1)
(57,46,1)
(0,11,1)
(19,0,1)
(33,54,1)
(12,19,1)
(8,9,1)
(50,23,1)
(59,29,1)
(10,12,1)
(11,48,2)
(11,54,2)
(56,24,2)
(46,34,2)
(24,57,2)
(52,46,2)
(34,36,2)
(57,46,2)
(25,9,2)
(12,19,2)
(26,59,2)
(44,36,2)
(59,56,2)
(59,54,2)
(24,54,2)
(48,41,2)
(20,54,2)
(57,54,2)
(54,9,2)
(31,54,2)
(42,59,2)
(8,9,2)
(29,54,2)
(50,9,2)
(33,54,2)
(2,59,2)
(56,44,2)
(1,59,2)
(7,59,2)
(9,52,2)
(44,54,2)
(24,22,2)
(18,54,2)
(39,54,2)
(15,59,2)
(56,54,2)
(36,55,2)
(56,48,2)
(48,9,2)
(41,9,2)
(44,46,2)
(2,36,2)
(47,59,2)
(6,54,2)
(23,9,2)
(2,46,2)
(19,36,2)
(58,9,2)
(54,48,2)
-----------------------------------
(0,data)
(1,dataLen)
(2,data[dataLen])
(3,pFile)
(4,)
(5,data)
(6,dataLen)
(7,\\\'\\\\0\\\')
(8,pFile)
(9,100-dataLen > 1)
(10,RET)
(11,fclose(pFile)
(12,CWE78_OS_Command_Injection__char_file_w32_execvp_64b_badSink(&data)
(13,)
(14,)
(15,"fgets()
(16,dataBuffer)
(17,dataLen)
(18,pFile)
(19,&data)
(20,pFile)
(21,if (100-dataLen > 1)
(22,int)
(23,pFile)
(24,(int)
(25,FILENAME)
(26,data[dataLen] = \\\'\\\\0\\\')
(27,dataLen)
(28,100)
(29,NULL)
(30,)
(31,100)
(32,1)
(33,data)
(34,strlen(data)
(35,)
(36,data = dataBuffer)
(37,dataLen)
(38,if (pFile != NULL)
(39,dataLen)
(40,data)
(41,fopen(FILENAME, "r")
(42,printLine("fgets()
(43,data)
(44,data+dataLen)
(45,dataBuffer)
(46,dataLen = strlen(data)
(47,data)
(48,pFile = fopen(FILENAME, "r")
(49,if (fgets(data+dataLen, (int)
(50,NULL)
(51,dataBuffer)
(52,100-dataLen)
(53,COMMAND_ARG2)
(54,pFile != NULL)
(55,dataBuffer[100] = COMMAND_ARG2)
(56,fgets(data+dataLen, (int)
(57,100-dataLen)
(58,"r")
(59,fgets(data+dataLen, (int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
