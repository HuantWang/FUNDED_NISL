-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_31_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wspawnvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _wspawnvp(_P_WAIT, COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
96,98
97,98
98,99
98,100
100,101
100,102
100,103
100,104
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
120,121
122,123
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,102,103,107,109,111,113,117,119,121,123
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_31_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_31_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnvp_31_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnvp(_P_WAIT, COMMAND_INT, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnvp(_P_WAIT, COMMAND_INT, args);
_wspawnvp(_P_WAIT, COMMAND_INT, args)
_wspawnvp
_wspawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(35,6,0)
(22,16,0)
(52,0,0)
(19,33,0)
(19,10,0)
(3,27,0)
(1,14,0)
(5,49,0)
(6,0,0)
(7,40,0)
(13,16,0)
(44,27,0)
(22,20,0)
(15,9,0)
(36,22,0)
(27,11,0)
(12,27,0)
(51,14,0)
(46,6,0)
(48,22,0)
(39,35,0)
(14,9,0)
(29,49,0)
(17,29,0)
(3,6,0)
(32,6,0)
(4,3,0)
(49,40,0)
(34,10,0)
(47,16,0)
(29,40,0)
(9,14,0)
(30,29,0)
(31,11,0)
(18,50,0)
(16,20,0)
(0,50,0)
(45,3,0)
(23,29,0)
(10,19,0)
(25,32,0)
(35,10,0)
(26,0,0)
(32,27,0)
(40,20,0)
(41,20,0)
(38,35,0)
(19,3,0)
(2,20,0)
(10,35,0)
(20,50,0)
(6,32,0)
(28,50,0)
(43,19,0)
(3,19,0)
(8,11,0)
(42,0,0)
(14,0,0)
(21,51,0)
(24,51,0)
(27,50,0)
(11,50,0)
(19,14,0)
(16,27,0)
(15,1,1)
(31,8,1)
(48,16,1)
(45,4,1)
(43,3,1)
(27,11,1)
(37,29,1)
(35,39,1)
(22,16,1)
(19,10,1)
(19,14,1)
(38,34,1)
(24,14,1)
(29,49,1)
(10,35,1)
(39,38,1)
(36,48,1)
(47,51,1)
(3,27,1)
(9,15,1)
(13,47,1)
(12,44,1)
(21,24,1)
(34,43,1)
(44,11,1)
(23,30,1)
(49,5,1)
(35,6,1)
(16,27,1)
(47,19,1)
(6,32,1)
(4,51,1)
(27,12,1)
(51,21,1)
(5,22,1)
(32,25,1)
(11,31,1)
(46,27,1)
(16,13,1)
(32,27,1)
(1,6,1)
(25,46,1)
(3,45,1)
(30,17,1)
(51,14,1)
(29,23,1)
(19,3,1)
(22,36,1)
(14,9,1)
(3,6,1)
(17,49,1)
(22,16,2)
(19,10,2)
(10,51,2)
(16,27,2)
(43,51,2)
(45,51,2)
(38,51,2)
(35,6,2)
(3,27,2)
(10,35,2)
(19,14,2)
(27,11,2)
(6,32,2)
(39,51,2)
(29,49,2)
(14,9,2)
(32,27,2)
(4,51,2)
(19,3,2)
(3,51,2)
(3,6,2)
(34,51,2)
(35,51,2)
(19,51,2)
(51,14,2)
-----------------------------------
(0,)
(1,environment)
(2,dataCopy)
(3,data+dataLen)
(4,data)
(5,args)
(6,dataLen = wcslen(data)
(7,args)
(8,dataBuffer)
(9,GETENV(ENV_VARIABLE)
(10,100-dataLen-1)
(11,dataBuffer[100] = COMMAND_ARG2)
(12,dataBuffer)
(13,data)
(14,* environment = GETENV(ENV_VARIABLE)
(15,ENV_VARIABLE)
(16,* dataCopy = data)
(17,_P_WAIT)
(18,data)
(19,wcsncat(data+dataLen, environment, 100-dataLen-1)
(20,)
(21,NULL)
(22,* data = dataCopy)
(23,args)
(24,environment)
(25,data)
(26,if (environment != NULL)
(27,data = dataBuffer)
(28,dataBuffer)
(29,_wspawnvp(_P_WAIT, COMMAND_INT, args)
(30,COMMAND_INT)
(31,COMMAND_ARG2)
(32,wcslen(data)
(33,)
(34,100)
(35,dataLen-1)
(36,dataCopy)
(37,RET)
(38,dataLen)
(39,1)
(40,)
(41,data)
(42,environment)
(43,environment)
(44,data)
(45,dataLen)
(46,dataLen)
(47,dataCopy)
(48,data)
(49,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(50,)
(51,environment != NULL)
(52,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
