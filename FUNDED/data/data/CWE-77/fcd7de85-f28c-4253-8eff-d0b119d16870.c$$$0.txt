-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B1Static = 0; /* false */
    data = goodG2B1Source(data);
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
43,48
43,49
44,45
46,47
48,49
50,51
52,53
54,55
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,49,51,53,55
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B1()
goodG2B1
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B1Static = 0;
goodG2B1Static = 0
goodG2B1Static
goodG2B1Static
0
data = goodG2B1Source(data);
data = goodG2B1Source(data)
data
data
goodG2B1Source(data)
goodG2B1Source
goodG2B1Source
data
data
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(18,8,0)
(1,17,0)
(16,5,0)
(21,5,0)
(9,2,0)
(2,9,0)
(2,14,0)
(9,4,0)
(11,9,0)
(5,14,0)
(13,14,0)
(12,5,0)
(3,2,0)
(8,14,0)
(6,4,0)
(4,14,0)
(17,14,0)
(7,8,0)
(20,5,0)
(15,14,0)
(4,17,0)
(0,17,0)
(22,5,0)
(10,4,0)
(9,4,1)
(21,16,1)
(4,10,1)
(6,17,1)
(11,3,1)
(22,12,1)
(19,5,1)
(5,20,1)
(10,6,1)
(4,17,1)
(20,21,1)
(8,7,1)
(2,9,1)
(7,18,1)
(18,4,1)
(12,2,1)
(3,8,1)
(16,22,1)
(0,1,1)
(17,0,1)
(9,11,1)
(4,17,2)
(9,4,2)
(2,9,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,dataBuffer)
(2,data = goodG2B1Source(data)
(3,data)
(4,data = dataBuffer)
(5,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(6,data)
(7,0)
(8,goodG2B1Static = 0)
(9,goodG2B1Source(data)
(10,dataBuffer)
(11,data)
(12,COMMAND_INT)
(13,dataBuffer)
(14,)
(15,data)
(16,COMMAND_ARG1)
(17,dataBuffer[100] = COMMAND_ARG2)
(18,goodG2B1Static)
(19,RET)
(20,NULL)
(21,COMMAND_ARG3)
(22,COMMAND_INT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
