-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    data = goodG2BSource(data);
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
39,41
40,41
42,43
45,46
45,47
46,47
47,48
47,49
48,49
51,52
52,53
52,54
53,54
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,34,36,41,43,44,49,50,54,55
-----computeFrom-----
23,24
23,25
29,30
29,31
38,39
38,40
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    data = goodG2BSource(data);    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B()
goodG2B
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    data = goodG2BSource(data);    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
data = goodG2BSource(data);
data = goodG2BSource(data)
data
data
goodG2BSource(data)
goodG2BSource
goodG2BSource
data
data
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(3,4,0)
(11,10,0)
(16,9,0)
(15,9,0)
(10,20,0)
(13,20,0)
(2,17,0)
(22,10,0)
(0,10,0)
(6,20,0)
(7,15,0)
(4,7,0)
(19,15,0)
(15,20,0)
(7,4,0)
(21,17,0)
(23,20,0)
(9,0,0)
(14,0,0)
(8,7,0)
(18,21,0)
(5,0,0)
(0,20,0)
(9,15,0)
(12,2,0)
(22,11,1)
(18,2,1)
(7,8,1)
(21,18,1)
(8,15,1)
(0,10,1)
(12,4,1)
(9,16,1)
(1,4,1)
(15,9,1)
(14,5,1)
(5,10,1)
(16,19,1)
(4,3,1)
(3,7,1)
(9,0,1)
(10,22,1)
(4,7,1)
(19,0,1)
(2,12,1)
(1,21,1)
(0,14,1)
(7,15,1)
(15,9,2)
(12,4,2)
(18,4,2)
(2,4,2)
(0,10,2)
(9,0,2)
(7,15,2)
(21,4,2)
(4,7,2)
-----------------------------------
(0,data = data_buf)
(1,RET)
(2,printLine("command execution failed!")
(3,0)
(4,SYSTEM(data)
(5,data)
(6,data_buf)
(7,SYSTEM(data)
(8,data)
(9,goodG2BSource(data)
(10,data_buf[100] = FULL_COMMAND)
(11,data_buf)
(12,"command execution failed!")
(13,data)
(14,data_buf)
(15,data = goodG2BSource(data)
(16,data)
(17,)
(18,1)
(19,data)
(20,)
(21,exit(1)
(22,FULL_COMMAND)
(23,if (SYSTEM(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
