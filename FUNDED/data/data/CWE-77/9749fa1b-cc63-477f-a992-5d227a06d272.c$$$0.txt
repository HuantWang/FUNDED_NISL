-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_05_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
89,90
90,91
90,92
91,92
93,94
93,95
93,96
94,95
96,97
99,100
99,101
100,101
100,102
101,102
103,104
105,106
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,92,95,97,98,102,104,109,111
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
90,91
90,92
100,101
100,102
-----guardedBy-----
60,74
102,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_05_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_popen_05_bad()
CWE78_OS_Command_Injection__wchar_t_environment_popen_05_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(3,12,0)
(46,27,0)
(15,3,0)
(24,22,0)
(22,24,0)
(7,12,0)
(0,45,0)
(47,0,0)
(17,15,0)
(45,22,0)
(43,5,0)
(5,27,0)
(38,22,0)
(40,47,0)
(34,12,0)
(40,10,0)
(11,12,0)
(13,28,0)
(47,14,0)
(19,40,0)
(18,47,0)
(47,40,0)
(0,47,0)
(10,27,0)
(8,45,0)
(1,27,0)
(39,41,0)
(42,5,0)
(31,3,0)
(47,3,0)
(25,10,0)
(22,12,0)
(32,28,0)
(29,24,0)
(6,15,0)
(21,27,0)
(24,10,0)
(3,41,0)
(40,22,0)
(4,27,0)
(10,5,0)
(41,3,0)
(30,2,0)
(2,26,0)
(23,10,0)
(35,40,0)
(45,0,0)
(33,46,0)
(20,0,0)
(44,46,0)
(12,36,0)
(9,45,0)
(18,40,1)
(45,9,1)
(45,22,1)
(13,16,1)
(43,42,1)
(30,28,1)
(31,22,1)
(15,6,1)
(16,10,1)
(24,10,1)
(20,18,1)
(15,3,1)
(28,32,1)
(17,3,1)
(37,28,1)
(23,5,1)
(40,10,1)
(3,41,1)
(5,43,1)
(32,13,1)
(22,24,1)
(19,15,1)
(10,25,1)
(40,22,1)
(47,3,1)
(10,5,1)
(35,19,1)
(2,30,1)
(6,17,1)
(13,47,1)
(25,23,1)
(9,8,1)
(13,15,1)
(40,35,1)
(8,20,1)
(38,16,1)
(0,45,1)
(47,40,1)
(29,38,1)
(41,39,1)
(37,2,1)
(47,0,1)
(24,29,1)
(39,31,1)
(22,16,2)
(0,45,2)
(19,15,2)
(9,15,2)
(17,16,2)
(24,10,2)
(24,16,2)
(40,22,2)
(20,15,2)
(45,15,2)
(35,15,2)
(22,24,2)
(15,3,2)
(29,16,2)
(31,16,2)
(10,5,2)
(45,22,2)
(18,15,2)
(47,0,2)
(41,16,2)
(38,16,2)
(3,41,2)
(40,10,2)
(2,28,2)
(0,15,2)
(47,15,2)
(3,16,2)
(8,15,2)
(47,3,2)
(39,16,2)
(6,16,2)
(15,16,2)
(47,40,2)
(30,28,2)
(40,15,2)
-----------------------------------
(0,100-dataLen-1)
(1,if(staticTrue)
(2,PCLOSE(pipe)
(3,* environment = GETENV(ENV_VARIABLE)
(4,data)
(5,data_buf[100] = FULL_COMMAND)
(6,NULL)
(7,environment)
(8,dataLen)
(9,1)
(10,data = data_buf)
(11,dataLen)
(12,)
(13,pipe)
(14,)
(15,environment != NULL)
(16,staticTrue)
(17,environment)
(18,environment)
(19,data)
(20,100)
(21,data_buf)
(22,dataLen = wcslen(data)
(23,data)
(24,wcslen(data)
(25,data_buf)
(26,)
(27,)
(28,pipe != NULL)
(29,data)
(30,pipe)
(31,environment)
(32,NULL)
(33,pipe)
(34,if (environment != NULL)
(35,dataLen)
(36,)
(37,RET)
(38,dataLen)
(39,ENV_VARIABLE)
(40,data+dataLen)
(41,GETENV(ENV_VARIABLE)
(42,data_buf)
(43,FULL_COMMAND)
(44,if (pipe != NULL)
(45,dataLen-1)
(46,)
(47,wcsncat(data+dataLen, environment, 100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
