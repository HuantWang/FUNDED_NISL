-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_11_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wspawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
86,89
86,90
90,91
91,92
91,93
91,94
91,95
92,93
94,95
96,97
98,99
100,101
101,102
101,103
101,104
101,105
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,88,89,93,95,97,99,103,105,107,109
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_11_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_11_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_11_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(4,11,0)
(15,41,0)
(6,33,0)
(40,36,0)
(31,37,0)
(37,7,0)
(10,37,0)
(1,25,0)
(21,41,0)
(27,4,0)
(11,25,0)
(2,11,0)
(13,11,0)
(22,36,0)
(22,44,0)
(24,33,0)
(44,22,0)
(40,31,0)
(12,44,0)
(46,35,0)
(41,37,0)
(35,38,0)
(40,11,0)
(30,14,0)
(9,44,0)
(18,40,0)
(36,40,0)
(43,31,0)
(34,37,0)
(32,25,0)
(36,42,0)
(28,35,0)
(45,25,0)
(44,31,0)
(26,38,0)
(41,15,0)
(39,22,0)
(36,41,0)
(8,15,0)
(20,32,0)
(17,40,0)
(0,37,0)
(31,4,0)
(33,41,0)
(11,14,0)
(29,35,0)
(35,32,0)
(19,25,0)
(38,32,0)
(5,36,0)
(4,31,0)
(3,14,0)
(36,22,0)
(14,25,0)
(35,29,1)
(11,14,1)
(26,36,1)
(33,6,1)
(13,14,1)
(36,22,1)
(9,12,1)
(30,3,1)
(22,44,1)
(21,31,1)
(46,38,1)
(31,4,1)
(11,2,1)
(14,30,1)
(2,13,1)
(40,31,1)
(36,41,1)
(4,27,1)
(44,9,1)
(12,39,1)
(5,40,1)
(43,23,1)
(33,41,1)
(26,23,1)
(27,43,1)
(35,38,1)
(38,26,1)
(17,18,1)
(15,8,1)
(4,11,1)
(29,28,1)
(8,21,1)
(6,24,1)
(44,31,1)
(41,15,1)
(40,11,1)
(40,17,1)
(24,41,1)
(26,33,1)
(23,11,1)
(16,35,1)
(18,33,1)
(28,46,1)
(36,40,1)
(39,5,1)
(18,33,2)
(43,23,2)
(40,33,2)
(17,33,2)
(5,33,2)
(27,23,2)
(36,33,2)
(36,40,2)
(4,23,2)
(33,23,2)
(31,23,2)
(6,23,2)
(8,23,2)
(36,41,2)
(24,23,2)
(21,23,2)
(44,31,2)
(4,11,2)
(22,33,2)
(9,33,2)
(12,33,2)
(41,15,2)
(31,4,2)
(11,14,2)
(36,22,2)
(33,41,2)
(15,23,2)
(40,31,2)
(22,44,2)
(35,38,2)
(40,11,2)
(44,33,2)
(41,23,2)
(39,33,2)
-----------------------------------
(0,if (environment != NULL)
(1,data)
(2,dataBuffer)
(3,dataBuffer)
(4,wcslen(data)
(5,environment)
(6,NULL)
(7,)
(8,ENV_VARIABLE)
(9,1)
(10,environment)
(11,data = dataBuffer)
(12,dataLen)
(13,data)
(14,dataBuffer[100] = COMMAND_ARG2)
(15,GETENV(ENV_VARIABLE)
(16,RET)
(17,dataLen)
(18,data)
(19,dataBuffer)
(20,args)
(21,environment)
(22,100-dataLen-1)
(23,globalReturnsTrue()
(24,environment)
(25,)
(26,args)
(27,data)
(28,COMMAND_INT_PATH)
(29,args)
(30,COMMAND_ARG2)
(31,dataLen = wcslen(data)
(32,)
(33,environment != NULL)
(34,dataLen)
(35,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(36,wcsncat(data+dataLen, environment, 100-dataLen-1)
(37,)
(38,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(39,100)
(40,data+dataLen)
(41,* environment = GETENV(ENV_VARIABLE)
(42,)
(43,dataLen)
(44,dataLen-1)
(45,if(globalReturnsTrue()
(46,_P_WAIT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
