-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_bad()
{
    char * data;
    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        {
            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* spawnv - specify the path where the command is located */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
121,122
122,123
122,124
122,125
122,126
123,124
125,126
127,128
129,130
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,109,110,114,116,118,120,124,126,128,130
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_bad(){    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_bad
{    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(43,8,0)
(5,26,0)
(6,22,0)
(22,44,0)
(5,39,0)
(21,39,0)
(12,24,0)
(16,14,0)
(13,48,0)
(44,25,0)
(32,39,0)
(18,34,0)
(9,39,0)
(55,45,0)
(29,21,0)
(28,1,0)
(23,24,0)
(3,19,0)
(19,43,0)
(56,34,0)
(40,21,0)
(34,5,0)
(8,21,0)
(14,45,0)
(24,48,0)
(35,45,0)
(1,44,0)
(43,1,0)
(14,38,0)
(47,30,0)
(10,1,0)
(46,9,0)
(36,39,0)
(2,30,0)
(25,26,0)
(19,22,0)
(48,55,0)
(30,8,0)
(25,44,0)
(27,38,0)
(43,19,0)
(54,25,0)
(0,38,0)
(4,26,0)
(33,9,0)
(1,43,0)
(31,43,0)
(37,8,0)
(17,8,0)
(15,55,0)
(26,9,0)
(7,44,0)
(11,21,0)
(50,5,0)
(41,24,0)
(38,14,0)
(53,26,0)
(43,51,0)
(52,37,0)
(26,39,0)
(22,19,0)
(49,22,0)
(42,39,0)
(45,39,0)
(44,21,0)
(8,37,0)
(1,26,0)
(24,55,0)
(48,13,1)
(38,0,1)
(13,14,1)
(49,6,1)
(20,24,1)
(47,2,1)
(37,52,1)
(0,27,1)
(26,9,1)
(44,25,1)
(56,43,1)
(2,8,1)
(52,17,1)
(27,16,1)
(56,30,1)
(43,8,1)
(22,44,1)
(10,28,1)
(19,22,1)
(25,54,1)
(30,8,1)
(28,30,1)
(1,44,1)
(31,1,1)
(43,19,1)
(30,47,1)
(7,26,1)
(22,49,1)
(1,10,1)
(14,38,1)
(18,56,1)
(50,34,1)
(5,26,1)
(1,26,1)
(5,50,1)
(12,48,1)
(4,53,1)
(16,5,1)
(24,41,1)
(43,1,1)
(3,31,1)
(25,26,1)
(6,3,1)
(9,46,1)
(41,23,1)
(23,12,1)
(54,7,1)
(34,18,1)
(53,9,1)
(17,44,1)
(24,48,1)
(26,4,1)
(46,33,1)
(8,37,1)
(6,30,2)
(19,22,2)
(31,30,2)
(8,37,2)
(19,30,2)
(49,30,2)
(43,30,2)
(22,30,2)
(14,38,2)
(28,30,2)
(1,26,2)
(26,9,2)
(43,8,2)
(43,19,2)
(1,44,2)
(43,1,2)
(30,8,2)
(1,30,2)
(5,26,2)
(3,30,2)
(10,30,2)
(44,25,2)
(25,26,2)
(24,48,2)
(22,44,2)
-----------------------------------
(0,unionSecond)
(1,data+dataLen)
(2,environment)
(3,100)
(4,dataBuffer)
(5,myUnion.unionFirst = data)
(6,dataLen)
(7,dataLen)
(8,* environment = GETENV(ENV_VARIABLE)
(9,dataBuffer[100] = COMMAND_ARG2)
(10,dataLen)
(11,if (environment != NULL)
(12,_P_WAIT)
(13,args)
(14,* data = myUnion.unionSecond)
(15,args)
(16,data)
(17,environment)
(18,unionFirst)
(19,100-dataLen-1)
(20,RET)
(21,)
(22,dataLen-1)
(23,COMMAND_INT_PATH)
(24,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(25,strlen(data)
(26,data = dataBuffer)
(27,myUnion)
(28,data)
(29,environment)
(30,environment != NULL)
(31,environment)
(32,myUnion)
(33,dataBuffer)
(34,myUnion.unionFirst)
(35,data)
(36,dataBuffer)
(37,GETENV(ENV_VARIABLE)
(38,myUnion.unionSecond)
(39,)
(40,dataLen)
(41,args)
(42,data)
(43,strncat(data+dataLen, environment, 100-dataLen-1)
(44,dataLen = strlen(data)
(45,)
(46,COMMAND_ARG2)
(47,NULL)
(48,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(49,1)
(50,data)
(51,)
(52,ENV_VARIABLE)
(53,data)
(54,data)
(55,)
(56,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
