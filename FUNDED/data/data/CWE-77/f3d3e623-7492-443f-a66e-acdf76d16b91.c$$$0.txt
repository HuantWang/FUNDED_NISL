-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_05_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_05_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_05_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_05_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticTrue
staticTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(21,44,0)
(4,14,0)
(19,23,0)
(38,42,0)
(43,1,0)
(19,26,0)
(18,14,0)
(41,2,0)
(35,3,0)
(5,45,0)
(20,23,0)
(1,4,0)
(26,3,0)
(29,45,0)
(32,44,0)
(2,4,0)
(28,29,0)
(12,19,0)
(27,4,0)
(4,2,0)
(1,23,0)
(7,17,0)
(17,26,0)
(25,19,0)
(30,14,0)
(3,29,0)
(23,19,0)
(3,26,0)
(37,26,0)
(9,29,0)
(10,42,0)
(31,42,0)
(24,42,0)
(42,44,0)
(22,14,0)
(8,27,0)
(23,1,0)
(45,44,0)
(33,42,0)
(17,1,0)
(29,44,0)
(14,36,0)
(34,27,0)
(1,0,0)
(26,14,0)
(6,44,0)
(40,17,0)
(17,29,0)
(39,42,0)
(1,17,0)
(16,4,0)
(11,45,0)
(39,38,1)
(31,27,1)
(42,24,1)
(45,11,1)
(27,34,1)
(3,35,1)
(17,40,1)
(11,5,1)
(9,45,1)
(29,45,1)
(17,26,1)
(33,39,1)
(15,42,1)
(17,29,1)
(10,31,1)
(27,4,1)
(4,2,1)
(16,26,1)
(8,4,1)
(7,27,1)
(3,29,1)
(19,12,1)
(1,23,1)
(31,13,1)
(26,3,1)
(37,13,1)
(25,20,1)
(20,43,1)
(24,33,1)
(43,17,1)
(38,10,1)
(12,25,1)
(40,7,1)
(35,37,1)
(28,9,1)
(23,19,1)
(29,28,1)
(34,8,1)
(1,4,1)
(13,29,1)
(19,26,1)
(1,17,1)
(41,16,1)
(2,41,1)
(31,1,1)
(19,27,2)
(20,27,2)
(26,13,2)
(35,13,2)
(25,27,2)
(29,45,2)
(3,13,2)
(17,29,2)
(37,13,2)
(17,26,2)
(4,2,2)
(1,23,2)
(17,27,2)
(27,4,2)
(12,27,2)
(7,27,2)
(3,29,2)
(1,27,2)
(19,26,2)
(1,17,2)
(23,19,2)
(34,13,2)
(2,13,2)
(26,3,2)
(8,13,2)
(41,13,2)
(16,13,2)
(1,4,2)
(40,27,2)
(27,13,2)
(43,27,2)
(4,13,2)
(23,27,2)
-----------------------------------
(0,)
(1,strncat(data+dataLen, environment, 100-dataLen-1)
(2,GETENV(ENV_VARIABLE)
(3,strlen(data)
(4,* environment = GETENV(ENV_VARIABLE)
(5,dataBuffer)
(6,dataBuffer)
(7,data)
(8,environment)
(9,data)
(10,COMMAND_INT_PATH)
(11,COMMAND_ARG2)
(12,1)
(13,staticTrue)
(14,)
(15,RET)
(16,environment)
(17,data+dataLen)
(18,dataLen)
(19,dataLen-1)
(20,100)
(21,if(staticTrue)
(22,if (environment != NULL)
(23,100-dataLen-1)
(24,NULL)
(25,dataLen)
(26,dataLen = strlen(data)
(27,environment != NULL)
(28,dataBuffer)
(29,data = dataBuffer)
(30,environment)
(31,_P_WAIT)
(32,data)
(33,COMMAND_ARG3)
(34,NULL)
(35,data)
(36,)
(37,dataLen)
(38,COMMAND_INT_PATH)
(39,COMMAND_ARG1)
(40,dataLen)
(41,ENV_VARIABLE)
(42,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(43,environment)
(44,)
(45,dataBuffer[100] = COMMAND_ARG2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
