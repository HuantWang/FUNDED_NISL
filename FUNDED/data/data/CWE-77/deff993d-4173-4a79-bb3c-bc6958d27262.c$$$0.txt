-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_16_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(17,33,0)
(43,24,0)
(24,45,0)
(16,10,0)
(23,11,0)
(18,24,0)
(30,5,0)
(6,29,0)
(40,26,0)
(33,5,0)
(21,29,0)
(33,26,0)
(44,16,0)
(26,33,0)
(11,10,0)
(13,30,0)
(37,29,0)
(13,0,0)
(34,10,0)
(1,0,0)
(42,46,0)
(30,11,0)
(23,5,0)
(15,24,0)
(5,24,0)
(9,29,0)
(26,13,0)
(11,16,0)
(3,0,0)
(46,0,0)
(0,1,0)
(31,33,0)
(20,10,0)
(12,46,0)
(28,11,0)
(7,1,0)
(39,45,0)
(32,30,0)
(35,30,0)
(4,13,0)
(13,19,0)
(36,29,0)
(13,26,0)
(27,10,0)
(8,16,0)
(2,29,0)
(29,10,0)
(22,23,0)
(41,11,0)
(0,24,0)
(30,13,0)
(5,23,0)
(38,5,0)
(39,13,1)
(11,16,1)
(38,14,1)
(31,40,1)
(9,36,1)
(39,46,1)
(46,12,1)
(35,32,1)
(4,30,1)
(16,8,1)
(6,37,1)
(13,26,1)
(25,29,1)
(33,5,1)
(11,28,1)
(17,31,1)
(36,21,1)
(30,35,1)
(33,17,1)
(23,22,1)
(26,33,1)
(40,4,1)
(41,16,1)
(46,0,1)
(2,39,1)
(12,42,1)
(30,5,1)
(13,0,1)
(8,44,1)
(13,30,1)
(3,5,1)
(30,11,1)
(32,46,1)
(21,2,1)
(7,3,1)
(23,11,1)
(28,41,1)
(42,0,1)
(5,23,1)
(1,7,1)
(29,6,1)
(0,1,1)
(22,38,1)
(37,9,1)
(14,11,1)
(2,14,1)
(32,46,2)
(33,5,2)
(30,46,2)
(11,16,2)
(4,46,2)
(46,14,2)
(42,14,2)
(39,14,2)
(26,46,2)
(5,14,2)
(33,46,2)
(30,11,2)
(5,23,2)
(35,46,2)
(17,46,2)
(23,11,2)
(0,14,2)
(7,14,2)
(13,0,2)
(22,14,2)
(13,46,2)
(38,14,2)
(13,26,2)
(30,5,2)
(40,46,2)
(3,14,2)
(23,14,2)
(46,0,2)
(12,14,2)
(31,46,2)
(1,14,2)
(0,1,2)
(26,33,2)
(13,30,2)
-----------------------------------
(0,* environment = GETENV(ENV_VARIABLE)
(1,GETENV(ENV_VARIABLE)
(2,_P_WAIT)
(3,environment)
(4,environment)
(5,dataLen = strlen(data)
(6,NULL)
(7,ENV_VARIABLE)
(8,COMMAND_ARG2)
(9,COMMAND_ARG1)
(10,)
(11,data = dataBuffer)
(12,NULL)
(13,strncat(data+dataLen, environment, 100-dataLen-1)
(14,1)
(15,dataLen)
(16,dataBuffer[100] = COMMAND_ARG2)
(17,1)
(18,if (environment != NULL)
(19,)
(20,while(1)
(21,COMMAND_INT_PATH)
(22,data)
(23,strlen(data)
(24,)
(25,RET)
(26,100-dataLen-1)
(27,dataBuffer)
(28,dataBuffer)
(29,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(30,data+dataLen)
(31,dataLen)
(32,data)
(33,dataLen-1)
(34,data)
(35,dataLen)
(36,COMMAND_INT_PATH)
(37,COMMAND_ARG3)
(38,dataLen)
(39,break;)
(40,100)
(41,data)
(42,environment)
(43,environment)
(44,dataBuffer)
(45,)
(46,environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
