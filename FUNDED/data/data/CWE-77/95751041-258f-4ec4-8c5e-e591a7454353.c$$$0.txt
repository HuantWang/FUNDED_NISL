-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_12_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
90,92
90,93
91,92
92,93
92,94
93,94
95,96
95,97
98,99
99,100
99,101
100,101
102,103
102,104
102,105
103,104
105,106
108,109
108,110
109,110
109,111
110,111
112,113
114,115
115,116
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,96,97,101,104,106,107,111,113,118,120
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
99,100
99,101
109,110
109,111
-----guardedBy-----
61,75
111,120
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_12_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_12_bad()
CWE78_OS_Command_Injection__char_environment_popen_12_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(13,12,0)
(31,38,0)
(23,18,0)
(20,15,0)
(1,23,0)
(47,35,0)
(33,18,0)
(11,37,0)
(23,10,0)
(0,43,0)
(32,39,0)
(3,26,0)
(13,37,0)
(29,15,0)
(12,47,0)
(10,15,0)
(14,46,0)
(44,18,0)
(38,15,0)
(10,50,0)
(16,19,0)
(36,56,0)
(42,38,0)
(4,5,0)
(54,13,0)
(25,20,0)
(56,12,0)
(48,47,0)
(7,23,0)
(43,39,0)
(37,13,0)
(12,56,0)
(27,16,0)
(26,19,0)
(15,20,0)
(26,18,0)
(19,43,0)
(41,43,0)
(19,26,0)
(18,53,0)
(21,5,0)
(5,18,0)
(23,12,0)
(24,26,0)
(5,49,0)
(28,14,0)
(18,39,0)
(51,13,0)
(6,10,0)
(34,47,0)
(56,18,0)
(17,39,0)
(9,53,0)
(8,12,0)
(15,47,0)
(14,19,0)
(10,37,0)
(10,23,0)
(40,47,0)
(53,39,0)
(52,16,0)
(45,39,0)
(37,10,0)
(2,19,0)
(30,53,0)
(20,25,1)
(38,42,1)
(23,1,1)
(12,56,1)
(25,29,1)
(33,53,1)
(10,15,1)
(16,19,1)
(53,9,1)
(13,12,1)
(36,8,1)
(5,18,1)
(37,13,1)
(14,19,1)
(24,3,1)
(2,38,1)
(15,20,1)
(2,5,1)
(42,31,1)
(44,33,1)
(31,15,1)
(6,23,1)
(21,4,1)
(55,14,1)
(10,37,1)
(5,21,1)
(18,53,1)
(29,12,1)
(1,7,1)
(54,11,1)
(23,12,1)
(2,10,1)
(23,18,1)
(56,18,1)
(26,24,1)
(22,18,1)
(52,27,1)
(27,19,1)
(13,51,1)
(16,52,1)
(7,38,1)
(3,2,1)
(51,54,1)
(10,23,1)
(8,22,1)
(56,36,1)
(14,28,1)
(55,16,1)
(26,18,1)
(11,6,1)
(9,30,1)
(19,26,1)
(38,15,1)
(28,16,1)
(4,22,1)
(18,44,1)
(8,22,2)
(5,22,2)
(25,22,2)
(15,22,2)
(10,15,2)
(4,22,2)
(6,38,2)
(10,38,2)
(20,22,2)
(28,16,2)
(26,18,2)
(56,22,2)
(14,19,2)
(11,38,2)
(23,18,2)
(18,53,2)
(42,22,2)
(13,38,2)
(7,38,2)
(23,38,2)
(38,15,2)
(29,22,2)
(12,56,2)
(19,26,2)
(10,23,2)
(5,18,2)
(37,38,2)
(15,20,2)
(16,19,2)
(14,16,2)
(56,18,2)
(36,22,2)
(38,22,2)
(21,22,2)
(54,38,2)
(13,12,2)
(37,13,2)
(12,22,2)
(31,22,2)
(23,12,2)
(51,38,2)
(10,37,2)
(1,38,2)
-----------------------------------
(0,pipe)
(1,dataLen)
(2,pipe)
(3,data)
(4,data)
(5,strcat(data, "*.*")
(6,environment)
(7,data)
(8,dataLen)
(9,FULL_COMMAND)
(10,strncat(data+dataLen, environment, 100-dataLen-1)
(11,100)
(12,dataLen = strlen(data)
(13,dataLen-1)
(14,PCLOSE(pipe)
(15,* environment = GETENV(ENV_VARIABLE)
(16,pipe != NULL)
(17,data)
(18,data = data_buf)
(19,pipe = POPEN(data, "w")
(20,GETENV(ENV_VARIABLE)
(21,"*.*")
(22,globalReturnsTrueOrFalse()
(23,data+dataLen)
(24,"w")
(25,ENV_VARIABLE)
(26,POPEN(data, "w")
(27,pipe)
(28,pipe)
(29,environment)
(30,data_buf)
(31,environment)
(32,if(globalReturnsTrueOrFalse()
(33,data)
(34,if (environment != NULL)
(35,)
(36,data)
(37,100-dataLen-1)
(38,environment != NULL)
(39,)
(40,environment)
(41,if (pipe != NULL)
(42,NULL)
(43,)
(44,data_buf)
(45,data_buf)
(46,)
(47,)
(48,dataLen)
(49,)
(50,)
(51,1)
(52,NULL)
(53,data_buf[100] = FULL_COMMAND)
(54,dataLen)
(55,RET)
(56,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
