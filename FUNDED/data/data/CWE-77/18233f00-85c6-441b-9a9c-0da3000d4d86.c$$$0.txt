-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_08_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,95,99,100
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
83,84
83,85
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_08_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_08_bad()
CWE78_OS_Command_Injection__char_environment_system_08_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(20,19,0)
(7,10,0)
(36,10,0)
(38,12,0)
(29,12,0)
(29,20,0)
(16,26,0)
(45,15,0)
(33,12,0)
(23,29,0)
(2,0,0)
(26,42,0)
(25,21,0)
(30,34,0)
(4,26,0)
(42,21,0)
(27,26,0)
(20,45,0)
(26,21,0)
(29,23,0)
(46,0,0)
(13,38,0)
(12,29,0)
(23,26,0)
(14,17,0)
(9,19,0)
(37,21,0)
(40,8,0)
(39,2,0)
(31,42,0)
(8,27,0)
(0,2,0)
(29,1,0)
(3,45,0)
(5,45,0)
(10,20,0)
(28,45,0)
(11,29,0)
(12,38,0)
(32,21,0)
(0,26,0)
(34,17,0)
(8,45,0)
(27,8,0)
(35,27,0)
(38,8,0)
(19,20,0)
(41,14,0)
(24,23,0)
(48,23,0)
(44,38,0)
(23,8,0)
(22,21,0)
(18,20,0)
(6,42,0)
(12,38,1)
(13,44,1)
(29,12,1)
(34,30,1)
(40,43,1)
(24,48,1)
(2,39,1)
(29,23,1)
(26,4,1)
(2,0,1)
(11,23,1)
(29,20,1)
(38,8,1)
(0,46,1)
(33,11,1)
(0,26,1)
(23,8,1)
(23,26,1)
(16,42,1)
(30,2,1)
(38,13,1)
(6,31,1)
(39,0,1)
(47,14,1)
(43,26,1)
(46,43,1)
(27,35,1)
(4,16,1)
(35,40,1)
(41,34,1)
(48,10,1)
(47,2,1)
(9,18,1)
(36,20,1)
(46,10,1)
(7,36,1)
(14,41,1)
(23,24,1)
(10,20,1)
(19,9,1)
(8,27,1)
(20,19,1)
(46,29,1)
(27,26,1)
(44,33,1)
(10,7,1)
(42,6,1)
(18,8,1)
(26,42,1)
(10,43,2)
(2,0,2)
(12,38,2)
(44,10,2)
(18,43,2)
(20,19,2)
(10,20,2)
(12,10,2)
(23,8,2)
(40,43,2)
(23,26,2)
(20,43,2)
(33,10,2)
(8,27,2)
(23,10,2)
(13,10,2)
(29,23,2)
(29,10,2)
(26,42,2)
(38,10,2)
(7,43,2)
(29,20,2)
(11,10,2)
(35,43,2)
(38,8,2)
(41,2,2)
(36,43,2)
(0,26,2)
(29,12,2)
(9,43,2)
(14,2,2)
(27,26,2)
(30,2,2)
(48,10,2)
(27,43,2)
(34,2,2)
(8,43,2)
(19,43,2)
(24,10,2)
-----------------------------------
(0,SYSTEM(data)
(1,)
(2,SYSTEM(data)
(3,dataLen)
(4,data_buf)
(5,environment)
(6,FULL_COMMAND)
(7,NULL)
(8,dataLen = strlen(data)
(9,ENV_VARIABLE)
(10,environment != NULL)
(11,environment)
(12,100-dataLen-1)
(13,1)
(14,exit(1)
(15,)
(16,data)
(17,)
(18,environment)
(19,GETENV(ENV_VARIABLE)
(20,* environment = GETENV(ENV_VARIABLE)
(21,)
(22,data_buf)
(23,data+dataLen)
(24,dataLen)
(25,if (SYSTEM(data)
(26,data = data_buf)
(27,strlen(data)
(28,if (environment != NULL)
(29,strncat(data+dataLen, environment, 100-dataLen-1)
(30,"command execution failed!")
(31,data_buf)
(32,data)
(33,100)
(34,printLine("command execution failed!")
(35,data)
(36,environment)
(37,if(staticReturnsTrue()
(38,dataLen-1)
(39,0)
(40,dataLen)
(41,1)
(42,data_buf[100] = FULL_COMMAND)
(43,staticReturnsTrue()
(44,dataLen)
(45,)
(46,data)
(47,RET)
(48,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
