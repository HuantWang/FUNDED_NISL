-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
28,29
28,30
28,31
31,32
32,33
32,34
33,34
35,36
37,38
37,39
38,39
38,40
39,40
41,42
43,44
44,45
45,46
45,47
45,48
45,49
46,47
48,49
48,50
49,50
51,52
53,54
55,56
55,57
56,57
56,58
58,59
61,62
62,63
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,27,29,30,34,36,40,42,47,50,52,54,57,59,60,63
-----computeFrom-----
38,39
38,40
48,49
48,50
55,56
55,57
56,57
56,58
-----guardedBy-----
40,54
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    return data;}
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
return data;
data
data
-----joern-----
(12,3,0)
(14,25,0)
(1,6,0)
(19,27,0)
(25,28,0)
(28,23,0)
(3,12,0)
(21,30,0)
(27,2,0)
(15,16,0)
(29,28,0)
(27,17,0)
(23,17,0)
(20,1,0)
(0,16,0)
(24,23,0)
(28,25,0)
(9,27,0)
(11,15,0)
(26,12,0)
(30,12,0)
(16,15,0)
(16,28,0)
(15,1,0)
(25,2,0)
(18,20,0)
(20,2,0)
(1,20,0)
(22,23,0)
(7,16,0)
(12,23,0)
(20,28,0)
(5,30,0)
(13,1,0)
(4,23,0)
(8,20,0)
(1,12,0)
(1,15,0)
(10,3,0)
(19,1,1)
(8,30,1)
(11,13,1)
(20,2,1)
(1,20,1)
(10,26,1)
(16,0,1)
(30,12,1)
(13,20,1)
(25,14,1)
(20,18,1)
(28,25,1)
(7,11,1)
(27,2,1)
(30,5,1)
(3,10,1)
(9,27,1)
(26,28,1)
(20,28,1)
(1,12,1)
(16,28,1)
(18,8,1)
(0,7,1)
(5,21,1)
(1,15,1)
(21,12,1)
(19,30,1)
(15,16,1)
(14,29,1)
(27,19,1)
(25,2,1)
(12,3,1)
(30,12,2)
(15,16,2)
(12,3,2)
(13,30,2)
(9,27,2)
(0,30,2)
(15,30,2)
(20,30,2)
(1,20,2)
(28,25,2)
(7,30,2)
(20,2,2)
(25,2,2)
(27,2,2)
(16,28,2)
(16,30,2)
(1,12,2)
(8,30,2)
(18,30,2)
(20,28,2)
(1,15,2)
(11,30,2)
(1,30,2)
-----------------------------------
(0,1)
(1,wcsncat(data+dataLen, environment, 100-dataLen-1)
(2,wchar_t * data)
(3,GETENV(ENV_VARIABLE)
(4,if (environment != NULL)
(5,NULL)
(6,)
(7,dataLen)
(8,data)
(9,RET)
(10,ENV_VARIABLE)
(11,100)
(12,* environment = GETENV(ENV_VARIABLE)
(13,environment)
(14,data)
(15,100-dataLen-1)
(16,dataLen-1)
(17,)
(18,dataLen)
(19,data)
(20,data+dataLen)
(21,environment)
(22,dataLen)
(23,)
(24,environment)
(25,wcslen(data)
(26,environment)
(27,return data;)
(28,dataLen = wcslen(data)
(29,dataLen)
(30,environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
