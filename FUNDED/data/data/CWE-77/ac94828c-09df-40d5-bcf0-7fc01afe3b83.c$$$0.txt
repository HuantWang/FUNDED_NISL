-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_bad()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType myUnion;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wexecvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            EXECVP(COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
104,105
105,106
105,107
107,108
107,109
107,110
107,111
111,112
112,113
112,114
112,115
112,116
113,114
115,116
117,118
119,120
121,122
122,123
122,124
122,125
123,124
125,126
127,128
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,109,110,114,116,118,120,124,126,128
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_bad(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wexecvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            EXECVP(COMMAND_INT, args);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_bad
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wexecvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            EXECVP(COMMAND_INT, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType
CWE78_OS_Command_Injection__wchar_t_environment_w32_execvp_34_unionType
myUnion
myUnion
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wexecvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            EXECVP(COMMAND_INT, args);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wexecvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            EXECVP(COMMAND_INT, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(50,18,0)
(28,30,0)
(22,37,0)
(10,20,0)
(44,41,0)
(39,51,0)
(41,0,0)
(43,42,0)
(15,18,0)
(18,30,0)
(54,30,0)
(51,26,0)
(1,22,0)
(26,43,0)
(37,22,0)
(8,0,0)
(7,38,0)
(46,23,0)
(13,42,0)
(12,30,0)
(42,28,0)
(23,43,0)
(17,5,0)
(51,24,0)
(52,8,0)
(42,43,0)
(0,8,0)
(51,20,0)
(33,5,0)
(29,43,0)
(23,20,0)
(47,40,0)
(53,18,0)
(26,28,0)
(4,40,0)
(49,28,0)
(34,38,0)
(51,0,0)
(25,48,0)
(26,51,0)
(16,41,0)
(3,30,0)
(48,28,0)
(32,37,0)
(40,5,0)
(6,3,0)
(0,18,0)
(20,51,0)
(27,26,0)
(9,30,0)
(19,33,0)
(28,3,0)
(2,3,0)
(48,30,0)
(40,33,0)
(37,12,0)
(45,12,0)
(20,23,0)
(36,0,0)
(31,22,0)
(35,30,0)
(43,18,0)
(55,23,0)
(14,28,0)
(11,26,0)
(38,48,0)
(5,12,0)
(22,1,1)
(37,22,1)
(0,8,1)
(47,4,1)
(26,43,1)
(55,46,1)
(42,28,1)
(23,43,1)
(31,32,1)
(28,49,1)
(23,55,1)
(3,2,1)
(48,28,1)
(26,27,1)
(32,48,1)
(19,37,1)
(51,20,1)
(46,10,1)
(43,42,1)
(40,33,1)
(41,44,1)
(52,36,1)
(2,6,1)
(34,41,1)
(10,39,1)
(29,28,1)
(1,31,1)
(40,47,1)
(28,3,1)
(49,14,1)
(27,11,1)
(14,3,1)
(7,34,1)
(20,23,1)
(25,38,1)
(11,41,1)
(48,25,1)
(51,0,1)
(44,16,1)
(34,51,1)
(8,52,1)
(39,26,1)
(38,7,1)
(16,0,1)
(21,40,1)
(42,13,1)
(13,29,1)
(33,19,1)
(4,33,1)
(26,28,1)
(41,0,1)
(36,43,1)
(51,26,1)
(51,41,2)
(37,22,2)
(27,41,2)
(51,26,2)
(39,41,2)
(20,23,2)
(10,41,2)
(51,0,2)
(48,28,2)
(26,41,2)
(0,8,2)
(11,41,2)
(26,43,2)
(26,28,2)
(55,41,2)
(20,41,2)
(51,20,2)
(40,33,2)
(23,41,2)
(46,41,2)
(42,28,2)
(28,3,2)
(43,42,2)
(23,43,2)
(41,0,2)
-----------------------------------
(0,* environment = GETENV(ENV_VARIABLE)
(1,unionSecond)
(2,COMMAND_ARG2)
(3,dataBuffer[100] = COMMAND_ARG2)
(4,COMMAND_INT)
(5,)
(6,dataBuffer)
(7,unionFirst)
(8,GETENV(ENV_VARIABLE)
(9,myUnion)
(10,100)
(11,data)
(12,)
(13,data)
(14,data)
(15,if (environment != NULL)
(16,environment)
(17,args)
(18,)
(19,args)
(20,100-dataLen-1)
(21,RET)
(22,myUnion.unionSecond)
(23,dataLen-1)
(24,)
(25,data)
(26,data+dataLen)
(27,dataLen)
(28,data = dataBuffer)
(29,dataLen)
(30,)
(31,myUnion)
(32,data)
(33,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(34,myUnion)
(35,dataBuffer)
(36,environment)
(37,* data = myUnion.unionSecond)
(38,myUnion.unionFirst)
(39,environment)
(40,EXECVP(COMMAND_INT, args)
(41,environment != NULL)
(42,wcslen(data)
(43,dataLen = wcslen(data)
(44,NULL)
(45,data)
(46,dataLen)
(47,args)
(48,myUnion.unionFirst = data)
(49,dataBuffer)
(50,dataLen)
(51,wcsncat(data+dataLen, environment, 100-dataLen-1)
(52,ENV_VARIABLE)
(53,environment)
(54,data)
(55,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
