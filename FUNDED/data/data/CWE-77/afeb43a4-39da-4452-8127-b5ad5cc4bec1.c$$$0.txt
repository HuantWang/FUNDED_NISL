-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_34_bad()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType myUnion;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            FILE *pipe;
            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
            pipe = POPEN(data, L"w");
            if (pipe != NULL)
            {
                PCLOSE(pipe);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
103,105
103,106
104,105
105,106
105,107
106,107
108,109
108,110
111,112
112,113
112,114
113,114
115,116
115,117
115,118
116,117
118,119
121,122
121,123
122,123
122,124
123,124
125,126
127,128
128,129
129,130
129,131
130,131
132,133
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,107,109,110,114,117,119,120,124,126,131,133
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
112,113
112,114
122,123
122,124
-----guardedBy-----
62,76
124,133
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_34_bad(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_bad()
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_bad
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType
CWE78_OS_Command_Injection__wchar_t_environment_popen_34_unionType
myUnion
myUnion
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)            {                PCLOSE(pipe);            }
pipe != NULL
pipe
pipe
NULL
NULL
{                PCLOSE(pipe);            }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(28,3,0)
(43,4,0)
(15,40,0)
(45,25,0)
(19,38,0)
(17,12,0)
(21,35,0)
(25,23,0)
(38,3,0)
(10,46,0)
(25,37,0)
(8,36,0)
(11,9,0)
(40,38,0)
(0,40,0)
(49,19,0)
(23,19,0)
(18,36,0)
(34,31,0)
(44,38,0)
(50,38,0)
(33,12,0)
(31,24,0)
(47,3,0)
(5,3,0)
(15,12,0)
(35,23,0)
(14,51,0)
(19,29,0)
(52,29,0)
(28,12,0)
(23,27,0)
(7,23,0)
(56,41,0)
(1,56,0)
(24,3,0)
(51,3,0)
(20,28,0)
(23,35,0)
(18,24,0)
(12,51,0)
(23,25,0)
(2,18,0)
(37,25,0)
(42,3,0)
(9,28,0)
(48,24,0)
(30,46,0)
(37,40,0)
(12,3,0)
(35,12,0)
(22,31,0)
(53,37,0)
(13,38,0)
(55,36,0)
(36,18,0)
(54,35,0)
(57,9,0)
(16,4,0)
(32,37,0)
(35,40,0)
(40,15,0)
(6,15,0)
(29,19,0)
(39,51,0)
(4,19,0)
(29,52,1)
(4,19,1)
(36,8,1)
(55,2,1)
(6,0,1)
(26,56,1)
(57,4,1)
(49,40,1)
(4,16,1)
(37,53,1)
(28,20,1)
(54,21,1)
(28,12,1)
(20,9,1)
(7,35,1)
(25,37,1)
(53,32,1)
(16,43,1)
(57,23,1)
(12,51,1)
(15,6,1)
(21,4,1)
(35,40,1)
(37,40,1)
(8,55,1)
(23,19,1)
(30,10,1)
(35,12,1)
(40,15,1)
(52,49,1)
(1,46,1)
(9,11,1)
(23,25,1)
(2,28,1)
(46,30,1)
(45,7,1)
(26,46,1)
(33,17,1)
(23,35,1)
(17,51,1)
(0,12,1)
(56,1,1)
(39,14,1)
(12,33,1)
(35,54,1)
(10,18,1)
(43,19,1)
(11,57,1)
(19,29,1)
(51,39,1)
(15,12,1)
(18,36,1)
(32,45,1)
(35,12,2)
(1,46,2)
(19,29,2)
(35,40,2)
(37,40,2)
(56,46,2)
(53,4,2)
(18,36,2)
(37,4,2)
(4,19,2)
(23,19,2)
(15,12,2)
(23,25,2)
(12,51,2)
(23,4,2)
(7,4,2)
(21,4,2)
(25,37,2)
(45,4,2)
(32,4,2)
(25,4,2)
(54,4,2)
(28,12,2)
(35,4,2)
(40,15,2)
(23,35,2)
-----------------------------------
(0,dataLen)
(1,pipe)
(2,data)
(3,)
(4,environment != NULL)
(5,myUnion)
(6,data)
(7,environment)
(8,unionSecond)
(9,myUnion.unionFirst)
(10,pipe)
(11,unionFirst)
(12,data = data_buf)
(13,dataLen)
(14,data_buf)
(15,wcslen(data)
(16,NULL)
(17,data)
(18,* data = myUnion.unionSecond)
(19,* environment = GETENV(ENV_VARIABLE)
(20,data)
(21,data)
(22,if (pipe != NULL)
(23,wcsncat(data+dataLen, environment, 100-dataLen-1)
(24,)
(25,100-dataLen-1)
(26,RET)
(27,)
(28,myUnion.unionFirst = data)
(29,GETENV(ENV_VARIABLE)
(30,NULL)
(31,)
(32,dataLen)
(33,data_buf)
(34,pipe)
(35,data+dataLen)
(36,myUnion.unionSecond)
(37,dataLen-1)
(38,)
(39,FULL_COMMAND)
(40,dataLen = wcslen(data)
(41,)
(42,data)
(43,environment)
(44,environment)
(45,100)
(46,pipe != NULL)
(47,data_buf)
(48,data)
(49,environment)
(50,if (environment != NULL)
(51,data_buf[100] = FULL_COMMAND)
(52,ENV_VARIABLE)
(53,1)
(54,dataLen)
(55,myUnion)
(56,PCLOSE(pipe)
(57,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
