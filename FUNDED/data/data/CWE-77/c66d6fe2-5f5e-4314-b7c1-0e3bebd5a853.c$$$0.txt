-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    strcat(data, "*.*");
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
29,32
30,31
32,33
35,36
35,37
35,38
36,37
37,38
37,39
38,39
40,41
40,42
43,44
44,45
44,46
45,46
47,48
47,49
47,50
48,49
50,51
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
62,63
64,65
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,33,34,39,41,42,46,49,51,52,56,58,63,65
-----computeFrom-----
23,24
23,25
44,45
44,46
54,55
54,56
-----guardedBy-----
56,65
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
static void
goodG2B()
goodG2B
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(18,6,0)
(21,26,0)
(9,6,0)
(22,18,0)
(3,1,0)
(5,2,0)
(5,1,0)
(6,18,0)
(23,12,0)
(26,6,0)
(19,2,0)
(15,16,0)
(24,1,0)
(2,3,0)
(11,2,0)
(14,1,0)
(2,1,0)
(16,1,0)
(0,5,0)
(13,3,0)
(6,16,0)
(18,2,0)
(10,16,0)
(12,17,0)
(12,6,0)
(8,18,0)
(20,5,0)
(4,3,0)
(25,26,0)
(18,2,1)
(5,0,1)
(26,25,1)
(0,20,1)
(5,2,1)
(11,3,1)
(18,22,1)
(22,8,1)
(7,12,1)
(2,19,1)
(25,21,1)
(23,26,1)
(2,3,1)
(4,13,1)
(26,6,1)
(21,6,1)
(3,4,1)
(8,9,1)
(20,2,1)
(12,6,1)
(12,23,1)
(19,11,1)
(6,18,1)
(7,26,1)
(9,5,1)
(5,2,2)
(26,6,2)
(2,3,2)
(6,18,2)
(12,6,2)
(12,26,2)
(18,2,2)
(23,26,2)
-----------------------------------
(0,"*.*")
(1,)
(2,data = data_buf)
(3,data_buf[100] = FULL_COMMAND)
(4,FULL_COMMAND)
(5,strcat(data, "*.*")
(6,pipe = POPEN(data, "w")
(7,RET)
(8,data)
(9,pipe)
(10,pipe)
(11,data)
(12,PCLOSE(pipe)
(13,data_buf)
(14,data_buf)
(15,if (pipe != NULL)
(16,)
(17,)
(18,POPEN(data, "w")
(19,data_buf)
(20,data)
(21,pipe)
(22,"w")
(23,pipe)
(24,data)
(25,NULL)
(26,pipe != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
