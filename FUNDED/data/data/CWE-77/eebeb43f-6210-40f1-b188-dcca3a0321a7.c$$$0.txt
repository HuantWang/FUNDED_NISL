-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_06_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* wspawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
84,87
84,88
84,89
84,90
84,91
85,86
87,88
89,90
91,92
93,94
95,96
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,90,92,94,96,98
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_06_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wspawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_06_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_06_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wspawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnlp
_wspawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(19,29,0)
(39,27,0)
(47,6,0)
(44,18,0)
(42,18,0)
(41,14,0)
(43,21,0)
(40,14,0)
(15,13,0)
(33,4,0)
(18,22,0)
(20,22,0)
(1,22,0)
(26,2,0)
(3,40,0)
(37,28,0)
(12,1,0)
(7,22,0)
(30,18,0)
(27,6,0)
(13,4,0)
(28,4,0)
(17,8,0)
(38,40,0)
(16,8,0)
(10,22,0)
(25,1,0)
(0,14,0)
(4,14,0)
(9,28,0)
(3,6,0)
(3,28,0)
(34,2,0)
(24,14,0)
(45,21,0)
(40,29,0)
(14,5,0)
(31,18,0)
(3,36,0)
(28,8,0)
(6,3,0)
(46,18,0)
(8,22,0)
(4,13,0)
(6,27,0)
(32,27,0)
(8,1,0)
(27,4,0)
(29,40,0)
(21,40,0)
(28,3,0)
(13,8,0)
(23,18,0)
(11,3,0)
(30,2,1)
(46,23,1)
(45,40,1)
(31,42,1)
(38,4,1)
(35,18,1)
(2,26,1)
(27,4,1)
(8,17,1)
(15,33,1)
(1,12,1)
(33,2,1)
(16,1,1)
(28,9,1)
(32,39,1)
(40,29,1)
(23,30,1)
(39,47,1)
(13,8,1)
(19,38,1)
(3,6,1)
(11,28,1)
(21,40,1)
(27,32,1)
(8,1,1)
(37,21,1)
(44,46,1)
(47,11,1)
(13,15,1)
(30,3,1)
(9,37,1)
(29,19,1)
(26,34,1)
(4,13,1)
(3,28,1)
(34,8,1)
(28,4,1)
(12,25,1)
(30,21,1)
(21,43,1)
(6,27,1)
(42,44,1)
(18,31,1)
(17,16,1)
(28,8,1)
(43,45,1)
(3,40,1)
(28,8,2)
(29,2,2)
(8,1,2)
(38,2,2)
(21,40,2)
(4,13,2)
(3,6,2)
(21,2,2)
(13,2,2)
(37,21,2)
(27,21,2)
(43,2,2)
(6,21,2)
(3,40,2)
(19,2,2)
(32,21,2)
(33,2,2)
(28,21,2)
(6,27,2)
(28,4,2)
(3,21,2)
(15,2,2)
(9,21,2)
(40,2,2)
(47,21,2)
(13,8,2)
(40,29,2)
(4,2,2)
(27,4,2)
(11,21,2)
(45,2,2)
(39,21,2)
(3,28,2)
-----------------------------------
(0,if (environment != NULL)
(1,dataBuffer[100] = COMMAND_ARG2)
(2,STATIC_CONST_FIVE==5)
(3,wcsncat(data+dataLen, environment, 100-dataLen-1)
(4,dataLen = wcslen(data)
(5,)
(6,100-dataLen-1)
(7,data)
(8,data = dataBuffer)
(9,dataLen)
(10,if(STATIC_CONST_FIVE==5)
(11,environment)
(12,COMMAND_ARG2)
(13,wcslen(data)
(14,)
(15,data)
(16,data)
(17,dataBuffer)
(18,_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(19,ENV_VARIABLE)
(20,dataBuffer)
(21,environment != NULL)
(22,)
(23,COMMAND_INT)
(24,dataLen)
(25,dataBuffer)
(26,5)
(27,dataLen-1)
(28,data+dataLen)
(29,GETENV(ENV_VARIABLE)
(30,_P_WAIT)
(31,NULL)
(32,1)
(33,dataLen)
(34,STATIC_CONST_FIVE)
(35,RET)
(36,)
(37,data)
(38,environment)
(39,dataLen)
(40,* environment = GETENV(ENV_VARIABLE)
(41,environment)
(42,COMMAND_ARG3)
(43,NULL)
(44,COMMAND_ARG1)
(45,environment)
(46,COMMAND_INT)
(47,100)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
