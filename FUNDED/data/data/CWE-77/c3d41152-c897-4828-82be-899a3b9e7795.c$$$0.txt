-----label-----
0
-----code-----
static void goodG2B1()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B1Static = 0; /* false */
    data = goodG2B1Source(data);
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wspawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
46,49
46,50
50,51
51,52
51,53
51,54
51,55
52,53
54,55
56,57
58,59
60,61
61,62
61,63
61,64
61,65
62,63
64,65
66,67
68,69
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,48,49,53,55,57,59,63,65,67,69
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
static void
goodG2B1()
goodG2B1
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B1Static = 0;
goodG2B1Static = 0
goodG2B1Static
goodG2B1Static
0
data = goodG2B1Source(data);
data = goodG2B1Source(data)
data
data
goodG2B1Source(data)
goodG2B1Source
goodG2B1Source
data
data
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(1,14,0)
(18,12,0)
(24,11,0)
(6,18,0)
(14,12,0)
(4,12,0)
(21,12,0)
(23,12,0)
(2,21,0)
(0,7,0)
(5,15,0)
(22,18,0)
(13,12,0)
(19,13,0)
(8,13,0)
(16,11,0)
(3,17,0)
(10,7,0)
(11,18,0)
(11,12,0)
(15,11,0)
(17,14,0)
(9,7,0)
(15,21,0)
(7,17,0)
(21,15,0)
(7,14,0)
(13,8,1)
(24,18,1)
(5,2,1)
(6,22,1)
(21,15,1)
(11,16,1)
(16,24,1)
(7,17,1)
(17,3,1)
(9,10,1)
(11,18,1)
(19,11,1)
(2,13,1)
(20,7,1)
(18,6,1)
(0,17,1)
(3,21,1)
(15,5,1)
(7,9,1)
(10,0,1)
(8,19,1)
(15,11,1)
(15,11,2)
(11,18,2)
(21,15,2)
(7,17,2)
-----------------------------------
(0,_P_WAIT)
(1,args)
(2,data)
(3,args)
(4,data)
(5,data)
(6,COMMAND_ARG2)
(7,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(8,0)
(9,args)
(10,COMMAND_INT_PATH)
(11,data = dataBuffer)
(12,)
(13,goodG2B1Static = 0)
(14,)
(15,goodG2B1Source(data)
(16,dataBuffer)
(17,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(18,dataBuffer[100] = COMMAND_ARG2)
(19,goodG2B1Static)
(20,RET)
(21,data = goodG2B1Source(data)
(22,dataBuffer)
(23,dataBuffer)
(24,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
