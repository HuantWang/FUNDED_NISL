-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
97,98
97,99
97,100
97,101
97,102
97,103
97,104
98,99
100,101
102,103
104,105
106,107
108,109
110,111
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,103,105,107,109,111
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_17_bad(){    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_17_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_17_bad
{    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(28,34,0)
(31,16,0)
(38,2,0)
(15,16,0)
(8,24,0)
(49,44,0)
(21,29,0)
(36,9,0)
(10,21,0)
(32,40,0)
(27,43,0)
(34,47,0)
(41,29,0)
(53,24,0)
(52,4,0)
(21,47,0)
(19,16,0)
(29,4,0)
(46,45,0)
(29,41,0)
(50,45,0)
(2,51,0)
(40,4,0)
(35,21,0)
(43,34,0)
(43,29,0)
(24,51,0)
(13,51,0)
(17,45,0)
(20,4,0)
(30,32,0)
(34,43,0)
(16,45,0)
(7,47,0)
(4,26,0)
(0,16,0)
(37,32,0)
(41,44,0)
(44,45,0)
(1,16,0)
(47,22,0)
(48,40,0)
(5,45,0)
(9,45,0)
(18,43,0)
(11,16,0)
(3,4,0)
(21,44,0)
(40,48,0)
(6,40,0)
(23,29,0)
(33,51,0)
(47,40,0)
(25,41,0)
(47,21,0)
(12,9,0)
(44,9,0)
(14,44,0)
(47,34,0)
(39,48,0)
(16,0,1)
(49,14,1)
(1,31,1)
(32,37,1)
(19,1,1)
(47,34,1)
(23,24,1)
(29,41,1)
(41,44,1)
(44,9,1)
(32,40,1)
(35,10,1)
(9,36,1)
(37,30,1)
(21,35,1)
(34,43,1)
(40,48,1)
(47,40,1)
(24,51,1)
(27,18,1)
(15,11,1)
(8,53,1)
(38,47,1)
(2,38,1)
(6,29,1)
(14,9,1)
(7,21,1)
(11,24,1)
(53,2,1)
(10,32,1)
(36,12,1)
(24,8,1)
(38,32,1)
(51,13,1)
(13,33,1)
(42,16,1)
(31,15,1)
(53,51,1)
(21,44,1)
(48,39,1)
(44,49,1)
(43,27,1)
(0,19,1)
(30,40,1)
(39,6,1)
(33,44,1)
(41,25,1)
(2,51,1)
(21,29,1)
(18,28,1)
(43,29,1)
(25,23,1)
(47,21,1)
(28,7,1)
(47,34,2)
(40,48,2)
(38,24,2)
(23,24,2)
(21,44,2)
(6,24,2)
(44,9,2)
(21,29,2)
(24,24,2)
(2,24,2)
(48,24,2)
(29,41,2)
(10,32,2)
(2,51,2)
(29,24,2)
(41,24,2)
(41,44,2)
(35,32,2)
(34,32,2)
(7,32,2)
(30,24,2)
(8,24,2)
(37,24,2)
(53,24,2)
(47,32,2)
(40,24,2)
(47,21,2)
(47,40,2)
(27,32,2)
(32,24,2)
(39,24,2)
(34,43,2)
(43,29,2)
(28,32,2)
(18,32,2)
(25,24,2)
(43,32,2)
(32,40,2)
(21,32,2)
(24,51,2)
-----------------------------------
(0,NULL)
(1,COMMAND_ARG1)
(2,i++)
(3,if (environment != NULL)
(4,)
(5,data)
(6,environment)
(7,environment)
(8,1)
(9,dataBuffer[100] = COMMAND_ARG2)
(10,data)
(11,_P_WAIT)
(12,dataBuffer)
(13,0)
(14,data)
(15,COMMAND_INT_PATH)
(16,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(17,dataBuffer)
(18,dataLen)
(19,COMMAND_ARG3)
(20,dataLen)
(21,data+dataLen)
(22,)
(23,dataLen)
(24,i < 1)
(25,data)
(26,)
(27,1)
(28,100)
(29,dataLen = strlen(data)
(30,environment)
(31,COMMAND_INT_PATH)
(32,environment != NULL)
(33,i)
(34,100-dataLen-1)
(35,dataLen)
(36,COMMAND_ARG2)
(37,NULL)
(38,i)
(39,ENV_VARIABLE)
(40,* environment = GETENV(ENV_VARIABLE)
(41,strlen(data)
(42,RET)
(43,dataLen-1)
(44,data = dataBuffer)
(45,)
(46,i)
(47,strncat(data+dataLen, environment, 100-dataLen-1)
(48,GETENV(ENV_VARIABLE)
(49,dataBuffer)
(50,for(i = 0; i < 1; i++)
(51,i = 0)
(52,environment)
(53,i)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
