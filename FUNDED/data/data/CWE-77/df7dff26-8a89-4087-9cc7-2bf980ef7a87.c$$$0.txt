-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
        break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
34,35
34,36
34,37
35,36
37,38
42,43
43,44
43,45
44,45
48,49
48,50
48,51
49,50
50,51
50,52
51,52
53,54
53,55
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
73,74
74,75
74,76
75,76
77,78
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,36,38,39,40,41,45,46,47,52,54,55,59,62,64,65,69,71,76,78
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
-----guardedBy-----
69,78
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
static void
goodG2B2()
goodG2B2
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(23,15,0)
(22,17,0)
(4,8,0)
(18,15,0)
(22,14,0)
(14,8,0)
(5,18,0)
(20,14,0)
(1,16,0)
(27,3,0)
(31,8,0)
(3,18,0)
(16,22,0)
(13,28,0)
(6,28,0)
(29,22,0)
(11,14,0)
(33,28,0)
(25,17,0)
(30,18,0)
(21,29,0)
(35,17,0)
(18,8,0)
(34,28,0)
(17,18,0)
(26,3,0)
(2,28,0)
(0,33,0)
(29,32,0)
(9,22,0)
(12,15,0)
(3,28,0)
(19,16,0)
(10,8,0)
(15,8,0)
(17,22,0)
(22,17,1)
(34,33,1)
(18,15,1)
(3,26,1)
(1,22,1)
(18,30,1)
(9,34,1)
(29,21,1)
(24,16,1)
(33,0,1)
(19,1,1)
(7,18,1)
(27,7,1)
(25,9,1)
(30,5,1)
(16,22,1)
(21,16,1)
(26,27,1)
(29,22,1)
(23,12,1)
(0,7,1)
(3,18,1)
(17,18,1)
(13,3,1)
(16,19,1)
(35,25,1)
(24,29,1)
(9,13,1)
(5,15,1)
(17,35,1)
(15,23,1)
(16,22,2)
(34,7,2)
(29,16,2)
(18,15,2)
(13,7,2)
(21,16,2)
(27,7,2)
(17,18,2)
(29,22,2)
(0,7,2)
(3,7,2)
(22,17,2)
(3,18,2)
(26,7,2)
(33,7,2)
-----------------------------------
(0,"Benign, fixed string")
(1,pipe)
(2,default:)
(3,strcat(data, "*.*")
(4,data_buf)
(5,data)
(6,case 6:)
(7,6)
(8,)
(9,pipe)
(10,data)
(11,pipe)
(12,data_buf)
(13,break;)
(14,)
(15,data_buf[100] = FULL_COMMAND)
(16,pipe != NULL)
(17,POPEN(data, "w")
(18,data = data_buf)
(19,NULL)
(20,if (pipe != NULL)
(21,pipe)
(22,pipe = POPEN(data, "w")
(23,FULL_COMMAND)
(24,RET)
(25,data)
(26,"*.*")
(27,data)
(28,)
(29,PCLOSE(pipe)
(30,data_buf)
(31,switch(6)
(32,)
(33,printLine("Benign, fixed string")
(34,break;)
(35,"w")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
