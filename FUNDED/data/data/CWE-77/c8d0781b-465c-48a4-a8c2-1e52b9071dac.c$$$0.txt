-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    /* FIX: Append a fixed string to data (not user / external input) */
    strcat(data, "*.*");
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        {
            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* spawnv - specify the path where the command is located */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
63,64
63,65
65,66
65,67
65,68
65,69
69,70
70,71
70,72
70,73
70,74
71,72
73,74
75,76
77,78
79,80
80,81
80,82
80,83
80,84
81,82
83,84
85,86
87,88
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,64,66,67,68,72,74,76,78,82,84,86,88
-----computeFrom-----
29,30
29,31
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
static void
goodG2B()
goodG2B
{    char * data;    CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType
CWE78_OS_Command_Injection__char_environment_w32_spawnv_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnv(_P_WAIT, COMMAND_INT_PATH, args);        }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(25,16,0)
(33,1,0)
(20,16,0)
(19,18,0)
(9,32,0)
(15,14,0)
(1,3,0)
(24,11,0)
(11,25,0)
(17,32,0)
(12,11,0)
(14,3,0)
(28,15,0)
(17,16,0)
(0,25,0)
(27,14,0)
(30,15,0)
(22,18,0)
(21,3,0)
(14,1,0)
(16,3,0)
(29,32,0)
(11,8,0)
(7,8,0)
(31,13,0)
(10,13,0)
(32,17,0)
(13,3,0)
(2,11,0)
(8,25,0)
(1,13,0)
(26,1,0)
(18,3,0)
(5,17,0)
(6,3,0)
(23,3,0)
(18,1,0)
(19,22,1)
(30,18,1)
(12,24,1)
(17,32,1)
(7,17,1)
(1,33,1)
(27,15,1)
(18,1,1)
(15,28,1)
(4,11,1)
(32,9,1)
(14,1,1)
(2,8,1)
(11,12,1)
(5,14,1)
(28,30,1)
(1,13,1)
(9,29,1)
(26,13,1)
(22,1,1)
(31,10,1)
(11,8,1)
(29,5,1)
(8,7,1)
(14,27,1)
(33,26,1)
(18,19,1)
(24,2,1)
(13,31,1)
(14,1,2)
(1,13,2)
(11,8,2)
(17,32,2)
(18,1,2)
-----------------------------------
(0,args)
(1,data = dataBuffer)
(2,_P_WAIT)
(3,)
(4,RET)
(5,data)
(6,myUnion)
(7,args)
(8,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(9,unionSecond)
(10,dataBuffer)
(11,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(12,args)
(13,dataBuffer[100] = COMMAND_ARG2)
(14,myUnion.unionFirst = data)
(15,myUnion.unionFirst)
(16,)
(17,* data = myUnion.unionSecond)
(18,strcat(data, "*.*")
(19,"*.*")
(20,data)
(21,dataBuffer)
(22,data)
(23,data)
(24,COMMAND_INT_PATH)
(25,)
(26,data)
(27,data)
(28,unionFirst)
(29,myUnion)
(30,myUnion)
(31,COMMAND_ARG2)
(32,myUnion.unionSecond)
(33,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
