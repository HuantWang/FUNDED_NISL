-----label-----
1
-----code-----
static void badSink(char * data)
{
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
10,11
11,12
12,13
12,14
12,15
12,16
12,17
12,18
13,14
15,16
17,18
19,20
21,22
23,24
-----nextToken-----
2,4,6,8,9,14,16,18,20,22,24
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void badSink(char * data){    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
badSink(char * data)
badSink
char * data
char
* data
*
data
{    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(5,6,0)
(4,6,0)
(6,2,0)
(1,6,0)
(7,6,0)
(0,6,0)
(7,1,1)
(1,5,1)
(6,7,1)
(3,6,1)
(5,4,1)
(4,0,1)
-----------------------------------
(0,COMMAND_INT_PATH)
(1,COMMAND_ARG3)
(2,)
(3,RET)
(4,COMMAND_INT_PATH)
(5,COMMAND_ARG1)
(6,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(7,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
