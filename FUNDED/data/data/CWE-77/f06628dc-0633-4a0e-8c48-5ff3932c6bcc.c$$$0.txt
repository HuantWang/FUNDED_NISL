-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType myUnion;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    wcscat(data, L"*.*");
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        {
            FILE *pipe;
            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
            pipe = POPEN(data, L"w");
            if (pipe != NULL)
            {
                PCLOSE(pipe);
            }
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
61,63
61,64
62,63
63,64
63,65
64,65
66,67
66,68
69,70
70,71
70,72
71,72
73,74
73,75
73,76
74,75
76,77
79,80
79,81
80,81
80,82
81,82
83,84
85,86
86,87
87,88
87,89
88,89
90,91
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,65,67,68,72,75,77,78,82,84,89,91
-----computeFrom-----
29,30
29,31
42,43
42,44
70,71
70,72
80,81
80,82
-----guardedBy-----
82,91
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
static void
goodG2B()
goodG2B
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType
CWE78_OS_Command_Injection__wchar_t_listen_socket_popen_34_unionType
myUnion
myUnion
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        {            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
{            FILE *pipe;            /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */            pipe = POPEN(data, L"w");            if (pipe != NULL)            {                PCLOSE(pipe);            }        }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)            {                PCLOSE(pipe);            }
pipe != NULL
pipe
pipe
NULL
NULL
{                PCLOSE(pipe);            }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(24,21,0)
(23,0,0)
(19,23,0)
(7,19,0)
(17,21,0)
(3,30,0)
(31,7,0)
(11,9,0)
(29,0,0)
(30,16,0)
(5,16,0)
(12,7,0)
(14,13,0)
(2,23,0)
(8,19,0)
(6,21,0)
(9,16,0)
(0,21,0)
(16,21,0)
(13,26,0)
(4,0,0)
(18,30,0)
(1,23,0)
(22,9,0)
(19,21,0)
(23,21,0)
(30,18,0)
(10,18,0)
(20,18,0)
(15,27,0)
(28,27,0)
(23,1,1)
(18,20,1)
(31,23,1)
(0,4,1)
(23,0,1)
(8,7,1)
(2,0,1)
(14,27,1)
(19,23,1)
(7,12,1)
(15,28,1)
(10,3,1)
(3,19,1)
(1,2,1)
(13,14,1)
(19,8,1)
(25,27,1)
(30,18,1)
(25,13,1)
(12,31,1)
(28,30,1)
(4,29,1)
(27,15,1)
(20,10,1)
(19,23,2)
(14,27,2)
(13,27,2)
(23,0,2)
(30,18,2)
-----------------------------------
(0,data_buf[100] = FULL_COMMAND)
(1,data_buf)
(2,data)
(3,data)
(4,FULL_COMMAND)
(5,data)
(6,data_buf)
(7,myUnion.unionFirst)
(8,data)
(9,)
(10,myUnion)
(11,if (pipe != NULL)
(12,unionFirst)
(13,PCLOSE(pipe)
(14,pipe)
(15,NULL)
(16,)
(17,myUnion)
(18,myUnion.unionSecond)
(19,myUnion.unionFirst = data)
(20,unionSecond)
(21,)
(22,pipe)
(23,data = data_buf)
(24,data)
(25,RET)
(26,)
(27,pipe != NULL)
(28,pipe)
(29,data_buf)
(30,* data = myUnion.unionSecond)
(31,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
