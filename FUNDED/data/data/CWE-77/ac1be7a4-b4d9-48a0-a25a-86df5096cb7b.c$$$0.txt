-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_16_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    /* wspawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_16_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* wspawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_16_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnlp_16_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    /* wspawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnlp
_wspawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(44,34,0)
(2,11,0)
(37,6,0)
(12,3,0)
(39,37,0)
(33,45,0)
(17,45,0)
(43,34,0)
(3,12,0)
(44,17,0)
(3,8,0)
(28,26,0)
(3,26,0)
(4,37,0)
(29,45,0)
(17,44,0)
(15,14,0)
(36,24,0)
(24,45,0)
(26,3,0)
(3,24,0)
(45,40,0)
(1,10,0)
(27,24,0)
(16,36,0)
(34,6,0)
(21,45,0)
(32,6,0)
(23,40,0)
(20,37,0)
(35,6,0)
(11,6,0)
(25,44,0)
(12,34,0)
(10,24,0)
(12,17,0)
(19,37,0)
(14,17,0)
(42,12,0)
(13,6,0)
(46,37,0)
(5,14,0)
(0,11,0)
(38,10,0)
(18,34,0)
(22,3,0)
(41,37,0)
(7,12,0)
(26,14,0)
(14,26,0)
(34,11,0)
(31,17,0)
(24,36,0)
(11,0,1)
(27,17,1)
(7,42,1)
(17,44,1)
(20,4,1)
(46,19,1)
(4,46,1)
(31,30,1)
(12,7,1)
(36,16,1)
(24,36,1)
(3,26,1)
(34,18,1)
(44,25,1)
(22,12,1)
(1,38,1)
(23,3,1)
(37,39,1)
(26,14,1)
(3,24,1)
(15,5,1)
(12,34,1)
(41,30,1)
(34,11,1)
(14,15,1)
(30,34,1)
(44,34,1)
(38,24,1)
(18,43,1)
(0,2,1)
(10,24,1)
(16,27,1)
(14,17,1)
(5,28,1)
(28,22,1)
(41,23,1)
(23,10,1)
(3,12,1)
(39,20,1)
(9,37,1)
(42,10,1)
(12,17,1)
(19,41,1)
(10,1,1)
(43,11,1)
(25,31,1)
(28,10,2)
(3,26,2)
(23,30,2)
(14,17,2)
(17,30,2)
(3,10,2)
(10,24,2)
(22,10,2)
(24,36,2)
(1,30,2)
(26,10,2)
(42,10,2)
(3,12,2)
(12,34,2)
(36,30,2)
(3,24,2)
(27,30,2)
(10,30,2)
(12,10,2)
(15,10,2)
(26,14,2)
(16,30,2)
(44,34,2)
(24,30,2)
(14,10,2)
(25,30,2)
(12,17,2)
(17,44,2)
(7,10,2)
(38,30,2)
(31,30,2)
(34,11,2)
(5,10,2)
(44,30,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,NULL)
(2,dataBuffer)
(3,wcsncat(data+dataLen, environment, 100-dataLen-1)
(4,COMMAND_ARG1)
(5,dataLen)
(6,)
(7,dataLen)
(8,)
(9,RET)
(10,environment != NULL)
(11,dataBuffer[100] = COMMAND_ARG2)
(12,data+dataLen)
(13,dataBuffer)
(14,dataLen-1)
(15,1)
(16,ENV_VARIABLE)
(17,dataLen = wcslen(data)
(18,dataBuffer)
(19,COMMAND_INT)
(20,COMMAND_ARG3)
(21,dataLen)
(22,environment)
(23,break;)
(24,* environment = GETENV(ENV_VARIABLE)
(25,data)
(26,100-dataLen-1)
(27,environment)
(28,100)
(29,environment)
(30,1)
(31,dataLen)
(32,data)
(33,if (environment != NULL)
(34,data = dataBuffer)
(35,while(1)
(36,GETENV(ENV_VARIABLE)
(37,_wspawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(38,environment)
(39,NULL)
(40,)
(41,_P_WAIT)
(42,data)
(43,data)
(44,wcslen(data)
(45,)
(46,COMMAND_INT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
