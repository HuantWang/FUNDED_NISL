-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_02_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
81,82
81,83
81,84
81,85
81,86
81,87
81,88
82,83
84,85
86,87
88,89
90,91
92,93
94,95
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,83,85,87,89,91,93,95
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_02_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_02_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_02_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(23,27,0)
(25,10,0)
(18,27,0)
(7,5,0)
(5,24,0)
(22,25,0)
(17,44,0)
(20,10,0)
(30,14,0)
(10,44,0)
(24,30,0)
(8,22,0)
(24,42,0)
(36,32,0)
(27,37,0)
(42,24,0)
(38,32,0)
(12,32,0)
(40,25,0)
(2,22,0)
(37,25,0)
(21,5,0)
(22,8,0)
(28,25,0)
(32,44,0)
(6,44,0)
(16,32,0)
(8,30,0)
(27,18,0)
(27,24,0)
(27,26,0)
(39,32,0)
(0,30,0)
(15,30,0)
(4,18,0)
(3,8,0)
(29,30,0)
(9,10,0)
(18,4,0)
(37,27,0)
(37,8,0)
(31,42,0)
(43,37,0)
(34,18,0)
(35,24,0)
(4,8,0)
(1,4,0)
(13,4,0)
(11,32,0)
(33,37,0)
(41,44,0)
(25,44,0)
(11,12,1)
(42,31,1)
(27,18,1)
(24,42,1)
(16,38,1)
(35,8,1)
(5,7,1)
(8,22,1)
(37,8,1)
(1,13,1)
(22,2,1)
(10,9,1)
(38,5,1)
(43,5,1)
(27,37,1)
(2,3,1)
(23,37,1)
(38,27,1)
(38,19,1)
(45,32,1)
(27,24,1)
(12,36,1)
(28,10,1)
(37,33,1)
(39,16,1)
(36,39,1)
(7,21,1)
(31,35,1)
(40,28,1)
(4,8,1)
(9,20,1)
(19,25,1)
(22,25,1)
(4,1,1)
(18,4,1)
(33,43,1)
(25,40,1)
(25,10,1)
(5,24,1)
(21,24,1)
(13,34,1)
(3,19,1)
(34,23,1)
(37,25,1)
(32,11,1)
(25,10,2)
(3,19,2)
(43,5,2)
(22,25,2)
(23,5,2)
(18,5,2)
(8,19,2)
(1,5,2)
(42,19,2)
(27,37,2)
(21,19,2)
(22,19,2)
(27,24,2)
(24,19,2)
(31,19,2)
(34,5,2)
(37,25,2)
(2,19,2)
(8,22,2)
(33,5,2)
(27,5,2)
(4,8,2)
(13,5,2)
(4,5,2)
(18,4,2)
(27,18,2)
(5,19,2)
(7,19,2)
(35,19,2)
(24,42,2)
(37,5,2)
(37,8,2)
(5,24,2)
-----------------------------------
(0,if (environment != NULL)
(1,1)
(2,data)
(3,dataLen)
(4,dataLen-1)
(5,environment != NULL)
(6,dataBuffer)
(7,NULL)
(8,dataLen = strlen(data)
(9,COMMAND_ARG2)
(10,dataBuffer[100] = COMMAND_ARG2)
(11,NULL)
(12,COMMAND_ARG3)
(13,dataLen)
(14,)
(15,environment)
(16,COMMAND_INT)
(17,data)
(18,100-dataLen-1)
(19,1)
(20,dataBuffer)
(21,environment)
(22,strlen(data)
(23,environment)
(24,* environment = GETENV(ENV_VARIABLE)
(25,data = dataBuffer)
(26,)
(27,strncat(data+dataLen, environment, 100-dataLen-1)
(28,data)
(29,dataLen)
(30,)
(31,ENV_VARIABLE)
(32,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(33,dataLen)
(34,100)
(35,environment)
(36,COMMAND_ARG1)
(37,data+dataLen)
(38,_P_WAIT)
(39,COMMAND_INT)
(40,dataBuffer)
(41,if(1)
(42,GETENV(ENV_VARIABLE)
(43,data)
(44,)
(45,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
