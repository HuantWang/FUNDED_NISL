-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_06_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
83,86
84,85
85,86
85,87
86,87
88,89
88,90
91,92
92,93
92,94
93,94
95,96
95,97
95,98
96,97
98,99
101,102
101,103
102,103
102,104
103,104
105,106
107,108
108,109
109,110
109,111
110,111
112,113
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,89,90,94,97,99,100,104,106,111,113
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
92,93
92,94
102,103
102,104
-----guardedBy-----
62,76
104,113
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_06_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_06_bad()
CWE78_OS_Command_Injection__char_environment_popen_06_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(STATIC_CONST_FIVE==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(22,4,0)
(16,11,0)
(22,27,0)
(48,5,0)
(46,32,0)
(39,12,0)
(17,32,0)
(23,11,0)
(26,45,0)
(52,47,0)
(31,43,0)
(12,36,0)
(43,4,0)
(49,36,0)
(43,32,0)
(45,7,0)
(46,21,0)
(17,21,0)
(42,24,0)
(54,53,0)
(13,46,0)
(30,17,0)
(9,24,0)
(8,53,0)
(25,5,0)
(4,43,0)
(2,7,0)
(40,36,0)
(33,6,0)
(19,2,0)
(5,3,0)
(50,53,0)
(15,21,0)
(37,43,0)
(18,40,0)
(21,53,0)
(32,5,0)
(34,7,0)
(0,4,0)
(29,6,0)
(44,47,0)
(45,35,0)
(6,53,0)
(47,7,0)
(22,17,0)
(36,40,0)
(24,53,0)
(21,24,0)
(17,22,0)
(51,32,0)
(32,46,0)
(4,22,0)
(22,36,0)
(28,5,0)
(7,2,0)
(41,2,0)
(14,17,0)
(20,22,0)
(38,21,0)
(7,6,0)
(2,21,0)
(36,5,0)
(10,12,0)
(17,21,1)
(44,52,1)
(7,2,1)
(11,23,1)
(47,44,1)
(17,32,1)
(34,12,1)
(24,9,1)
(22,36,1)
(30,14,1)
(2,21,1)
(19,34,1)
(36,40,1)
(31,0,1)
(21,24,1)
(10,39,1)
(32,46,1)
(12,10,1)
(51,11,1)
(43,37,1)
(22,17,1)
(20,17,1)
(41,19,1)
(45,7,1)
(38,24,1)
(47,7,1)
(1,47,1)
(46,13,1)
(18,49,1)
(15,38,1)
(13,51,1)
(34,22,1)
(21,15,1)
(9,42,1)
(26,47,1)
(52,7,1)
(12,36,1)
(4,43,1)
(14,12,1)
(46,21,1)
(43,32,1)
(22,4,1)
(39,36,1)
(17,30,1)
(45,26,1)
(49,32,1)
(1,45,1)
(34,11,1)
(37,31,1)
(16,21,1)
(40,18,1)
(2,41,1)
(0,20,1)
(23,16,1)
(32,11,2)
(10,11,2)
(2,21,2)
(18,11,2)
(31,12,2)
(30,12,2)
(45,47,2)
(49,11,2)
(26,47,2)
(37,12,2)
(7,2,2)
(36,11,2)
(0,12,2)
(4,12,2)
(13,11,2)
(46,11,2)
(12,11,2)
(17,32,2)
(12,36,2)
(17,12,2)
(51,11,2)
(40,11,2)
(46,21,2)
(22,17,2)
(22,4,2)
(39,11,2)
(17,21,2)
(21,24,2)
(36,40,2)
(43,12,2)
(45,7,2)
(14,12,2)
(32,46,2)
(47,7,2)
(20,12,2)
(22,12,2)
(43,32,2)
(22,36,2)
(4,43,2)
-----------------------------------
(0,100)
(1,RET)
(2,POPEN(data, "w")
(3,)
(4,100-dataLen-1)
(5,)
(6,)
(7,pipe = POPEN(data, "w")
(8,data_buf)
(9,FULL_COMMAND)
(10,NULL)
(11,STATIC_CONST_FIVE==5)
(12,environment != NULL)
(13,data)
(14,data)
(15,data_buf)
(16,STATIC_CONST_FIVE)
(17,data+dataLen)
(18,ENV_VARIABLE)
(19,data)
(20,environment)
(21,data = data_buf)
(22,strncat(data+dataLen, environment, 100-dataLen-1)
(23,5)
(24,data_buf[100] = FULL_COMMAND)
(25,environment)
(26,pipe)
(27,)
(28,dataLen)
(29,if (pipe != NULL)
(30,dataLen)
(31,dataLen)
(32,dataLen = strlen(data)
(33,pipe)
(34,pipe)
(35,)
(36,* environment = GETENV(ENV_VARIABLE)
(37,1)
(38,data)
(39,environment)
(40,GETENV(ENV_VARIABLE)
(41,"w")
(42,data_buf)
(43,dataLen-1)
(44,NULL)
(45,PCLOSE(pipe)
(46,strlen(data)
(47,pipe != NULL)
(48,if (environment != NULL)
(49,environment)
(50,data)
(51,dataLen)
(52,pipe)
(53,)
(54,if(STATIC_CONST_FIVE==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
