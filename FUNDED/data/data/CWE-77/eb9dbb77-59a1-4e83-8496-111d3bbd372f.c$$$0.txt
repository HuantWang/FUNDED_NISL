-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_execl_54_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_execl_54_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_execl_54_bad()
CWE78_OS_Command_Injection__char_file_execl_54_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data);
CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data)
CWE78_OS_Command_Injection__char_file_execl_54b_badSink
CWE78_OS_Command_Injection__char_file_execl_54b_badSink
data
data
-----joern-----
(14,32,0)
(10,57,0)
(40,23,0)
(50,12,0)
(0,7,0)
(18,42,0)
(29,38,0)
(16,3,0)
(38,58,0)
(3,33,0)
(49,44,0)
(20,23,0)
(49,53,0)
(21,35,0)
(15,57,0)
(20,53,0)
(35,15,0)
(39,56,0)
(42,57,0)
(38,35,0)
(32,49,0)
(2,57,0)
(44,49,0)
(55,58,0)
(47,20,0)
(17,35,0)
(22,42,0)
(8,5,0)
(4,5,0)
(5,53,0)
(37,44,0)
(13,36,0)
(21,58,0)
(12,33,0)
(17,32,0)
(51,17,0)
(1,13,0)
(36,13,0)
(26,2,0)
(13,35,0)
(27,36,0)
(25,24,0)
(32,14,0)
(58,42,0)
(53,5,0)
(7,49,0)
(44,58,0)
(28,21,0)
(19,21,0)
(9,57,0)
(58,57,0)
(30,17,0)
(41,49,0)
(46,44,0)
(31,15,0)
(48,53,0)
(24,53,0)
(43,13,0)
(35,38,0)
(52,24,0)
(21,3,0)
(44,35,0)
(11,35,0)
(34,58,0)
(49,32,0)
(53,56,0)
(54,15,0)
(45,15,0)
(49,7,0)
(32,17,0)
(2,58,0)
(17,30,1)
(8,4,1)
(35,38,1)
(28,12,1)
(44,35,1)
(58,34,1)
(30,51,1)
(16,21,1)
(29,11,1)
(2,26,1)
(7,49,1)
(17,35,1)
(38,58,1)
(36,13,1)
(21,19,1)
(5,8,1)
(26,36,1)
(3,16,1)
(49,41,1)
(42,22,1)
(49,53,1)
(53,5,1)
(26,20,1)
(13,1,1)
(19,28,1)
(52,25,1)
(46,37,1)
(41,32,1)
(20,47,1)
(12,50,1)
(20,53,1)
(25,53,1)
(11,58,1)
(32,14,1)
(47,3,1)
(44,46,1)
(32,17,1)
(47,7,1)
(0,49,1)
(38,29,1)
(4,48,1)
(24,52,1)
(49,44,1)
(58,42,1)
(26,24,1)
(48,36,1)
(22,18,1)
(1,43,1)
(27,13,1)
(34,55,1)
(13,35,1)
(7,0,1)
(6,2,1)
(37,24,1)
(50,7,1)
(55,42,1)
(49,32,1)
(21,58,1)
(44,58,1)
(36,27,1)
(43,35,1)
(2,58,1)
(24,53,1)
(21,35,1)
(51,44,1)
(35,38,2)
(25,36,2)
(48,36,2)
(49,32,2)
(46,24,2)
(3,7,2)
(24,53,2)
(41,24,2)
(5,36,2)
(38,58,2)
(7,24,2)
(32,14,2)
(37,24,2)
(16,7,2)
(30,24,2)
(49,24,2)
(51,24,2)
(4,36,2)
(21,58,2)
(50,7,2)
(8,36,2)
(21,35,2)
(17,24,2)
(53,36,2)
(12,7,2)
(28,7,2)
(47,24,2)
(0,24,2)
(2,58,2)
(44,35,2)
(7,49,2)
(32,24,2)
(32,17,2)
(58,42,2)
(52,36,2)
(44,24,2)
(36,13,2)
(13,35,2)
(21,7,2)
(20,24,2)
(20,53,2)
(44,58,2)
(53,5,2)
(17,35,2)
(19,7,2)
(24,36,2)
(49,53,2)
(49,44,2)
-----------------------------------
(0,NULL)
(1,dataLen)
(2,CWE78_OS_Command_Injection__char_file_execl_54b_badSink(data)
(3,data[dataLen] = \\\'\\\\0\\\')
(4,FILENAME)
(5,fopen(FILENAME, "r")
(6,RET)
(7,fgets(data+dataLen, (int)
(8,"r")
(9,data)
(10,dataBuffer)
(11,dataLen)
(12,printLine("fgets()
(13,100-dataLen)
(14,int)
(15,)
(16,\\\'\\\\0\\\')
(17,100-dataLen)
(18,dataBuffer)
(19,dataLen)
(20,fclose(pFile)
(21,data[dataLen])
(22,COMMAND_ARG2)
(23,)
(24,pFile != NULL)
(25,pFile)
(26,data)
(27,1)
(28,data)
(29,data)
(30,dataLen)
(31,dataLen)
(32,(int)
(33,)
(34,dataBuffer)
(35,dataLen = strlen(data)
(36,100-dataLen > 1)
(37,data)
(38,strlen(data)
(39,if (pFile != NULL)
(40,if (fgets(data+dataLen, (int)
(41,pFile)
(42,dataBuffer[100] = COMMAND_ARG2)
(43,100)
(44,data+dataLen)
(45,if (100-dataLen > 1)
(46,dataLen)
(47,pFile)
(48,pFile)
(49,fgets(data+dataLen, (int)
(50,"fgets()
(51,100)
(52,NULL)
(53,pFile = fopen(FILENAME, "r")
(54,pFile)
(55,data)
(56,)
(57,)
(58,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
