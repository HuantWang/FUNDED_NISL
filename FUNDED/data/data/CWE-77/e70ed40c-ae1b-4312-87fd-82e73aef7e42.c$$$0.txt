-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticReturnsFalse())
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
34,35
34,36
35,36
38,39
39,40
40,41
40,42
40,43
41,42
43,44
46,47
46,48
46,49
47,48
48,49
48,50
49,50
51,52
51,53
54,55
55,56
55,57
56,57
58,59
58,60
58,61
59,60
61,62
64,65
64,66
65,66
65,67
66,67
68,69
70,71
71,72
72,73
72,74
73,74
75,76
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,36,37,42,44,45,50,52,53,57,60,62,63,67,69,74,76
-----computeFrom-----
23,24
23,25
55,56
55,57
65,66
65,67
-----guardedBy-----
67,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsFalse())    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
static void
goodG2B1()
goodG2B1
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsFalse())    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticReturnsFalse())    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
staticReturnsFalse()
staticReturnsFalse
staticReturnsFalse
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(26,9,0)
(26,29,0)
(2,21,0)
(17,9,0)
(11,26,0)
(18,10,0)
(32,17,0)
(24,3,0)
(1,19,0)
(7,19,0)
(4,18,0)
(8,1,0)
(3,9,0)
(1,10,0)
(20,19,0)
(3,1,0)
(19,10,0)
(12,17,0)
(9,18,0)
(31,18,0)
(21,25,0)
(22,8,0)
(5,10,0)
(15,3,0)
(9,3,0)
(0,10,0)
(14,1,0)
(23,1,0)
(27,9,0)
(30,8,0)
(28,10,0)
(8,6,0)
(3,15,1)
(15,24,1)
(30,22,1)
(11,17,1)
(26,9,1)
(23,19,1)
(8,1,1)
(27,8,1)
(32,12,1)
(9,3,1)
(1,14,1)
(12,9,1)
(22,13,1)
(13,1,1)
(1,19,1)
(26,11,1)
(27,21,1)
(21,2,1)
(17,9,1)
(3,1,1)
(16,17,1)
(8,30,1)
(24,27,1)
(16,26,1)
(17,32,1)
(19,20,1)
(14,23,1)
(20,7,1)
(2,13,1)
(8,1,2)
(26,17,2)
(3,1,2)
(21,13,2)
(9,3,2)
(22,13,2)
(30,13,2)
(2,13,2)
(8,13,2)
(17,9,2)
(1,19,2)
(11,17,2)
(26,9,2)
-----------------------------------
(0,data)
(1,data = data_buf)
(2,"Benign, fixed string")
(3,POPEN(data, "w")
(4,pipe)
(5,if(staticReturnsFalse()
(6,)
(7,data_buf)
(8,strcat(data, "*.*")
(9,pipe = POPEN(data, "w")
(10,)
(11,pipe)
(12,pipe)
(13,staticReturnsFalse()
(14,data_buf)
(15,"w")
(16,RET)
(17,pipe != NULL)
(18,)
(19,data_buf[100] = FULL_COMMAND)
(20,FULL_COMMAND)
(21,printLine("Benign, fixed string")
(22,data)
(23,data)
(24,data)
(25,)
(26,PCLOSE(pipe)
(27,pipe)
(28,data_buf)
(29,)
(30,"*.*")
(31,if (pipe != NULL)
(32,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
