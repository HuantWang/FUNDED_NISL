-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_console_popen_53_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from the console */
        size_t dataLen = strlen(data);
        /* if there is room in data, read into it from the console */
        if (100-dataLen > 1)
        {
            /* POTENTIAL FLAW: Read data from the console */
            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)
            {
                /* The next few lines remove the carriage return from the string that is
                 * inserted by fgets() */
                dataLen = strlen(data);
                if (dataLen > 0 && data[dataLen-1] == '\n')
                {
                    data[dataLen-1] = '\0';
                }
            }
            else
            {
                printLine("fgets() failed");
                /* Restore NUL terminator if fgets fails */
                data[dataLen] = '\0';
            }
        }
    }
    CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
41,43
42,43
42,44
43,44
43,45
45,46
48,49
49,50
49,51
49,52
50,51
50,52
51,52
51,53
51,54
51,55
52,53
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
63,64
64,65
64,66
66,67
68,69
70,71
72,73
72,74
73,74
74,75
74,76
75,76
77,78
77,79
78,79
80,81
82,83
82,84
83,84
83,85
84,85
84,86
85,86
88,89
88,90
89,90
89,91
90,91
92,93
92,94
93,94
97,98
98,99
99,100
99,101
100,101
100,102
101,102
103,104
103,105
104,105
108,109
108,110
109,110
110,111
110,112
111,112
114,115
115,116
115,117
116,117
116,118
117,118
119,120
122,123
123,124
123,125
124,125
126,127
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,53,56,58,61,62,65,67,69,71,76,79,81,86,87,91,94,95,96,102,105,106,107,112,113,118,120,121,125,127
-----computeFrom-----
23,24
23,25
42,43
42,44
43,44
43,45
50,51
50,52
54,55
54,56
64,65
64,66
74,75
74,76
83,84
83,85
84,85
84,86
88,89
88,90
92,93
92,94
99,100
99,101
103,104
103,105
115,116
115,117
-----guardedBy-----
46,120
56,102
67,105
91,102
94,105
-----guardedByNegation-----
56,118
67,120
-----lastLexicalUse-----
56,118
67,120
-----jump-----
56,118
67,120
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_console_popen_53_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data);}
void
CWE78_OS_Command_Injection__char_console_popen_53_bad()
CWE78_OS_Command_Injection__char_console_popen_53_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }    CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from the console */        size_t dataLen = strlen(data);        /* if there is room in data, read into it from the console */        if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
if (100-dataLen > 1)        {            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            /* POTENTIAL FLAW: Read data from the console */            if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }        }
if (fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL)            {                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }            else            {                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
fgets(data+dataLen, (int)(100-dataLen), stdin) != NULL
fgets(data+dataLen, (int)(100-dataLen), stdin)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
stdin
stdin
NULL
NULL
{                /* The next few lines remove the carriage return from the string that is                 * inserted by fgets() */                dataLen = strlen(data);                if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }            }
dataLen = strlen(data);
dataLen = strlen(data)
dataLen
dataLen
strlen(data)
strlen
strlen
data
data
if (dataLen > 0 && data[dataLen-1] == '\n')                {                    data[dataLen-1] = '\0';                }
dataLen > 0 && data[dataLen-1] == '\n'
dataLen > 0
dataLen
dataLen
0
data[dataLen-1] == '\n'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\n'
{                    data[dataLen-1] = '\0';                }
data[dataLen-1] = '\0';
data[dataLen-1] = '\0'
data[dataLen-1]
data
data
dataLen-1
dataLen
dataLen
1
'\0'
{                printLine("fgets() failed");                /* Restore NUL terminator if fgets fails */                data[dataLen] = '\0';            }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data);
CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data)
CWE78_OS_Command_Injection__char_console_popen_53b_badSink
CWE78_OS_Command_Injection__char_console_popen_53b_badSink
data
data
-----joern-----
(9,0,0)
(53,22,0)
(15,34,0)
(45,43,0)
(11,14,0)
(66,43,0)
(33,32,0)
(61,34,0)
(13,10,0)
(42,54,0)
(19,53,0)
(10,4,0)
(18,67,0)
(15,27,0)
(47,16,0)
(62,38,0)
(28,12,0)
(67,34,0)
(23,49,0)
(62,10,0)
(61,25,0)
(14,22,0)
(25,60,0)
(65,2,0)
(70,34,0)
(36,39,0)
(0,16,0)
(54,42,0)
(40,29,0)
(34,53,0)
(69,22,0)
(6,27,0)
(49,42,0)
(59,67,0)
(58,47,0)
(3,44,0)
(16,0,0)
(22,29,0)
(21,16,0)
(27,60,0)
(29,41,0)
(27,15,0)
(60,27,0)
(57,15,0)
(50,38,0)
(53,34,0)
(52,49,0)
(47,22,0)
(56,62,0)
(4,22,0)
(55,61,0)
(42,49,0)
(27,22,0)
(34,39,0)
(8,41,0)
(51,60,0)
(4,10,0)
(2,24,0)
(10,43,0)
(63,33,0)
(69,41,0)
(37,22,0)
(14,33,0)
(7,29,0)
(5,67,0)
(42,16,0)
(22,41,0)
(46,41,0)
(44,32,0)
(60,25,0)
(49,10,0)
(35,15,0)
(14,10,0)
(16,42,0)
(38,62,0)
(16,47,0)
(20,22,0)
(18,2,0)
(47,10,0)
(18,22,0)
(64,14,0)
(30,4,0)
(31,47,0)
(48,69,0)
(25,61,0)
(67,18,0)
(17,18,0)
(43,41,0)
(68,62,0)
(1,61,0)
(61,55,1)
(64,11,1)
(34,53,1)
(58,31,1)
(40,7,1)
(42,54,1)
(33,63,1)
(16,47,1)
(21,42,1)
(14,64,1)
(69,22,1)
(38,50,1)
(27,22,1)
(14,10,1)
(1,34,1)
(67,59,1)
(49,10,1)
(6,61,1)
(4,30,1)
(20,37,1)
(17,25,1)
(48,25,1)
(19,70,1)
(25,60,1)
(14,22,1)
(60,27,1)
(0,16,1)
(31,38,1)
(65,18,1)
(52,23,1)
(23,47,1)
(48,38,1)
(67,34,1)
(10,4,1)
(62,56,1)
(22,29,1)
(44,3,1)
(48,33,1)
(37,29,1)
(53,19,1)
(35,6,1)
(49,52,1)
(4,22,1)
(3,0,1)
(38,62,1)
(26,69,1)
(69,48,1)
(68,10,1)
(13,22,1)
(55,1,1)
(15,57,1)
(47,22,1)
(25,61,1)
(56,68,1)
(57,35,1)
(70,0,1)
(18,67,1)
(18,22,1)
(42,49,1)
(0,9,1)
(47,10,1)
(16,21,1)
(47,58,1)
(61,34,1)
(2,65,1)
(60,51,1)
(59,5,1)
(27,15,1)
(30,13,1)
(63,14,1)
(16,42,1)
(9,16,1)
(11,44,1)
(22,20,1)
(53,22,1)
(5,17,1)
(51,27,1)
(29,40,1)
(62,10,1)
(48,2,1)
(15,34,1)
(50,62,1)
(5,25,2)
(38,62,2)
(42,49,2)
(34,0,2)
(22,29,2)
(18,67,2)
(25,0,2)
(25,60,2)
(11,0,2)
(47,22,2)
(15,34,2)
(49,10,2)
(55,0,2)
(64,0,2)
(61,0,2)
(14,0,2)
(16,42,2)
(53,0,2)
(49,38,2)
(58,38,2)
(63,0,2)
(0,16,2)
(42,38,2)
(18,25,2)
(47,38,2)
(34,53,2)
(9,38,2)
(59,25,2)
(16,38,2)
(65,25,2)
(35,61,2)
(0,38,2)
(33,0,2)
(14,22,2)
(51,61,2)
(3,0,2)
(52,38,2)
(53,22,2)
(67,25,2)
(70,0,2)
(6,61,2)
(44,0,2)
(42,54,2)
(4,22,2)
(67,34,2)
(60,61,2)
(10,4,2)
(1,0,2)
(60,27,2)
(23,38,2)
(27,61,2)
(16,47,2)
(19,0,2)
(14,10,2)
(21,38,2)
(27,15,2)
(31,38,2)
(62,10,2)
(47,10,2)
(17,25,2)
(18,22,2)
(61,34,2)
(2,25,2)
(27,22,2)
(69,22,2)
(57,61,2)
(25,61,2)
(15,61,2)
-----------------------------------
(0,fgets(data+dataLen, (int)
(1,dataLen)
(2,data[dataLen-1] = \\\'\\\\0\\\')
(3,"fgets()
(4,strlen(data)
(5,dataLen)
(6,data)
(7,data_buf)
(8,data)
(9,NULL)
(10,dataLen = strlen(data)
(11,data)
(12,)
(13,dataLen)
(14,data[dataLen])
(15,dataLen-1)
(16,fgets(data+dataLen, (int)
(17,data)
(18,data[dataLen-1])
(19,data)
(20,data_buf)
(21,stdin)
(22,data = data_buf)
(23,100)
(24,)
(25,dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(26,RET)
(27,data[dataLen-1])
(28,if (fgets(data+dataLen, (int)
(29,data_buf[100] = FULL_COMMAND)
(30,data)
(31,data)
(32,)
(33,data[dataLen] = \\\'\\\\0\\\')
(34,dataLen = strlen(data)
(35,dataLen)
(36,if (dataLen > 0 && data[dataLen-1] == \\\'\\\\n\\\')
(37,data)
(38,100-dataLen > 1)
(39,)
(40,FULL_COMMAND)
(41,)
(42,(int)
(43,)
(44,printLine("fgets()
(45,if (100-dataLen > 1)
(46,data_buf)
(47,data+dataLen)
(48,data)
(49,100-dataLen)
(50,1)
(51,\\\'\\\\n\\\')
(52,dataLen)
(53,strlen(data)
(54,int)
(55,0)
(56,dataLen)
(57,1)
(58,dataLen)
(59,1)
(60,data[dataLen-1] == \\\'\\\\n\\\')
(61,dataLen > 0)
(62,100-dataLen)
(63,\\\'\\\\0\\\')
(64,dataLen)
(65,\\\'\\\\0\\\')
(66,dataLen)
(67,dataLen-1)
(68,100)
(69,CWE78_OS_Command_Injection__char_console_popen_53b_badSink(data)
(70,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
