-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B1Static = 0; /* false */
    data = goodG2B1Source(data);
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
46,49
46,50
50,51
51,52
51,53
51,54
51,55
52,53
54,55
56,57
58,59
60,61
61,62
61,63
61,64
61,65
62,63
64,65
66,67
68,69
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,48,49,53,55,57,59,63,65,67,69
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
static void
goodG2B1()
goodG2B1
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B1Static = 0;
goodG2B1Static = 0
goodG2B1Static
goodG2B1Static
0
data = goodG2B1Source(data);
data = goodG2B1Source(data)
data
data
goodG2B1Source(data)
goodG2B1Source
goodG2B1Source
data
data
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(16,10,0)
(1,23,0)
(5,23,0)
(0,23,0)
(7,3,0)
(14,1,0)
(12,23,0)
(14,20,0)
(2,12,0)
(22,20,0)
(17,3,0)
(21,1,0)
(9,14,0)
(1,14,0)
(10,23,0)
(6,23,0)
(19,12,0)
(20,10,0)
(3,19,0)
(4,5,0)
(11,3,0)
(3,12,0)
(8,5,0)
(13,10,0)
(24,20,0)
(20,23,0)
(18,19,0)
(11,19,1)
(13,16,1)
(14,20,1)
(7,11,1)
(20,10,1)
(21,5,1)
(10,13,1)
(4,20,1)
(3,17,1)
(19,18,1)
(24,22,1)
(20,24,1)
(14,9,1)
(3,19,1)
(15,3,1)
(17,7,1)
(22,10,1)
(8,4,1)
(5,8,1)
(1,14,1)
(18,1,1)
(9,21,1)
(20,10,2)
(1,14,2)
(14,20,2)
(3,19,2)
-----------------------------------
(0,data)
(1,data = goodG2B1Source(data)
(2,args)
(3,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(4,goodG2B1Static)
(5,goodG2B1Static = 0)
(6,dataBuffer)
(7,COMMAND_INT_PATH)
(8,0)
(9,data)
(10,dataBuffer[100] = COMMAND_ARG2)
(11,_P_WAIT)
(12,)
(13,COMMAND_ARG2)
(14,goodG2B1Source(data)
(15,RET)
(16,dataBuffer)
(17,args)
(18,args)
(19,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(20,data = dataBuffer)
(21,data)
(22,data)
(23,)
(24,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
