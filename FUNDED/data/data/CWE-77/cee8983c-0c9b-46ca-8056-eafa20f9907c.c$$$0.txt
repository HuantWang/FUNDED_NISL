-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_10_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
82,84
83,84
83,85
84,85
86,87
89,90
89,91
90,91
91,92
91,93
92,93
95,96
96,97
96,98
97,98
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,85,87,88,93,94,98,99
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
82,83
82,84
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_10_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_10_bad()
CWE78_OS_Command_Injection__char_environment_system_10_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalTrue
globalTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(31,41,0)
(19,11,0)
(47,0,0)
(35,41,0)
(38,14,0)
(26,9,0)
(41,0,0)
(27,16,0)
(37,45,0)
(7,22,0)
(29,6,0)
(48,13,0)
(16,39,0)
(46,14,0)
(16,13,0)
(38,11,0)
(28,13,0)
(24,0,0)
(5,0,0)
(42,22,0)
(14,45,0)
(14,38,0)
(14,13,0)
(22,36,0)
(6,11,0)
(44,36,0)
(32,38,0)
(13,0,0)
(4,14,0)
(10,6,0)
(11,20,0)
(38,36,0)
(20,17,0)
(45,20,0)
(48,45,0)
(21,0,0)
(18,48,0)
(22,45,0)
(36,38,0)
(13,41,0)
(1,40,0)
(36,22,0)
(38,15,0)
(45,48,0)
(2,20,0)
(9,11,0)
(3,1,0)
(12,40,0)
(11,9,0)
(30,12,0)
(39,16,0)
(25,39,0)
(43,13,0)
(34,20,0)
(23,20,0)
(36,22,1)
(27,8,1)
(14,46,1)
(3,12,1)
(7,42,1)
(14,13,1)
(22,45,1)
(43,28,1)
(42,44,1)
(9,26,1)
(48,18,1)
(28,41,1)
(29,10,1)
(38,14,1)
(30,39,1)
(11,9,1)
(39,25,1)
(16,13,1)
(6,29,1)
(38,11,1)
(12,30,1)
(41,31,1)
(39,16,1)
(33,39,1)
(46,4,1)
(32,14,1)
(45,48,1)
(27,6,1)
(19,45,1)
(13,43,1)
(22,7,1)
(18,37,1)
(26,19,1)
(1,3,1)
(25,16,1)
(14,45,1)
(13,41,1)
(38,36,1)
(44,32,1)
(4,6,1)
(33,1,1)
(27,38,1)
(8,13,1)
(31,35,1)
(16,27,1)
(10,11,1)
(37,8,1)
(48,13,1)
(6,11,1)
(14,6,2)
(39,16,2)
(16,13,2)
(1,39,2)
(38,36,2)
(3,39,2)
(32,6,2)
(19,8,2)
(9,8,2)
(44,6,2)
(30,39,2)
(7,6,2)
(46,6,2)
(48,13,2)
(45,48,2)
(11,8,2)
(36,6,2)
(45,8,2)
(14,13,2)
(38,14,2)
(13,41,2)
(29,8,2)
(36,22,2)
(10,8,2)
(6,11,2)
(22,6,2)
(11,9,2)
(38,6,2)
(37,8,2)
(38,11,2)
(14,45,2)
(4,6,2)
(26,8,2)
(42,6,2)
(6,8,2)
(48,8,2)
(12,39,2)
(18,8,2)
(22,45,2)
-----------------------------------
(0,)
(1,exit(1)
(2,environment)
(3,1)
(4,data)
(5,if (SYSTEM(data)
(6,environment != NULL)
(7,1)
(8,globalTrue)
(9,GETENV(ENV_VARIABLE)
(10,environment)
(11,* environment = GETENV(ENV_VARIABLE)
(12,printLine("command execution failed!")
(13,data = data_buf)
(14,data+dataLen)
(15,)
(16,SYSTEM(data)
(17,)
(18,data)
(19,environment)
(20,)
(21,data)
(22,dataLen-1)
(23,if (environment != NULL)
(24,if(globalTrue)
(25,0)
(26,ENV_VARIABLE)
(27,data)
(28,data)
(29,NULL)
(30,"command execution failed!")
(31,FULL_COMMAND)
(32,environment)
(33,RET)
(34,dataLen)
(35,data_buf)
(36,100-dataLen-1)
(37,dataLen)
(38,strncat(data+dataLen, environment, 100-dataLen-1)
(39,SYSTEM(data)
(40,)
(41,data_buf[100] = FULL_COMMAND)
(42,dataLen)
(43,data_buf)
(44,100)
(45,dataLen = strlen(data)
(46,dataLen)
(47,data_buf)
(48,strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
