-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_04_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
81,83
82,83
83,84
83,85
85,86
85,87
85,88
85,89
89,90
90,91
90,92
90,93
90,94
91,92
93,94
95,96
97,98
99,100
100,101
100,102
100,103
100,104
101,102
103,104
105,106
107,108
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,87,88,92,94,96,98,102,104,106,108
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_04_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_04_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_04_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(14,18,0)
(7,1,0)
(31,18,0)
(12,41,0)
(36,16,0)
(5,11,0)
(16,32,0)
(41,12,0)
(16,36,0)
(39,38,0)
(19,45,0)
(32,31,0)
(4,18,0)
(7,36,0)
(31,32,0)
(22,16,0)
(36,7,0)
(3,36,0)
(38,5,0)
(30,24,0)
(18,24,0)
(38,11,0)
(9,42,0)
(0,1,0)
(37,42,0)
(7,41,0)
(43,16,0)
(2,45,0)
(46,15,0)
(27,11,0)
(18,45,0)
(1,7,0)
(32,15,0)
(7,35,0)
(24,45,0)
(41,15,0)
(11,45,0)
(6,12,0)
(28,38,0)
(1,18,0)
(17,7,0)
(15,10,0)
(29,41,0)
(20,32,0)
(1,32,0)
(44,5,0)
(33,1,0)
(23,15,0)
(8,31,0)
(13,15,0)
(34,24,0)
(26,38,0)
(42,41,0)
(25,45,0)
(1,18,1)
(44,42,1)
(16,32,1)
(43,3,1)
(1,32,1)
(17,1,1)
(6,29,1)
(9,37,1)
(39,5,1)
(31,8,1)
(14,24,1)
(44,7,1)
(12,6,1)
(28,26,1)
(21,38,1)
(20,40,1)
(42,41,1)
(36,16,1)
(8,20,1)
(26,39,1)
(5,44,1)
(7,1,1)
(18,24,1)
(33,0,1)
(22,43,1)
(7,36,1)
(31,18,1)
(30,34,1)
(29,32,1)
(44,40,1)
(16,22,1)
(24,30,1)
(37,41,1)
(1,33,1)
(7,41,1)
(38,5,1)
(4,14,1)
(41,12,1)
(40,18,1)
(3,17,1)
(38,28,1)
(42,9,1)
(0,42,1)
(18,4,1)
(32,31,1)
(7,42,2)
(42,41,2)
(12,40,2)
(32,31,2)
(41,12,2)
(7,36,2)
(43,42,2)
(33,42,2)
(17,42,2)
(1,42,2)
(16,42,2)
(36,16,2)
(31,18,2)
(38,5,2)
(1,32,2)
(3,42,2)
(0,42,2)
(22,42,2)
(16,32,2)
(1,18,2)
(32,40,2)
(7,41,2)
(42,40,2)
(20,40,2)
(18,24,2)
(36,42,2)
(29,40,2)
(31,40,2)
(37,40,2)
(9,40,2)
(7,1,2)
(6,40,2)
(8,40,2)
(41,40,2)
-----------------------------------
(0,data)
(1,data+dataLen)
(2,dataBuffer)
(3,100)
(4,dataBuffer)
(5,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(6,ENV_VARIABLE)
(7,strncat(data+dataLen, environment, 100-dataLen-1)
(8,data)
(9,NULL)
(10,)
(11,)
(12,GETENV(ENV_VARIABLE)
(13,environment)
(14,data)
(15,)
(16,dataLen-1)
(17,environment)
(18,data = dataBuffer)
(19,if(STATIC_CONST_TRUE)
(20,dataLen)
(21,RET)
(22,1)
(23,dataLen)
(24,dataBuffer[100] = COMMAND_ARG2)
(25,data)
(26,COMMAND_INT_PATH)
(27,args)
(28,args)
(29,environment)
(30,COMMAND_ARG2)
(31,strlen(data)
(32,dataLen = strlen(data)
(33,dataLen)
(34,dataBuffer)
(35,)
(36,100-dataLen-1)
(37,environment)
(38,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(39,_P_WAIT)
(40,STATIC_CONST_TRUE)
(41,* environment = GETENV(ENV_VARIABLE)
(42,environment != NULL)
(43,dataLen)
(44,args)
(45,)
(46,if (environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
