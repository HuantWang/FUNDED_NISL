-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_file_popen_04_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(STATIC_CONST_TRUE)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
47,48
49,50
49,51
52,53
52,54
53,54
53,55
54,55
54,56
56,57
59,60
59,61
60,61
61,62
61,63
62,63
64,65
64,66
64,67
65,66
67,68
70,71
70,72
71,72
71,73
72,73
74,75
76,77
76,78
77,78
77,79
78,79
78,80
79,80
79,81
79,82
79,83
80,81
82,83
82,84
83,84
85,86
87,88
87,89
88,89
88,90
91,92
92,93
92,94
94,95
96,97
98,99
100,101
100,102
101,102
102,103
102,104
103,104
106,107
107,108
107,109
108,109
108,110
109,110
111,112
114,115
115,116
115,117
116,117
118,119
120,121
120,122
120,123
121,122
122,123
122,124
123,124
125,126
125,127
128,129
129,130
129,131
130,131
132,133
132,134
132,135
133,134
135,136
138,139
138,140
139,140
139,141
140,141
142,143
144,145
145,146
146,147
146,148
147,148
149,150
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,48,50,51,55,57,58,63,66,68,69,73,75,81,84,86,89,90,93,95,97,99,104,105,110,112,113,117,119,124,126,127,131,134,136,137,141,143,148,150
-----computeFrom-----
23,24
23,25
53,54
53,55
54,55
54,56
61,62
61,63
71,72
71,73
78,79
78,80
82,83
82,84
92,93
92,94
107,108
107,109
129,130
129,131
139,140
139,141
-----guardedBy-----
57,112
75,99
73,119
84,110
95,112
141,150
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_file_popen_04_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_file_popen_04_bad()
CWE78_OS_Command_Injection__wchar_t_file_popen_04_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(STATIC_CONST_TRUE)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(54,12,0)
(21,37,0)
(36,31,0)
(17,1,0)
(22,36,0)
(41,54,0)
(11,18,0)
(2,22,0)
(3,12,0)
(45,8,0)
(45,33,0)
(62,1,0)
(18,14,0)
(30,45,0)
(54,18,0)
(61,44,0)
(51,11,0)
(38,17,0)
(13,33,0)
(50,17,0)
(42,9,0)
(64,46,0)
(26,49,0)
(59,33,0)
(37,21,0)
(12,54,0)
(39,47,0)
(21,17,0)
(38,60,0)
(31,36,0)
(0,38,0)
(46,16,0)
(4,14,0)
(28,9,0)
(7,11,0)
(17,49,0)
(58,42,0)
(18,44,0)
(36,21,0)
(56,33,0)
(14,18,0)
(8,33,0)
(22,18,0)
(11,45,0)
(27,60,0)
(20,50,0)
(48,50,0)
(15,8,0)
(5,59,0)
(10,33,0)
(44,32,0)
(36,22,0)
(52,1,0)
(35,44,0)
(55,8,0)
(53,45,0)
(19,44,0)
(23,59,0)
(14,45,0)
(34,17,0)
(57,18,0)
(25,37,0)
(11,21,0)
(1,17,0)
(29,54,0)
(6,21,0)
(21,36,0)
(24,22,0)
(63,47,0)
(21,11,0)
(11,18,1)
(12,3,1)
(42,58,1)
(20,17,1)
(39,12,1)
(7,50,1)
(58,37,1)
(41,29,1)
(18,14,1)
(37,21,1)
(57,40,1)
(38,17,1)
(36,22,1)
(14,45,1)
(3,54,1)
(37,25,1)
(36,31,1)
(55,15,1)
(11,45,1)
(53,8,1)
(48,20,1)
(38,0,1)
(64,47,1)
(47,63,1)
(21,11,1)
(34,12,1)
(51,7,1)
(28,42,1)
(43,47,1)
(45,8,1)
(6,36,1)
(52,62,1)
(39,40,1)
(4,57,1)
(30,53,1)
(14,4,1)
(45,30,1)
(21,36,1)
(2,24,1)
(50,48,1)
(29,18,1)
(63,39,1)
(62,34,1)
(46,64,1)
(0,28,1)
(17,1,1)
(39,38,1)
(25,21,1)
(22,2,1)
(22,18,1)
(54,41,1)
(43,46,1)
(11,51,1)
(54,18,1)
(39,50,1)
(8,55,1)
(0,37,1)
(40,45,1)
(21,17,1)
(1,52,1)
(12,54,1)
(24,11,1)
(21,6,1)
(50,17,1)
(24,50,2)
(17,12,2)
(12,54,2)
(34,12,2)
(37,21,2)
(37,50,2)
(50,17,2)
(14,40,2)
(11,45,2)
(36,31,2)
(51,50,2)
(14,45,2)
(29,40,2)
(48,12,2)
(22,18,2)
(25,50,2)
(11,50,2)
(54,18,2)
(1,12,2)
(22,50,2)
(38,50,2)
(36,50,2)
(18,14,2)
(42,37,2)
(7,50,2)
(58,37,2)
(21,50,2)
(20,12,2)
(50,12,2)
(54,40,2)
(52,12,2)
(0,50,2)
(17,1,2)
(45,8,2)
(41,40,2)
(57,40,2)
(11,18,2)
(28,37,2)
(6,50,2)
(36,22,2)
(18,40,2)
(21,36,2)
(38,17,2)
(62,12,2)
(46,47,2)
(3,40,2)
(21,17,2)
(12,40,2)
(21,11,2)
(2,50,2)
(4,40,2)
(64,47,2)
-----------------------------------
(0,pFile)
(1,fopen(FILENAME, "r")
(2,dataLen)
(3,1)
(4,data)
(5,pipe)
(6,pFile)
(7,data)
(8,data_buf[100] = FULL_COMMAND)
(9,)
(10,data_buf)
(11,data+dataLen)
(12,100-dataLen > 1)
(13,data)
(14,wcslen(data)
(15,data_buf)
(16,)
(17,pFile = fopen(FILENAME, "r")
(18,dataLen = wcslen(data)
(19,dataLen)
(20,pFile)
(21,fgetws(data+dataLen, (int)
(22,100-dataLen)
(23,if (pipe != NULL)
(24,100)
(25,NULL)
(26,if (pFile != NULL)
(27,if (fgetws(data+dataLen, (int)
(28,\\\'\\\\0\\\')
(29,100)
(30,data_buf)
(31,int)
(32,)
(33,)
(34,pFile)
(35,if (100-dataLen > 1)
(36,(int)
(37,fgetws(data+dataLen, (int)
(38,fclose(pFile)
(39,pipe)
(40,STATIC_CONST_TRUE)
(41,dataLen)
(42,printLine("fgetws()
(43,RET)
(44,)
(45,data = data_buf)
(46,PCLOSE(pipe)
(47,pipe != NULL)
(48,NULL)
(49,)
(50,pFile != NULL)
(51,dataLen)
(52,"r")
(53,data)
(54,100-dataLen)
(55,FULL_COMMAND)
(56,if(STATIC_CONST_TRUE)
(57,dataLen)
(58,"fgetws()
(59,)
(60,)
(61,pFile)
(62,FILENAME)
(63,NULL)
(64,pipe)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
