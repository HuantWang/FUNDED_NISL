-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    data = goodG2BSource(data);
    /* wspawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
32,34
33,34
35,36
37,38
38,39
38,40
38,41
38,42
38,43
38,44
38,45
39,40
41,42
43,44
45,46
47,48
49,50
51,52
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,34,36,40,42,44,46,48,50,52
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B()
goodG2B
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    /* wspawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
data = goodG2BSource(data);
data = goodG2BSource(data)
data
data
goodG2BSource(data)
goodG2BSource
goodG2BSource
data
data
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnl
_wspawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(15,3,0)
(1,19,0)
(17,2,0)
(14,3,0)
(5,4,0)
(8,13,0)
(18,16,0)
(6,4,0)
(16,4,0)
(7,13,0)
(2,19,0)
(2,16,0)
(10,16,0)
(19,2,0)
(0,13,0)
(11,13,0)
(13,3,0)
(12,13,0)
(20,13,0)
(4,3,0)
(19,3,0)
(16,3,0)
(2,16,1)
(20,7,1)
(18,10,1)
(19,2,1)
(16,4,1)
(0,12,1)
(13,0,1)
(17,1,1)
(9,13,1)
(7,19,1)
(2,17,1)
(12,11,1)
(11,8,1)
(10,4,1)
(4,5,1)
(5,6,1)
(1,16,1)
(16,18,1)
(8,20,1)
(2,16,2)
(16,4,2)
(19,2,2)
-----------------------------------
(0,NULL)
(1,data)
(2,goodG2BSource(data)
(3,)
(4,dataBuffer[100] = COMMAND_ARG2)
(5,COMMAND_ARG2)
(6,dataBuffer)
(7,_P_WAIT)
(8,COMMAND_INT_PATH)
(9,RET)
(10,data)
(11,COMMAND_ARG1)
(12,COMMAND_ARG3)
(13,_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(14,dataBuffer)
(15,data)
(16,data = dataBuffer)
(17,data)
(18,dataBuffer)
(19,data = goodG2BSource(data)
(20,COMMAND_INT_PATH)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
