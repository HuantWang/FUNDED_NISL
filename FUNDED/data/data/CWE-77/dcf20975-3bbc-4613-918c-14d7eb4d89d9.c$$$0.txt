-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
32,33
32,34
32,35
33,34
35,36
38,39
39,40
39,41
39,42
39,43
39,44
39,45
40,41
42,43
44,45
46,47
48,49
50,51
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,34,36,37,41,43,45,47,49,51
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(6,14,0)
(19,4,0)
(13,14,0)
(17,5,0)
(8,19,0)
(10,0,0)
(21,5,0)
(15,0,0)
(14,19,0)
(9,0,0)
(16,5,0)
(18,4,0)
(12,19,0)
(4,5,0)
(14,20,0)
(0,5,0)
(2,0,0)
(19,5,0)
(1,0,0)
(11,4,0)
(6,7,1)
(14,19,1)
(13,6,1)
(12,4,1)
(9,2,1)
(14,13,1)
(10,9,1)
(15,10,1)
(2,1,1)
(18,11,1)
(19,4,1)
(1,7,1)
(4,18,1)
(0,15,1)
(19,8,1)
(8,12,1)
(7,19,1)
(3,0,1)
(1,14,1)
(14,7,2)
(6,7,2)
(19,4,2)
(14,19,2)
(13,7,2)
-----------------------------------
(0,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(1,COMMAND_INT_PATH)
(2,COMMAND_INT_PATH)
(3,RET)
(4,dataBuffer[100] = COMMAND_ARG2)
(5,)
(6,data)
(7,1)
(8,dataBuffer)
(9,COMMAND_ARG1)
(10,COMMAND_ARG3)
(11,dataBuffer)
(12,data)
(13,"*.*")
(14,strcat(data, "*.*")
(15,NULL)
(16,data)
(17,dataBuffer)
(18,COMMAND_ARG2)
(19,data = dataBuffer)
(20,)
(21,if(1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
