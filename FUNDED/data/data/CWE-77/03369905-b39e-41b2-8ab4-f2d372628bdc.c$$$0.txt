-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_12_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
91,92
91,93
91,94
91,95
91,96
91,97
92,93
94,95
96,97
98,99
100,101
102,103
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,95,97,99,101,103
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_12_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execl_12_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execl_12_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(28,44,0)
(27,9,0)
(44,35,0)
(26,34,0)
(24,4,0)
(37,3,0)
(23,2,0)
(6,21,0)
(19,21,0)
(21,10,0)
(1,26,0)
(0,27,0)
(34,37,0)
(43,10,0)
(42,43,0)
(15,10,0)
(31,43,0)
(11,34,0)
(18,37,0)
(5,3,0)
(29,18,0)
(12,10,0)
(35,27,0)
(7,44,0)
(26,38,0)
(26,20,0)
(25,27,0)
(3,37,0)
(4,35,0)
(22,21,0)
(36,34,0)
(20,26,0)
(34,2,0)
(2,43,0)
(20,18,0)
(8,18,0)
(2,10,0)
(35,4,0)
(3,2,0)
(34,26,0)
(32,10,0)
(17,35,0)
(37,27,0)
(26,35,0)
(39,21,0)
(41,20,0)
(13,2,0)
(18,20,0)
(14,27,0)
(16,37,0)
(40,21,0)
(19,6,1)
(36,44,1)
(6,40,1)
(30,2,1)
(35,4,1)
(26,20,1)
(21,19,1)
(40,39,1)
(22,30,1)
(44,35,1)
(29,8,1)
(3,5,1)
(24,17,1)
(22,44,1)
(20,18,1)
(1,34,1)
(16,30,1)
(23,43,1)
(2,43,1)
(41,1,1)
(11,36,1)
(34,2,1)
(34,11,1)
(18,29,1)
(4,24,1)
(17,37,1)
(37,3,1)
(2,13,1)
(3,2,1)
(26,34,1)
(28,7,1)
(33,21,1)
(43,31,1)
(13,23,1)
(5,16,1)
(8,41,1)
(34,37,1)
(18,37,1)
(7,35,1)
(26,35,1)
(31,42,1)
(44,28,1)
(22,26,1)
(39,22,1)
(1,44,2)
(24,30,2)
(26,44,2)
(11,44,2)
(44,35,2)
(44,30,2)
(29,44,2)
(36,44,2)
(28,30,2)
(20,44,2)
(34,37,2)
(37,30,2)
(26,20,2)
(34,44,2)
(34,2,2)
(4,30,2)
(16,30,2)
(5,30,2)
(18,37,2)
(35,30,2)
(17,30,2)
(35,4,2)
(26,34,2)
(26,35,2)
(41,44,2)
(3,30,2)
(8,44,2)
(37,3,2)
(7,30,2)
(20,18,2)
(2,43,2)
(18,44,2)
(3,2,2)
-----------------------------------
(0,if (environment != NULL)
(1,environment)
(2,data = dataBuffer)
(3,wcslen(data)
(4,GETENV(ENV_VARIABLE)
(5,data)
(6,COMMAND_ARG3)
(7,environment)
(8,dataLen)
(9,)
(10,)
(11,dataLen)
(12,if(globalReturnsTrueOrFalse()
(13,dataBuffer)
(14,dataLen)
(15,data)
(16,dataLen)
(17,environment)
(18,dataLen-1)
(19,NULL)
(20,100-dataLen-1)
(21,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(22,COMMAND_INT_PATH)
(23,data)
(24,ENV_VARIABLE)
(25,environment)
(26,wcsncat(data+dataLen, environment, 100-dataLen-1)
(27,)
(28,NULL)
(29,1)
(30,globalReturnsTrueOrFalse()
(31,COMMAND_ARG2)
(32,dataBuffer)
(33,RET)
(34,data+dataLen)
(35,* environment = GETENV(ENV_VARIABLE)
(36,data)
(37,dataLen = wcslen(data)
(38,)
(39,COMMAND_INT_PATH)
(40,COMMAND_ARG1)
(41,100)
(42,dataBuffer)
(43,dataBuffer[100] = COMMAND_ARG2)
(44,environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
