-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    data = goodG2BSource(data);
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
32,34
33,34
35,36
37,38
38,39
38,40
38,41
38,42
38,43
38,44
39,40
41,42
43,44
45,46
47,48
49,50
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,34,36,40,42,44,46,48,50
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B()
goodG2B
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
data = goodG2BSource(data);
data = goodG2BSource(data)
data
data
goodG2BSource(data)
goodG2BSource
goodG2BSource
data
data
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(10,0,0)
(8,19,0)
(0,11,0)
(5,17,0)
(1,17,0)
(4,11,0)
(14,11,0)
(0,19,0)
(6,11,0)
(19,0,0)
(17,11,0)
(3,4,0)
(7,6,0)
(12,17,0)
(16,17,0)
(18,11,0)
(15,4,0)
(19,6,0)
(2,17,0)
(6,4,0)
(13,6,0)
(5,2,1)
(10,6,1)
(15,3,1)
(13,7,1)
(0,19,1)
(16,12,1)
(4,15,1)
(19,8,1)
(19,6,1)
(6,4,1)
(1,0,1)
(6,13,1)
(17,16,1)
(9,17,1)
(2,1,1)
(7,4,1)
(8,10,1)
(12,5,1)
(19,6,2)
(6,4,2)
(0,19,2)
-----------------------------------
(0,data = goodG2BSource(data)
(1,COMMAND_INT)
(2,COMMAND_INT)
(3,dataBuffer)
(4,dataBuffer[100] = COMMAND_ARG2)
(5,COMMAND_ARG1)
(6,data = dataBuffer)
(7,data)
(8,data)
(9,RET)
(10,data)
(11,)
(12,COMMAND_ARG3)
(13,dataBuffer)
(14,data)
(15,COMMAND_ARG2)
(16,NULL)
(17,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(18,dataBuffer)
(19,goodG2BSource(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
