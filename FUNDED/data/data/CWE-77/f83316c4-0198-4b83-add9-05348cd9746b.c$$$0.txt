-----label-----
0
-----code-----
void CWE78_OS_Command_Injection__char_file_execl_66b_goodG2BSink(char * dataArray[])
{
    char * data = dataArray[2];
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
3,5
5,6
5,7
7,8
7,9
7,10
11,12
11,13
12,13
13,14
13,15
15,16
15,17
15,18
18,19
19,20
19,21
20,21
23,24
24,25
24,26
24,27
24,28
24,29
24,30
25,26
27,28
29,30
31,32
33,34
35,36
-----nextToken-----
2,4,6,8,9,10,14,16,17,21,22,26,28,30,32,34,36
-----computeFrom-----
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;ParameterDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;ArraySubscriptExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_execl_66b_goodG2BSink(char * dataArray[]){    char * data = dataArray[2];    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_file_execl_66b_goodG2BSink(char * dataArray[])
CWE78_OS_Command_Injection__char_file_execl_66b_goodG2BSink
char * dataArray[]
char
* dataArray[]
*
dataArray
[]
{    char * data = dataArray[2];    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data = dataArray[2];
char * data = dataArray[2];
char
* data = dataArray[2]
*
data
= dataArray[2]
dataArray[2]
dataArray
dataArray
2
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(4,12,0)
(14,12,0)
(11,7,0)
(3,11,0)
(10,11,0)
(6,11,0)
(14,7,0)
(5,12,0)
(13,7,0)
(12,14,0)
(8,11,0)
(12,2,0)
(9,14,0)
(0,11,0)
(8,0,1)
(10,3,1)
(12,2,1)
(4,5,1)
(14,12,1)
(1,11,1)
(11,8,1)
(6,10,1)
(12,4,1)
(0,6,1)
(3,14,1)
(5,9,1)
(12,2,2)
(14,12,2)
-----------------------------------
(0,COMMAND_ARG3)
(1,RET)
(2,char * dataArray[])
(3,COMMAND_INT_PATH)
(4,2)
(5,dataArray)
(6,COMMAND_ARG1)
(7,)
(8,NULL)
(9,data)
(10,COMMAND_INT_PATH)
(11,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(12,dataArray[2])
(13,data)
(14,* data = dataArray[2])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
