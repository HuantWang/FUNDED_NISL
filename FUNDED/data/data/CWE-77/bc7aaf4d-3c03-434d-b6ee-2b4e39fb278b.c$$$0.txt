-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_02_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
80,82
80,83
81,82
82,83
82,84
83,84
85,86
85,87
88,89
89,90
89,91
90,91
92,93
92,94
92,95
93,94
95,96
98,99
98,100
99,100
99,101
100,101
102,103
104,105
105,106
106,107
106,108
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,84,86,87,91,94,96,97,101,103,108,110
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
89,90
89,91
99,100
99,101
-----guardedBy-----
59,73
101,110
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_02_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_02_bad()
CWE78_OS_Command_Injection__char_environment_popen_02_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(25,8,0)
(31,11,0)
(48,20,0)
(32,20,0)
(0,10,0)
(7,23,0)
(7,42,0)
(42,7,0)
(8,49,0)
(37,8,0)
(7,0,0)
(49,41,0)
(12,10,0)
(9,39,0)
(43,41,0)
(25,22,0)
(45,49,0)
(28,37,0)
(47,10,0)
(52,26,0)
(44,42,0)
(42,12,0)
(37,17,0)
(6,22,0)
(10,29,0)
(27,0,0)
(4,32,0)
(33,41,0)
(15,32,0)
(46,29,0)
(50,31,0)
(8,25,0)
(10,31,0)
(20,14,0)
(51,31,0)
(30,31,0)
(19,26,0)
(0,7,0)
(20,31,0)
(2,41,0)
(40,8,0)
(18,25,0)
(29,10,0)
(22,41,0)
(29,22,0)
(34,39,0)
(3,14,0)
(36,49,0)
(0,22,0)
(39,8,0)
(22,26,0)
(7,20,0)
(14,20,0)
(5,12,0)
(35,0,0)
(21,12,0)
(26,41,0)
(12,42,0)
(16,25,0)
(24,22,0)
(38,7,0)
(48,10,1)
(25,16,1)
(4,15,1)
(38,0,1)
(37,28,1)
(39,9,1)
(46,47,1)
(1,22,1)
(14,3,1)
(29,22,1)
(12,21,1)
(20,14,1)
(24,26,1)
(28,39,1)
(40,32,1)
(39,8,1)
(29,46,1)
(7,42,1)
(10,29,1)
(16,18,1)
(15,20,1)
(44,38,1)
(40,7,1)
(32,20,1)
(0,27,1)
(47,1,1)
(22,6,1)
(18,40,1)
(0,22,1)
(21,5,1)
(19,52,1)
(13,39,1)
(22,26,1)
(8,25,1)
(5,44,1)
(9,34,1)
(3,48,1)
(0,10,1)
(27,35,1)
(6,24,1)
(7,0,1)
(7,20,1)
(37,8,1)
(32,4,1)
(12,10,1)
(26,19,1)
(35,32,1)
(25,22,1)
(42,12,1)
(34,8,1)
(13,37,1)
(40,1,1)
(7,20,2)
(22,26,2)
(10,1,2)
(12,32,2)
(37,8,2)
(21,32,2)
(0,10,2)
(28,39,2)
(4,1,2)
(32,20,2)
(20,14,2)
(35,32,2)
(29,1,2)
(25,22,2)
(46,1,2)
(47,1,2)
(10,29,2)
(38,32,2)
(48,1,2)
(12,10,2)
(20,1,2)
(42,32,2)
(29,22,2)
(32,1,2)
(39,8,2)
(7,42,2)
(5,32,2)
(15,1,2)
(44,32,2)
(7,0,2)
(0,32,2)
(37,39,2)
(27,32,2)
(7,32,2)
(42,12,2)
(8,25,2)
(14,1,2)
(0,22,2)
(3,1,2)
-----------------------------------
(0,data+dataLen)
(1,1)
(2,data_buf)
(3,ENV_VARIABLE)
(4,NULL)
(5,dataLen)
(6,data_buf)
(7,strncat(data+dataLen, environment, 100-dataLen-1)
(8,pipe = POPEN(data, "w")
(9,NULL)
(10,dataLen = strlen(data)
(11,)
(12,dataLen-1)
(13,RET)
(14,GETENV(ENV_VARIABLE)
(15,environment)
(16,"w")
(17,)
(18,data)
(19,FULL_COMMAND)
(20,* environment = GETENV(ENV_VARIABLE)
(21,1)
(22,data = data_buf)
(23,)
(24,data)
(25,POPEN(data, "w")
(26,data_buf[100] = FULL_COMMAND)
(27,dataLen)
(28,pipe)
(29,strlen(data)
(30,dataLen)
(31,)
(32,environment != NULL)
(33,data)
(34,pipe)
(35,data)
(36,if (pipe != NULL)
(37,PCLOSE(pipe)
(38,environment)
(39,pipe != NULL)
(40,pipe)
(41,)
(42,100-dataLen-1)
(43,if(1)
(44,100)
(45,pipe)
(46,data)
(47,dataLen)
(48,environment)
(49,)
(50,if (environment != NULL)
(51,environment)
(52,data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
