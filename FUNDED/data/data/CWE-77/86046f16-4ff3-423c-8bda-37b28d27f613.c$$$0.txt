-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
12,15
13,14
14,15
14,16
15,16
17,18
17,19
19,20
20,21
20,22
21,22
23,24
25,26
26,27
26,28
27,28
29,30
29,31
32,33
32,34
33,34
33,35
34,35
34,36
36,37
39,40
39,41
40,41
41,42
41,43
42,43
44,45
44,46
44,47
45,46
47,48
50,51
50,52
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
58,60
59,60
59,61
59,62
59,63
60,61
62,63
62,64
63,64
65,66
67,68
67,69
68,69
68,70
71,72
72,73
72,74
74,75
76,77
78,79
80,81
80,82
81,82
82,83
82,84
83,84
86,87
87,88
87,89
88,89
88,90
89,90
91,92
94,95
95,96
95,97
96,97
98,99
100,101
101,102
-----nextToken-----
2,4,5,7,9,10,16,18,22,24,28,30,31,35,37,38,43,46,48,49,53,55,61,64,66,69,70,73,75,77,79,84,85,90,92,93,97,99,102
-----computeFrom-----
33,34
33,35
34,35
34,36
41,42
41,43
51,52
51,53
58,59
58,60
62,63
62,64
72,73
72,74
87,88
87,89
-----guardedBy-----
37,92
55,79
53,99
64,90
75,92
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    return data;}
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(47,13,0)
(19,37,0)
(14,16,0)
(24,47,0)
(1,22,0)
(25,15,0)
(22,8,0)
(10,11,0)
(20,5,0)
(13,30,0)
(0,12,0)
(14,8,0)
(38,14,0)
(46,34,0)
(14,47,0)
(42,47,0)
(12,35,0)
(13,39,0)
(36,16,0)
(27,11,0)
(30,13,0)
(47,25,0)
(9,30,0)
(21,42,0)
(3,18,0)
(40,5,0)
(32,35,0)
(33,20,0)
(11,8,0)
(25,47,0)
(4,26,0)
(44,14,0)
(28,34,0)
(43,26,0)
(41,34,0)
(47,14,0)
(23,30,0)
(34,46,0)
(37,25,0)
(29,13,0)
(2,37,0)
(22,16,0)
(15,25,0)
(6,39,0)
(34,16,0)
(45,18,0)
(16,22,0)
(37,16,0)
(20,13,0)
(25,37,0)
(47,42,0)
(16,26,0)
(11,7,0)
(18,13,0)
(17,46,0)
(31,26,0)
(26,7,0)
(34,16,1)
(29,46,1)
(34,28,1)
(45,3,1)
(22,8,1)
(16,22,1)
(2,14,1)
(14,38,1)
(14,8,1)
(12,0,1)
(20,33,1)
(22,1,1)
(27,46,1)
(38,44,1)
(42,47,1)
(42,21,1)
(18,45,1)
(14,16,1)
(3,13,1)
(20,13,1)
(37,19,1)
(9,29,1)
(44,18,1)
(10,11,1)
(18,13,1)
(25,15,1)
(27,18,1)
(37,16,1)
(19,2,1)
(25,37,1)
(46,17,1)
(0,42,1)
(47,13,1)
(33,32,1)
(23,9,1)
(28,41,1)
(30,23,1)
(1,36,1)
(27,20,1)
(33,42,1)
(32,12,1)
(47,25,1)
(21,47,1)
(47,14,1)
(24,25,1)
(46,34,1)
(11,27,1)
(47,24,1)
(17,34,1)
(41,16,1)
(13,30,1)
(11,8,1)
(44,18,2)
(10,11,2)
(21,18,2)
(19,18,2)
(18,46,2)
(14,18,2)
(11,8,2)
(20,18,2)
(25,15,2)
(18,13,2)
(14,8,2)
(46,34,2)
(42,18,2)
(24,18,2)
(22,8,2)
(34,16,2)
(45,46,2)
(23,46,2)
(47,13,2)
(47,25,2)
(42,47,2)
(13,30,2)
(37,18,2)
(29,46,2)
(3,46,2)
(16,22,2)
(33,18,2)
(0,42,2)
(25,18,2)
(9,46,2)
(12,42,2)
(38,18,2)
(30,46,2)
(2,18,2)
(13,46,2)
(14,16,2)
(37,16,2)
(20,13,2)
(25,37,2)
(32,42,2)
(47,14,2)
(47,18,2)
-----------------------------------
(0,"fgetws()
(1,data)
(2,100)
(3,pFile)
(4,if (100-dataLen > 1)
(5,)
(6,if (pFile != NULL)
(7,)
(8,wchar_t * data)
(9,FILENAME)
(10,RET)
(11,return data;)
(12,printLine("fgetws()
(13,pFile = fopen(FILENAME, "r")
(14,data+dataLen)
(15,int)
(16,dataLen = wcslen(data)
(17,1)
(18,pFile != NULL)
(19,dataLen)
(20,fclose(pFile)
(21,NULL)
(22,wcslen(data)
(23,"r")
(24,pFile)
(25,(int)
(26,)
(27,data)
(28,dataLen)
(29,pFile)
(30,fopen(FILENAME, "r")
(31,pFile)
(32,\\\'\\\\0\\\')
(33,pFile)
(34,100-dataLen)
(35,)
(36,dataLen)
(37,100-dataLen)
(38,dataLen)
(39,)
(40,if (fgetws(data+dataLen, (int)
(41,100)
(42,fgetws(data+dataLen, (int)
(43,dataLen)
(44,data)
(45,NULL)
(46,100-dataLen > 1)
(47,fgetws(data+dataLen, (int)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
