-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32_spawnvp_64_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
121,122
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,122
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32_spawnvp_64_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data);}
void
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64_bad()
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data);
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data)
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink
CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink
&data
data
data
-----joern-----
(53,9,0)
(50,52,0)
(27,50,0)
(56,32,0)
(49,6,0)
(43,47,0)
(41,44,0)
(41,35,0)
(39,8,0)
(30,13,0)
(51,30,0)
(15,44,0)
(0,44,0)
(54,6,0)
(19,29,0)
(7,39,0)
(9,8,0)
(44,26,0)
(34,15,0)
(5,29,0)
(33,41,0)
(58,29,0)
(48,23,0)
(12,48,0)
(40,8,0)
(35,41,0)
(9,32,0)
(30,51,0)
(41,39,0)
(57,9,0)
(52,50,0)
(23,48,0)
(10,35,0)
(9,59,0)
(24,51,0)
(48,8,0)
(38,59,0)
(26,44,0)
(47,8,0)
(51,8,0)
(59,58,0)
(44,14,0)
(39,41,0)
(37,0,0)
(17,59,0)
(18,51,0)
(46,26,0)
(11,14,0)
(55,21,0)
(45,44,0)
(59,29,0)
(3,55,0)
(32,21,0)
(8,47,0)
(39,59,0)
(30,41,0)
(25,28,0)
(16,26,0)
(20,58,0)
(2,48,0)
(0,28,0)
(4,39,0)
(36,6,0)
(47,59,0)
(13,30,0)
(41,30,0)
(31,23,0)
(52,29,0)
(22,58,0)
(8,6,0)
(1,15,0)
(6,29,0)
(50,59,0)
(35,41,1)
(4,15,1)
(46,16,1)
(9,59,1)
(37,32,1)
(12,8,1)
(57,55,1)
(3,35,1)
(41,44,1)
(31,48,1)
(45,23,1)
(39,8,1)
(27,23,1)
(16,45,1)
(51,24,1)
(39,7,1)
(56,9,1)
(30,13,1)
(17,58,1)
(43,40,1)
(50,27,1)
(27,0,1)
(24,18,1)
(53,57,1)
(22,20,1)
(52,50,1)
(48,2,1)
(8,47,1)
(34,44,1)
(23,48,1)
(59,58,1)
(42,52,1)
(0,44,1)
(51,8,1)
(58,22,1)
(23,31,1)
(10,41,1)
(18,39,1)
(50,59,1)
(32,56,1)
(39,59,1)
(48,8,1)
(15,44,1)
(41,30,1)
(41,39,1)
(55,3,1)
(27,15,1)
(7,4,1)
(47,43,1)
(0,37,1)
(9,53,1)
(2,12,1)
(59,38,1)
(40,59,1)
(9,8,1)
(1,34,1)
(35,10,1)
(44,26,1)
(26,46,1)
(30,51,1)
(47,59,1)
(37,35,1)
(41,33,1)
(33,30,1)
(15,1,1)
(38,17,1)
(8,47,2)
(9,35,2)
(0,44,2)
(35,15,2)
(44,23,2)
(47,59,2)
(55,35,2)
(10,15,2)
(37,15,2)
(57,35,2)
(30,13,2)
(45,23,2)
(15,23,2)
(35,41,2)
(34,23,2)
(41,15,2)
(30,15,2)
(0,15,2)
(51,15,2)
(59,58,2)
(48,8,2)
(39,59,2)
(23,48,2)
(39,8,2)
(4,15,2)
(26,23,2)
(33,15,2)
(9,59,2)
(3,35,2)
(41,30,2)
(56,35,2)
(15,44,2)
(16,23,2)
(53,35,2)
(41,39,2)
(51,8,2)
(52,50,2)
(39,15,2)
(41,44,2)
(50,59,2)
(18,15,2)
(46,23,2)
(30,51,2)
(7,15,2)
(1,23,2)
(32,35,2)
(9,8,2)
(24,15,2)
(44,26,2)
-----------------------------------
(0,fclose(pFile)
(1,NULL)
(2,dataLen)
(3,"fgets()
(4,data)
(5,data)
(6,)
(7,dataLen)
(8,dataLen = strlen(data)
(9,data[dataLen])
(10,NULL)
(11,if (pFile != NULL)
(12,100)
(13,int)
(14,)
(15,pFile != NULL)
(16,FILENAME)
(17,data)
(18,100)
(19,dataBuffer)
(20,dataBuffer)
(21,)
(22,COMMAND_ARG2)
(23,100-dataLen > 1)
(24,dataLen)
(25,if (fgets(data+dataLen, (int)
(26,fopen(FILENAME, "r")
(27,data)
(28,)
(29,)
(30,(int)
(31,1)
(32,data[dataLen] = \\\'\\\\0\\\')
(33,pFile)
(34,pFile)
(35,fgets(data+dataLen, (int)
(36,dataLen)
(37,pFile)
(38,dataBuffer)
(39,data+dataLen)
(40,dataLen)
(41,fgets(data+dataLen, (int)
(42,RET)
(43,data)
(44,pFile = fopen(FILENAME, "r")
(45,pFile)
(46,"r")
(47,strlen(data)
(48,100-dataLen)
(49,pFile)
(50,&data)
(51,100-dataLen)
(52,CWE78_OS_Command_Injection__char_file_w32_spawnvp_64b_badSink(&data)
(53,dataLen)
(54,if (100-dataLen > 1)
(55,printLine("fgets()
(56,\\\'\\\\0\\\')
(57,data)
(58,dataBuffer[100] = COMMAND_ARG2)
(59,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
