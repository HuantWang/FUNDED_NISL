-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticFive!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
33,34
34,35
35,36
35,37
36,37
39,40
40,41
41,42
41,43
41,44
42,43
44,45
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
72,73
73,74
73,75
74,75
76,77
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,37,38,43,45,46,51,53,54,58,61,63,64,68,70,75,77
-----computeFrom-----
23,24
23,25
29,30
29,31
56,57
56,58
66,67
66,68
-----guardedBy-----
68,77
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
static void
goodG2B1()
goodG2B1
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
staticFive!=5
staticFive
staticFive
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(30,0,0)
(10,7,0)
(21,16,0)
(20,14,0)
(31,11,0)
(33,34,0)
(15,6,0)
(14,2,0)
(1,12,0)
(26,7,0)
(34,7,0)
(4,1,0)
(29,6,0)
(1,32,0)
(11,18,0)
(9,34,0)
(13,9,0)
(28,12,0)
(22,1,0)
(23,16,0)
(34,16,0)
(5,32,0)
(3,30,0)
(8,12,0)
(16,1,0)
(7,12,0)
(16,34,0)
(19,9,0)
(30,34,0)
(25,14,0)
(24,32,0)
(32,12,0)
(14,1,0)
(17,12,0)
(34,16,1)
(13,34,1)
(30,3,1)
(16,21,1)
(30,34,1)
(33,14,1)
(22,32,1)
(14,1,1)
(5,24,1)
(16,1,1)
(25,20,1)
(31,6,1)
(20,6,1)
(4,22,1)
(15,1,1)
(19,13,1)
(14,25,1)
(33,11,1)
(29,15,1)
(23,33,1)
(9,34,1)
(32,5,1)
(21,23,1)
(1,4,1)
(11,31,1)
(27,9,1)
(1,32,1)
(9,19,1)
(6,29,1)
(27,30,1)
(3,9,1)
(3,9,2)
(1,32,2)
(11,6,2)
(14,6,2)
(9,34,2)
(14,1,2)
(31,6,2)
(16,1,2)
(25,6,2)
(34,16,2)
(30,9,2)
(20,6,2)
(30,34,2)
-----------------------------------
(0,)
(1,data = data_buf)
(2,)
(3,pipe)
(4,data_buf)
(5,FULL_COMMAND)
(6,staticFive!=5)
(7,)
(8,data_buf)
(9,pipe != NULL)
(10,pipe)
(11,printLine("Benign, fixed string")
(12,)
(13,pipe)
(14,strcat(data, "*.*")
(15,staticFive)
(16,POPEN(data, "w")
(17,data)
(18,)
(19,NULL)
(20,data)
(21,"w")
(22,data)
(23,data)
(24,data_buf)
(25,"*.*")
(26,if (pipe != NULL)
(27,RET)
(28,if(staticFive!=5)
(29,5)
(30,PCLOSE(pipe)
(31,"Benign, fixed string")
(32,data_buf[100] = FULL_COMMAND)
(33,pipe)
(34,pipe = POPEN(data, "w")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
