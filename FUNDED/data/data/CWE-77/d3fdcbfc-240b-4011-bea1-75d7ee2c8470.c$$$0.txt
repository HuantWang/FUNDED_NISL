-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(5==5)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
34,35
34,36
34,37
35,36
37,38
40,41
41,42
41,43
41,44
41,45
41,46
41,47
41,48
42,43
44,45
46,47
48,49
50,51
52,53
54,55
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,31,36,38,39,43,45,47,49,51,53,55
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(5==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(5==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
5==5
5
5
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(6,23,0)
(4,0,0)
(12,14,0)
(15,7,0)
(1,14,0)
(7,19,0)
(17,0,0)
(9,12,0)
(2,12,0)
(13,7,0)
(21,0,0)
(19,14,0)
(19,12,0)
(0,14,0)
(7,16,0)
(10,23,0)
(20,14,0)
(8,19,0)
(24,19,0)
(5,0,0)
(11,0,0)
(18,14,0)
(3,0,0)
(8,12,1)
(10,6,1)
(6,19,1)
(23,10,1)
(24,8,1)
(7,13,1)
(11,7,1)
(17,11,1)
(22,0,1)
(0,3,1)
(21,5,1)
(3,21,1)
(7,19,1)
(13,15,1)
(11,23,1)
(19,24,1)
(12,9,1)
(15,23,1)
(5,4,1)
(19,12,1)
(4,17,1)
(9,2,1)
(15,23,2)
(13,23,2)
(7,19,2)
(19,12,2)
(7,23,2)
-----------------------------------
(0,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(1,data)
(2,dataBuffer)
(3,NULL)
(4,COMMAND_INT_PATH)
(5,COMMAND_ARG1)
(6,5)
(7,strcat(data, "*.*")
(8,data)
(9,COMMAND_ARG2)
(10,5)
(11,_P_WAIT)
(12,dataBuffer[100] = COMMAND_ARG2)
(13,"*.*")
(14,)
(15,data)
(16,)
(17,COMMAND_INT_PATH)
(18,if(5==5)
(19,data = dataBuffer)
(20,dataBuffer)
(21,COMMAND_ARG3)
(22,RET)
(23,5==5)
(24,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
