-----label-----
1
-----code-----
static wchar_t * badSource(wchar_t * data)
{
    if(badStatic)
    {
        {
            /* Read input from a file */
            size_t dataLen = wcslen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgetws() failed");
                        /* Restore NUL terminator if fgetws fails */
                        data[dataLen] = L'\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
36,37
36,38
37,38
37,39
38,39
38,40
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
48,51
49,50
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
75,76
76,77
76,78
78,79
80,81
82,83
84,85
84,86
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
92,94
93,94
95,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,39,41,42,47,50,52,53,57,59,65,68,70,73,74,77,79,81,83,88,89,94,96,97,101,103,106
-----computeFrom-----
37,38
37,39
38,39
38,40
45,46
45,47
55,56
55,57
62,63
62,64
66,67
66,68
76,77
76,78
91,92
91,93
-----guardedBy-----
41,96
59,83
57,103
68,94
79,96
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
static wchar_t * badSource(wchar_t * data){    if(badStatic)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
static wchar_t
* badSource(wchar_t * data)
*
badSource
wchar_t * data
wchar_t
* data
*
data
{    if(badStatic)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
if(badStatic)    {        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
badStatic
badStatic
{        {            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = wcslen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }                    fclose(pFile);                }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgetws() failed");                        /* Restore NUL terminator if fgetws fails */                        data[dataLen] = L'\0';                    }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(13,20,0)
(43,28,0)
(28,41,0)
(29,25,0)
(10,46,0)
(45,12,0)
(11,34,0)
(22,6,0)
(8,23,0)
(38,18,0)
(24,2,0)
(10,36,0)
(48,2,0)
(41,28,0)
(15,46,0)
(0,38,0)
(41,34,0)
(9,13,0)
(26,19,0)
(38,23,0)
(12,45,0)
(49,42,0)
(47,12,0)
(18,20,0)
(39,17,0)
(44,10,0)
(35,25,0)
(4,45,0)
(19,6,0)
(50,13,0)
(24,41,0)
(13,42,0)
(32,24,0)
(20,15,0)
(23,38,0)
(18,38,0)
(42,49,0)
(21,20,0)
(38,42,0)
(16,10,0)
(25,41,0)
(12,20,0)
(3,18,0)
(33,17,0)
(20,17,0)
(7,18,0)
(18,46,0)
(30,41,0)
(1,36,0)
(17,14,0)
(31,28,0)
(38,41,0)
(42,13,0)
(15,20,0)
(37,12,0)
(42,38,0)
(40,17,0)
(27,15,0)
(3,25,1)
(16,25,1)
(10,16,1)
(42,49,1)
(25,41,1)
(44,10,1)
(28,43,1)
(23,38,1)
(18,20,1)
(27,21,1)
(10,46,1)
(22,19,1)
(45,4,1)
(15,46,1)
(43,31,1)
(12,37,1)
(4,12,1)
(29,35,1)
(23,8,1)
(16,24,1)
(38,0,1)
(12,20,1)
(0,42,1)
(13,50,1)
(37,47,1)
(35,41,1)
(26,23,1)
(15,27,1)
(16,5,1)
(38,42,1)
(32,23,1)
(8,38,1)
(38,41,1)
(38,18,1)
(9,18,1)
(18,7,1)
(32,22,1)
(19,26,1)
(41,28,1)
(45,12,1)
(30,45,1)
(16,45,1)
(42,13,1)
(21,5,1)
(7,3,1)
(47,20,1)
(13,20,1)
(24,41,1)
(50,9,1)
(25,29,1)
(18,46,1)
(31,30,1)
(20,15,1)
(24,32,1)
(20,15,2)
(38,25,2)
(12,5,2)
(42,13,2)
(4,5,2)
(18,25,2)
(38,18,2)
(24,25,2)
(7,25,2)
(25,41,2)
(20,5,2)
(24,41,2)
(45,12,2)
(15,46,2)
(41,28,2)
(13,25,2)
(13,20,2)
(43,45,2)
(29,45,2)
(35,45,2)
(15,5,2)
(45,5,2)
(25,45,2)
(27,5,2)
(12,20,2)
(28,45,2)
(26,23,2)
(23,38,2)
(41,45,2)
(21,5,2)
(37,5,2)
(42,25,2)
(30,45,2)
(0,25,2)
(3,25,2)
(50,25,2)
(38,42,2)
(42,49,2)
(23,25,2)
(38,41,2)
(19,23,2)
(31,45,2)
(10,46,2)
(18,46,2)
(44,10,2)
(8,25,2)
(47,5,2)
(32,25,2)
(22,23,2)
(9,25,2)
(18,20,2)
-----------------------------------
(0,pFile)
(1,if(badStatic)
(2,)
(3,data)
(4,1)
(5,badStatic)
(6,)
(7,dataLen)
(8,NULL)
(9,100)
(10,return data;)
(11,if (pFile != NULL)
(12,100-dataLen)
(13,100-dataLen)
(14,)
(15,wcslen(data)
(16,data)
(17,)
(18,data+dataLen)
(19,printLine("fgetws()
(20,dataLen = wcslen(data)
(21,dataLen)
(22,\\\'\\\\0\\\')
(23,fgetws(data+dataLen, (int)
(24,fclose(pFile)
(25,pFile != NULL)
(26,"fgetws()
(27,data)
(28,fopen(FILENAME, "r")
(29,NULL)
(30,pFile)
(31,FILENAME)
(32,pFile)
(33,if (100-dataLen > 1)
(34,)
(35,pFile)
(36,)
(37,dataLen)
(38,fgetws(data+dataLen, (int)
(39,pFile)
(40,dataLen)
(41,pFile = fopen(FILENAME, "r")
(42,(int)
(43,"r")
(44,RET)
(45,100-dataLen > 1)
(46,wchar_t * data)
(47,100)
(48,if (fgetws(data+dataLen, (int)
(49,int)
(50,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
