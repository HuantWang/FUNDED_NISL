-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    /* FIX: Append a fixed string to data (not user / external input) */
    strcat(data, "*.*");
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        /* spawnl - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
62,63
62,64
62,65
62,66
62,67
62,68
62,69
63,64
65,66
67,68
69,70
71,72
73,74
75,76
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,64,66,68,70,72,74,76
-----computeFrom-----
29,30
29,31
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
static void
goodG2B()
goodG2B
{    char * data;    CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType
CWE78_OS_Command_Injection__char_connect_socket_w32spawnl_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(30,8,0)
(26,14,0)
(5,12,0)
(3,12,0)
(8,12,0)
(10,1,0)
(11,0,0)
(20,19,0)
(23,1,0)
(14,12,0)
(27,12,0)
(28,27,0)
(22,19,0)
(29,0,0)
(24,13,0)
(4,19,0)
(9,14,0)
(16,19,0)
(31,13,0)
(7,26,0)
(6,26,0)
(17,19,0)
(1,12,0)
(0,8,0)
(23,13,0)
(32,12,0)
(8,27,0)
(15,8,0)
(0,12,0)
(21,19,0)
(14,8,0)
(18,23,0)
(13,23,0)
(19,1,0)
(2,27,0)
(29,11,1)
(26,6,1)
(22,23,1)
(23,13,1)
(0,29,1)
(15,30,1)
(11,8,1)
(4,22,1)
(17,16,1)
(21,17,1)
(27,2,1)
(20,4,1)
(6,7,1)
(14,8,1)
(16,20,1)
(14,9,1)
(9,26,1)
(24,31,1)
(18,14,1)
(13,24,1)
(25,19,1)
(7,0,1)
(8,27,1)
(0,8,1)
(31,18,1)
(30,27,1)
(8,15,1)
(2,28,1)
(19,21,1)
(14,8,2)
(23,13,2)
(8,27,2)
(0,8,2)
-----------------------------------
(0,strcat(data, "*.*")
(1,)
(2,COMMAND_ARG2)
(3,data)
(4,COMMAND_INT_PATH)
(5,dataBuffer)
(6,unionFirst)
(7,myUnion)
(8,data = dataBuffer)
(9,data)
(10,data)
(11,data)
(12,)
(13,myUnion.unionSecond)
(14,myUnion.unionFirst = data)
(15,dataBuffer)
(16,COMMAND_ARG1)
(17,COMMAND_ARG3)
(18,data)
(19,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(20,COMMAND_INT_PATH)
(21,NULL)
(22,_P_WAIT)
(23,* data = myUnion.unionSecond)
(24,unionSecond)
(25,RET)
(26,myUnion.unionFirst)
(27,dataBuffer[100] = COMMAND_ARG2)
(28,dataBuffer)
(29,"*.*")
(30,data)
(31,myUnion)
(32,myUnion)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
