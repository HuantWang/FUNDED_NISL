-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalFalse)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
31,32
32,33
33,34
33,35
34,35
37,38
38,39
39,40
39,41
39,42
40,41
42,43
45,46
45,47
46,47
47,48
47,49
49,50
49,51
49,52
49,53
53,54
54,55
54,56
54,57
54,58
55,56
57,58
59,60
61,62
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,35,36,41,43,44,48,50,51,52,56,58,60,62,66,68,70,72
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
static void
goodG2B1()
goodG2B1
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalFalse)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalFalse
globalFalse
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(5,4,0)
(16,22,0)
(9,22,0)
(26,4,0)
(3,22,0)
(2,3,0)
(15,26,0)
(0,3,0)
(7,14,0)
(11,7,0)
(20,26,0)
(6,26,0)
(22,18,0)
(21,18,0)
(23,18,0)
(19,8,0)
(25,19,0)
(3,18,0)
(13,18,0)
(26,21,0)
(4,21,0)
(24,21,0)
(10,7,0)
(7,3,0)
(17,18,0)
(5,7,1)
(16,9,1)
(0,2,1)
(7,10,1)
(19,25,1)
(25,12,1)
(10,11,1)
(26,4,1)
(7,3,1)
(20,15,1)
(3,22,1)
(11,12,1)
(1,26,1)
(5,19,1)
(22,16,1)
(12,3,1)
(26,6,1)
(2,22,1)
(4,5,1)
(3,0,1)
(6,20,1)
(15,4,1)
(26,4,2)
(10,12,2)
(7,12,2)
(7,3,2)
(11,12,2)
(25,12,2)
(3,22,2)
(19,12,2)
-----------------------------------
(0,dataBuffer)
(1,RET)
(2,data)
(3,data = dataBuffer)
(4,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(5,args)
(6,args)
(7,strcat(data, "*.*")
(8,)
(9,dataBuffer)
(10,"*.*")
(11,data)
(12,globalFalse)
(13,dataBuffer)
(14,)
(15,_P_WAIT)
(16,COMMAND_ARG2)
(17,data)
(18,)
(19,printLine("Benign, fixed string")
(20,COMMAND_INT_PATH)
(21,)
(22,dataBuffer[100] = COMMAND_ARG2)
(23,if(globalFalse)
(24,args)
(25,"Benign, fixed string")
(26,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
