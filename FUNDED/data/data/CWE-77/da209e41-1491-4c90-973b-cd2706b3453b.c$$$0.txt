-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_08_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
83,85
83,86
83,87
83,88
83,89
83,90
84,85
86,87
88,89
90,91
92,93
94,95
96,97
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,89,91,93,95,97
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_08_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_08_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_08_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(10,7,0)
(42,17,0)
(22,17,0)
(10,13,0)
(4,33,0)
(3,27,0)
(2,17,0)
(45,22,0)
(1,16,0)
(11,22,0)
(10,44,0)
(5,33,0)
(26,31,0)
(33,10,0)
(19,12,0)
(18,25,0)
(36,10,0)
(29,27,0)
(9,27,0)
(7,10,0)
(33,12,0)
(24,8,0)
(16,13,0)
(32,23,0)
(33,8,0)
(13,16,0)
(15,17,0)
(25,7,0)
(12,27,0)
(6,12,0)
(21,22,0)
(30,22,0)
(10,33,0)
(34,13,0)
(31,13,0)
(28,7,0)
(39,31,0)
(8,23,0)
(41,23,0)
(37,22,0)
(14,8,0)
(35,25,0)
(27,0,0)
(38,6,0)
(8,17,0)
(6,8,0)
(12,6,0)
(25,12,0)
(20,22,0)
(7,25,0)
(13,27,0)
(23,17,0)
(10,7,1)
(5,31,1)
(20,37,1)
(23,41,1)
(6,38,1)
(10,13,1)
(24,14,1)
(25,12,1)
(45,10,1)
(12,6,1)
(18,35,1)
(30,45,1)
(10,33,1)
(31,13,1)
(26,13,1)
(45,31,1)
(37,11,1)
(28,36,1)
(38,19,1)
(33,12,1)
(45,43,1)
(14,23,1)
(22,20,1)
(36,33,1)
(39,26,1)
(11,21,1)
(33,8,1)
(7,25,1)
(41,32,1)
(31,39,1)
(34,12,1)
(33,4,1)
(19,43,1)
(43,8,1)
(21,30,1)
(13,16,1)
(40,22,1)
(25,18,1)
(4,5,1)
(6,8,1)
(8,23,1)
(16,1,1)
(35,28,1)
(8,24,1)
(1,34,1)
(10,33,2)
(7,31,2)
(19,43,2)
(31,13,2)
(34,43,2)
(33,8,2)
(36,31,2)
(33,31,2)
(4,31,2)
(10,13,2)
(18,31,2)
(1,43,2)
(28,31,2)
(5,31,2)
(6,43,2)
(6,8,2)
(10,31,2)
(7,25,2)
(12,6,2)
(35,31,2)
(25,12,2)
(8,23,2)
(13,16,2)
(16,43,2)
(13,43,2)
(33,12,2)
(12,43,2)
(38,43,2)
(31,43,2)
(26,43,2)
(10,7,2)
(25,31,2)
(39,43,2)
-----------------------------------
(0,)
(1,ENV_VARIABLE)
(2,if(staticReturnsTrue()
(3,dataLen)
(4,dataLen)
(5,data)
(6,strlen(data)
(7,100-dataLen-1)
(8,data = dataBuffer)
(9,if (environment != NULL)
(10,strncat(data+dataLen, environment, 100-dataLen-1)
(11,COMMAND_ARG1)
(12,dataLen = strlen(data)
(13,* environment = GETENV(ENV_VARIABLE)
(14,data)
(15,data)
(16,GETENV(ENV_VARIABLE)
(17,)
(18,1)
(19,dataLen)
(20,NULL)
(21,COMMAND_INT_PATH)
(22,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(23,dataBuffer[100] = COMMAND_ARG2)
(24,dataBuffer)
(25,dataLen-1)
(26,environment)
(27,)
(28,100)
(29,environment)
(30,COMMAND_INT_PATH)
(31,environment != NULL)
(32,dataBuffer)
(33,data+dataLen)
(34,environment)
(35,dataLen)
(36,environment)
(37,COMMAND_ARG3)
(38,data)
(39,NULL)
(40,RET)
(41,COMMAND_ARG2)
(42,dataBuffer)
(43,staticReturnsTrue()
(44,)
(45,_P_WAIT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
