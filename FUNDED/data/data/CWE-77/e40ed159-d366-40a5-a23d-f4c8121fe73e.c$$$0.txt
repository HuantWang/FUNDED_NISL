-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char * *dataPtr1 = &data;
    char * *dataPtr2 = &data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        char * data = *dataPtr1;
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
        *dataPtr1 = data;
    }
    {
        char * data = *dataPtr2;
        {
            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* spawnvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _spawnvp(_P_WAIT, COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
15,19
19,20
20,21
21,22
23,24
24,25
24,26
26,27
26,28
26,29
26,30
30,31
31,32
32,33
34,35
35,36
35,37
37,38
37,39
37,40
39,40
41,42
42,43
44,45
45,46
45,47
46,47
48,49
50,51
50,52
50,53
51,52
52,53
52,54
54,55
54,56
54,57
57,58
58,59
59,60
61,62
62,63
62,64
62,65
63,64
65,66
68,69
69,70
69,71
70,71
71,72
73,74
75,76
75,77
76,77
77,78
77,79
79,80
79,81
79,82
82,83
83,84
84,85
86,87
86,88
87,88
88,89
88,90
90,91
90,92
90,93
90,94
94,95
95,96
95,97
95,98
95,99
96,97
98,99
100,101
102,103
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
-----nextToken-----
2,4,8,10,11,14,16,17,18,22,25,27,28,29,33,36,38,40,43,47,49,53,55,56,60,64,66,67,72,74,78,80,81,85,89,91,92,93,97,99,101,103,107,109,111,113
-----computeFrom-----
45,46
45,47
69,70
69,71
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;UnaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;UnaryExpression;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
static void
goodG2B()
goodG2B
{    char * data;    char * *dataPtr1 = &data;    char * *dataPtr2 = &data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }    {        char * data = *dataPtr2;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
char * data;
char * data;
char
* data
*
data
char * *dataPtr1 = &data;
char * *dataPtr1 = &data;
char
* *dataPtr1 = &data
*
*
dataPtr1
= &data
&data
data
data
char * *dataPtr2 = &data;
char * *dataPtr2 = &data;
char
* *dataPtr2 = &data
*
*
dataPtr2
= &data
&data
data
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        char * data = *dataPtr1;        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        *dataPtr1 = data;    }
char * data = *dataPtr1;
char * data = *dataPtr1;
char
* data = *dataPtr1
*
data
= *dataPtr1
*dataPtr1
dataPtr1
dataPtr1
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
*dataPtr1 = data;
*dataPtr1 = data
*dataPtr1
dataPtr1
dataPtr1
data
data
{        char * data = *dataPtr2;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }
char * data = *dataPtr2;
char * data = *dataPtr2;
char
* data = *dataPtr2
*
data
= *dataPtr2
*dataPtr2
dataPtr2
dataPtr2
{            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(32,4,0)
(8,19,0)
(28,11,0)
(2,37,0)
(37,39,0)
(13,34,0)
(26,22,0)
(42,34,0)
(1,4,0)
(19,6,0)
(46,29,0)
(5,18,0)
(7,22,0)
(10,34,0)
(20,27,0)
(2,27,0)
(9,45,0)
(23,18,0)
(11,43,0)
(19,41,0)
(15,34,0)
(45,43,0)
(14,43,0)
(18,4,0)
(24,13,0)
(17,6,0)
(25,41,0)
(12,29,0)
(31,11,0)
(29,19,0)
(43,10,0)
(6,34,0)
(37,34,0)
(16,7,0)
(44,34,0)
(33,10,0)
(22,13,0)
(4,34,0)
(41,19,0)
(29,6,0)
(36,39,0)
(3,13,0)
(27,19,0)
(22,7,0)
(0,11,0)
(13,3,0)
(27,6,0)
(39,37,0)
(35,2,0)
(41,37,0)
(7,10,0)
(21,3,0)
(11,45,0)
(38,37,0)
(18,34,0)
(40,34,0)
(1,13,1)
(25,8,1)
(39,36,1)
(4,32,1)
(37,39,1)
(13,3,1)
(45,9,1)
(22,13,1)
(35,29,1)
(29,12,1)
(27,20,1)
(16,27,1)
(2,35,1)
(26,16,1)
(36,38,1)
(12,46,1)
(30,11,1)
(31,28,1)
(8,18,1)
(2,37,1)
(7,22,1)
(23,5,1)
(21,24,1)
(29,19,1)
(28,0,1)
(11,31,1)
(19,41,1)
(46,19,1)
(24,37,1)
(0,45,1)
(27,19,1)
(18,4,1)
(22,26,1)
(18,23,1)
(20,2,1)
(9,7,1)
(5,4,1)
(41,37,1)
(3,21,1)
(11,45,1)
(41,25,1)
(32,1,1)
(37,39,2)
(18,4,2)
(2,37,2)
(27,19,2)
(22,13,2)
(41,37,2)
(7,22,2)
(11,45,2)
(29,19,2)
(13,3,2)
(19,41,2)
-----------------------------------
(0,_P_WAIT)
(1,dataBuffer)
(2,*dataPtr1)
(3,&data)
(4,dataBuffer[100] = COMMAND_ARG2)
(5,data)
(6,)
(7,* data = *dataPtr2)
(8,data)
(9,args)
(10,)
(11,_spawnvp(_P_WAIT, COMMAND_INT, args)
(12,"*.*")
(13,* *dataPtr2 = &data)
(14,args)
(15,dataPtr2)
(16,data)
(17,data)
(18,data = dataBuffer)
(19,* data = *dataPtr1)
(20,data)
(21,data)
(22,*dataPtr2)
(23,dataBuffer)
(24,dataPtr2)
(25,dataPtr1)
(26,dataPtr2)
(27,*dataPtr1 = data)
(28,COMMAND_INT)
(29,strcat(data, "*.*")
(30,RET)
(31,args)
(32,COMMAND_ARG2)
(33,data)
(34,)
(35,dataPtr1)
(36,data)
(37,* *dataPtr1 = &data)
(38,dataPtr1)
(39,&data)
(40,dataBuffer)
(41,*dataPtr1)
(42,dataPtr1)
(43,)
(44,data)
(45,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(46,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
