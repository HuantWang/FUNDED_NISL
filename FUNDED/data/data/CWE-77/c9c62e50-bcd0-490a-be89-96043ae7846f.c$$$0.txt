-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_bad()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType myUnion;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        /* wspawnl - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
104,105
104,106
104,107
104,108
104,109
104,110
104,111
105,106
107,108
109,110
111,112
113,114
115,116
117,118
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,110,112,114,116,118
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_bad(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* wspawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_bad
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* wspawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType
CWE78_OS_Command_Injection__wchar_t_environment_w32spawnl_34_unionType
myUnion
myUnion
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        /* wspawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_wspawnl
_wspawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(35,48,0)
(36,55,0)
(26,29,0)
(15,28,0)
(50,11,0)
(17,29,0)
(51,1,0)
(23,12,0)
(41,27,0)
(35,1,0)
(14,29,0)
(51,12,0)
(54,47,0)
(19,26,0)
(6,39,0)
(48,35,0)
(49,51,0)
(43,28,0)
(46,12,0)
(12,27,0)
(38,39,0)
(39,29,0)
(40,51,0)
(42,48,0)
(48,12,0)
(0,28,0)
(9,39,0)
(12,23,0)
(34,35,0)
(3,29,0)
(38,29,0)
(4,53,0)
(16,28,0)
(45,5,0)
(1,35,0)
(48,39,0)
(32,27,0)
(30,27,0)
(13,1,0)
(39,26,0)
(8,47,0)
(47,27,0)
(35,47,0)
(55,38,0)
(27,29,0)
(2,53,0)
(24,54,0)
(11,17,0)
(53,11,0)
(21,28,0)
(5,47,0)
(20,29,0)
(35,7,0)
(1,51,0)
(10,26,0)
(31,17,0)
(23,39,0)
(11,53,0)
(44,55,0)
(47,5,0)
(25,54,0)
(18,38,0)
(37,23,0)
(28,17,0)
(22,48,0)
(52,28,0)
(51,40,1)
(48,42,1)
(46,39,1)
(8,12,1)
(50,38,1)
(9,26,1)
(39,6,1)
(16,43,1)
(13,34,1)
(48,12,1)
(52,0,1)
(38,18,1)
(0,16,1)
(35,47,1)
(40,49,1)
(55,36,1)
(48,39,1)
(2,50,1)
(39,26,1)
(15,21,1)
(37,46,1)
(23,37,1)
(11,53,1)
(19,10,1)
(47,5,1)
(1,51,1)
(35,48,1)
(28,15,1)
(4,2,1)
(43,11,1)
(18,55,1)
(54,47,1)
(36,44,1)
(6,9,1)
(42,22,1)
(45,8,1)
(22,54,1)
(23,39,1)
(26,19,1)
(5,45,1)
(34,48,1)
(44,54,1)
(38,39,1)
(24,25,1)
(51,12,1)
(49,13,1)
(25,47,1)
(53,4,1)
(54,24,1)
(21,52,1)
(12,23,1)
(33,28,1)
(44,35,1)
(35,1,1)
(48,12,2)
(48,54,2)
(48,39,2)
(49,54,2)
(23,39,2)
(1,54,2)
(13,54,2)
(35,1,2)
(38,39,2)
(12,23,2)
(1,51,2)
(42,54,2)
(35,48,2)
(40,54,2)
(39,26,2)
(11,53,2)
(35,54,2)
(51,54,2)
(47,5,2)
(35,47,2)
(54,47,2)
(22,54,2)
(34,54,2)
(51,12,2)
-----------------------------------
(0,COMMAND_INT_PATH)
(1,100-dataLen-1)
(2,myUnion)
(3,myUnion)
(4,unionSecond)
(5,GETENV(ENV_VARIABLE)
(6,dataBuffer)
(7,)
(8,environment)
(9,data)
(10,dataBuffer)
(11,* data = myUnion.unionSecond)
(12,dataLen = wcslen(data)
(13,100)
(14,dataBuffer)
(15,NULL)
(16,COMMAND_INT_PATH)
(17,)
(18,data)
(19,COMMAND_ARG2)
(20,data)
(21,COMMAND_ARG3)
(22,data)
(23,wcslen(data)
(24,NULL)
(25,environment)
(26,dataBuffer[100] = COMMAND_ARG2)
(27,)
(28,_wspawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(29,)
(30,environment)
(31,data)
(32,if (environment != NULL)
(33,RET)
(34,environment)
(35,wcsncat(data+dataLen, environment, 100-dataLen-1)
(36,unionFirst)
(37,data)
(38,myUnion.unionFirst = data)
(39,data = dataBuffer)
(40,1)
(41,dataLen)
(42,dataLen)
(43,_P_WAIT)
(44,myUnion)
(45,ENV_VARIABLE)
(46,dataLen)
(47,* environment = GETENV(ENV_VARIABLE)
(48,data+dataLen)
(49,dataLen)
(50,data)
(51,dataLen-1)
(52,COMMAND_ARG1)
(53,myUnion.unionSecond)
(54,environment != NULL)
(55,myUnion.unionFirst)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
