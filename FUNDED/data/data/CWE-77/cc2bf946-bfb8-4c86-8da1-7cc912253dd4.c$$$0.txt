-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_02_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wexecv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECV(COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
80,81
80,82
81,82
82,83
82,84
84,85
84,86
84,87
84,88
88,89
89,90
89,91
89,92
89,93
90,91
92,93
94,95
96,97
98,99
99,100
99,101
99,102
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,83,85,86,87,91,93,95,97,101,103,105
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
-----guardedBy-----
59,73
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_02_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_02_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_02_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECV(COMMAND_INT_PATH, args);
EXECV(COMMAND_INT_PATH, args)
EXECV
EXECV
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(3,1,0)
(16,2,0)
(38,10,0)
(18,25,0)
(43,10,0)
(1,5,0)
(21,34,0)
(29,43,0)
(24,38,0)
(42,5,0)
(45,10,0)
(25,29,0)
(20,29,0)
(30,43,0)
(27,18,0)
(10,7,0)
(14,38,0)
(36,29,0)
(35,24,0)
(9,25,0)
(39,10,0)
(34,38,0)
(17,23,0)
(25,15,0)
(40,5,0)
(25,18,0)
(31,2,0)
(26,42,0)
(6,27,0)
(44,42,0)
(29,2,0)
(4,34,0)
(12,18,0)
(2,5,0)
(2,1,0)
(37,44,0)
(18,27,0)
(8,5,0)
(38,24,0)
(22,2,0)
(0,5,0)
(41,31,0)
(27,43,0)
(28,27,0)
(25,38,0)
(13,1,0)
(23,42,0)
(19,44,0)
(44,23,0)
(29,25,0)
(11,10,0)
(43,31,0)
(31,43,0)
(33,44,1)
(28,12,1)
(13,3,1)
(27,6,1)
(34,4,1)
(29,36,1)
(38,24,1)
(35,14,1)
(44,19,1)
(4,21,1)
(31,41,1)
(1,13,1)
(29,43,1)
(6,28,1)
(30,32,1)
(14,43,1)
(17,34,1)
(12,9,1)
(24,35,1)
(17,32,1)
(2,16,1)
(18,27,1)
(20,34,1)
(9,29,1)
(17,25,1)
(19,37,1)
(31,2,1)
(36,20,1)
(22,1,1)
(21,38,1)
(27,43,1)
(44,23,1)
(34,38,1)
(25,29,1)
(2,1,1)
(29,2,1)
(32,2,1)
(41,30,1)
(23,17,1)
(16,22,1)
(43,31,1)
(37,23,1)
(25,18,1)
(25,38,1)
(29,2,2)
(35,32,2)
(4,32,2)
(34,38,2)
(29,34,2)
(24,32,2)
(21,32,2)
(38,24,2)
(9,34,2)
(28,34,2)
(31,2,2)
(36,34,2)
(41,32,2)
(25,34,2)
(27,34,2)
(25,18,2)
(27,43,2)
(30,32,2)
(31,32,2)
(43,31,2)
(44,23,2)
(18,27,2)
(14,32,2)
(25,38,2)
(6,34,2)
(20,34,2)
(29,43,2)
(18,34,2)
(25,29,2)
(2,1,2)
(34,32,2)
(38,32,2)
(43,32,2)
(12,34,2)
-----------------------------------
(0,if(1)
(1,dataBuffer[100] = COMMAND_ARG2)
(2,data = dataBuffer)
(3,dataBuffer)
(4,NULL)
(5,)
(6,1)
(7,)
(8,dataBuffer)
(9,environment)
(10,)
(11,environment)
(12,100)
(13,COMMAND_ARG2)
(14,environment)
(15,)
(16,dataBuffer)
(17,args)
(18,100-dataLen-1)
(19,args)
(20,data)
(21,environment)
(22,data)
(23,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(24,GETENV(ENV_VARIABLE)
(25,wcsncat(data+dataLen, environment, 100-dataLen-1)
(26,args)
(27,dataLen-1)
(28,dataLen)
(29,data+dataLen)
(30,dataLen)
(31,wcslen(data)
(32,1)
(33,RET)
(34,environment != NULL)
(35,ENV_VARIABLE)
(36,dataLen)
(37,COMMAND_INT_PATH)
(38,* environment = GETENV(ENV_VARIABLE)
(39,if (environment != NULL)
(40,data)
(41,data)
(42,)
(43,dataLen = wcslen(data)
(44,EXECV(COMMAND_INT_PATH, args)
(45,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
