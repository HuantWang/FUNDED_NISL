-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    while(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
        break;
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
32,33
32,34
32,35
33,34
35,36
39,40
40,41
40,42
40,43
40,44
40,45
40,46
40,47
41,42
43,44
45,46
47,48
49,50
51,52
53,54
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,34,36,37,38,42,44,46,48,50,52,54
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B()
goodG2B
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
break;
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(23,3,0)
(9,3,0)
(15,0,0)
(18,0,0)
(17,15,0)
(11,20,0)
(19,7,0)
(16,15,0)
(20,21,0)
(3,20,0)
(10,0,0)
(3,7,0)
(8,15,0)
(6,21,0)
(20,0,0)
(13,15,0)
(21,0,0)
(22,20,0)
(1,15,0)
(2,0,0)
(12,21,0)
(4,15,0)
(5,15,1)
(4,16,1)
(17,4,1)
(23,14,1)
(14,20,1)
(15,13,1)
(21,12,1)
(3,20,1)
(13,17,1)
(3,9,1)
(1,14,1)
(19,3,1)
(20,21,1)
(22,21,1)
(11,22,1)
(12,6,1)
(8,1,1)
(9,23,1)
(16,8,1)
(1,19,1)
(20,11,1)
(23,14,2)
(9,14,2)
(20,21,2)
(19,14,2)
(3,14,2)
(3,20,2)
-----------------------------------
(0,)
(1,_P_WAIT)
(2,while(1)
(3,strcat(data, "*.*")
(4,COMMAND_ARG1)
(5,RET)
(6,dataBuffer)
(7,)
(8,COMMAND_INT)
(9,"*.*")
(10,data)
(11,dataBuffer)
(12,COMMAND_ARG2)
(13,NULL)
(14,1)
(15,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(16,COMMAND_INT)
(17,COMMAND_ARG3)
(18,dataBuffer)
(19,break;)
(20,data = dataBuffer)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,data)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
