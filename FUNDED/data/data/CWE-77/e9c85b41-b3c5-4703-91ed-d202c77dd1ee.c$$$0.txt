-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_popen_64_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
121,122
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,122
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_popen_64_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data);}
void
CWE78_OS_Command_Injection__char_file_popen_64_bad()
CWE78_OS_Command_Injection__char_file_popen_64_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data);
CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data)
CWE78_OS_Command_Injection__char_file_popen_64b_badSink
CWE78_OS_Command_Injection__char_file_popen_64b_badSink
&data
data
data
-----joern-----
(12,13,0)
(38,42,0)
(1,59,0)
(48,58,0)
(26,13,0)
(16,12,0)
(13,10,0)
(26,59,0)
(46,9,0)
(2,23,0)
(1,13,0)
(17,1,0)
(33,38,0)
(14,11,0)
(13,1,0)
(55,10,0)
(42,56,0)
(4,36,0)
(27,45,0)
(54,9,0)
(8,15,0)
(49,26,0)
(11,15,0)
(42,4,0)
(43,13,0)
(3,56,0)
(10,58,0)
(23,9,0)
(4,42,0)
(25,21,0)
(28,10,0)
(44,58,0)
(34,0,0)
(59,58,0)
(54,30,0)
(45,21,0)
(39,48,0)
(18,38,0)
(24,10,0)
(57,58,0)
(52,39,0)
(21,45,0)
(31,54,0)
(29,26,0)
(26,8,0)
(56,42,0)
(42,9,0)
(39,59,0)
(41,53,0)
(38,59,0)
(40,46,0)
(4,12,0)
(37,9,0)
(21,13,0)
(6,30,0)
(50,23,0)
(19,46,0)
(32,8,0)
(48,39,0)
(12,4,0)
(22,42,0)
(7,59,0)
(20,21,0)
(5,53,0)
(53,58,0)
(51,59,0)
(9,0,0)
(42,38,0)
(9,46,0)
(38,13,0)
(36,4,0)
(59,53,0)
(47,12,0)
(22,4,1)
(21,20,1)
(52,45,1)
(26,49,1)
(41,5,1)
(38,59,1)
(2,9,1)
(52,54,1)
(3,42,1)
(48,39,1)
(54,9,1)
(11,14,1)
(53,41,1)
(21,13,1)
(39,52,1)
(33,18,1)
(31,56,1)
(38,13,1)
(56,42,1)
(20,25,1)
(19,40,1)
(1,17,1)
(23,9,1)
(12,47,1)
(8,32,1)
(7,51,1)
(50,2,1)
(59,53,1)
(42,38,1)
(31,8,1)
(42,9,1)
(14,56,1)
(26,59,1)
(17,43,1)
(9,46,1)
(59,7,1)
(49,29,1)
(47,16,1)
(37,45,1)
(23,50,1)
(51,53,1)
(42,4,1)
(40,37,1)
(42,22,1)
(35,48,1)
(46,19,1)
(4,36,1)
(25,13,1)
(29,11,1)
(52,23,1)
(38,33,1)
(39,59,1)
(26,13,1)
(18,23,1)
(1,59,1)
(32,26,1)
(27,21,1)
(4,12,1)
(54,31,1)
(56,3,1)
(12,13,1)
(43,59,1)
(16,38,1)
(45,21,1)
(45,27,1)
(13,1,1)
(42,4,2)
(18,23,2)
(42,38,2)
(26,59,2)
(45,21,2)
(56,23,2)
(56,42,2)
(22,23,2)
(42,23,2)
(31,23,2)
(16,23,2)
(29,56,2)
(4,12,2)
(26,56,2)
(49,56,2)
(4,23,2)
(23,45,2)
(12,13,2)
(47,23,2)
(32,56,2)
(2,45,2)
(26,13,2)
(39,59,2)
(59,53,2)
(21,13,2)
(37,45,2)
(50,45,2)
(9,45,2)
(46,45,2)
(54,9,2)
(40,45,2)
(12,23,2)
(54,23,2)
(38,23,2)
(38,13,2)
(33,23,2)
(4,36,2)
(42,9,2)
(23,9,2)
(48,39,2)
(38,59,2)
(14,56,2)
(8,56,2)
(19,45,2)
(1,59,2)
(9,46,2)
(11,56,2)
(3,23,2)
(13,1,2)
-----------------------------------
(0,)
(1,strlen(data)
(2,pFile)
(3,NULL)
(4,(int)
(5,data_buf)
(6,if (fgets(data+dataLen, (int)
(7,data_buf)
(8,data[dataLen] = \\\'\\\\0\\\')
(9,pFile = fopen(FILENAME, "r")
(10,)
(11,printLine("fgets()
(12,100-dataLen)
(13,dataLen = strlen(data)
(14,"fgets()
(15,)
(16,100)
(17,data)
(18,data)
(19,"r")
(20,dataLen)
(21,100-dataLen)
(22,pFile)
(23,pFile != NULL)
(24,pFile)
(25,100)
(26,data[dataLen])
(27,1)
(28,dataLen)
(29,data)
(30,)
(31,pFile)
(32,\\\'\\\\0\\\')
(33,dataLen)
(34,if (pFile != NULL)
(35,RET)
(36,int)
(37,pFile)
(38,data+dataLen)
(39,&data)
(40,FILENAME)
(41,FULL_COMMAND)
(42,fgets(data+dataLen, (int)
(43,dataLen)
(44,data)
(45,100-dataLen > 1)
(46,fopen(FILENAME, "r")
(47,dataLen)
(48,CWE78_OS_Command_Injection__char_file_popen_64b_badSink(&data)
(49,dataLen)
(50,NULL)
(51,data)
(52,data)
(53,data_buf[100] = FULL_COMMAND)
(54,fclose(pFile)
(55,if (100-dataLen > 1)
(56,fgets(data+dataLen, (int)
(57,data_buf)
(58,)
(59,data = data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
