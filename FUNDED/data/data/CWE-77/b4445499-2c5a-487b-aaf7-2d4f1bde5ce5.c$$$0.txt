-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_file_execlp_01_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* wexeclp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
117,120
117,121
117,122
117,123
118,119
120,121
122,123
124,125
126,127
128,129
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121,123,125,127,129
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_file_execlp_01_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_file_execlp_01_bad()
CWE78_OS_Command_Injection__wchar_t_file_execlp_01_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* wexeclp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(53,45,0)
(34,13,0)
(19,32,0)
(56,32,0)
(47,12,0)
(20,2,0)
(36,2,0)
(24,7,0)
(22,49,0)
(48,55,0)
(12,30,0)
(15,7,0)
(49,45,0)
(51,8,0)
(37,38,0)
(1,38,0)
(17,3,0)
(0,8,0)
(4,11,0)
(41,8,0)
(14,19,0)
(24,49,0)
(58,0,0)
(45,8,0)
(23,54,0)
(46,13,0)
(26,0,0)
(55,36,0)
(2,36,0)
(25,0,0)
(36,54,0)
(57,18,0)
(31,1,0)
(7,8,0)
(35,36,0)
(28,7,0)
(30,36,0)
(39,55,0)
(49,24,0)
(43,18,0)
(21,43,0)
(40,11,0)
(12,47,0)
(7,3,0)
(29,24,0)
(30,33,0)
(11,12,0)
(42,0,0)
(30,12,0)
(50,45,0)
(13,7,0)
(33,30,0)
(10,3,0)
(13,30,0)
(13,49,0)
(11,49,0)
(52,2,0)
(1,49,0)
(43,36,0)
(44,0,0)
(5,30,0)
(3,8,0)
(30,13,0)
(27,1,0)
(6,45,0)
(38,1,0)
(12,11,0)
(16,33,0)
(11,49,1)
(40,13,1)
(38,1,1)
(33,16,1)
(58,42,1)
(29,22,1)
(33,30,1)
(2,52,1)
(42,38,1)
(44,26,1)
(30,5,1)
(52,20,1)
(38,37,1)
(46,34,1)
(42,55,1)
(27,49,1)
(11,4,1)
(34,55,1)
(31,27,1)
(43,36,1)
(24,29,1)
(16,30,1)
(7,28,1)
(25,44,1)
(13,7,1)
(15,3,1)
(10,17,1)
(37,1,1)
(56,19,1)
(39,48,1)
(5,12,1)
(43,21,1)
(49,24,1)
(13,49,1)
(48,36,1)
(36,2,1)
(30,13,1)
(21,56,1)
(14,33,1)
(28,15,1)
(21,33,1)
(3,10,1)
(13,46,1)
(55,36,1)
(24,7,1)
(20,35,1)
(7,3,1)
(12,47,1)
(42,43,1)
(1,49,1)
(30,36,1)
(4,40,1)
(30,12,1)
(1,31,1)
(26,58,1)
(22,7,1)
(9,0,1)
(55,39,1)
(19,14,1)
(0,25,1)
(12,11,1)
(35,38,1)
(12,11,2)
(19,33,2)
(13,55,2)
(30,13,2)
(4,55,2)
(39,38,2)
(21,55,2)
(48,38,2)
(52,38,2)
(13,49,2)
(14,33,2)
(1,49,2)
(40,55,2)
(30,36,2)
(43,55,2)
(7,3,2)
(20,38,2)
(56,33,2)
(30,55,2)
(55,38,2)
(12,55,2)
(11,49,2)
(38,1,2)
(36,2,2)
(2,38,2)
(46,55,2)
(43,36,2)
(33,30,2)
(11,55,2)
(30,12,2)
(5,55,2)
(36,38,2)
(33,55,2)
(13,7,2)
(34,55,2)
(24,7,2)
(12,47,2)
(35,38,2)
(16,55,2)
(55,36,2)
(49,24,2)
-----------------------------------
(0,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(1,100-dataLen)
(2,fopen(FILENAME, "r")
(3,dataBuffer[100] = COMMAND_ARG2)
(4,dataLen)
(5,pFile)
(6,if (100-dataLen > 1)
(7,data = dataBuffer)
(8,)
(9,RET)
(10,COMMAND_ARG2)
(11,100-dataLen)
(12,(int)
(13,data+dataLen)
(14,"fgetws()
(15,data)
(16,NULL)
(17,dataBuffer)
(18,)
(19,printLine("fgetws()
(20,FILENAME)
(21,pFile)
(22,dataLen)
(23,if (pFile != NULL)
(24,wcslen(data)
(25,NULL)
(26,COMMAND_ARG1)
(27,100)
(28,dataBuffer)
(29,data)
(30,fgetws(data+dataLen, (int)
(31,dataLen)
(32,)
(33,fgetws(data+dataLen, (int)
(34,data)
(35,pFile)
(36,pFile = fopen(FILENAME, "r")
(37,1)
(38,100-dataLen > 1)
(39,NULL)
(40,100)
(41,dataBuffer)
(42,COMMAND_INT)
(43,fclose(pFile)
(44,COMMAND_ARG3)
(45,)
(46,dataLen)
(47,int)
(48,pFile)
(49,dataLen = wcslen(data)
(50,pFile)
(51,data)
(52,"r")
(53,dataLen)
(54,)
(55,pFile != NULL)
(56,\\\'\\\\0\\\')
(57,if (fgetws(data+dataLen, (int)
(58,COMMAND_INT)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
