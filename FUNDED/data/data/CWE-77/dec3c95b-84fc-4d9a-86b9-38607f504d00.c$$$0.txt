-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_12_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_12_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_12_bad()
CWE78_OS_Command_Injection__char_environment_system_12_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(13,18,0)
(14,42,0)
(19,44,0)
(12,9,0)
(50,10,0)
(33,35,0)
(32,48,0)
(50,9,0)
(9,49,0)
(34,18,0)
(28,13,0)
(37,30,0)
(15,46,0)
(47,50,0)
(36,10,0)
(52,41,0)
(7,51,0)
(46,50,0)
(3,30,0)
(35,42,0)
(10,11,0)
(23,45,0)
(0,44,0)
(38,11,0)
(4,52,0)
(41,27,0)
(31,9,0)
(8,41,0)
(40,11,0)
(2,35,0)
(44,11,0)
(44,41,0)
(29,23,0)
(41,42,0)
(41,52,0)
(44,50,0)
(1,46,0)
(41,44,0)
(18,11,0)
(11,51,0)
(18,13,0)
(23,11,0)
(51,30,0)
(11,30,0)
(5,42,0)
(46,52,0)
(21,22,0)
(52,46,0)
(42,9,0)
(17,23,0)
(43,30,0)
(48,26,0)
(22,26,0)
(24,9,0)
(16,51,0)
(42,14,0)
(39,30,0)
(10,50,0)
(20,14,0)
(0,35,1)
(34,35,1)
(2,42,1)
(8,44,1)
(25,11,1)
(44,11,1)
(40,51,1)
(19,0,1)
(47,25,1)
(14,20,1)
(11,38,1)
(5,50,1)
(10,36,1)
(44,19,1)
(51,7,1)
(6,13,1)
(23,11,1)
(18,11,1)
(15,4,1)
(20,5,1)
(7,16,1)
(48,32,1)
(46,1,1)
(17,25,1)
(44,50,1)
(13,28,1)
(35,42,1)
(50,10,1)
(42,14,1)
(21,13,1)
(36,47,1)
(33,2,1)
(6,48,1)
(38,40,1)
(18,34,1)
(29,17,1)
(28,18,1)
(41,42,1)
(41,44,1)
(11,51,1)
(4,8,1)
(35,33,1)
(23,29,1)
(34,23,1)
(34,41,1)
(1,15,1)
(46,50,1)
(52,46,1)
(10,11,1)
(22,21,1)
(32,22,1)
(41,52,1)
(13,18,1)
(41,52,2)
(11,51,2)
(14,25,2)
(1,35,2)
(35,42,2)
(8,35,2)
(22,13,2)
(18,11,2)
(15,35,2)
(41,44,2)
(20,25,2)
(46,50,2)
(4,35,2)
(44,50,2)
(0,35,2)
(10,25,2)
(35,25,2)
(32,13,2)
(48,13,2)
(46,35,2)
(52,46,2)
(42,25,2)
(2,25,2)
(21,13,2)
(23,25,2)
(52,35,2)
(50,25,2)
(44,35,2)
(13,18,2)
(47,25,2)
(33,25,2)
(29,25,2)
(19,35,2)
(41,35,2)
(50,10,2)
(17,25,2)
(42,14,2)
(10,11,2)
(44,11,2)
(41,42,2)
(36,25,2)
(5,25,2)
(23,11,2)
-----------------------------------
(0,data)
(1,1)
(2,environment)
(3,if (SYSTEM(data)
(4,100)
(5,environment)
(6,RET)
(7,FULL_COMMAND)
(8,environment)
(9,)
(10,strlen(data)
(11,data = data_buf)
(12,if (environment != NULL)
(13,SYSTEM(data)
(14,GETENV(ENV_VARIABLE)
(15,dataLen)
(16,data_buf)
(17,data)
(18,SYSTEM(data)
(19,dataLen)
(20,ENV_VARIABLE)
(21,"command execution failed!")
(22,printLine("command execution failed!")
(23,strcat(data, "*.*")
(24,environment)
(25,globalReturnsTrueOrFalse()
(26,)
(27,)
(28,0)
(29,"*.*")
(30,)
(31,dataLen)
(32,1)
(33,NULL)
(34,data)
(35,environment != NULL)
(36,data)
(37,data_buf)
(38,data_buf)
(39,if(globalReturnsTrueOrFalse()
(40,data)
(41,strncat(data+dataLen, environment, 100-dataLen-1)
(42,* environment = GETENV(ENV_VARIABLE)
(43,data)
(44,data+dataLen)
(45,)
(46,dataLen-1)
(47,dataLen)
(48,exit(1)
(49,)
(50,dataLen = strlen(data)
(51,data_buf[100] = FULL_COMMAND)
(52,100-dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
