-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_system_11_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
83,85
84,85
84,86
85,86
87,88
90,91
90,92
91,92
92,93
92,94
93,94
96,97
97,98
97,99
98,99
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,95,99,100
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
83,84
83,85
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_system_11_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__char_environment_system_11_bad()
CWE78_OS_Command_Injection__char_environment_system_11_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(20,30,0)
(33,20,0)
(16,7,0)
(15,30,0)
(46,7,0)
(28,16,0)
(39,7,0)
(45,20,0)
(28,40,0)
(4,30,0)
(19,28,0)
(27,31,0)
(14,16,0)
(16,6,0)
(28,20,0)
(45,26,0)
(42,17,0)
(18,30,0)
(37,7,0)
(0,6,0)
(26,45,0)
(41,7,0)
(20,35,0)
(40,26,0)
(9,45,0)
(1,16,0)
(4,3,0)
(2,31,0)
(5,16,0)
(34,5,0)
(5,34,0)
(30,32,0)
(6,7,0)
(40,28,0)
(24,3,0)
(35,20,0)
(48,28,0)
(3,4,0)
(40,23,0)
(13,10,0)
(22,26,0)
(26,40,0)
(29,35,0)
(38,30,0)
(10,36,0)
(31,4,0)
(12,40,0)
(40,4,0)
(11,6,0)
(35,16,0)
(25,4,0)
(43,5,0)
(21,45,0)
(47,34,0)
(17,36,0)
(35,16,1)
(25,20,1)
(14,6,1)
(0,11,1)
(28,16,1)
(31,4,1)
(10,13,1)
(4,3,1)
(45,20,1)
(5,43,1)
(8,17,1)
(33,44,1)
(40,26,1)
(35,29,1)
(19,31,1)
(1,14,1)
(34,47,1)
(43,31,1)
(16,1,1)
(12,28,1)
(34,5,1)
(45,9,1)
(40,4,1)
(48,19,1)
(40,28,1)
(16,6,1)
(8,34,1)
(22,12,1)
(26,45,1)
(43,40,1)
(42,10,1)
(3,24,1)
(24,25,1)
(21,22,1)
(5,16,1)
(17,42,1)
(29,33,1)
(6,0,1)
(47,5,1)
(28,20,1)
(2,27,1)
(13,34,1)
(27,4,1)
(31,2,1)
(9,21,1)
(44,16,1)
(43,44,1)
(28,48,1)
(20,35,1)
(45,20,2)
(31,4,2)
(48,31,2)
(12,31,2)
(26,45,2)
(10,34,2)
(40,26,2)
(20,44,2)
(40,28,2)
(34,5,2)
(9,31,2)
(24,44,2)
(42,34,2)
(26,31,2)
(28,16,2)
(29,44,2)
(2,44,2)
(13,34,2)
(45,31,2)
(28,31,2)
(17,34,2)
(40,31,2)
(4,44,2)
(21,31,2)
(35,16,2)
(31,44,2)
(40,4,2)
(16,6,2)
(5,16,2)
(20,35,2)
(3,44,2)
(19,31,2)
(33,44,2)
(4,3,2)
(22,31,2)
(25,44,2)
(28,20,2)
(35,44,2)
(27,44,2)
-----------------------------------
(0,FULL_COMMAND)
(1,data_buf)
(2,NULL)
(3,GETENV(ENV_VARIABLE)
(4,* environment = GETENV(ENV_VARIABLE)
(5,SYSTEM(data)
(6,data_buf[100] = FULL_COMMAND)
(7,)
(8,RET)
(9,1)
(10,printLine("command execution failed!")
(11,data_buf)
(12,environment)
(13,"command execution failed!")
(14,data)
(15,dataLen)
(16,data = data_buf)
(17,exit(1)
(18,environment)
(19,data)
(20,dataLen = strlen(data)
(21,dataLen)
(22,100)
(23,)
(24,ENV_VARIABLE)
(25,environment)
(26,100-dataLen-1)
(27,environment)
(28,data+dataLen)
(29,data)
(30,)
(31,environment != NULL)
(32,)
(33,dataLen)
(34,SYSTEM(data)
(35,strlen(data)
(36,)
(37,data)
(38,if (environment != NULL)
(39,if(globalReturnsTrue()
(40,strncat(data+dataLen, environment, 100-dataLen-1)
(41,data_buf)
(42,1)
(43,data)
(44,globalReturnsTrue()
(45,dataLen-1)
(46,if (SYSTEM(data)
(47,0)
(48,dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
