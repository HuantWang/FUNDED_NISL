-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_system_63_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
121,122
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,122
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;UnaryExpression;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_system_63_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data);}
void
CWE78_OS_Command_Injection__char_file_system_63_bad()
CWE78_OS_Command_Injection__char_file_system_63_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data);}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data);
CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data)
CWE78_OS_Command_Injection__char_file_system_63b_badSink
CWE78_OS_Command_Injection__char_file_system_63b_badSink
&data
data
data
-----joern-----
(12,23,0)
(50,9,0)
(46,42,0)
(49,45,0)
(5,10,0)
(47,50,0)
(48,51,0)
(44,52,0)
(36,31,0)
(13,56,0)
(1,11,0)
(6,52,0)
(25,50,0)
(21,58,0)
(55,14,0)
(21,31,0)
(50,31,0)
(31,21,0)
(31,59,0)
(56,31,0)
(45,49,0)
(53,32,0)
(16,32,0)
(4,23,0)
(15,6,0)
(22,59,0)
(43,9,0)
(34,57,0)
(56,58,0)
(45,58,0)
(33,56,0)
(39,14,0)
(37,10,0)
(24,59,0)
(51,55,0)
(7,2,0)
(10,55,0)
(23,31,0)
(23,7,0)
(50,58,0)
(8,55,0)
(58,57,0)
(55,32,0)
(59,57,0)
(30,46,0)
(7,23,0)
(32,55,0)
(2,7,0)
(38,59,0)
(0,58,0)
(58,34,0)
(54,42,0)
(51,56,0)
(29,6,0)
(51,7,0)
(26,3,0)
(6,31,0)
(52,6,0)
(11,17,0)
(41,45,0)
(49,57,0)
(3,51,0)
(19,34,0)
(46,55,0)
(40,57,0)
(51,3,0)
(28,21,0)
(27,58,0)
(9,17,0)
(7,51,0)
(18,34,0)
(56,51,0)
(35,57,0)
(11,1,1)
(51,55,1)
(44,6,1)
(7,2,1)
(5,37,1)
(47,11,1)
(48,7,1)
(41,46,1)
(45,58,1)
(49,45,1)
(1,3,1)
(3,26,1)
(12,4,1)
(37,55,1)
(19,18,1)
(30,9,1)
(33,13,1)
(10,55,1)
(26,51,1)
(51,48,1)
(23,12,1)
(15,31,1)
(58,27,1)
(45,41,1)
(41,10,1)
(32,16,1)
(21,58,1)
(7,23,1)
(30,3,1)
(9,43,1)
(53,8,1)
(56,31,1)
(36,58,1)
(28,36,1)
(10,5,1)
(16,53,1)
(55,32,1)
(23,31,1)
(4,56,1)
(3,51,1)
(52,6,1)
(34,19,1)
(25,47,1)
(27,0,1)
(0,34,1)
(46,30,1)
(56,58,1)
(50,31,1)
(50,25,1)
(13,10,1)
(52,44,1)
(50,58,1)
(6,31,1)
(29,15,1)
(51,56,1)
(6,29,1)
(46,55,1)
(51,7,1)
(8,52,1)
(31,21,1)
(58,34,1)
(20,49,1)
(21,28,1)
(43,50,1)
(41,52,1)
(56,33,1)
(51,56,2)
(7,23,2)
(3,10,2)
(7,2,2)
(23,31,2)
(8,52,2)
(56,10,2)
(30,10,2)
(43,3,2)
(48,10,2)
(58,34,2)
(53,52,2)
(4,10,2)
(50,58,2)
(16,52,2)
(50,31,2)
(47,3,2)
(55,32,2)
(10,52,2)
(33,10,2)
(13,10,2)
(21,58,2)
(5,52,2)
(51,10,2)
(32,52,2)
(56,31,2)
(52,6,2)
(23,10,2)
(49,45,2)
(7,10,2)
(6,31,2)
(45,58,2)
(31,21,2)
(25,3,2)
(50,3,2)
(46,10,2)
(1,3,2)
(51,55,2)
(12,10,2)
(46,55,2)
(56,58,2)
(37,52,2)
(11,3,2)
(10,55,2)
(26,10,2)
(51,7,2)
(3,51,2)
(55,52,2)
(9,3,2)
-----------------------------------
(0,data)
(1,"fgets()
(2,int)
(3,fgets(data+dataLen, (int)
(4,100)
(5,NULL)
(6,100-dataLen)
(7,(int)
(8,pFile)
(9,data[dataLen] = \\\'\\\\0\\\')
(10,pFile != NULL)
(11,printLine("fgets()
(12,dataLen)
(13,data)
(14,)
(15,100)
(16,"r")
(17,)
(18,data_buf)
(19,FULL_COMMAND)
(20,RET)
(21,strlen(data)
(22,if (100-dataLen > 1)
(23,100-dataLen)
(24,pFile)
(25,dataLen)
(26,NULL)
(27,data_buf)
(28,data)
(29,dataLen)
(30,pFile)
(31,dataLen = strlen(data)
(32,fopen(FILENAME, "r")
(33,dataLen)
(34,data_buf[100] = FULL_COMMAND)
(35,data)
(36,dataLen)
(37,pFile)
(38,dataLen)
(39,if (pFile != NULL)
(40,data_buf)
(41,data)
(42,)
(43,\\\'\\\\0\\\')
(44,1)
(45,&data)
(46,fclose(pFile)
(47,data)
(48,pFile)
(49,CWE78_OS_Command_Injection__char_file_system_63b_badSink(&data)
(50,data[dataLen])
(51,fgets(data+dataLen, (int)
(52,100-dataLen > 1)
(53,FILENAME)
(54,if (fgets(data+dataLen, (int)
(55,pFile = fopen(FILENAME, "r")
(56,data+dataLen)
(57,)
(58,data = data_buf)
(59,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
