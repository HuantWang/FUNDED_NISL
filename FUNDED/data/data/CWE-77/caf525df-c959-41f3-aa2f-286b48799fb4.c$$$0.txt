-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_12_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
91,92
91,93
91,94
91,95
91,96
91,97
91,98
92,93
94,95
96,97
98,99
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,95,97,99,101,103,105
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_12_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_12_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_12_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(22,42,0)
(21,43,0)
(13,38,0)
(30,6,0)
(35,14,0)
(12,33,0)
(7,40,0)
(1,21,0)
(27,38,0)
(15,20,0)
(14,41,0)
(40,6,0)
(15,38,0)
(38,14,0)
(38,27,0)
(28,40,0)
(17,6,0)
(24,33,0)
(48,27,0)
(15,33,0)
(34,15,0)
(37,15,0)
(10,31,0)
(43,14,0)
(23,44,0)
(22,30,0)
(26,14,0)
(46,30,0)
(11,31,0)
(8,22,0)
(0,43,0)
(33,43,0)
(44,38,0)
(4,40,0)
(36,40,0)
(15,37,0)
(21,37,0)
(31,6,0)
(29,43,0)
(25,22,0)
(33,15,0)
(39,6,0)
(0,30,0)
(49,0,0)
(9,40,0)
(33,30,0)
(32,44,0)
(30,31,0)
(37,21,0)
(16,6,0)
(2,21,0)
(43,0,0)
(18,30,0)
(19,14,0)
(3,40,0)
(45,37,0)
(15,37,1)
(30,46,1)
(29,47,1)
(1,2,1)
(5,40,1)
(13,43,1)
(44,38,1)
(47,30,1)
(4,3,1)
(7,15,1)
(3,7,1)
(24,12,1)
(0,30,1)
(21,43,1)
(22,30,1)
(9,28,1)
(44,32,1)
(28,4,1)
(40,36,1)
(38,27,1)
(21,1,1)
(49,29,1)
(12,44,1)
(43,0,1)
(33,24,1)
(33,30,1)
(15,38,1)
(25,47,1)
(15,33,1)
(23,38,1)
(46,18,1)
(34,33,1)
(10,11,1)
(36,9,1)
(32,23,1)
(30,31,1)
(27,48,1)
(31,10,1)
(7,44,1)
(0,49,1)
(48,13,1)
(8,25,1)
(45,34,1)
(22,8,1)
(18,31,1)
(7,22,1)
(37,21,1)
(2,45,1)
(33,43,1)
(21,44,2)
(24,44,2)
(15,33,2)
(21,43,2)
(13,47,2)
(25,47,2)
(44,38,2)
(45,44,2)
(37,44,2)
(34,44,2)
(12,44,2)
(0,30,2)
(1,44,2)
(33,43,2)
(29,47,2)
(2,44,2)
(15,44,2)
(48,47,2)
(44,47,2)
(38,27,2)
(0,47,2)
(49,47,2)
(38,47,2)
(43,0,2)
(43,47,2)
(30,31,2)
(22,30,2)
(23,47,2)
(8,47,2)
(15,38,2)
(27,47,2)
(37,21,2)
(33,30,2)
(33,44,2)
(32,47,2)
(22,47,2)
(15,37,2)
-----------------------------------
(0,strlen(data)
(1,1)
(2,dataLen)
(3,COMMAND_INT_PATH)
(4,COMMAND_INT_PATH)
(5,RET)
(6,)
(7,_P_WAIT)
(8,"*.*")
(9,COMMAND_ARG3)
(10,COMMAND_ARG2)
(11,dataBuffer)
(12,data)
(13,environment)
(14,)
(15,strncat(data+dataLen, environment, 100-dataLen-1)
(16,dataBuffer)
(17,if(globalReturnsTrueOrFalse()
(18,data)
(19,environment)
(20,)
(21,dataLen-1)
(22,strcat(data, "*.*")
(23,environment)
(24,dataLen)
(25,data)
(26,dataLen)
(27,GETENV(ENV_VARIABLE)
(28,COMMAND_ARG1)
(29,dataLen)
(30,data = dataBuffer)
(31,dataBuffer[100] = COMMAND_ARG2)
(32,NULL)
(33,data+dataLen)
(34,environment)
(35,if (environment != NULL)
(36,NULL)
(37,100-dataLen-1)
(38,* environment = GETENV(ENV_VARIABLE)
(39,data)
(40,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(41,)
(42,)
(43,dataLen = strlen(data)
(44,environment != NULL)
(45,100)
(46,dataBuffer)
(47,globalReturnsTrueOrFalse()
(48,ENV_VARIABLE)
(49,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
