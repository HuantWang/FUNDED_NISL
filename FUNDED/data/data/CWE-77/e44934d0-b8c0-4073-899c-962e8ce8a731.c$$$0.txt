-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_31_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char * dataCopy = data;
        char * data = dataCopy;
        /* execlp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
97,98
97,99
97,100
97,101
97,102
97,103
98,99
100,101
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,103,105,107,109
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_31_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__char_environment_execlp_31_bad()
CWE78_OS_Command_Injection__char_environment_execlp_31_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char * dataCopy = data;        char * data = dataCopy;        /* execlp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * dataCopy = data;
char * dataCopy = data;
char
* dataCopy = data
*
dataCopy
= data
data
data
char * data = dataCopy;
char * data = dataCopy;
char
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(8,26,0)
(18,26,0)
(31,48,0)
(39,18,0)
(1,23,0)
(43,18,0)
(47,26,0)
(9,4,0)
(49,20,0)
(20,47,0)
(50,26,0)
(25,32,0)
(43,23,0)
(7,13,0)
(36,10,0)
(4,13,0)
(13,30,0)
(40,43,0)
(38,10,0)
(30,18,0)
(2,24,0)
(35,24,0)
(23,43,0)
(0,48,0)
(15,13,0)
(22,2,0)
(40,10,0)
(41,43,0)
(6,18,0)
(34,24,0)
(33,18,0)
(34,47,0)
(2,30,0)
(40,42,0)
(21,47,0)
(24,26,0)
(12,30,0)
(10,40,0)
(32,26,0)
(5,41,0)
(4,40,0)
(20,34,0)
(10,24,0)
(44,48,0)
(19,48,0)
(27,48,0)
(16,20,0)
(3,43,0)
(40,4,0)
(11,40,0)
(17,32,0)
(45,24,0)
(46,34,0)
(28,34,0)
(48,47,0)
(14,47,0)
(30,2,0)
(29,41,0)
(10,30,0)
(13,4,0)
(24,32,0)
(24,32,1)
(34,46,1)
(32,25,1)
(46,28,1)
(24,35,1)
(27,31,1)
(36,41,1)
(10,24,1)
(10,38,1)
(45,32,1)
(13,30,1)
(30,2,1)
(40,4,1)
(48,44,1)
(2,22,1)
(29,5,1)
(9,11,1)
(43,23,1)
(34,24,1)
(35,45,1)
(5,43,1)
(28,40,1)
(28,41,1)
(19,20,1)
(20,49,1)
(23,1,1)
(15,7,1)
(22,12,1)
(44,27,1)
(25,17,1)
(1,3,1)
(49,16,1)
(3,30,1)
(20,34,1)
(41,43,1)
(7,9,1)
(31,0,1)
(41,29,1)
(40,10,1)
(2,24,1)
(4,13,1)
(10,30,1)
(0,19,1)
(13,15,1)
(37,48,1)
(12,24,1)
(40,43,1)
(16,34,1)
(38,36,1)
(11,10,1)
(13,30,2)
(10,41,2)
(40,4,2)
(11,41,2)
(4,13,2)
(40,10,2)
(15,41,2)
(40,43,2)
(30,2,2)
(24,32,2)
(10,30,2)
(20,34,2)
(38,41,2)
(2,24,2)
(7,41,2)
(40,41,2)
(4,41,2)
(9,41,2)
(36,41,2)
(34,24,2)
(43,23,2)
(10,24,2)
(13,41,2)
(41,43,2)
-----------------------------------
(0,COMMAND_INT)
(1,ENV_VARIABLE)
(2,strlen(data)
(3,environment)
(4,100-dataLen-1)
(5,environment)
(6,dataLen)
(7,dataLen)
(8,dataBuffer)
(9,100)
(10,data+dataLen)
(11,environment)
(12,dataLen)
(13,dataLen-1)
(14,data)
(15,1)
(16,data)
(17,dataBuffer)
(18,)
(19,COMMAND_INT)
(20,* data = dataCopy)
(21,dataCopy)
(22,data)
(23,GETENV(ENV_VARIABLE)
(24,data = dataBuffer)
(25,COMMAND_ARG2)
(26,)
(27,COMMAND_ARG3)
(28,dataCopy)
(29,NULL)
(30,dataLen = strlen(data)
(31,COMMAND_ARG1)
(32,dataBuffer[100] = COMMAND_ARG2)
(33,environment)
(34,* dataCopy = data)
(35,dataBuffer)
(36,data)
(37,RET)
(38,dataLen)
(39,if (environment != NULL)
(40,strncat(data+dataLen, environment, 100-dataLen-1)
(41,environment != NULL)
(42,)
(43,* environment = GETENV(ENV_VARIABLE)
(44,NULL)
(45,data)
(46,data)
(47,)
(48,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(49,dataCopy)
(50,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
