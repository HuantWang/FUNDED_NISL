-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = wcslen(data);
        wchar_t * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            wcsncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
92,93
94,95
96,97
98,99
100,101
102,103
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execl_15_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = wcslen(data);        wchar_t * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            wcsncat(data+dataLen, environment, 100-dataLen-1);        }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(22,32,0)
(6,7,0)
(12,15,0)
(37,18,0)
(40,15,0)
(42,22,0)
(2,22,0)
(25,8,0)
(46,20,0)
(23,5,0)
(14,27,0)
(20,8,0)
(43,30,0)
(17,3,0)
(50,5,0)
(33,19,0)
(48,39,0)
(27,19,0)
(3,5,0)
(19,15,0)
(31,18,0)
(7,30,0)
(10,30,0)
(18,15,0)
(0,2,0)
(19,47,0)
(26,5,0)
(29,20,0)
(9,22,0)
(22,2,0)
(13,20,0)
(16,7,0)
(2,19,0)
(27,32,0)
(19,2,0)
(27,7,0)
(4,5,0)
(15,12,0)
(11,4,0)
(36,20,0)
(30,8,0)
(15,3,0)
(45,27,0)
(38,12,0)
(44,3,0)
(39,7,0)
(39,32,0)
(24,5,0)
(21,20,0)
(32,39,0)
(41,32,0)
(1,8,0)
(19,27,0)
(34,8,0)
(32,3,0)
(49,3,0)
(7,8,0)
(27,14,1)
(36,46,1)
(11,35,1)
(7,6,1)
(18,37,1)
(4,11,1)
(40,32,1)
(9,42,1)
(45,18,1)
(18,15,1)
(37,31,1)
(19,15,1)
(15,12,1)
(30,10,1)
(39,48,1)
(33,27,1)
(29,13,1)
(16,30,1)
(10,43,1)
(2,22,1)
(23,4,1)
(28,20,1)
(32,39,1)
(27,7,1)
(12,38,1)
(27,32,1)
(39,7,1)
(13,23,1)
(14,45,1)
(19,2,1)
(24,19,1)
(48,41,1)
(35,7,1)
(31,15,1)
(13,24,1)
(22,9,1)
(0,33,1)
(38,40,1)
(41,35,1)
(46,29,1)
(24,18,1)
(7,30,1)
(20,21,1)
(22,32,1)
(42,0,1)
(21,36,1)
(19,27,1)
(6,16,1)
(23,35,2)
(32,35,2)
(48,35,2)
(27,7,2)
(22,18,2)
(12,35,2)
(7,30,2)
(19,27,2)
(39,7,2)
(31,35,2)
(15,35,2)
(24,35,2)
(4,35,2)
(15,12,2)
(37,35,2)
(42,18,2)
(33,18,2)
(14,18,2)
(2,22,2)
(32,39,2)
(9,18,2)
(19,15,2)
(19,18,2)
(18,15,2)
(27,32,2)
(18,35,2)
(38,35,2)
(27,18,2)
(40,35,2)
(22,32,2)
(19,2,2)
(2,18,2)
(45,18,2)
(0,18,2)
(41,35,2)
(11,35,2)
(39,35,2)
-----------------------------------
(0,100)
(1,data)
(2,100-dataLen-1)
(3,)
(4,printLine("Benign, fixed string")
(5,)
(6,dataBuffer)
(7,data = dataBuffer)
(8,)
(9,1)
(10,COMMAND_ARG2)
(11,"Benign, fixed string")
(12,GETENV(ENV_VARIABLE)
(13,COMMAND_INT_PATH)
(14,dataLen)
(15,* environment = GETENV(ENV_VARIABLE)
(16,data)
(17,environment)
(18,environment != NULL)
(19,wcsncat(data+dataLen, environment, 100-dataLen-1)
(20,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(21,NULL)
(22,dataLen-1)
(23,break;)
(24,break;)
(25,dataBuffer)
(26,default:)
(27,data+dataLen)
(28,RET)
(29,COMMAND_INT_PATH)
(30,dataBuffer[100] = COMMAND_ARG2)
(31,environment)
(32,dataLen = wcslen(data)
(33,environment)
(34,switch(6)
(35,6)
(36,COMMAND_ARG3)
(37,NULL)
(38,ENV_VARIABLE)
(39,wcslen(data)
(40,environment)
(41,dataLen)
(42,dataLen)
(43,dataBuffer)
(44,dataLen)
(45,data)
(46,COMMAND_ARG1)
(47,)
(48,data)
(49,if (environment != NULL)
(50,case 6:)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
