-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
96,98
97,98
98,99
98,100
100,101
100,102
100,103
100,104
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
120,121
122,123
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,102,103,107,109,111,113,117,119,121,123
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnv_17_bad(){    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnv_17_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnv_17_bad
{    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(13,54,0)
(38,19,0)
(24,30,0)
(30,31,0)
(27,23,0)
(44,46,0)
(32,52,0)
(17,31,0)
(47,33,0)
(10,16,0)
(29,32,0)
(10,47,0)
(19,33,0)
(18,32,0)
(0,47,0)
(51,30,0)
(21,15,0)
(9,35,0)
(14,52,0)
(43,52,0)
(33,19,0)
(15,27,0)
(45,34,0)
(3,39,0)
(10,15,0)
(1,11,0)
(4,31,0)
(40,34,0)
(47,54,0)
(34,33,0)
(46,15,0)
(54,43,0)
(50,27,0)
(22,47,0)
(41,35,0)
(39,34,0)
(11,15,0)
(53,27,0)
(34,39,0)
(20,18,0)
(8,54,0)
(35,32,0)
(10,39,0)
(7,52,0)
(26,11,0)
(19,54,0)
(47,10,0)
(49,10,0)
(39,10,0)
(28,4,0)
(36,27,0)
(37,35,0)
(33,27,0)
(25,52,0)
(5,33,0)
(12,43,0)
(2,31,0)
(15,46,0)
(42,52,0)
(48,43,0)
(35,18,0)
(54,52,0)
(47,54,1)
(19,38,1)
(28,11,1)
(3,49,1)
(47,33,1)
(5,30,1)
(22,0,1)
(1,26,1)
(9,18,1)
(11,15,1)
(18,20,1)
(45,40,1)
(38,5,1)
(2,54,1)
(43,12,1)
(19,54,1)
(31,17,1)
(11,1,1)
(26,15,1)
(39,34,1)
(10,15,1)
(24,51,1)
(33,19,1)
(35,18,1)
(0,11,1)
(10,39,1)
(54,8,1)
(54,43,1)
(34,45,1)
(6,35,1)
(41,37,1)
(35,41,1)
(12,48,1)
(17,2,1)
(8,13,1)
(13,43,1)
(51,31,1)
(51,4,1)
(4,28,1)
(15,46,1)
(4,31,1)
(40,3,1)
(28,10,1)
(49,47,1)
(46,44,1)
(10,47,1)
(21,33,1)
(20,30,1)
(37,9,1)
(44,21,1)
(34,33,1)
(47,22,1)
(30,31,1)
(30,24,1)
(10,39,2)
(1,30,2)
(47,11,2)
(47,54,2)
(30,30,2)
(11,30,2)
(19,30,2)
(15,30,2)
(19,54,2)
(34,33,2)
(11,15,2)
(34,11,2)
(40,11,2)
(45,11,2)
(21,30,2)
(15,46,2)
(5,30,2)
(39,34,2)
(30,31,2)
(10,11,2)
(39,11,2)
(47,33,2)
(28,30,2)
(0,11,2)
(24,30,2)
(3,11,2)
(4,31,2)
(54,43,2)
(49,11,2)
(51,30,2)
(33,19,2)
(10,15,2)
(10,47,2)
(35,18,2)
(46,30,2)
(4,30,2)
(38,30,2)
(33,30,2)
(44,30,2)
(26,30,2)
(22,11,2)
-----------------------------------
(0,data)
(1,NULL)
(2,i)
(3,100)
(4,i++)
(5,dataLen)
(6,RET)
(7,for(i = 0; i < 1; i++)
(8,dataBuffer)
(9,_P_WAIT)
(10,strncat(data+dataLen, environment, 100-dataLen-1)
(11,environment != NULL)
(12,COMMAND_ARG2)
(13,data)
(14,data)
(15,* environment = GETENV(ENV_VARIABLE)
(16,)
(17,0)
(18,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(19,strlen(data)
(20,args)
(21,environment)
(22,dataLen)
(23,)
(24,1)
(25,dataBuffer)
(26,environment)
(27,)
(28,i)
(29,args)
(30,i < 1)
(31,i = 0)
(32,)
(33,dataLen = strlen(data)
(34,dataLen-1)
(35,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(36,environment)
(37,COMMAND_INT_PATH)
(38,data)
(39,100-dataLen-1)
(40,dataLen)
(41,args)
(42,i)
(43,dataBuffer[100] = COMMAND_ARG2)
(44,ENV_VARIABLE)
(45,1)
(46,GETENV(ENV_VARIABLE)
(47,data+dataLen)
(48,dataBuffer)
(49,environment)
(50,if (environment != NULL)
(51,i)
(52,)
(53,dataLen)
(54,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
