-----label-----
0
-----code-----
static void goodG2B1()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_FALSE)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wspawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
31,32
32,33
33,34
33,35
34,35
37,38
38,39
39,40
39,41
39,42
40,41
42,43
45,46
45,47
46,47
47,48
47,49
49,50
49,51
49,52
49,53
53,54
54,55
54,56
54,57
54,58
55,56
57,58
59,60
61,62
63,64
64,65
64,66
64,67
64,68
65,66
67,68
69,70
71,72
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,35,36,41,43,44,48,50,51,52,56,58,60,62,66,68,70,72
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnvp(_P_WAIT, COMMAND_INT, args);    }}
static void
goodG2B1()
goodG2B1
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnvp(_P_WAIT, COMMAND_INT, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_FALSE)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
GLOBAL_CONST_FALSE
GLOBAL_CONST_FALSE
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnvp(_P_WAIT, COMMAND_INT, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnvp(_P_WAIT, COMMAND_INT, args);
_wspawnvp(_P_WAIT, COMMAND_INT, args)
_wspawnvp
_wspawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(10,6,0)
(7,6,0)
(12,16,0)
(14,8,0)
(0,18,0)
(3,10,0)
(15,6,0)
(16,18,0)
(4,11,0)
(8,3,0)
(17,16,0)
(19,3,0)
(13,8,0)
(20,8,0)
(16,6,0)
(18,6,0)
(9,18,0)
(2,6,0)
(8,10,0)
(22,10,0)
(11,5,0)
(4,1,1)
(20,13,1)
(16,18,1)
(3,19,1)
(18,0,1)
(8,3,1)
(12,18,1)
(11,4,1)
(19,1,1)
(13,14,1)
(16,17,1)
(19,11,1)
(17,12,1)
(14,3,1)
(21,8,1)
(0,9,1)
(8,20,1)
(1,16,1)
(4,1,2)
(16,18,2)
(8,3,2)
(11,1,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,GLOBAL_CONST_FALSE)
(2,dataBuffer)
(3,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(4,"Benign, fixed string")
(5,)
(6,)
(7,if(GLOBAL_CONST_FALSE)
(8,_wspawnvp(_P_WAIT, COMMAND_INT, args)
(9,dataBuffer)
(10,)
(11,printLine("Benign, fixed string")
(12,data)
(13,COMMAND_INT)
(14,_P_WAIT)
(15,data)
(16,data = dataBuffer)
(17,dataBuffer)
(18,dataBuffer[100] = COMMAND_ARG2)
(19,args)
(20,args)
(21,RET)
(22,args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
