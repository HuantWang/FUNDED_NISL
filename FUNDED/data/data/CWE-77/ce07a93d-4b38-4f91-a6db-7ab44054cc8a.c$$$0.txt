-----label-----
0
-----code-----
static void goodG2B1()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B1Static = 0; /* false */
    data = goodG2B1Source(data);
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
43,44
43,45
43,46
43,47
43,48
43,49
44,45
46,47
48,49
50,51
52,53
54,55
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,49,51,53,55
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B1()
goodG2B1
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B1Static = 0; /* false */    data = goodG2B1Source(data);    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B1Static = 0;
goodG2B1Static = 0
goodG2B1Static
goodG2B1Static
0
data = goodG2B1Source(data);
data = goodG2B1Source(data)
data
data
goodG2B1Source(data)
goodG2B1Source
goodG2B1Source
data
data
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(8,6,0)
(21,10,0)
(22,6,0)
(9,18,0)
(19,6,0)
(20,1,0)
(15,10,0)
(14,6,0)
(7,16,0)
(6,2,0)
(1,10,0)
(4,6,0)
(17,7,0)
(16,1,0)
(5,1,0)
(1,2,0)
(0,2,0)
(7,2,0)
(12,18,0)
(3,2,0)
(11,16,0)
(10,2,0)
(16,7,0)
(18,2,0)
(22,8,1)
(9,1,1)
(19,14,1)
(16,11,1)
(1,5,1)
(16,1,1)
(6,4,1)
(12,9,1)
(5,20,1)
(1,10,1)
(7,16,1)
(13,6,1)
(11,17,1)
(20,10,1)
(18,12,1)
(4,22,1)
(21,15,1)
(8,19,1)
(14,7,1)
(17,18,1)
(10,21,1)
(16,1,2)
(1,10,2)
(7,16,2)
-----------------------------------
(0,dataBuffer)
(1,data = dataBuffer)
(2,)
(3,data)
(4,NULL)
(5,dataBuffer)
(6,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(7,data = goodG2B1Source(data)
(8,COMMAND_ARG1)
(9,goodG2B1Static)
(10,dataBuffer[100] = COMMAND_ARG2)
(11,data)
(12,0)
(13,RET)
(14,COMMAND_INT_PATH)
(15,dataBuffer)
(16,goodG2B1Source(data)
(17,data)
(18,goodG2B1Static = 0)
(19,COMMAND_INT_PATH)
(20,data)
(21,COMMAND_ARG2)
(22,COMMAND_ARG3)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
