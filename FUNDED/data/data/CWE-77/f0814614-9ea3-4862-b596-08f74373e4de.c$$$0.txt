-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    /* FIX: Append a fixed string to data (not user / external input) */
    wcscat(data, L"*.*");
    {
        wchar_t * dataCopy = data;
        wchar_t * data = dataCopy;
        {
            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* wspawnv - specify the path where the command is located */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
29,32
30,31
32,33
35,36
35,37
35,38
36,37
37,38
37,39
39,40
39,41
39,42
42,43
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
54,55
54,56
55,56
56,57
56,58
58,59
58,60
58,61
58,62
62,63
63,64
63,65
63,66
63,67
64,65
66,67
68,69
70,71
72,73
73,74
73,75
73,76
73,77
74,75
76,77
78,79
80,81
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,33,34,38,40,41,44,47,49,50,53,57,59,60,61,65,67,69,71,75,77,79,81
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
static void
goodG2B()
goodG2B
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    {        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
{        wchar_t * dataCopy = data;        wchar_t * data = dataCopy;        {            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }    }
wchar_t * dataCopy = data;
wchar_t * dataCopy = data;
wchar_t
* dataCopy = data
*
dataCopy
= data
data
data
wchar_t * data = dataCopy;
wchar_t * data = dataCopy;
wchar_t
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* wspawnv - specify the path where the command is located */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);        }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(11,20,0)
(8,22,0)
(10,5,0)
(23,11,0)
(12,1,0)
(7,15,0)
(5,19,0)
(20,25,0)
(0,1,0)
(21,19,0)
(24,15,0)
(16,5,0)
(10,25,0)
(6,25,0)
(25,22,0)
(15,11,0)
(2,10,0)
(3,20,0)
(1,25,0)
(19,22,0)
(26,25,0)
(9,19,0)
(18,15,0)
(17,10,0)
(1,10,0)
(14,5,0)
(15,20,0)
(4,22,0)
(5,22,0)
(15,18,1)
(24,11,1)
(19,21,1)
(10,5,1)
(11,23,1)
(10,2,1)
(23,1,1)
(1,10,1)
(14,16,1)
(0,12,1)
(12,10,1)
(5,14,1)
(21,9,1)
(17,5,1)
(1,0,1)
(15,11,1)
(18,7,1)
(13,15,1)
(16,19,1)
(5,19,1)
(2,17,1)
(7,24,1)
(15,11,2)
(10,5,2)
(1,10,2)
(5,19,2)
-----------------------------------
(0,dataCopy)
(1,* data = dataCopy)
(2,data)
(3,args)
(4,data)
(5,data = dataBuffer)
(6,data)
(7,COMMAND_INT_PATH)
(8,dataBuffer)
(9,dataBuffer)
(10,* dataCopy = data)
(11,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(12,data)
(13,RET)
(14,dataBuffer)
(15,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(16,data)
(17,dataCopy)
(18,args)
(19,dataBuffer[100] = COMMAND_ARG2)
(20,)
(21,COMMAND_ARG2)
(22,)
(23,args)
(24,_P_WAIT)
(25,)
(26,dataCopy)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
