-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    goodG2B2Static = 1; /* true */
    data = goodG2B2Source(data);
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECV(COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
46,49
46,50
50,51
51,52
51,53
51,54
51,55
52,53
54,55
56,57
58,59
60,61
61,62
61,63
61,64
62,63
64,65
66,67
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,48,49,53,55,57,59,63,65,67
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B2Static = 1; /* true */    data = goodG2B2Source(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    goodG2B2Static = 1; /* true */    data = goodG2B2Source(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
goodG2B2Static = 1;
goodG2B2Static = 1
goodG2B2Static
goodG2B2Static
1
data = goodG2B2Source(data);
data = goodG2B2Source(data)
data
data
goodG2B2Source(data)
goodG2B2Source
goodG2B2Source
data
data
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECV(COMMAND_INT_PATH, args);
EXECV(COMMAND_INT_PATH, args)
EXECV
EXECV
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(6,17,0)
(5,9,0)
(19,20,0)
(16,20,0)
(8,11,0)
(11,9,0)
(12,14,0)
(10,17,0)
(2,3,0)
(3,17,0)
(13,17,0)
(3,10,0)
(1,3,0)
(4,13,0)
(11,3,0)
(20,14,0)
(0,14,0)
(9,17,0)
(14,17,0)
(22,10,0)
(18,10,0)
(21,17,0)
(23,0,0)
(20,0,0)
(15,13,0)
(9,11,0)
(8,5,1)
(13,4,1)
(0,23,1)
(1,2,1)
(19,0,1)
(20,0,1)
(9,11,1)
(18,22,1)
(5,13,1)
(10,18,1)
(7,20,1)
(4,15,1)
(3,1,1)
(15,3,1)
(16,19,1)
(20,16,1)
(11,3,1)
(2,10,1)
(23,9,1)
(11,8,1)
(3,10,1)
(9,11,2)
(3,10,2)
(20,0,2)
(11,3,2)
-----------------------------------
(0,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(1,dataBuffer)
(2,data)
(3,data = dataBuffer)
(4,1)
(5,data)
(6,dataBuffer)
(7,RET)
(8,data)
(9,data = goodG2B2Source(data)
(10,dataBuffer[100] = COMMAND_ARG2)
(11,goodG2B2Source(data)
(12,args)
(13,goodG2B2Static = 1)
(14,)
(15,goodG2B2Static)
(16,args)
(17,)
(18,COMMAND_ARG2)
(19,COMMAND_INT_PATH)
(20,EXECV(COMMAND_INT_PATH, args)
(21,data)
(22,dataBuffer)
(23,args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
