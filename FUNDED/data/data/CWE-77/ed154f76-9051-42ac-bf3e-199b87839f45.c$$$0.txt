-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_09_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(GLOBAL_CONST_TRUE)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
82,89
83,84
85,86
87,88
89,90
91,92
93,94
95,96
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94,96
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_09_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_09_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_09_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(GLOBAL_CONST_TRUE)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
GLOBAL_CONST_TRUE
GLOBAL_CONST_TRUE
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(12,8,0)
(38,8,0)
(10,8,0)
(31,28,0)
(22,0,0)
(44,38,0)
(41,33,0)
(9,26,0)
(5,21,0)
(36,20,0)
(16,8,0)
(28,3,0)
(30,33,0)
(28,21,0)
(11,38,0)
(44,8,0)
(37,32,0)
(21,28,0)
(21,45,0)
(33,8,0)
(7,21,0)
(45,20,0)
(35,37,0)
(26,0,0)
(39,40,0)
(45,15,0)
(27,45,0)
(43,40,0)
(17,33,0)
(18,33,0)
(24,38,0)
(40,32,0)
(2,44,0)
(29,15,0)
(21,44,0)
(20,23,0)
(1,26,0)
(0,28,0)
(34,20,0)
(13,33,0)
(14,20,0)
(4,32,0)
(0,26,0)
(28,32,0)
(26,45,0)
(42,33,0)
(19,44,0)
(28,0,0)
(32,20,0)
(15,44,0)
(32,37,0)
(15,45,0)
(42,6,1)
(41,42,1)
(33,18,1)
(39,43,1)
(43,32,1)
(15,44,1)
(28,21,1)
(15,29,1)
(44,38,1)
(26,1,1)
(9,22,1)
(31,21,1)
(13,41,1)
(42,40,1)
(18,30,1)
(42,28,1)
(7,40,1)
(27,6,1)
(35,4,1)
(40,39,1)
(28,32,1)
(25,33,1)
(29,27,1)
(30,17,1)
(44,19,1)
(38,24,1)
(37,35,1)
(21,5,1)
(4,45,1)
(24,11,1)
(0,26,1)
(2,38,1)
(40,32,1)
(21,45,1)
(28,0,1)
(1,9,1)
(5,7,1)
(26,45,1)
(22,31,1)
(32,37,1)
(17,13,1)
(19,2,1)
(6,44,1)
(21,44,1)
(45,15,1)
(21,45,2)
(43,6,2)
(0,26,2)
(1,40,2)
(5,40,2)
(0,40,2)
(40,32,2)
(44,38,2)
(15,6,2)
(32,37,2)
(28,32,2)
(40,6,2)
(27,6,2)
(45,6,2)
(28,40,2)
(21,44,2)
(35,6,2)
(28,0,2)
(21,40,2)
(26,40,2)
(45,15,2)
(7,40,2)
(9,40,2)
(26,45,2)
(4,6,2)
(31,40,2)
(39,6,2)
(29,6,2)
(22,40,2)
(32,6,2)
(15,44,2)
(28,21,2)
(37,6,2)
-----------------------------------
(0,100-dataLen-1)
(1,1)
(2,data)
(3,)
(4,environment)
(5,dataLen)
(6,GLOBAL_CONST_TRUE)
(7,data)
(8,)
(9,dataLen)
(10,dataBuffer)
(11,dataBuffer)
(12,if(GLOBAL_CONST_TRUE)
(13,COMMAND_INT)
(14,if (environment != NULL)
(15,strlen(data)
(16,data)
(17,COMMAND_ARG1)
(18,NULL)
(19,dataBuffer)
(20,)
(21,data+dataLen)
(22,100)
(23,)
(24,COMMAND_ARG2)
(25,RET)
(26,dataLen-1)
(27,dataLen)
(28,strncat(data+dataLen, environment, 100-dataLen-1)
(29,data)
(30,COMMAND_ARG3)
(31,environment)
(32,* environment = GETENV(ENV_VARIABLE)
(33,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(34,dataLen)
(35,ENV_VARIABLE)
(36,environment)
(37,GETENV(ENV_VARIABLE)
(38,dataBuffer[100] = COMMAND_ARG2)
(39,NULL)
(40,environment != NULL)
(41,COMMAND_INT)
(42,_P_WAIT)
(43,environment)
(44,data = dataBuffer)
(45,dataLen = strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
