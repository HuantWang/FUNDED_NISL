-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_12_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrueOrFalse())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
83,84
84,85
84,86
84,87
85,86
87,88
90,91
90,92
91,92
91,93
92,93
92,94
93,94
95,96
98,99
98,100
99,100
100,101
100,102
101,102
104,105
105,106
105,107
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,94,96,97,102,103,107,108
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_system_12_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_system_12_bad()
CWE78_OS_Command_Injection__wchar_t_environment_system_12_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrueOrFalse())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
globalReturnsTrueOrFalse()
globalReturnsTrueOrFalse
globalReturnsTrueOrFalse
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(1,28,0)
(17,40,0)
(35,32,0)
(14,36,0)
(31,14,0)
(22,28,0)
(10,35,0)
(45,17,0)
(20,21,0)
(34,42,0)
(35,25,0)
(23,25,0)
(4,31,0)
(13,32,0)
(7,12,0)
(43,31,0)
(0,40,0)
(38,14,0)
(33,27,0)
(42,34,0)
(27,12,0)
(11,17,0)
(47,26,0)
(44,30,0)
(39,28,0)
(14,31,0)
(21,28,0)
(31,42,0)
(27,42,0)
(24,37,0)
(14,12,0)
(9,45,0)
(14,17,0)
(3,28,0)
(17,30,0)
(5,30,0)
(40,17,0)
(25,28,0)
(42,30,0)
(32,35,0)
(31,25,0)
(29,30,0)
(37,46,0)
(26,46,0)
(2,34,0)
(12,14,0)
(30,41,0)
(6,21,0)
(34,25,0)
(19,25,0)
(16,27,0)
(25,21,0)
(15,42,0)
(12,27,0)
(8,45,0)
(25,23,1)
(34,2,1)
(23,19,1)
(8,17,1)
(45,17,1)
(14,17,1)
(10,45,1)
(19,21,1)
(17,40,1)
(31,42,1)
(48,25,1)
(27,42,1)
(11,42,1)
(40,0,1)
(34,25,1)
(18,26,1)
(31,25,1)
(47,37,1)
(0,11,1)
(6,20,1)
(35,25,1)
(24,32,1)
(9,8,1)
(16,7,1)
(38,31,1)
(10,48,1)
(32,35,1)
(10,14,1)
(21,6,1)
(2,15,1)
(14,31,1)
(25,21,1)
(13,35,1)
(45,9,1)
(42,34,1)
(32,13,1)
(33,16,1)
(35,10,1)
(4,43,1)
(27,33,1)
(7,38,1)
(31,4,1)
(15,48,1)
(43,45,1)
(14,12,1)
(12,27,1)
(37,24,1)
(18,32,1)
(26,47,1)
(40,48,2)
(11,48,2)
(26,32,2)
(45,17,2)
(31,25,2)
(27,45,2)
(33,45,2)
(27,42,2)
(47,32,2)
(16,45,2)
(34,48,2)
(43,45,2)
(34,25,2)
(42,34,2)
(14,12,2)
(35,25,2)
(31,45,2)
(14,45,2)
(45,48,2)
(4,45,2)
(15,48,2)
(14,17,2)
(31,42,2)
(12,27,2)
(14,31,2)
(25,21,2)
(32,35,2)
(24,32,2)
(0,48,2)
(37,32,2)
(7,45,2)
(17,40,2)
(38,45,2)
(42,48,2)
(17,48,2)
(8,48,2)
(2,48,2)
(9,48,2)
(12,45,2)
-----------------------------------
(0,ENV_VARIABLE)
(1,if(globalReturnsTrueOrFalse()
(2,data)
(3,data)
(4,dataLen)
(5,environment)
(6,FULL_COMMAND)
(7,100)
(8,environment)
(9,NULL)
(10,data)
(11,environment)
(12,100-dataLen-1)
(13,0)
(14,wcsncat(data+dataLen, environment, 100-dataLen-1)
(15,dataLen)
(16,dataLen)
(17,* environment = GETENV(ENV_VARIABLE)
(18,RET)
(19,data)
(20,data_buf)
(21,data_buf[100] = FULL_COMMAND)
(22,if (SYSTEM(data)
(23,data_buf)
(24,"command execution failed!")
(25,data = data_buf)
(26,exit(1)
(27,dataLen-1)
(28,)
(29,dataLen)
(30,)
(31,data+dataLen)
(32,SYSTEM(data)
(33,1)
(34,wcslen(data)
(35,SYSTEM(data)
(36,)
(37,printLine("command execution failed!")
(38,environment)
(39,data_buf)
(40,GETENV(ENV_VARIABLE)
(41,)
(42,dataLen = wcslen(data)
(43,data)
(44,if (environment != NULL)
(45,environment != NULL)
(46,)
(47,1)
(48,globalReturnsTrueOrFalse()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
