-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_44_bad()
{
    char * data;
    /* define a function pointer */
    void (*funcPtr) (char *) = badSink;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    /* use the function pointer */
    funcPtr(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
16,17
16,18
19,20
19,21
21,22
21,23
24,25
25,26
27,28
28,29
28,30
30,31
30,32
30,33
32,33
34,35
35,36
37,38
38,39
38,40
39,40
41,42
43,44
43,45
43,46
44,45
45,46
45,47
46,47
48,49
48,50
50,51
51,52
51,53
52,53
54,55
56,57
57,58
57,59
59,60
59,61
59,62
62,63
63,64
63,65
64,65
66,67
68,69
68,70
69,70
69,71
70,71
72,73
74,75
75,76
76,77
76,78
76,79
76,80
77,78
79,80
79,81
80,81
82,83
84,85
86,87
86,88
87,88
87,89
89,90
92,93
93,94
93,95
94,95
96,97
-----nextToken-----
2,4,8,10,11,14,17,18,20,22,23,26,29,31,33,36,40,42,47,49,53,55,58,60,61,65,67,71,73,78,81,83,85,88,90,91,95,97
-----computeFrom-----
38,39
38,40
69,70
69,71
79,80
79,81
86,87
86,88
87,88
87,89
-----guardedBy-----
71,85
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;FunctionDeclarator;Declarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnlp_44_bad(){    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* use the function pointer */    funcPtr(data);}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_44_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnlp_44_bad
{    char * data;    /* define a function pointer */    void (*funcPtr) (char *) = badSink;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    /* use the function pointer */    funcPtr(data);}
char * data;
char * data;
char
* data
*
data
void (*funcPtr) (char *) = badSink;
void (*funcPtr) (char *) = badSink;
void
(*funcPtr) (char *) = badSink
*funcPtr
*
funcPtr
char *
char
*
*

= badSink
badSink
badSink
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
funcPtr(data);
funcPtr(data)
funcPtr
funcPtr
data
data
-----joern-----
(14,27,0)
(36,32,0)
(32,36,0)
(28,36,0)
(12,11,0)
(32,6,0)
(6,32,0)
(16,38,0)
(9,1,0)
(0,3,0)
(7,38,0)
(29,18,0)
(37,27,0)
(25,29,0)
(39,18,0)
(20,29,0)
(38,7,0)
(11,27,0)
(29,27,0)
(13,3,0)
(6,12,0)
(2,6,0)
(4,27,0)
(15,17,0)
(37,29,0)
(40,29,0)
(23,12,0)
(5,27,0)
(35,11,0)
(38,11,0)
(3,12,0)
(36,3,0)
(21,25,0)
(30,37,0)
(24,17,0)
(34,32,0)
(36,38,0)
(31,6,0)
(3,29,0)
(3,36,0)
(22,18,0)
(19,11,0)
(36,8,0)
(18,27,0)
(17,27,0)
(12,25,0)
(25,12,0)
(26,7,0)
(41,1,0)
(1,38,0)
(10,11,0)
(29,18,1)
(32,6,1)
(3,0,1)
(33,37,1)
(31,34,1)
(3,29,1)
(25,21,1)
(17,15,1)
(34,28,1)
(13,1,1)
(38,7,1)
(28,3,1)
(40,18,1)
(30,1,1)
(37,29,1)
(16,12,1)
(0,13,1)
(21,23,1)
(1,38,1)
(6,2,1)
(36,32,1)
(39,22,1)
(3,12,1)
(15,24,1)
(9,38,1)
(20,40,1)
(36,38,1)
(30,36,1)
(37,30,1)
(2,31,1)
(6,12,1)
(23,29,1)
(26,16,1)
(7,26,1)
(22,17,1)
(41,9,1)
(18,39,1)
(25,29,1)
(29,20,1)
(1,41,1)
(36,3,1)
(12,25,1)
(12,25,2)
(36,3,2)
(28,1,2)
(3,29,2)
(37,29,2)
(6,12,2)
(36,38,2)
(0,1,2)
(3,1,2)
(36,1,2)
(13,1,2)
(6,1,2)
(36,32,2)
(38,7,2)
(32,6,2)
(34,1,2)
(25,29,2)
(3,12,2)
(32,1,2)
(29,18,2)
(1,38,2)
(2,1,2)
(31,1,2)
-----------------------------------
(0,dataLen)
(1,environment != NULL)
(2,1)
(3,data+dataLen)
(4,dataBuffer)
(5,data)
(6,dataLen-1)
(7,GETENV(ENV_VARIABLE)
(8,)
(9,environment)
(10,environment)
(11,)
(12,dataLen = strlen(data)
(13,data)
(14,funcPtr)
(15,badSink)
(16,environment)
(17,(*funcPtr)
(18,dataBuffer[100] = COMMAND_ARG2)
(19,if (environment != NULL)
(20,dataBuffer)
(21,data)
(22,dataBuffer)
(23,dataLen)
(24,funcPtr)
(25,strlen(data)
(26,ENV_VARIABLE)
(27,)
(28,environment)
(29,data = dataBuffer)
(30,data)
(31,dataLen)
(32,100-dataLen-1)
(33,RET)
(34,100)
(35,dataLen)
(36,strncat(data+dataLen, environment, 100-dataLen-1)
(37,funcPtr(data)
(38,* environment = GETENV(ENV_VARIABLE)
(39,COMMAND_ARG2)
(40,data)
(41,NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
