-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32_spawnlp_06_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
49,50
51,52
51,53
54,55
54,56
55,56
55,57
56,57
56,58
58,59
61,62
61,63
62,63
63,64
63,65
64,65
66,67
66,68
66,69
67,68
69,70
72,73
72,74
73,74
73,75
74,75
76,77
78,79
78,80
79,80
79,81
80,81
80,82
81,82
81,83
81,84
81,85
82,83
84,85
84,86
85,86
87,88
89,90
89,91
90,91
90,92
93,94
94,95
94,96
96,97
98,99
100,101
102,103
102,104
103,104
104,105
104,106
105,106
108,109
109,110
109,111
110,111
110,112
111,112
113,114
116,117
117,118
117,119
118,119
120,121
122,123
123,124
123,125
123,126
123,127
123,128
123,129
123,130
124,125
126,127
128,129
130,131
132,133
134,135
136,137
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,50,52,53,57,59,60,65,68,70,71,75,77,83,86,88,91,92,95,97,99,101,106,107,112,114,115,119,121,125,127,129,131,133,135,137
-----computeFrom-----
23,24
23,25
29,30
29,31
55,56
55,57
56,57
56,58
63,64
63,65
73,74
73,75
80,81
80,82
84,85
84,86
94,95
94,96
109,110
109,111
-----guardedBy-----
59,114
77,101
75,121
86,112
97,114
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32_spawnlp_06_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_file_w32_spawnlp_06_bad()
CWE78_OS_Command_Injection__char_file_w32_spawnlp_06_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(16,52,0)
(65,11,0)
(15,1,0)
(26,63,0)
(50,26,0)
(59,1,0)
(14,42,0)
(34,50,0)
(43,17,0)
(2,24,0)
(29,45,0)
(17,38,0)
(29,13,0)
(48,13,0)
(21,28,0)
(29,52,0)
(18,29,0)
(35,26,0)
(3,28,0)
(10,9,0)
(30,57,0)
(63,26,0)
(31,25,0)
(44,63,0)
(51,28,0)
(8,46,0)
(50,18,0)
(7,68,0)
(11,68,0)
(41,18,0)
(57,9,0)
(26,46,0)
(67,13,0)
(25,26,0)
(53,28,0)
(0,25,0)
(18,50,0)
(49,4,0)
(40,17,0)
(32,24,0)
(13,17,0)
(64,52,0)
(22,46,0)
(56,68,0)
(47,46,0)
(23,16,0)
(36,29,0)
(28,24,0)
(19,42,0)
(63,17,0)
(39,38,0)
(37,28,0)
(68,11,0)
(66,38,0)
(12,6,0)
(20,24,0)
(61,50,0)
(52,4,0)
(29,18,0)
(58,59,0)
(5,45,0)
(33,28,0)
(68,26,0)
(13,26,0)
(25,17,0)
(52,42,0)
(17,24,0)
(55,6,0)
(18,41,0)
(38,24,0)
(42,52,0)
(45,29,0)
(46,27,0)
(60,15,0)
(13,29,0)
(57,52,0)
(25,15,0)
(54,16,0)
(52,42,1)
(28,53,1)
(42,19,1)
(21,16,1)
(51,37,1)
(18,50,1)
(23,54,1)
(16,52,1)
(45,29,1)
(54,52,1)
(25,0,1)
(7,56,1)
(35,6,1)
(14,64,1)
(68,26,1)
(21,57,1)
(19,14,1)
(62,28,1)
(29,13,1)
(63,44,1)
(30,45,1)
(50,61,1)
(44,35,1)
(16,23,1)
(18,41,1)
(11,65,1)
(45,5,1)
(26,63,1)
(50,26,1)
(21,11,1)
(53,51,1)
(58,45,1)
(29,52,1)
(38,39,1)
(40,43,1)
(65,68,1)
(13,26,1)
(15,60,1)
(48,67,1)
(43,38,1)
(13,48,1)
(31,59,1)
(59,58,1)
(34,13,1)
(25,26,1)
(29,18,1)
(3,21,1)
(25,17,1)
(29,36,1)
(60,25,1)
(67,16,1)
(56,26,1)
(17,38,1)
(37,33,1)
(12,55,1)
(5,29,1)
(21,6,1)
(68,7,1)
(17,40,1)
(13,17,1)
(30,15,1)
(39,66,1)
(63,17,1)
(61,34,1)
(36,18,1)
(6,12,1)
(0,31,1)
(64,11,1)
(57,30,1)
(11,68,1)
(57,52,1)
(55,17,1)
(33,3,1)
(45,29,2)
(29,13,2)
(13,17,2)
(30,16,2)
(45,16,2)
(54,11,2)
(29,18,2)
(11,68,2)
(64,11,2)
(25,26,2)
(63,6,2)
(63,17,2)
(59,45,2)
(23,11,2)
(31,45,2)
(34,16,2)
(5,16,2)
(56,6,2)
(52,11,2)
(42,11,2)
(26,6,2)
(60,45,2)
(35,6,2)
(68,26,2)
(29,16,2)
(0,45,2)
(25,45,2)
(58,45,2)
(61,16,2)
(57,16,2)
(50,26,2)
(36,16,2)
(57,52,2)
(15,45,2)
(17,38,2)
(26,63,2)
(25,17,2)
(68,6,2)
(29,52,2)
(18,16,2)
(7,6,2)
(48,16,2)
(16,11,2)
(14,11,2)
(13,26,2)
(52,42,2)
(18,41,2)
(18,50,2)
(19,11,2)
(11,6,2)
(67,16,2)
(44,6,2)
(16,52,2)
(13,16,2)
(50,16,2)
(65,6,2)
-----------------------------------
(0,dataLen)
(1,)
(2,if(STATIC_CONST_FIVE==5)
(3,COMMAND_INT)
(4,)
(5,NULL)
(6,STATIC_CONST_FIVE==5)
(7,dataLen)
(8,if (100-dataLen > 1)
(9,)
(10,if (fgets(data+dataLen, (int)
(11,100-dataLen > 1)
(12,5)
(13,data+dataLen)
(14,FILENAME)
(15,data[dataLen] = \\\'\\\\0\\\')
(16,pFile != NULL)
(17,data = dataBuffer)
(18,(int)
(19,"r")
(20,data)
(21,_P_WAIT)
(22,dataLen)
(23,NULL)
(24,)
(25,data[dataLen])
(26,dataLen = strlen(data)
(27,)
(28,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(29,fgets(data+dataLen, (int)
(30,pFile)
(31,data)
(32,dataBuffer)
(33,COMMAND_INT)
(34,100)
(35,dataLen)
(36,pFile)
(37,COMMAND_ARG1)
(38,dataBuffer[100] = COMMAND_ARG2)
(39,COMMAND_ARG2)
(40,dataBuffer)
(41,int)
(42,fopen(FILENAME, "r")
(43,data)
(44,data)
(45,fgets(data+dataLen, (int)
(46,)
(47,pFile)
(48,dataLen)
(49,if (pFile != NULL)
(50,100-dataLen)
(51,COMMAND_ARG3)
(52,pFile = fopen(FILENAME, "r")
(53,NULL)
(54,pFile)
(55,STATIC_CONST_FIVE)
(56,100)
(57,fclose(pFile)
(58,"fgets()
(59,printLine("fgets()
(60,\\\'\\\\0\\\')
(61,dataLen)
(62,RET)
(63,strlen(data)
(64,pFile)
(65,1)
(66,dataBuffer)
(67,data)
(68,100-dataLen)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
