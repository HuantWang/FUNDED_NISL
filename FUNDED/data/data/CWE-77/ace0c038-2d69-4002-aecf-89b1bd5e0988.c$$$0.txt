-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_file_execl_01_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = wcslen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgetws() failed");
                    /* Restore NUL terminator if fgetws fails */
                    data[dataLen] = L'\0';
                }
                fclose(pFile);
            }
        }
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
117,120
117,121
117,122
117,123
118,119
120,121
122,123
124,125
126,127
128,129
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121,123,125,127,129
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_file_execl_01_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_file_execl_01_bad()
CWE78_OS_Command_Injection__wchar_t_file_execl_01_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = wcslen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }    }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }                fclose(pFile);            }
if (fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
fgetws(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgetws(data+dataLen, (int)(100-dataLen), pFile)
fgetws
fgetws
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgetws() failed");                    /* Restore NUL terminator if fgetws fails */                    data[dataLen] = L'\0';                }
printLine("fgetws() failed");
printLine("fgetws() failed")
printLine
printLine
"fgetws() failed"
data[dataLen] = L'\0';
data[dataLen] = L'\0'
data[dataLen]
data
data
dataLen
dataLen
L'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(9,36,0)
(55,11,0)
(47,28,0)
(36,35,0)
(2,57,0)
(54,27,0)
(0,55,0)
(36,34,0)
(49,10,0)
(38,5,0)
(7,33,0)
(8,23,0)
(34,2,0)
(35,8,0)
(25,11,0)
(45,26,0)
(40,28,0)
(24,55,0)
(34,36,0)
(1,27,0)
(48,21,0)
(28,55,0)
(43,16,0)
(33,3,0)
(32,26,0)
(19,23,0)
(4,10,0)
(23,16,0)
(17,24,0)
(2,34,0)
(13,36,0)
(58,34,0)
(37,8,0)
(10,16,0)
(53,16,0)
(8,35,0)
(51,53,0)
(55,28,0)
(50,12,0)
(23,53,0)
(41,53,0)
(27,2,0)
(6,34,0)
(33,35,0)
(46,23,0)
(27,35,0)
(30,10,0)
(56,35,0)
(5,55,0)
(2,27,0)
(14,3,0)
(18,10,0)
(20,26,0)
(5,12,0)
(3,33,0)
(44,21,0)
(35,26,0)
(39,33,0)
(15,48,0)
(29,24,0)
(34,55,0)
(22,10,0)
(34,6,0)
(42,16,0)
(31,6,0)
(26,16,0)
(36,23,0)
(57,2,0)
(23,46,1)
(34,2,1)
(28,47,1)
(19,53,1)
(29,55,1)
(48,15,1)
(58,2,1)
(17,29,1)
(14,33,1)
(56,23,1)
(33,35,1)
(8,23,1)
(54,1,1)
(44,48,1)
(2,27,1)
(22,30,1)
(6,31,1)
(36,23,1)
(38,6,1)
(46,19,1)
(52,10,1)
(47,40,1)
(49,24,1)
(24,55,1)
(5,38,1)
(36,13,1)
(24,17,1)
(6,34,1)
(34,55,1)
(34,58,1)
(34,36,1)
(23,53,1)
(30,49,1)
(5,55,1)
(7,39,1)
(9,24,1)
(3,33,1)
(10,4,1)
(31,34,1)
(38,44,1)
(15,6,1)
(1,36,1)
(53,51,1)
(35,8,1)
(36,35,1)
(51,41,1)
(2,57,1)
(40,0,1)
(13,9,1)
(3,14,1)
(18,22,1)
(8,37,1)
(39,35,1)
(33,7,1)
(0,3,1)
(49,5,1)
(27,35,1)
(55,28,1)
(37,56,1)
(4,18,1)
(49,3,1)
(27,54,1)
(34,24,2)
(5,55,2)
(1,24,2)
(34,55,2)
(33,35,2)
(5,24,2)
(27,24,2)
(2,57,2)
(29,3,2)
(6,34,2)
(17,3,2)
(40,3,2)
(34,2,2)
(23,53,2)
(24,55,2)
(3,33,2)
(36,24,2)
(55,3,2)
(47,3,2)
(2,27,2)
(58,24,2)
(6,24,2)
(28,3,2)
(27,35,2)
(24,3,2)
(36,23,2)
(2,24,2)
(35,8,2)
(34,36,2)
(0,3,2)
(15,6,2)
(44,6,2)
(31,24,2)
(38,24,2)
(48,6,2)
(55,28,2)
(13,24,2)
(8,23,2)
(9,24,2)
(36,35,2)
(54,24,2)
-----------------------------------
(0,pFile)
(1,100)
(2,(int)
(3,100-dataLen > 1)
(4,NULL)
(5,fclose(pFile)
(6,fgetws(data+dataLen, (int)
(7,dataLen)
(8,wcslen(data)
(9,data)
(10,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(11,)
(12,)
(13,dataLen)
(14,1)
(15,"fgetws()
(16,)
(17,NULL)
(18,COMMAND_ARG3)
(19,data)
(20,pFile)
(21,)
(22,COMMAND_ARG1)
(23,data = dataBuffer)
(24,pFile != NULL)
(25,if (pFile != NULL)
(26,)
(27,100-dataLen)
(28,fopen(FILENAME, "r")
(29,pFile)
(30,COMMAND_INT_PATH)
(31,NULL)
(32,dataLen)
(33,100-dataLen)
(34,fgetws(data+dataLen, (int)
(35,dataLen = wcslen(data)
(36,data+dataLen)
(37,data)
(38,pFile)
(39,100)
(40,FILENAME)
(41,dataBuffer)
(42,data)
(43,dataBuffer)
(44,\\\'\\\\0\\\')
(45,if (100-dataLen > 1)
(46,dataBuffer)
(47,"r")
(48,printLine("fgetws()
(49,COMMAND_INT_PATH)
(50,if (fgetws(data+dataLen, (int)
(51,COMMAND_ARG2)
(52,RET)
(53,dataBuffer[100] = COMMAND_ARG2)
(54,dataLen)
(55,pFile = fopen(FILENAME, "r")
(56,dataLen)
(57,int)
(58,pFile)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
