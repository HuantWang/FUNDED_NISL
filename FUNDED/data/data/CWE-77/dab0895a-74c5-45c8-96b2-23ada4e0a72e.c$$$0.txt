-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType myUnion;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    /* FIX: Append a fixed string to data (not user / external input) */
    wcscat(data, L"*.*");
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        /* wexeclp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
62,63
62,64
62,65
62,66
62,67
62,68
63,64
65,66
67,68
69,70
71,72
73,74
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,64,66,68,70,72,74
-----computeFrom-----
29,30
29,31
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* wexeclp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
static void
goodG2B()
goodG2B
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType myUnion;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* wexeclp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType
CWE78_OS_Command_Injection__wchar_t_file_execlp_34_unionType
myUnion
myUnion
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        /* wexeclp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(5,21,0)
(14,21,0)
(28,5,0)
(5,7,0)
(9,21,0)
(20,21,0)
(27,1,0)
(18,26,0)
(6,21,0)
(25,1,0)
(1,9,0)
(2,1,0)
(16,1,0)
(24,20,0)
(23,13,0)
(17,21,0)
(3,0,0)
(12,0,0)
(20,5,0)
(15,7,0)
(26,13,0)
(0,20,0)
(8,1,0)
(13,9,0)
(7,21,0)
(10,26,0)
(11,7,0)
(13,26,0)
(19,5,0)
(22,9,0)
(16,2,1)
(5,28,1)
(27,25,1)
(24,0,1)
(20,24,1)
(12,5,1)
(19,7,1)
(18,23,1)
(0,3,1)
(26,10,1)
(2,13,1)
(4,1,1)
(11,15,1)
(28,19,1)
(5,7,1)
(3,12,1)
(13,26,1)
(23,20,1)
(8,27,1)
(1,8,1)
(10,18,1)
(7,11,1)
(25,16,1)
(20,5,1)
(13,26,2)
(20,5,2)
(5,7,2)
-----------------------------------
(0,myUnion.unionFirst)
(1,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(2,COMMAND_INT)
(3,unionFirst)
(4,RET)
(5,data = dataBuffer)
(6,data)
(7,dataBuffer[100] = COMMAND_ARG2)
(8,NULL)
(9,)
(10,unionSecond)
(11,COMMAND_ARG2)
(12,myUnion)
(13,* data = myUnion.unionSecond)
(14,dataBuffer)
(15,dataBuffer)
(16,COMMAND_INT)
(17,myUnion)
(18,myUnion)
(19,data)
(20,myUnion.unionFirst = data)
(21,)
(22,data)
(23,data)
(24,data)
(25,COMMAND_ARG1)
(26,myUnion.unionSecond)
(27,COMMAND_ARG3)
(28,dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
