-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* spawnlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
31,32
32,33
32,34
32,35
33,34
35,36
38,39
39,40
39,41
39,42
39,43
39,44
39,45
39,46
40,41
42,43
44,45
46,47
48,49
50,51
52,53
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,34,36,37,41,43,45,47,49,51,53
-----computeFrom-----
23,24
23,25
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnlp
_spawnlp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(3,17,0)
(11,19,0)
(16,17,0)
(13,19,0)
(2,17,0)
(1,17,0)
(10,6,0)
(6,3,0)
(3,2,0)
(19,17,0)
(18,19,0)
(15,3,0)
(8,3,0)
(5,19,0)
(21,2,0)
(7,6,0)
(6,12,0)
(20,19,0)
(4,17,0)
(0,2,0)
(14,19,0)
(22,3,1)
(11,6,1)
(10,7,1)
(6,10,1)
(14,11,1)
(11,22,1)
(19,13,1)
(20,18,1)
(8,2,1)
(6,3,1)
(3,15,1)
(5,20,1)
(0,21,1)
(9,19,1)
(7,22,1)
(3,2,1)
(2,0,1)
(15,8,1)
(18,14,1)
(13,5,1)
(10,22,2)
(3,2,2)
(6,22,2)
(6,3,2)
(7,22,2)
-----------------------------------
(0,COMMAND_ARG2)
(1,data)
(2,dataBuffer[100] = COMMAND_ARG2)
(3,data = dataBuffer)
(4,if(1)
(5,COMMAND_ARG3)
(6,strcat(data, "*.*")
(7,data)
(8,data)
(9,RET)
(10,"*.*")
(11,_P_WAIT)
(12,)
(13,NULL)
(14,COMMAND_INT)
(15,dataBuffer)
(16,dataBuffer)
(17,)
(18,COMMAND_INT)
(19,_spawnlp(_P_WAIT, COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(20,COMMAND_ARG1)
(21,dataBuffer)
(22,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
