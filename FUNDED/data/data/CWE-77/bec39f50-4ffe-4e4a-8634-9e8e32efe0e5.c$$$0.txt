-----label-----
0
-----code-----
static void goodG2B2()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticFive==5)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
35,36
35,37
35,38
36,37
38,39
41,42
41,43
42,43
42,44
43,44
43,45
44,45
46,47
49,50
49,51
50,51
51,52
51,53
52,53
55,56
56,57
56,58
57,58
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,37,39,40,45,47,48,53,54,58,59
-----computeFrom-----
23,24
23,25
29,30
29,31
42,43
42,44
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B2(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B2()
goodG2B2
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
staticFive==5
staticFive
staticFive
5
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(2,19,0)
(7,8,0)
(0,13,0)
(8,13,0)
(10,7,0)
(18,17,0)
(11,20,0)
(22,13,0)
(19,7,0)
(16,13,0)
(9,12,0)
(5,13,0)
(20,19,0)
(21,8,0)
(1,7,0)
(12,17,0)
(7,13,0)
(15,18,0)
(6,3,0)
(19,20,0)
(23,8,0)
(4,3,0)
(2,3,1)
(20,11,1)
(12,9,1)
(19,2,1)
(1,10,1)
(9,18,1)
(21,23,1)
(8,21,1)
(6,4,1)
(7,8,1)
(7,1,1)
(14,12,1)
(10,8,1)
(3,6,1)
(4,7,1)
(20,19,1)
(18,15,1)
(15,20,1)
(11,19,1)
(14,20,1)
(19,7,1)
(12,20,2)
(7,8,2)
(19,7,2)
(20,19,2)
(9,20,2)
(15,20,2)
(18,20,2)
-----------------------------------
(0,if(staticFive==5)
(1,data_buf)
(2,data)
(3,staticFive==5)
(4,staticFive)
(5,data_buf)
(6,5)
(7,data = data_buf)
(8,data_buf[100] = FULL_COMMAND)
(9,1)
(10,data)
(11,0)
(12,exit(1)
(13,)
(14,RET)
(15,"command execution failed!")
(16,if (SYSTEM(data)
(17,)
(18,printLine("command execution failed!")
(19,SYSTEM(data)
(20,SYSTEM(data)
(21,FULL_COMMAND)
(22,data)
(23,data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
