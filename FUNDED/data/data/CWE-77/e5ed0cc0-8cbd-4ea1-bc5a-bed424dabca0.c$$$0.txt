-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalFive==5)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
42,45
42,46
42,47
42,48
42,49
43,44
45,46
47,48
49,50
51,52
53,54
55,56
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,37,39,40,44,46,48,50,52,54,56
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalFive==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalFive==5
globalFive
globalFive
5
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(22,9,0)
(12,1,0)
(17,1,0)
(24,3,0)
(16,1,0)
(18,9,0)
(6,11,0)
(23,9,0)
(2,17,0)
(9,11,0)
(20,9,0)
(14,0,0)
(1,0,0)
(4,9,0)
(19,9,0)
(17,10,0)
(15,0,0)
(8,11,0)
(13,17,0)
(21,11,0)
(5,3,0)
(1,11,0)
(0,11,0)
(7,9,1)
(24,1,1)
(20,3,1)
(13,2,1)
(17,1,1)
(2,3,1)
(12,0,1)
(3,5,1)
(1,16,1)
(4,22,1)
(1,0,1)
(17,13,1)
(20,17,1)
(9,19,1)
(18,23,1)
(16,12,1)
(0,15,1)
(5,24,1)
(23,4,1)
(22,20,1)
(19,18,1)
(15,14,1)
(1,0,2)
(17,1,2)
(2,3,2)
(17,3,2)
(13,3,2)
-----------------------------------
(0,dataBuffer[100] = COMMAND_ARG2)
(1,data = dataBuffer)
(2,data)
(3,globalFive==5)
(4,COMMAND_INT_PATH)
(5,5)
(6,dataBuffer)
(7,RET)
(8,data)
(9,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(10,)
(11,)
(12,data)
(13,"*.*")
(14,dataBuffer)
(15,COMMAND_ARG2)
(16,dataBuffer)
(17,strcat(data, "*.*")
(18,COMMAND_ARG3)
(19,NULL)
(20,_P_WAIT)
(21,if(globalFive==5)
(22,COMMAND_INT_PATH)
(23,COMMAND_ARG1)
(24,globalFive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
