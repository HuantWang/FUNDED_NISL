-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    data = goodG2BSource(data);
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
32,33
32,34
33,34
35,36
37,38
37,39
38,39
39,40
39,41
41,42
41,43
41,44
41,45
45,46
46,47
46,48
46,49
46,50
47,48
49,50
51,52
53,54
55,56
56,57
56,58
56,59
56,60
57,58
59,60
61,62
63,64
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,34,36,40,42,43,44,48,50,52,54,58,60,62,64
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
static void
goodG2B()
goodG2B
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    data = goodG2BSource(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
data = goodG2BSource(data);
data = goodG2BSource(data)
data
data
goodG2BSource(data)
goodG2BSource
goodG2BSource
data
data
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnv(_P_WAIT, COMMAND_INT_PATH, args);
_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
_spawnv
_spawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(17,14,0)
(10,15,0)
(6,14,0)
(14,16,0)
(7,1,0)
(21,13,0)
(15,21,0)
(18,16,0)
(19,13,0)
(21,15,0)
(13,3,0)
(16,1,0)
(11,14,0)
(14,1,0)
(13,9,0)
(15,9,0)
(20,21,0)
(8,13,0)
(2,3,0)
(1,9,0)
(12,9,0)
(3,9,0)
(0,9,0)
(5,3,0)
(10,13,1)
(2,5,1)
(18,15,1)
(3,2,1)
(13,8,1)
(4,14,1)
(15,21,1)
(19,3,1)
(6,17,1)
(13,3,1)
(11,16,1)
(16,18,1)
(21,20,1)
(17,11,1)
(21,13,1)
(8,19,1)
(14,16,1)
(14,6,1)
(20,10,1)
(13,3,2)
(14,16,2)
(15,21,2)
(21,13,2)
-----------------------------------
(0,data)
(1,)
(2,COMMAND_ARG2)
(3,dataBuffer[100] = COMMAND_ARG2)
(4,RET)
(5,dataBuffer)
(6,args)
(7,args)
(8,dataBuffer)
(9,)
(10,data)
(11,_P_WAIT)
(12,dataBuffer)
(13,data = dataBuffer)
(14,_spawnv(_P_WAIT, COMMAND_INT_PATH, args)
(15,data = goodG2BSource(data)
(16,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(17,COMMAND_INT_PATH)
(18,args)
(19,data)
(20,data)
(21,goodG2BSource(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
