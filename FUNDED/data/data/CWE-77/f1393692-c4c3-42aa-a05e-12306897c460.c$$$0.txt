-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType myUnion;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    strcat(data, "*.*");
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        if (SYSTEM(data) != 0)
        {
            printLine("command execution failed!");
            exit(1);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
63,64
63,65
64,65
66,67
69,70
69,71
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,65,67,68,73,74,78,79
-----computeFrom-----
29,30
29,31
42,43
42,44
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    char * data;    CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType myUnion;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }}
static void
goodG2B()
goodG2B
{    char * data;    CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType myUnion;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType myUnion;
CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType myUnion;
CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType
CWE78_OS_Command_Injection__char_listen_socket_system_34_unionType
myUnion
myUnion
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{            printLine("command execution failed!");            exit(1);        }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(12,0,0)
(14,23,0)
(13,34,0)
(3,1,0)
(6,23,0)
(31,3,0)
(22,1,0)
(27,33,0)
(32,35,0)
(26,5,0)
(30,27,0)
(8,33,0)
(18,3,0)
(9,5,0)
(4,19,0)
(27,5,0)
(5,1,0)
(24,15,0)
(35,27,0)
(20,34,0)
(29,1,0)
(25,33,0)
(19,0,0)
(3,23,0)
(11,17,0)
(34,3,0)
(17,22,0)
(10,17,0)
(35,15,0)
(23,1,0)
(15,35,0)
(16,22,0)
(34,1,0)
(2,12,0)
(7,1,0)
(33,27,0)
(21,1,0)
(22,3,0)
(18,23,1)
(30,22,1)
(8,25,1)
(20,13,1)
(27,33,1)
(14,6,1)
(35,27,1)
(16,17,1)
(33,8,1)
(10,11,1)
(28,12,1)
(22,16,1)
(4,15,1)
(13,3,1)
(11,34,1)
(34,3,1)
(17,10,1)
(25,30,1)
(2,19,1)
(3,23,1)
(3,31,1)
(22,3,1)
(15,35,1)
(15,24,1)
(34,20,1)
(32,27,1)
(31,18,1)
(35,32,1)
(24,35,1)
(19,4,1)
(23,14,1)
(28,15,1)
(12,2,1)
(34,3,2)
(2,15,2)
(35,27,2)
(3,23,2)
(15,35,2)
(19,15,2)
(12,15,2)
(4,15,2)
(27,33,2)
(22,3,2)
-----------------------------------
(0,)
(1,)
(2,1)
(3,data = data_buf)
(4,"command execution failed!")
(5,)
(6,data_buf)
(7,data)
(8,unionSecond)
(9,data)
(10,unionFirst)
(11,myUnion)
(12,exit(1)
(13,data)
(14,FULL_COMMAND)
(15,SYSTEM(data)
(16,data)
(17,myUnion.unionFirst)
(18,data)
(19,printLine("command execution failed!")
(20,"*.*")
(21,myUnion)
(22,myUnion.unionFirst = data)
(23,data_buf[100] = FULL_COMMAND)
(24,0)
(25,myUnion)
(26,if (SYSTEM(data)
(27,* data = myUnion.unionSecond)
(28,RET)
(29,data_buf)
(30,data)
(31,data_buf)
(32,data)
(33,myUnion.unionSecond)
(34,strcat(data, "*.*")
(35,SYSTEM(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
