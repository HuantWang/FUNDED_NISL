-----label-----
0
-----code-----
static void goodG2B1()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalFive!=5)
    {
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
    }
    else
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
29,31
30,31
33,34
34,35
35,36
35,37
36,37
39,40
40,41
41,42
41,43
41,44
42,43
44,45
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
55,56
56,57
56,58
57,58
59,60
59,61
59,62
60,61
62,63
65,66
65,67
66,67
66,68
67,68
69,70
71,72
72,73
73,74
73,75
74,75
76,77
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,37,38,43,45,46,51,53,54,58,61,63,64,68,70,75,77
-----computeFrom-----
23,24
23,25
29,30
29,31
56,57
56,58
66,67
66,68
-----guardedBy-----
68,77
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B1(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
static void
goodG2B1()
goodG2B1
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalFive!=5)    {        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }    else    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
globalFive!=5
globalFive
globalFive
5
{        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");    }
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(14,19,0)
(31,3,0)
(11,5,0)
(19,5,0)
(0,18,0)
(1,9,0)
(27,19,0)
(19,9,0)
(14,10,0)
(9,5,0)
(12,18,0)
(17,22,0)
(24,19,0)
(26,12,0)
(7,12,0)
(18,28,0)
(16,3,0)
(28,19,0)
(23,8,0)
(33,14,0)
(20,5,0)
(21,5,0)
(30,9,0)
(2,17,0)
(18,8,0)
(8,5,0)
(13,14,0)
(34,32,0)
(4,34,0)
(6,28,0)
(29,8,0)
(28,18,0)
(34,18,0)
(15,28,0)
(6,15,1)
(27,24,1)
(26,18,1)
(19,9,1)
(2,3,1)
(12,7,1)
(24,9,1)
(9,1,1)
(31,19,1)
(13,33,1)
(25,12,1)
(28,6,1)
(3,16,1)
(14,13,1)
(25,34,1)
(34,4,1)
(16,31,1)
(15,0,1)
(7,26,1)
(12,18,1)
(17,2,1)
(0,14,1)
(18,28,1)
(28,19,1)
(4,12,1)
(14,19,1)
(34,18,1)
(33,3,1)
(1,30,1)
(19,27,1)
(0,17,1)
(14,3,2)
(33,3,2)
(28,19,2)
(18,28,2)
(2,3,2)
(14,19,2)
(34,12,2)
(4,12,2)
(13,3,2)
(19,9,2)
(12,18,2)
(17,3,2)
(34,18,2)
-----------------------------------
(0,pipe)
(1,FULL_COMMAND)
(2,"Benign, fixed string")
(3,globalFive!=5)
(4,pipe)
(5,)
(6,"w")
(7,NULL)
(8,)
(9,data_buf[100] = FULL_COMMAND)
(10,)
(11,data)
(12,pipe != NULL)
(13,"*.*")
(14,strcat(data, "*.*")
(15,data)
(16,5)
(17,printLine("Benign, fixed string")
(18,pipe = POPEN(data, "w")
(19,data = data_buf)
(20,data_buf)
(21,if(globalFive!=5)
(22,)
(23,if (pipe != NULL)
(24,data)
(25,RET)
(26,pipe)
(27,data_buf)
(28,POPEN(data, "w")
(29,pipe)
(30,data_buf)
(31,globalFive)
(32,)
(33,data)
(34,PCLOSE(pipe)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
