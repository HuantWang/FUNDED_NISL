-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_16_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
89,90
90,91
90,92
91,92
93,94
93,95
93,96
94,95
96,97
99,100
99,101
100,101
100,102
101,102
103,104
105,106
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,85,87,88,92,95,97,98,102,104,109,111
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
90,91
90,92
100,101
100,102
-----guardedBy-----
59,73
102,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_16_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_popen_16_bad()
CWE78_OS_Command_Injection__wchar_t_environment_popen_16_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(40,14,0)
(42,10,0)
(21,23,0)
(26,10,0)
(20,2,0)
(37,40,0)
(3,19,0)
(8,14,0)
(12,1,0)
(18,44,0)
(17,20,0)
(0,3,0)
(44,20,0)
(14,23,0)
(36,23,0)
(2,48,0)
(28,20,0)
(28,7,0)
(7,28,0)
(5,48,0)
(43,42,0)
(23,35,0)
(27,35,0)
(24,10,0)
(8,42,0)
(10,42,0)
(8,44,0)
(46,14,0)
(29,7,0)
(11,44,0)
(42,8,0)
(44,8,0)
(34,2,0)
(47,8,0)
(38,23,0)
(39,28,0)
(33,45,0)
(20,48,0)
(7,23,0)
(15,40,0)
(30,1,0)
(1,48,0)
(8,6,0)
(25,14,0)
(32,46,0)
(22,48,0)
(31,45,0)
(4,48,0)
(10,7,0)
(9,2,0)
(14,46,0)
(44,7,0)
(13,20,0)
(42,10,1)
(2,9,1)
(27,8,1)
(44,20,1)
(28,20,1)
(45,31,1)
(20,13,1)
(8,42,1)
(18,40,1)
(33,16,1)
(7,28,1)
(39,29,1)
(13,17,1)
(9,34,1)
(25,7,1)
(26,43,1)
(3,0,1)
(29,16,1)
(11,18,1)
(41,45,1)
(14,46,1)
(0,45,1)
(28,39,1)
(24,26,1)
(20,2,1)
(37,14,1)
(15,37,1)
(31,33,1)
(44,7,1)
(10,7,1)
(43,47,1)
(32,25,1)
(8,14,1)
(8,44,1)
(40,15,1)
(40,14,1)
(10,24,1)
(41,3,1)
(47,44,1)
(33,27,1)
(44,11,1)
(17,2,1)
(46,32,1)
(27,40,1)
(16,20,1)
(47,40,2)
(11,40,2)
(0,45,2)
(42,40,2)
(29,16,2)
(25,16,2)
(20,2,2)
(28,16,2)
(28,20,2)
(26,40,2)
(15,16,2)
(44,7,2)
(44,40,2)
(42,10,2)
(8,14,2)
(7,16,2)
(39,16,2)
(46,16,2)
(37,16,2)
(14,16,2)
(3,45,2)
(8,42,2)
(18,40,2)
(44,20,2)
(40,16,2)
(8,40,2)
(10,40,2)
(14,46,2)
(40,14,2)
(32,16,2)
(10,7,2)
(43,40,2)
(24,40,2)
(7,28,2)
(8,44,2)
(27,16,2)
-----------------------------------
(0,pipe)
(1,)
(2,data_buf[100] = FULL_COMMAND)
(3,PCLOSE(pipe)
(4,data_buf)
(5,data)
(6,)
(7,dataLen = wcslen(data)
(8,wcsncat(data+dataLen, environment, 100-dataLen-1)
(9,FULL_COMMAND)
(10,dataLen-1)
(11,dataLen)
(12,pipe)
(13,data_buf)
(14,* environment = GETENV(ENV_VARIABLE)
(15,NULL)
(16,1)
(17,data)
(18,data)
(19,)
(20,data = data_buf)
(21,dataLen)
(22,while(1)
(23,)
(24,1)
(25,environment)
(26,dataLen)
(27,break;)
(28,wcslen(data)
(29,dataLen)
(30,if (pipe != NULL)
(31,NULL)
(32,ENV_VARIABLE)
(33,pipe)
(34,data_buf)
(35,)
(36,if (environment != NULL)
(37,environment)
(38,environment)
(39,data)
(40,environment != NULL)
(41,RET)
(42,100-dataLen-1)
(43,100)
(44,data+dataLen)
(45,pipe != NULL)
(46,GETENV(ENV_VARIABLE)
(47,environment)
(48,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
