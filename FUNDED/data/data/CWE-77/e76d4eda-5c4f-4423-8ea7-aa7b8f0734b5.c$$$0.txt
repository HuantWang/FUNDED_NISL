-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_16_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    while(1)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
        break;
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
31,33
31,34
32,33
33,34
33,35
34,35
36,37
36,38
38,39
39,40
39,41
40,41
42,43
44,45
45,46
45,47
47,48
47,49
47,50
50,51
51,52
51,53
52,53
54,55
56,57
56,58
57,58
57,59
58,59
60,61
62,63
63,64
64,65
64,66
64,67
64,68
65,66
67,68
67,69
68,69
70,71
72,73
74,75
74,76
75,76
75,77
77,78
81,82
81,83
81,84
82,83
83,84
83,85
84,85
86,87
86,88
89,90
90,91
90,92
91,92
93,94
93,95
93,96
94,95
96,97
99,100
99,101
100,101
100,102
101,102
103,104
105,106
106,107
107,108
107,109
108,109
110,111
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,35,37,41,43,46,48,49,53,55,59,61,66,69,71,73,76,78,79,80,85,87,88,92,95,97,98,102,104,109,111
-----computeFrom-----
23,24
23,25
57,58
57,59
67,68
67,69
74,75
74,76
75,76
75,77
90,91
90,92
100,101
100,102
-----guardedBy-----
59,73
102,111
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_16_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_16_bad()
CWE78_OS_Command_Injection__char_environment_popen_16_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
while(1)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
1
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }        break;    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(6,43,0)
(0,28,0)
(11,33,0)
(36,48,0)
(3,40,0)
(5,26,0)
(41,28,0)
(32,52,0)
(53,49,0)
(26,53,0)
(29,41,0)
(47,28,0)
(31,5,0)
(9,52,0)
(25,36,0)
(42,32,0)
(22,5,0)
(4,8,0)
(52,41,0)
(5,28,0)
(12,7,0)
(7,3,0)
(18,53,0)
(8,33,0)
(36,53,0)
(45,25,0)
(19,40,0)
(30,26,0)
(28,8,0)
(20,33,0)
(41,52,0)
(27,3,0)
(1,25,0)
(39,41,0)
(40,36,0)
(10,48,0)
(40,3,0)
(24,7,0)
(46,14,0)
(40,21,0)
(2,43,0)
(48,36,0)
(52,43,0)
(23,46,0)
(0,26,0)
(26,0,0)
(40,5,0)
(3,7,0)
(7,26,0)
(38,32,0)
(5,40,0)
(28,33,0)
(16,36,0)
(34,8,0)
(51,53,0)
(13,53,0)
(15,0,0)
(35,28,0)
(43,33,0)
(46,52,0)
(37,33,0)
(50,49,0)
(39,29,1)
(32,52,1)
(52,41,1)
(41,28,1)
(48,10,1)
(26,0,1)
(25,36,1)
(4,34,1)
(5,28,1)
(28,8,1)
(36,48,1)
(5,22,1)
(29,9,1)
(0,15,1)
(15,30,1)
(22,31,1)
(30,17,1)
(44,32,1)
(19,5,1)
(45,1,1)
(23,32,1)
(0,28,1)
(27,19,1)
(12,24,1)
(10,16,1)
(44,46,1)
(46,52,1)
(3,7,1)
(40,36,1)
(35,8,1)
(31,25,1)
(47,35,1)
(24,27,1)
(50,25,1)
(40,5,1)
(50,40,1)
(8,4,1)
(9,17,1)
(9,50,1)
(7,26,1)
(46,23,1)
(41,39,1)
(7,12,1)
(28,47,1)
(40,3,1)
(42,52,1)
(1,36,1)
(25,45,1)
(5,26,1)
(32,38,1)
(38,42,1)
(16,26,1)
(17,28,1)
(31,25,2)
(40,25,2)
(0,28,2)
(26,17,2)
(26,0,2)
(10,17,2)
(22,25,2)
(7,25,2)
(36,48,2)
(24,25,2)
(46,32,2)
(15,17,2)
(48,17,2)
(12,25,2)
(46,52,2)
(40,5,2)
(52,41,2)
(5,26,2)
(40,36,2)
(32,52,2)
(7,26,2)
(5,25,2)
(1,17,2)
(36,17,2)
(28,8,2)
(0,17,2)
(19,25,2)
(45,17,2)
(30,17,2)
(3,25,2)
(23,32,2)
(27,25,2)
(25,17,2)
(40,3,2)
(3,7,2)
(5,28,2)
(16,17,2)
(25,36,2)
(41,28,2)
(50,17,2)
-----------------------------------
(0,strlen(data)
(1,environment)
(2,if (pipe != NULL)
(3,100-dataLen-1)
(4,FULL_COMMAND)
(5,data+dataLen)
(6,pipe)
(7,dataLen-1)
(8,data_buf[100] = FULL_COMMAND)
(9,pipe)
(10,ENV_VARIABLE)
(11,data_buf)
(12,1)
(13,if (environment != NULL)
(14,)
(15,data)
(16,environment)
(17,1)
(18,dataLen)
(19,environment)
(20,while(1)
(21,)
(22,dataLen)
(23,pipe)
(24,dataLen)
(25,environment != NULL)
(26,dataLen = strlen(data)
(27,100)
(28,data = data_buf)
(29,data)
(30,dataLen)
(31,data)
(32,pipe != NULL)
(33,)
(34,data_buf)
(35,data)
(36,* environment = GETENV(ENV_VARIABLE)
(37,data)
(38,NULL)
(39,"w")
(40,strncat(data+dataLen, environment, 100-dataLen-1)
(41,POPEN(data, "w")
(42,pipe)
(43,)
(44,RET)
(45,NULL)
(46,PCLOSE(pipe)
(47,data_buf)
(48,GETENV(ENV_VARIABLE)
(49,)
(50,break;)
(51,environment)
(52,pipe = POPEN(data, "w")
(53,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
