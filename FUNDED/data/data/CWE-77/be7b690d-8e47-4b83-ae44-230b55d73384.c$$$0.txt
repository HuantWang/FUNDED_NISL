-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_15_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
90,92
90,93
91,92
92,93
92,94
93,94
95,96
95,97
98,99
99,100
99,101
100,101
102,103
102,104
102,105
103,104
105,106
108,109
108,110
109,110
109,111
110,111
112,113
114,115
115,116
116,117
116,118
117,118
119,120
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,94,96,97,101,104,106,107,111,113,118,120
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
99,100
99,101
109,110
109,111
-----guardedBy-----
61,75
111,120
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_15_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_15_bad()
CWE78_OS_Command_Injection__char_environment_popen_15_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(24,11,0)
(25,22,0)
(25,41,0)
(42,41,0)
(34,54,0)
(12,11,0)
(6,7,0)
(46,56,0)
(39,16,0)
(13,41,0)
(48,0,0)
(19,7,0)
(55,51,0)
(5,22,0)
(22,51,0)
(15,54,0)
(4,45,0)
(0,11,0)
(41,2,0)
(2,11,0)
(56,43,0)
(33,2,0)
(51,7,0)
(36,31,0)
(52,54,0)
(53,41,0)
(45,16,0)
(56,46,0)
(50,13,0)
(37,58,0)
(31,41,0)
(25,56,0)
(9,11,0)
(45,51,0)
(46,58,0)
(14,15,0)
(58,46,0)
(44,7,0)
(13,22,0)
(31,54,0)
(54,0,0)
(23,7,0)
(52,8,0)
(29,25,0)
(56,25,0)
(54,31,0)
(3,58,0)
(10,2,0)
(35,40,0)
(18,51,0)
(27,25,0)
(26,7,0)
(22,13,0)
(40,45,0)
(41,11,0)
(47,56,0)
(21,52,0)
(56,45,0)
(28,15,0)
(38,31,0)
(57,0,0)
(30,23,0)
(20,40,0)
(58,22,0)
(49,51,0)
(16,45,0)
(1,46,0)
(37,1,1)
(10,33,1)
(31,38,1)
(52,54,1)
(46,58,1)
(28,14,1)
(17,41,1)
(19,23,1)
(20,45,1)
(53,2,1)
(3,37,1)
(54,31,1)
(47,25,1)
(2,10,1)
(15,28,1)
(26,56,1)
(31,41,1)
(34,26,1)
(40,35,1)
(45,16,1)
(1,47,1)
(34,19,1)
(23,30,1)
(13,41,1)
(5,17,1)
(56,25,1)
(13,50,1)
(40,45,1)
(36,34,1)
(32,15,1)
(38,36,1)
(32,52,1)
(56,46,1)
(4,22,1)
(14,54,1)
(21,15,1)
(58,22,1)
(30,17,1)
(58,3,1)
(35,20,1)
(50,5,1)
(26,40,1)
(29,40,1)
(22,13,1)
(15,54,1)
(56,45,1)
(25,27,1)
(52,21,1)
(39,4,1)
(42,53,1)
(41,42,1)
(41,2,1)
(25,41,1)
(27,29,1)
(25,22,1)
(16,39,1)
(58,40,2)
(41,2,2)
(23,17,2)
(25,40,2)
(45,16,2)
(56,40,2)
(27,40,2)
(25,22,2)
(22,13,2)
(47,40,2)
(52,15,2)
(46,40,2)
(29,40,2)
(4,17,2)
(3,40,2)
(56,45,2)
(25,41,2)
(45,17,2)
(21,15,2)
(5,17,2)
(56,46,2)
(58,22,2)
(46,58,2)
(13,41,2)
(50,17,2)
(52,54,2)
(22,17,2)
(37,40,2)
(54,31,2)
(20,17,2)
(40,17,2)
(35,17,2)
(40,45,2)
(19,17,2)
(39,17,2)
(1,40,2)
(31,41,2)
(26,17,2)
(30,17,2)
(56,25,2)
(15,54,2)
(16,17,2)
(13,17,2)
-----------------------------------
(0,)
(1,100)
(2,data_buf[100] = FULL_COMMAND)
(3,1)
(4,environment)
(5,dataLen)
(6,default:)
(7,)
(8,)
(9,data_buf)
(10,FULL_COMMAND)
(11,)
(12,data)
(13,strlen(data)
(14,pipe)
(15,pipe != NULL)
(16,GETENV(ENV_VARIABLE)
(17,6)
(18,if (environment != NULL)
(19,break;)
(20,environment)
(21,pipe)
(22,dataLen = strlen(data)
(23,printLine("Benign, fixed string")
(24,switch(6)
(25,data+dataLen)
(26,break;)
(27,dataLen)
(28,NULL)
(29,data)
(30,"Benign, fixed string")
(31,POPEN(data, "w")
(32,RET)
(33,data_buf)
(34,pipe)
(35,NULL)
(36,data)
(37,dataLen)
(38,"w")
(39,ENV_VARIABLE)
(40,environment != NULL)
(41,data = data_buf)
(42,data_buf)
(43,)
(44,case 6:)
(45,* environment = GETENV(ENV_VARIABLE)
(46,100-dataLen-1)
(47,environment)
(48,if (pipe != NULL)
(49,environment)
(50,data)
(51,)
(52,PCLOSE(pipe)
(53,data)
(54,pipe = POPEN(data, "w")
(55,dataLen)
(56,strncat(data+dataLen, environment, 100-dataLen-1)
(57,pipe)
(58,dataLen-1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
