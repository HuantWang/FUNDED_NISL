-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_execlp_17_bad()
{
    int i;
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    for(i = 0; i < 1; i++)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* execlp - searches for the location of the command among
     * the directories specified by the PATH environment variable */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
11,12
12,13
12,14
14,15
14,16
17,18
18,19
18,20
20,21
20,22
20,23
22,23
24,25
25,26
27,28
28,29
28,30
29,30
31,32
33,34
33,35
33,36
33,37
34,35
35,36
35,37
36,37
39,40
39,41
40,41
43,44
44,45
46,47
47,48
47,49
47,50
48,49
49,50
49,51
50,51
52,53
52,54
54,55
55,56
55,57
56,57
58,59
60,61
61,62
61,63
63,64
63,65
63,66
66,67
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
76,77
78,79
79,80
80,81
80,82
80,83
80,84
81,82
83,84
83,85
84,85
86,87
88,89
90,91
90,92
91,92
91,93
93,94
96,97
97,98
97,99
97,100
97,101
97,102
97,103
98,99
100,101
102,103
104,105
106,107
108,109
-----nextToken-----
2,4,8,10,13,15,16,19,21,23,26,30,32,37,38,41,42,45,51,53,57,59,62,64,65,69,71,75,77,82,85,87,89,92,94,95,99,101,103,105,107,109
-----computeFrom-----
28,29
28,30
35,36
35,37
39,40
39,41
73,74
73,75
83,84
83,85
90,91
90,92
91,92
91,93
-----guardedBy-----
75,89
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ForStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;BinaryExpression;IdExpression;Name;LiteralExpression;UnaryExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_execlp_17_bad(){    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_execlp_17_bad()
CWE78_OS_Command_Injection__char_environment_execlp_17_bad
{    int i;    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* execlp - searches for the location of the command among     * the directories specified by the PATH environment variable */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);}
int i;
int i;
int
i
i
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
for(i = 0; i < 1; i++)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
i = 0;
i = 0
i
i
0
i < 1
i
i
1
i++
i
i
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECLP
EXECLP
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_INT
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(13,19,0)
(50,33,0)
(1,44,0)
(37,44,0)
(15,19,0)
(33,44,0)
(3,50,0)
(29,4,0)
(41,10,0)
(12,52,0)
(4,29,0)
(26,9,0)
(32,19,0)
(40,19,0)
(11,52,0)
(43,9,0)
(21,4,0)
(31,9,0)
(42,35,0)
(33,25,0)
(52,44,0)
(28,33,0)
(4,20,0)
(29,40,0)
(5,15,0)
(30,22,0)
(49,25,0)
(16,38,0)
(39,19,0)
(7,12,0)
(36,40,0)
(46,38,0)
(47,4,0)
(18,29,0)
(48,15,0)
(2,19,0)
(21,12,0)
(44,34,0)
(4,21,0)
(8,9,0)
(12,21,0)
(24,9,0)
(4,33,0)
(10,40,0)
(51,12,0)
(35,38,0)
(29,52,0)
(10,52,0)
(45,29,0)
(14,22,0)
(6,44,0)
(17,50,0)
(52,10,0)
(40,15,0)
(22,38,0)
(25,33,0)
(9,19,0)
(27,21,0)
(0,40,0)
(42,50,1)
(52,10,1)
(41,11,1)
(35,38,1)
(40,36,1)
(4,21,1)
(8,31,1)
(35,42,1)
(36,0,1)
(47,29,1)
(28,52,1)
(50,33,1)
(42,4,1)
(23,9,1)
(18,50,1)
(26,24,1)
(4,29,1)
(4,33,1)
(29,40,1)
(12,52,1)
(12,7,1)
(11,22,1)
(40,15,1)
(16,46,1)
(49,28,1)
(51,27,1)
(3,17,1)
(38,16,1)
(31,26,1)
(25,49,1)
(10,41,1)
(27,47,1)
(22,38,1)
(15,5,1)
(9,8,1)
(33,25,1)
(24,43,1)
(17,33,1)
(50,3,1)
(0,15,1)
(7,51,1)
(5,48,1)
(14,38,1)
(29,52,1)
(46,40,1)
(30,14,1)
(22,30,1)
(29,45,1)
(10,40,1)
(43,22,1)
(21,12,1)
(14,35,1)
(45,18,1)
(29,50,2)
(33,25,2)
(3,22,2)
(35,38,2)
(11,22,2)
(10,40,2)
(50,22,2)
(33,22,2)
(17,22,2)
(52,10,2)
(49,22,2)
(50,33,2)
(29,52,2)
(40,15,2)
(42,22,2)
(30,22,2)
(21,50,2)
(12,50,2)
(4,33,2)
(21,12,2)
(51,50,2)
(28,22,2)
(22,38,2)
(47,50,2)
(4,21,2)
(25,22,2)
(41,22,2)
(12,52,2)
(35,22,2)
(29,40,2)
(22,22,2)
(10,22,2)
(18,50,2)
(27,50,2)
(45,50,2)
(14,22,2)
(4,50,2)
(7,50,2)
(52,22,2)
(4,29,2)
-----------------------------------
(0,data)
(1,dataLen)
(2,i)
(3,NULL)
(4,strncat(data+dataLen, environment, 100-dataLen-1)
(5,COMMAND_ARG2)
(6,if (environment != NULL)
(7,1)
(8,NULL)
(9,EXECLP(COMMAND_INT, COMMAND_INT, COMMAND_ARG1, COMMAND_ARG3, NULL)
(10,strlen(data)
(11,dataLen)
(12,dataLen-1)
(13,dataBuffer)
(14,i)
(15,dataBuffer[100] = COMMAND_ARG2)
(16,0)
(17,environment)
(18,data)
(19,)
(20,)
(21,100-dataLen-1)
(22,i < 1)
(23,RET)
(24,COMMAND_INT)
(25,GETENV(ENV_VARIABLE)
(26,COMMAND_ARG1)
(27,100)
(28,environment)
(29,data+dataLen)
(30,1)
(31,COMMAND_ARG3)
(32,data)
(33,* environment = GETENV(ENV_VARIABLE)
(34,)
(35,i++)
(36,dataBuffer)
(37,environment)
(38,i = 0)
(39,for(i = 0; i < 1; i++)
(40,data = dataBuffer)
(41,data)
(42,i)
(43,COMMAND_INT)
(44,)
(45,dataLen)
(46,i)
(47,environment)
(48,dataBuffer)
(49,ENV_VARIABLE)
(50,environment != NULL)
(51,dataLen)
(52,dataLen = strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
