-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(staticReturnsTrue())
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
34,35
34,36
34,37
35,36
37,38
40,41
40,42
41,42
41,43
42,43
42,44
43,44
45,46
48,49
48,50
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,36,38,39,44,46,47,52,53,57,58
-----computeFrom-----
23,24
23,25
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B2(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B2()
goodG2B2
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(staticReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(staticReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(15,12,0)
(11,9,0)
(2,19,0)
(21,19,0)
(16,19,0)
(13,12,0)
(17,9,0)
(24,17,0)
(17,19,0)
(0,15,0)
(22,8,0)
(12,15,0)
(20,9,0)
(4,1,0)
(6,17,0)
(9,19,0)
(18,24,0)
(24,10,0)
(7,24,0)
(12,17,0)
(5,19,0)
(3,17,0)
(8,14,0)
(1,14,0)
(7,23,1)
(22,15,1)
(23,17,1)
(25,1,1)
(15,0,1)
(1,4,1)
(12,13,1)
(24,18,1)
(17,9,1)
(17,6,1)
(18,7,1)
(0,12,1)
(3,9,1)
(12,17,1)
(11,20,1)
(9,11,1)
(13,23,1)
(15,12,1)
(24,17,1)
(4,8,1)
(6,3,1)
(8,22,1)
(25,15,1)
(13,24,1)
(4,15,2)
(17,9,2)
(7,23,2)
(8,15,2)
(24,23,2)
(18,23,2)
(12,17,2)
(1,15,2)
(22,15,2)
(24,17,2)
(15,12,2)
-----------------------------------
(0,0)
(1,exit(1)
(2,data)
(3,data)
(4,1)
(5,if (SYSTEM(data)
(6,data_buf)
(7,data)
(8,printLine("command execution failed!")
(9,data_buf[100] = FULL_COMMAND)
(10,)
(11,FULL_COMMAND)
(12,SYSTEM(data)
(13,data)
(14,)
(15,SYSTEM(data)
(16,data_buf)
(17,data = data_buf)
(18,"*.*")
(19,)
(20,data_buf)
(21,if(staticReturnsTrue()
(22,"command execution failed!")
(23,staticReturnsTrue()
(24,strcat(data, "*.*")
(25,RET)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
