-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_10_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalTrue)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    /* wexecl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
32,34
32,35
33,34
34,35
34,36
35,36
37,38
37,39
39,40
40,41
40,42
41,42
43,44
45,46
46,47
46,48
48,49
48,50
48,51
51,52
52,53
52,54
53,54
55,56
57,58
57,59
58,59
58,60
59,60
61,62
63,64
64,65
65,66
65,67
65,68
65,69
66,67
68,69
68,70
69,70
71,72
73,74
75,76
75,77
76,77
76,78
78,79
81,82
82,83
82,84
82,85
82,86
82,87
82,88
83,84
85,86
87,88
89,90
91,92
93,94
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,36,38,42,44,47,49,50,54,56,60,62,67,70,72,74,77,79,80,84,86,88,90,92,94
-----computeFrom-----
23,24
23,25
58,59
58,60
68,69
68,70
75,76
75,77
76,77
76,78
-----guardedBy-----
60,74
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_execl_10_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__wchar_t_environment_execl_10_bad()
CWE78_OS_Command_Injection__wchar_t_environment_execl_10_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    /* wexecl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalTrue)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalTrue
globalTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(25,29,0)
(4,22,0)
(14,4,0)
(26,16,0)
(24,41,0)
(25,24,0)
(38,32,0)
(32,22,0)
(33,3,0)
(2,25,0)
(23,22,0)
(36,41,0)
(30,22,0)
(18,41,0)
(21,38,0)
(33,28,0)
(40,23,0)
(42,4,0)
(43,33,0)
(7,3,0)
(34,33,0)
(41,8,0)
(38,3,0)
(17,32,0)
(5,32,0)
(10,23,0)
(9,24,0)
(35,24,0)
(25,16,0)
(0,16,0)
(16,3,0)
(28,33,0)
(16,25,0)
(3,41,0)
(16,32,0)
(39,22,0)
(44,4,0)
(12,9,0)
(6,22,0)
(27,41,0)
(32,23,0)
(3,38,0)
(25,28,0)
(24,35,0)
(20,4,0)
(13,4,0)
(37,24,0)
(28,25,0)
(19,28,0)
(11,9,0)
(31,35,0)
(25,28,1)
(23,40,1)
(25,24,1)
(16,0,1)
(0,26,1)
(21,7,1)
(15,4,1)
(34,43,1)
(12,24,1)
(24,35,1)
(13,20,1)
(7,1,1)
(1,32,1)
(40,10,1)
(14,9,1)
(35,31,1)
(4,42,1)
(17,5,1)
(33,34,1)
(5,23,1)
(31,37,1)
(32,23,1)
(32,17,1)
(14,1,1)
(44,14,1)
(16,3,1)
(38,32,1)
(37,3,1)
(11,12,1)
(25,16,1)
(28,33,1)
(2,16,1)
(43,19,1)
(42,13,1)
(3,38,1)
(16,32,1)
(9,24,1)
(38,21,1)
(19,2,1)
(26,9,1)
(33,3,1)
(9,11,1)
(14,25,1)
(20,44,1)
(9,24,2)
(7,1,2)
(24,35,2)
(16,3,2)
(33,3,2)
(26,9,2)
(25,9,2)
(43,9,2)
(34,9,2)
(9,1,2)
(0,9,2)
(28,33,2)
(16,9,2)
(32,23,2)
(11,1,2)
(37,1,2)
(25,24,2)
(31,1,2)
(28,9,2)
(33,9,2)
(38,32,2)
(21,1,2)
(12,1,2)
(19,9,2)
(38,1,2)
(25,16,2)
(3,38,2)
(3,1,2)
(24,1,2)
(2,9,2)
(25,28,2)
(35,1,2)
(16,32,2)
-----------------------------------
(0,dataLen)
(1,globalTrue)
(2,environment)
(3,dataLen = wcslen(data)
(4,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(5,data)
(6,dataBuffer)
(7,dataLen)
(8,)
(9,environment != NULL)
(10,dataBuffer)
(11,NULL)
(12,environment)
(13,COMMAND_ARG3)
(14,COMMAND_INT_PATH)
(15,RET)
(16,data+dataLen)
(17,dataBuffer)
(18,if (environment != NULL)
(19,100)
(20,COMMAND_ARG1)
(21,data)
(22,)
(23,dataBuffer[100] = COMMAND_ARG2)
(24,* environment = GETENV(ENV_VARIABLE)
(25,wcsncat(data+dataLen, environment, 100-dataLen-1)
(26,data)
(27,environment)
(28,100-dataLen-1)
(29,)
(30,data)
(31,ENV_VARIABLE)
(32,data = dataBuffer)
(33,dataLen-1)
(34,1)
(35,GETENV(ENV_VARIABLE)
(36,dataLen)
(37,environment)
(38,wcslen(data)
(39,if(globalTrue)
(40,COMMAND_ARG2)
(41,)
(42,NULL)
(43,dataLen)
(44,COMMAND_INT_PATH)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
