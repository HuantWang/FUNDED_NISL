-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_31_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char * dataCopy = data;
        char * data = dataCopy;
        {
            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
            /* spawnvp - searches for the location of the command among
             * the directories specified by the PATH environment variable */
            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
            _spawnvp(_P_WAIT, COMMAND_INT, args);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
77,80
78,79
79,80
79,81
81,82
81,83
81,84
84,85
85,86
87,88
88,89
88,90
90,91
90,92
90,93
93,94
94,95
96,97
96,98
97,98
98,99
98,100
100,101
100,102
100,103
100,104
104,105
105,106
105,107
105,108
105,109
106,107
108,109
110,111
112,113
114,115
115,116
115,117
115,118
115,119
116,117
118,119
120,121
122,123
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,86,89,91,92,95,99,101,102,103,107,109,111,113,117,119,121,123
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_spawnvp_31_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
void
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_31_bad()
CWE78_OS_Command_Injection__char_environment_w32_spawnvp_31_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char * dataCopy = data;        char * data = dataCopy;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char * dataCopy = data;        char * data = dataCopy;        {            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }    }
char * dataCopy = data;
char * dataCopy = data;
char
* dataCopy = data
*
dataCopy
= data
data
data
char * data = dataCopy;
char * data = dataCopy;
char
* data = dataCopy
*
data
= dataCopy
dataCopy
dataCopy
{            char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};            /* spawnvp - searches for the location of the command among             * the directories specified by the PATH environment variable */            /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */            _spawnvp(_P_WAIT, COMMAND_INT, args);        }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(22,4,0)
(42,49,0)
(49,21,0)
(11,13,0)
(20,47,0)
(32,17,0)
(34,52,0)
(52,43,0)
(40,42,0)
(4,43,0)
(10,35,0)
(37,21,0)
(30,35,0)
(2,17,0)
(18,43,0)
(44,11,0)
(6,44,0)
(41,47,0)
(42,6,0)
(38,7,0)
(44,6,0)
(42,3,0)
(2,7,0)
(52,4,0)
(12,7,0)
(26,44,0)
(46,6,0)
(7,17,0)
(3,11,0)
(35,49,0)
(9,52,0)
(50,3,0)
(11,9,0)
(24,11,0)
(27,3,0)
(36,2,0)
(13,43,0)
(1,17,0)
(45,13,0)
(42,15,0)
(29,41,0)
(6,42,0)
(14,49,0)
(48,13,0)
(16,52,0)
(47,17,0)
(51,2,0)
(23,43,0)
(28,9,0)
(21,49,0)
(0,20,0)
(5,41,0)
(41,20,0)
(3,52,0)
(33,41,0)
(17,43,0)
(3,42,0)
(25,44,0)
(49,13,0)
(19,47,0)
(7,52,0)
(9,11,0)
(8,13,0)
(39,4,0)
(52,4,1)
(2,7,1)
(29,20,1)
(7,38,1)
(42,3,1)
(6,44,1)
(3,27,1)
(42,6,1)
(28,24,1)
(37,14,1)
(3,11,1)
(46,40,1)
(3,52,1)
(36,51,1)
(42,49,1)
(24,52,1)
(51,7,1)
(30,49,1)
(44,11,1)
(0,2,1)
(33,5,1)
(21,37,1)
(39,22,1)
(10,30,1)
(38,12,1)
(49,21,1)
(5,29,1)
(4,39,1)
(12,35,1)
(11,9,1)
(9,52,1)
(35,49,1)
(44,26,1)
(52,16,1)
(20,0,1)
(41,33,1)
(26,25,1)
(16,34,1)
(12,42,1)
(34,4,1)
(31,41,1)
(7,52,1)
(2,36,1)
(14,11,1)
(25,46,1)
(41,20,1)
(35,10,1)
(27,50,1)
(40,3,1)
(50,35,1)
(9,28,1)
(25,35,2)
(42,49,2)
(3,52,2)
(42,35,2)
(50,35,2)
(7,52,2)
(41,20,2)
(27,35,2)
(6,44,2)
(9,52,2)
(52,4,2)
(44,11,2)
(42,3,2)
(44,35,2)
(11,9,2)
(3,35,2)
(49,21,2)
(35,49,2)
(2,7,2)
(6,35,2)
(40,35,2)
(42,6,2)
(46,35,2)
(26,35,2)
(3,11,2)
-----------------------------------
(0,args)
(1,dataCopy)
(2,* data = dataCopy)
(3,data+dataLen)
(4,dataBuffer[100] = COMMAND_ARG2)
(5,COMMAND_INT)
(6,100-dataLen-1)
(7,* dataCopy = data)
(8,environment)
(9,strlen(data)
(10,NULL)
(11,dataLen = strlen(data)
(12,dataCopy)
(13,)
(14,environment)
(15,)
(16,dataBuffer)
(17,)
(18,dataBuffer)
(19,args)
(20,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(21,GETENV(ENV_VARIABLE)
(22,dataBuffer)
(23,data)
(24,dataLen)
(25,dataLen)
(26,1)
(27,dataLen)
(28,data)
(29,_P_WAIT)
(30,environment)
(31,RET)
(32,data)
(33,args)
(34,data)
(35,environment != NULL)
(36,dataCopy)
(37,ENV_VARIABLE)
(38,data)
(39,COMMAND_ARG2)
(40,environment)
(41,_spawnvp(_P_WAIT, COMMAND_INT, args)
(42,strncat(data+dataLen, environment, 100-dataLen-1)
(43,)
(44,dataLen-1)
(45,if (environment != NULL)
(46,100)
(47,)
(48,dataLen)
(49,* environment = GETENV(ENV_VARIABLE)
(50,data)
(51,data)
(52,data = dataBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
