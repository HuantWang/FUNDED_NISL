-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    switch(6)
    {
    case 6:
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    break;
    default:
        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
        printLine("Benign, fixed string");
        break;
    }
    /* spawnl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
30,33
30,34
30,35
30,36
31,32
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
84,85
85,86
85,87
86,87
90,91
91,92
91,93
91,94
91,95
91,96
91,97
91,98
92,93
94,95
96,97
98,99
100,101
102,103
104,105
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,32,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,82,83,87,88,89,93,95,97,99,101,103,105
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;SwitchStatement;LiteralExpression;CompoundStatement;CaseStatement;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;BreakStatement;DefaultStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;BreakStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_15_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }    /* spawnl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
switch(6)    {    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
6
{    case 6:    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    break;    default:        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */        printLine("Benign, fixed string");        break;    }
case 6:
6
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
break;
default:
printLine("Benign, fixed string");
printLine("Benign, fixed string")
printLine
printLine
"Benign, fixed string"
break;
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(37,0,0)
(16,27,0)
(35,50,0)
(42,34,0)
(4,36,0)
(46,50,0)
(33,50,0)
(27,18,0)
(0,36,0)
(48,18,0)
(45,27,0)
(34,50,0)
(40,9,0)
(14,23,0)
(3,43,0)
(6,35,0)
(23,40,0)
(25,35,0)
(32,18,0)
(9,40,0)
(19,34,0)
(44,6,0)
(0,40,0)
(49,37,0)
(51,27,0)
(40,27,0)
(51,6,0)
(37,51,0)
(20,35,0)
(6,51,0)
(41,34,0)
(29,23,0)
(0,37,0)
(24,34,0)
(36,28,0)
(31,30,0)
(43,18,0)
(1,30,0)
(10,37,0)
(5,27,0)
(28,51,0)
(22,34,0)
(30,50,0)
(35,30,0)
(21,0,0)
(47,18,0)
(28,36,0)
(38,40,0)
(37,35,0)
(13,28,0)
(26,28,0)
(11,51,0)
(12,34,0)
(39,18,0)
(0,8,0)
(7,9,0)
(15,50,0)
(36,0,0)
(34,22,1)
(30,31,1)
(12,42,1)
(42,32,1)
(48,0,1)
(40,9,1)
(37,49,1)
(11,17,1)
(17,35,1)
(6,35,1)
(51,6,1)
(42,48,1)
(37,35,1)
(36,28,1)
(38,51,1)
(35,30,1)
(4,21,1)
(48,23,1)
(43,3,1)
(0,36,1)
(25,20,1)
(29,14,1)
(22,41,1)
(41,24,1)
(24,19,1)
(37,51,1)
(6,44,1)
(44,11,1)
(35,25,1)
(9,7,1)
(21,37,1)
(10,23,1)
(28,13,1)
(13,26,1)
(23,29,1)
(31,1,1)
(23,40,1)
(3,17,1)
(49,10,1)
(2,34,1)
(14,40,1)
(26,4,1)
(32,43,1)
(28,51,1)
(0,40,1)
(0,37,1)
(7,38,1)
(20,30,1)
(19,12,1)
(51,17,2)
(3,17,2)
(0,37,2)
(44,17,2)
(13,23,2)
(48,17,2)
(21,23,2)
(10,23,2)
(0,40,2)
(6,17,2)
(9,17,2)
(26,23,2)
(23,40,2)
(32,17,2)
(40,9,2)
(38,17,2)
(36,28,2)
(43,17,2)
(36,23,2)
(40,17,2)
(7,17,2)
(51,6,2)
(49,23,2)
(29,17,2)
(0,23,2)
(28,51,2)
(28,23,2)
(37,23,2)
(6,35,2)
(35,30,2)
(37,35,2)
(14,17,2)
(11,17,2)
(23,17,2)
(37,51,2)
(0,36,2)
(4,23,2)
-----------------------------------
(0,strncat(data+dataLen, environment, 100-dataLen-1)
(1,dataBuffer)
(2,RET)
(3,"Benign, fixed string")
(4,100)
(5,dataLen)
(6,strlen(data)
(7,ENV_VARIABLE)
(8,)
(9,GETENV(ENV_VARIABLE)
(10,data)
(11,dataLen)
(12,COMMAND_INT_PATH)
(13,1)
(14,environment)
(15,dataBuffer)
(16,if (environment != NULL)
(17,6)
(18,)
(19,COMMAND_INT_PATH)
(20,data)
(21,environment)
(22,NULL)
(23,environment != NULL)
(24,COMMAND_ARG1)
(25,dataBuffer)
(26,dataLen)
(27,)
(28,dataLen-1)
(29,NULL)
(30,dataBuffer[100] = COMMAND_ARG2)
(31,COMMAND_ARG2)
(32,break;)
(33,data)
(34,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(35,data = dataBuffer)
(36,100-dataLen-1)
(37,data+dataLen)
(38,environment)
(39,case 6:)
(40,* environment = GETENV(ENV_VARIABLE)
(41,COMMAND_ARG3)
(42,_P_WAIT)
(43,printLine("Benign, fixed string")
(44,data)
(45,environment)
(46,switch(6)
(47,default:)
(48,break;)
(49,dataLen)
(50,)
(51,dataLen = strlen(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
