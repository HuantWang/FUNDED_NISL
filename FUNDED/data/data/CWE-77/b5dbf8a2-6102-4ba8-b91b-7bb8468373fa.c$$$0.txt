-----label-----
1
-----code-----
char * CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data)
{
    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
    {
        {
            /* Read input from a file */
            size_t dataLen = strlen(data);
            FILE * pFile;
            /* if there is room in data, attempt to read the input from a file */
            if (100-dataLen > 1)
            {
                pFile = fopen(FILENAME, "r");
                if (pFile != NULL)
                {
                    /* POTENTIAL FLAW: Read data from a file */
                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                    {
                        printLine("fgets() failed");
                        /* Restore NUL terminator if fgets fails */
                        data[dataLen] = '\0';
                    }
                    fclose(pFile);
                }
            }
        }
    }
    return data;
}
-----children-----
1,2
1,3
1,4
3,4
3,5
3,6
6,7
6,8
8,9
8,10
11,12
11,13
12,13
12,14
13,14
15,16
16,17
16,18
16,19
17,18
18,19
18,20
19,20
21,22
21,23
23,24
24,25
24,26
25,26
27,28
29,30
30,31
30,32
31,32
33,34
33,35
36,37
36,38
37,38
37,39
38,39
38,40
40,41
43,44
43,45
44,45
45,46
45,47
46,47
48,49
48,50
48,51
49,50
51,52
54,55
54,56
55,56
55,57
56,57
58,59
60,61
60,62
61,62
61,63
62,63
62,64
63,64
63,65
63,66
63,67
64,65
66,67
66,68
67,68
69,70
71,72
71,73
72,73
72,74
75,76
76,77
76,78
78,79
80,81
82,83
84,85
84,86
85,86
86,87
86,88
87,88
90,91
91,92
91,93
92,93
92,94
93,94
95,96
98,99
99,100
99,101
100,101
102,103
104,105
105,106
-----nextToken-----
2,4,5,7,9,10,14,20,22,26,28,32,34,35,39,41,42,47,50,52,53,57,59,65,68,70,73,74,77,79,81,83,88,89,94,96,97,101,103,106
-----computeFrom-----
37,38
37,39
38,39
38,40
45,46
45,47
55,56
55,57
62,63
62,64
66,67
66,68
76,77
76,78
91,92
91,93
-----guardedBy-----
41,96
59,83
57,103
68,94
79,96
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Pointer;Name;ParameterDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;CompoundStatement;IfStatement;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ReturnStatement;IdExpression;Name;
-----ast_node-----
char * CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data){    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
char
* CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource(char * data)
*
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badSource
char * data
char
* data
*
data
{    if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }    return data;}
if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)    {        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal
CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal
{        {            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }    }
{            /* Read input from a file */            size_t dataLen = strlen(data);            FILE * pFile;            /* if there is room in data, attempt to read the input from a file */            if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)            {                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{                pFile = fopen(FILENAME, "r");                if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }            }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)                {                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
pFile != NULL
pFile
pFile
NULL
NULL
{                    /* POTENTIAL FLAW: Read data from a file */                    if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }                    fclose(pFile);                }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                    {                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                        printLine("fgets() failed");                        /* Restore NUL terminator if fgets fails */                        data[dataLen] = '\0';                    }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
return data;
data
data
-----joern-----
(52,22,0)
(12,47,0)
(44,14,0)
(26,47,0)
(31,24,0)
(22,12,0)
(4,25,0)
(54,36,0)
(47,12,0)
(25,36,0)
(47,39,0)
(24,46,0)
(38,36,0)
(15,30,0)
(13,12,0)
(31,37,0)
(35,12,0)
(30,50,0)
(21,10,0)
(40,35,0)
(36,5,0)
(36,7,0)
(49,32,0)
(46,24,0)
(5,50,0)
(19,30,0)
(32,10,0)
(6,18,0)
(3,4,0)
(12,35,0)
(28,46,0)
(51,46,0)
(30,14,0)
(23,54,0)
(1,25,0)
(0,31,0)
(8,5,0)
(27,39,0)
(54,21,0)
(41,54,0)
(9,7,0)
(17,37,0)
(25,4,0)
(39,36,0)
(2,24,0)
(35,50,0)
(45,39,0)
(11,35,0)
(43,24,0)
(35,36,0)
(53,25,0)
(24,18,0)
(47,26,0)
(12,24,0)
(54,50,0)
(33,2,0)
(39,47,0)
(5,36,0)
(7,29,0)
(16,2,0)
(42,7,0)
(48,7,0)
(12,22,0)
(20,21,0)
(20,54,1)
(4,25,1)
(47,26,1)
(21,20,1)
(23,41,1)
(46,51,1)
(31,24,1)
(15,30,1)
(32,49,1)
(8,38,1)
(38,34,1)
(22,12,1)
(4,3,1)
(13,47,1)
(25,36,1)
(2,24,1)
(35,36,1)
(5,8,1)
(12,13,1)
(54,23,1)
(54,36,1)
(5,50,1)
(22,52,1)
(43,4,1)
(12,35,1)
(28,43,1)
(1,53,1)
(19,31,1)
(53,36,1)
(2,33,1)
(49,22,1)
(39,45,1)
(36,5,1)
(54,50,1)
(39,36,1)
(0,22,1)
(40,2,1)
(0,21,1)
(3,25,1)
(30,19,1)
(25,1,1)
(16,24,1)
(12,47,1)
(31,0,1)
(19,4,1)
(30,50,1)
(33,16,1)
(35,11,1)
(12,24,1)
(11,40,1)
(45,27,1)
(41,32,1)
(52,12,1)
(19,34,1)
(27,35,1)
(24,46,1)
(19,2,1)
(35,50,1)
(51,28,1)
(47,39,1)
(47,2,2)
(31,24,2)
(20,22,2)
(22,2,2)
(24,4,2)
(24,46,2)
(36,34,2)
(0,2,2)
(8,34,2)
(51,4,2)
(49,22,2)
(1,34,2)
(33,4,2)
(47,39,2)
(12,35,2)
(22,12,2)
(36,5,2)
(25,36,2)
(23,22,2)
(52,2,2)
(35,36,2)
(5,50,2)
(28,4,2)
(13,2,2)
(46,4,2)
(45,2,2)
(25,34,2)
(54,50,2)
(12,24,2)
(38,34,2)
(27,2,2)
(3,34,2)
(11,2,2)
(2,24,2)
(30,50,2)
(54,36,2)
(31,2,2)
(21,22,2)
(4,25,2)
(16,4,2)
(53,34,2)
(2,4,2)
(35,50,2)
(4,34,2)
(12,47,2)
(35,2,2)
(12,2,2)
(39,36,2)
(43,4,2)
(15,30,2)
(47,26,2)
(54,22,2)
(32,22,2)
(41,22,2)
(39,2,2)
(40,2,2)
(5,34,2)
-----------------------------------
(0,pFile)
(1,dataLen)
(2,pFile != NULL)
(3,1)
(4,100-dataLen > 1)
(5,strlen(data)
(6,if (pFile != NULL)
(7,)
(8,data)
(9,pFile)
(10,)
(11,dataLen)
(12,fgets(data+dataLen, (int)
(13,pFile)
(14,)
(15,RET)
(16,pFile)
(17,if (fgets(data+dataLen, (int)
(18,)
(19,data)
(20,\\\'\\\\0\\\')
(21,data[dataLen] = \\\'\\\\0\\\')
(22,fgets(data+dataLen, (int)
(23,dataLen)
(24,pFile = fopen(FILENAME, "r")
(25,100-dataLen)
(26,int)
(27,100)
(28,FILENAME)
(29,)
(30,return data;)
(31,fclose(pFile)
(32,printLine("fgets()
(33,NULL)
(34,CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
(35,data+dataLen)
(36,dataLen = strlen(data)
(37,)
(38,dataLen)
(39,100-dataLen)
(40,data)
(41,data)
(42,if (100-dataLen > 1)
(43,pFile)
(44,if(CWE78_OS_Command_Injection__char_file_w32_spawnv_22_badGlobal)
(45,dataLen)
(46,fopen(FILENAME, "r")
(47,(int)
(48,dataLen)
(49,"fgets()
(50,char * data)
(51,"r")
(52,NULL)
(53,100)
(54,data[dataLen])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
