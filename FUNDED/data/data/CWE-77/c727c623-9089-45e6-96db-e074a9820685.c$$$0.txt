-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    while(1)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
        break;
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
30,31
30,32
31,32
32,33
32,34
32,35
33,34
35,36
39,40
39,41
40,41
40,42
41,42
41,43
42,43
44,45
47,48
47,49
48,49
49,50
49,51
50,51
53,54
54,55
54,56
55,56
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,29,34,36,37,38,43,45,46,51,52,56,57
-----computeFrom-----
23,24
23,25
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;WhileStatement;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;BreakStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B()
goodG2B
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
while(1)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }
1
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");        break;    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
break;
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(0,22,0)
(4,8,0)
(6,4,0)
(13,22,0)
(0,14,0)
(23,24,0)
(16,26,0)
(11,20,0)
(22,26,0)
(20,8,0)
(24,15,0)
(3,26,0)
(10,22,0)
(24,22,0)
(17,26,0)
(9,17,0)
(5,26,0)
(19,26,0)
(7,14,0)
(22,17,0)
(18,15,0)
(1,0,0)
(25,17,0)
(21,0,0)
(15,24,0)
(25,9,1)
(10,17,1)
(7,0,1)
(2,22,1)
(15,24,1)
(20,11,1)
(24,22,1)
(0,1,1)
(6,20,1)
(22,13,1)
(21,2,1)
(4,6,1)
(0,22,1)
(12,4,1)
(11,15,1)
(23,2,1)
(13,10,1)
(23,7,1)
(17,25,1)
(15,18,1)
(24,23,1)
(22,17,1)
(18,24,1)
(12,15,1)
(1,21,1)
(20,15,2)
(24,22,2)
(15,24,2)
(0,2,2)
(11,15,2)
(0,22,2)
(7,2,2)
(4,15,2)
(22,17,2)
(21,2,2)
(1,2,2)
(6,15,2)
-----------------------------------
(0,strcat(data, "*.*")
(1,"*.*")
(2,1)
(3,if (SYSTEM(data)
(4,exit(1)
(5,data_buf)
(6,1)
(7,break;)
(8,)
(9,data_buf)
(10,data)
(11,"command execution failed!")
(12,RET)
(13,data_buf)
(14,)
(15,SYSTEM(data)
(16,while(1)
(17,data_buf[100] = FULL_COMMAND)
(18,0)
(19,data)
(20,printLine("command execution failed!")
(21,data)
(22,data = data_buf)
(23,data)
(24,SYSTEM(data)
(25,FULL_COMMAND)
(26,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
