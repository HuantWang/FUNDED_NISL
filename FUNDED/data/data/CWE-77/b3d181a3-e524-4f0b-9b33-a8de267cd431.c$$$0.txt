-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_file_w32_spawnvp_52_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Read input from a file */
        size_t dataLen = strlen(data);
        FILE * pFile;
        /* if there is room in data, attempt to read the input from a file */
        if (100-dataLen > 1)
        {
            pFile = fopen(FILENAME, "r");
            if (pFile != NULL)
            {
                /* POTENTIAL FLAW: Read data from a file */
                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)
                {
                    printLine("fgets() failed");
                    /* Restore NUL terminator if fgets fails */
                    data[dataLen] = '\0';
                }
                fclose(pFile);
            }
        }
    }
    CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
43,44
45,46
45,47
48,49
48,50
49,50
49,51
50,51
50,52
52,53
55,56
55,57
56,57
57,58
57,59
58,59
60,61
60,62
60,63
61,62
63,64
66,67
66,68
67,68
67,69
68,69
70,71
72,73
72,74
73,74
73,75
74,75
74,76
75,76
75,77
75,78
75,79
76,77
78,79
78,80
79,80
81,82
83,84
83,85
84,85
84,86
87,88
88,89
88,90
90,91
92,93
94,95
96,97
96,98
97,98
98,99
98,100
99,100
102,103
103,104
103,105
104,105
104,106
105,106
107,108
110,111
111,112
111,113
112,113
114,115
116,117
117,118
117,119
118,119
120,121
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,44,46,47,51,53,54,59,62,64,65,69,71,77,80,82,85,86,89,91,93,95,100,101,106,108,109,113,115,119,121
-----computeFrom-----
23,24
23,25
49,50
49,51
50,51
50,52
57,58
57,59
67,68
67,69
74,75
74,76
78,79
78,80
88,89
88,90
103,104
103,105
-----guardedBy-----
53,108
71,95
69,115
80,106
91,108
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;IfStatement;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;CastExpression;TypeId;SimpleDeclSpecifier;Declarator;UnaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;ArraySubscriptExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_file_w32_spawnvp_52_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data);}
void
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52_bad()
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }    CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Read input from a file */        size_t dataLen = strlen(data);        FILE * pFile;        /* if there is room in data, attempt to read the input from a file */        if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
FILE * pFile;
FILE * pFile;
FILE
FILE
* pFile
*
pFile
if (100-dataLen > 1)        {            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
100-dataLen > 1
100-dataLen
100
dataLen
dataLen
1
{            pFile = fopen(FILENAME, "r");            if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }        }
pFile = fopen(FILENAME, "r");
pFile = fopen(FILENAME, "r")
pFile
pFile
fopen(FILENAME, "r")
fopen
fopen
FILENAME
FILENAME
"r"
if (pFile != NULL)            {                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
pFile != NULL
pFile
pFile
NULL
NULL
{                /* POTENTIAL FLAW: Read data from a file */                if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }                fclose(pFile);            }
if (fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL)                {                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
fgets(data+dataLen, (int)(100-dataLen), pFile) == NULL
fgets(data+dataLen, (int)(100-dataLen), pFile)
fgets
fgets
data+dataLen
data
data
dataLen
dataLen
(int)(100-dataLen)
int
int

(100-dataLen)
100-dataLen
100
dataLen
dataLen
pFile
pFile
NULL
NULL
{                    printLine("fgets() failed");                    /* Restore NUL terminator if fgets fails */                    data[dataLen] = '\0';                }
printLine("fgets() failed");
printLine("fgets() failed")
printLine
printLine
"fgets() failed"
data[dataLen] = '\0';
data[dataLen] = '\0'
data[dataLen]
data
data
dataLen
dataLen
'\0'
fclose(pFile);
fclose(pFile)
fclose
fclose
pFile
pFile
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data);
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data)
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink
CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink
data
data
-----joern-----
(45,23,0)
(47,54,0)
(52,12,0)
(28,43,0)
(28,19,0)
(53,32,0)
(12,54,0)
(53,12,0)
(11,4,0)
(25,57,0)
(19,43,0)
(1,57,0)
(18,48,0)
(30,48,0)
(15,3,0)
(12,53,0)
(32,48,0)
(44,42,0)
(13,19,0)
(6,54,0)
(8,39,0)
(23,32,0)
(54,6,0)
(26,6,0)
(35,50,0)
(42,27,0)
(27,17,0)
(41,28,0)
(58,56,0)
(37,24,0)
(40,28,0)
(56,28,0)
(3,54,0)
(9,6,0)
(29,17,0)
(57,32,0)
(49,12,0)
(12,52,0)
(46,50,0)
(56,43,0)
(10,22,0)
(31,23,0)
(39,12,0)
(5,53,0)
(2,19,0)
(34,43,0)
(48,43,0)
(33,52,0)
(54,4,0)
(7,27,0)
(39,8,0)
(32,24,0)
(42,32,0)
(12,39,0)
(23,45,0)
(16,32,0)
(51,23,0)
(36,29,0)
(14,48,0)
(55,43,0)
(50,54,0)
(24,32,0)
(57,39,0)
(38,45,0)
(20,42,0)
(3,22,0)
(42,28,0)
(53,28,0)
(24,28,0)
(0,53,0)
(39,57,0)
(58,45,1)
(15,52,1)
(12,53,1)
(53,28,1)
(40,19,1)
(38,23,1)
(44,20,1)
(0,5,1)
(41,40,1)
(53,32,1)
(16,28,1)
(45,23,1)
(37,16,1)
(52,12,1)
(45,38,1)
(50,46,1)
(3,15,1)
(57,1,1)
(49,39,1)
(39,8,1)
(28,19,1)
(33,12,1)
(58,3,1)
(25,53,1)
(26,9,1)
(47,45,1)
(3,54,1)
(58,50,1)
(23,51,1)
(50,54,1)
(46,35,1)
(57,32,1)
(53,0,1)
(28,41,1)
(31,32,1)
(24,28,1)
(51,31,1)
(27,7,1)
(5,50,1)
(54,6,1)
(6,26,1)
(1,25,1)
(9,47,1)
(15,27,1)
(12,54,1)
(19,2,1)
(52,33,1)
(32,24,1)
(7,42,1)
(12,39,1)
(2,13,1)
(39,57,1)
(36,52,1)
(29,36,1)
(24,37,1)
(42,32,1)
(20,29,1)
(42,44,1)
(21,56,1)
(23,32,1)
(35,54,1)
(56,28,1)
(56,58,1)
(42,28,1)
(12,49,1)
(1,50,2)
(52,50,2)
(39,8,2)
(44,52,2)
(3,54,2)
(32,24,2)
(42,32,2)
(45,23,2)
(15,50,2)
(33,50,2)
(50,54,2)
(42,28,2)
(25,50,2)
(46,45,2)
(50,45,2)
(12,39,2)
(23,32,2)
(5,50,2)
(24,28,2)
(52,12,2)
(54,6,2)
(57,32,2)
(39,50,2)
(39,57,2)
(42,52,2)
(12,50,2)
(12,54,2)
(7,52,2)
(35,45,2)
(56,28,2)
(27,52,2)
(49,50,2)
(53,50,2)
(12,53,2)
(26,45,2)
(47,45,2)
(54,45,2)
(29,52,2)
(0,50,2)
(20,52,2)
(53,32,2)
(28,19,2)
(9,45,2)
(3,50,2)
(53,28,2)
(57,50,2)
(36,52,2)
(6,45,2)
-----------------------------------
(0,dataLen)
(1,dataLen)
(2,COMMAND_ARG2)
(3,fclose(pFile)
(4,)
(5,data)
(6,fopen(FILENAME, "r")
(7,\\\'\\\\0\\\')
(8,int)
(9,FILENAME)
(10,if (fgets(data+dataLen, (int)
(11,if (pFile != NULL)
(12,fgets(data+dataLen, (int)
(13,dataBuffer)
(14,dataLen)
(15,pFile)
(16,dataLen)
(17,)
(18,pFile)
(19,dataBuffer[100] = COMMAND_ARG2)
(20,data)
(21,RET)
(22,)
(23,100-dataLen)
(24,strlen(data)
(25,100)
(26,"r")
(27,data[dataLen] = \\\'\\\\0\\\')
(28,data = dataBuffer)
(29,printLine("fgets()
(30,if (100-dataLen > 1)
(31,100)
(32,dataLen = strlen(data)
(33,NULL)
(34,data)
(35,pFile)
(36,"fgets()
(37,data)
(38,1)
(39,(int)
(40,data)
(41,dataBuffer)
(42,data[dataLen])
(43,)
(44,dataLen)
(45,100-dataLen > 1)
(46,NULL)
(47,pFile)
(48,)
(49,pFile)
(50,pFile != NULL)
(51,dataLen)
(52,fgets(data+dataLen, (int)
(53,data+dataLen)
(54,pFile = fopen(FILENAME, "r")
(55,dataBuffer)
(56,CWE78_OS_Command_Injection__char_file_w32_spawnvp_52b_badSink(data)
(57,100-dataLen)
(58,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
