-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_01_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* execvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECVP(COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
28,31
29,30
30,31
30,32
31,32
33,34
33,35
35,36
36,37
36,38
37,38
39,40
41,42
42,43
42,44
44,45
44,46
44,47
47,48
48,49
48,50
49,50
51,52
53,54
53,55
54,55
54,56
55,56
57,58
59,60
60,61
61,62
61,63
61,64
61,65
62,63
64,65
64,66
65,66
67,68
69,70
71,72
71,73
72,73
72,74
74,75
77,78
77,79
78,79
79,80
79,81
81,82
81,83
81,84
81,85
85,86
86,87
86,88
86,89
86,90
87,88
89,90
91,92
93,94
95,96
96,97
96,98
96,99
97,98
99,100
101,102
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,32,34,38,40,43,45,46,50,52,56,58,63,66,68,70,73,75,76,80,82,83,84,88,90,92,94,98,100,102
-----computeFrom-----
23,24
23,25
54,55
54,56
64,65
64,66
71,72
71,73
72,73
72,74
-----guardedBy-----
56,70
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32_execvp_01_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_environment_w32_execvp_01_bad()
CWE78_OS_Command_Injection__char_environment_w32_execvp_01_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* execvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECVP(COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECVP(COMMAND_INT, args);
EXECVP(COMMAND_INT, args)
EXECVP
EXECVP
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(32,19,0)
(2,21,0)
(40,36,0)
(9,35,0)
(10,14,0)
(3,19,0)
(2,27,0)
(38,31,0)
(35,23,0)
(18,27,0)
(36,38,0)
(13,23,0)
(32,35,0)
(29,5,0)
(21,35,0)
(36,32,0)
(21,2,0)
(16,17,0)
(27,23,0)
(38,36,0)
(31,38,0)
(39,21,0)
(24,27,0)
(37,39,0)
(0,23,0)
(26,17,0)
(17,34,0)
(31,21,0)
(19,32,0)
(27,14,0)
(11,39,0)
(39,36,0)
(33,32,0)
(14,23,0)
(7,5,0)
(25,23,0)
(30,38,0)
(5,32,0)
(15,2,0)
(12,34,0)
(41,35,0)
(36,4,0)
(42,35,0)
(17,13,0)
(36,39,0)
(6,31,0)
(28,21,0)
(1,31,0)
(39,27,0)
(20,13,0)
(34,13,0)
(8,14,0)
(17,34,1)
(39,21,1)
(36,38,1)
(18,14,1)
(2,27,1)
(36,32,1)
(27,24,1)
(12,36,1)
(19,3,1)
(22,17,1)
(39,11,1)
(39,27,1)
(28,27,1)
(38,31,1)
(17,26,1)
(15,28,1)
(5,7,1)
(27,14,1)
(14,8,1)
(26,16,1)
(24,18,1)
(37,5,1)
(8,10,1)
(30,40,1)
(5,32,1)
(12,5,1)
(16,34,1)
(29,32,1)
(21,2,1)
(11,37,1)
(31,21,1)
(36,39,1)
(1,30,1)
(2,15,1)
(33,21,1)
(32,19,1)
(3,33,1)
(7,29,1)
(40,39,1)
(31,6,1)
(34,12,1)
(6,1,1)
(36,38,2)
(1,5,2)
(39,27,2)
(37,5,2)
(32,19,2)
(30,5,2)
(27,14,2)
(38,31,2)
(38,5,2)
(36,32,2)
(6,5,2)
(31,5,2)
(31,21,2)
(39,5,2)
(40,5,2)
(21,2,2)
(39,21,2)
(5,32,2)
(36,5,2)
(2,27,2)
(17,34,2)
(36,39,2)
(11,5,2)
-----------------------------------
(0,dataBuffer)
(1,dataLen)
(2,strlen(data)
(3,ENV_VARIABLE)
(4,)
(5,environment != NULL)
(6,1)
(7,NULL)
(8,COMMAND_ARG2)
(9,environment)
(10,dataBuffer)
(11,dataLen)
(12,args)
(13,)
(14,dataBuffer[100] = COMMAND_ARG2)
(15,data)
(16,COMMAND_INT)
(17,EXECVP(COMMAND_INT, args)
(18,data)
(19,GETENV(ENV_VARIABLE)
(20,args)
(21,dataLen = strlen(data)
(22,RET)
(23,)
(24,dataBuffer)
(25,data)
(26,args)
(27,data = dataBuffer)
(28,dataLen)
(29,environment)
(30,100)
(31,dataLen-1)
(32,* environment = GETENV(ENV_VARIABLE)
(33,environment)
(34,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(35,)
(36,strncat(data+dataLen, environment, 100-dataLen-1)
(37,data)
(38,100-dataLen-1)
(39,data+dataLen)
(40,environment)
(41,dataLen)
(42,if (environment != NULL)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
