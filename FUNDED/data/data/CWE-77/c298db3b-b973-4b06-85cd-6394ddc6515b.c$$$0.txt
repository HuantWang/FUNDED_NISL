-----label-----
0
-----code-----
static void goodG2B2()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(STATIC_CONST_TRUE)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
31,32
32,33
33,34
33,35
33,36
34,35
36,37
39,40
39,41
40,41
40,42
41,42
41,43
42,43
44,45
47,48
47,49
48,49
49,50
49,51
50,51
53,54
54,55
54,56
55,56
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,35,37,38,43,45,46,51,52,56,57
-----computeFrom-----
23,24
23,25
40,41
40,42
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B2(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B2()
goodG2B2
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(STATIC_CONST_TRUE)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(STATIC_CONST_TRUE)    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
STATIC_CONST_TRUE
STATIC_CONST_TRUE
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(14,17,0)
(12,21,0)
(9,17,0)
(20,17,0)
(4,15,0)
(8,20,0)
(7,8,0)
(15,17,0)
(20,15,0)
(13,11,0)
(21,8,0)
(5,15,0)
(19,6,0)
(3,20,0)
(6,11,0)
(0,20,0)
(16,17,0)
(8,21,0)
(18,13,0)
(1,17,0)
(10,21,1)
(0,3,1)
(10,13,1)
(18,6,1)
(6,19,1)
(8,7,1)
(12,8,1)
(3,15,1)
(4,5,1)
(13,18,1)
(21,12,1)
(15,4,1)
(19,21,1)
(7,2,1)
(8,20,1)
(20,0,1)
(21,8,1)
(2,20,1)
(20,15,1)
(20,15,2)
(19,21,2)
(21,8,2)
(8,20,2)
(6,21,2)
(18,21,2)
(13,21,2)
-----------------------------------
(0,data_buf)
(1,data)
(2,STATIC_CONST_TRUE)
(3,data)
(4,FULL_COMMAND)
(5,data_buf)
(6,printLine("command execution failed!")
(7,data)
(8,SYSTEM(data)
(9,if (SYSTEM(data)
(10,RET)
(11,)
(12,0)
(13,exit(1)
(14,data_buf)
(15,data_buf[100] = FULL_COMMAND)
(16,if(STATIC_CONST_TRUE)
(17,)
(18,1)
(19,"command execution failed!")
(20,data = data_buf)
(21,SYSTEM(data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
