-----label-----
0
-----code-----
static void goodG2B2()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(globalReturnsTrue())
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        wcscat(data, L"*.*");
    }
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
34,35
34,36
34,37
35,36
37,38
40,41
40,42
41,42
41,43
42,43
42,44
43,44
45,46
48,49
48,50
49,50
50,51
50,52
51,52
54,55
55,56
55,57
56,57
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,36,38,39,44,46,47,52,53,57,58
-----computeFrom-----
23,24
23,25
41,42
41,43
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B2(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B2()
goodG2B2
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(globalReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(globalReturnsTrue())    {        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
globalReturnsTrue()
globalReturnsTrue
globalReturnsTrue
{        /* FIX: Append a fixed string to data (not user / external input) */        wcscat(data, L"*.*");    }
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(20,19,0)
(3,20,0)
(19,20,0)
(7,14,0)
(17,11,0)
(18,4,0)
(11,4,0)
(14,4,0)
(6,1,0)
(11,14,0)
(8,4,0)
(1,10,0)
(0,10,0)
(19,11,0)
(2,4,0)
(21,11,0)
(16,0,0)
(9,19,0)
(15,14,0)
(12,4,0)
(17,14,1)
(5,11,1)
(11,21,1)
(6,0,1)
(3,19,1)
(20,19,1)
(19,11,1)
(21,17,1)
(20,3,1)
(7,15,1)
(19,9,1)
(14,7,1)
(1,6,1)
(13,20,1)
(0,16,1)
(11,14,1)
(13,1,1)
(16,20,1)
(9,5,1)
(11,14,2)
(16,20,2)
(19,11,2)
(0,20,2)
(1,20,2)
(20,19,2)
(6,20,2)
-----------------------------------
(0,printLine("command execution failed!")
(1,exit(1)
(2,data_buf)
(3,0)
(4,)
(5,globalReturnsTrue()
(6,1)
(7,FULL_COMMAND)
(8,data)
(9,data)
(10,)
(11,data = data_buf)
(12,if(globalReturnsTrue()
(13,RET)
(14,data_buf[100] = FULL_COMMAND)
(15,data_buf)
(16,"command execution failed!")
(17,data)
(18,if (SYSTEM(data)
(19,SYSTEM(data)
(20,SYSTEM(data)
(21,data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
