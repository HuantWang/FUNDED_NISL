-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_08_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(staticReturnsTrue())
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wexecv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        EXECV(COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
30,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
83,84
84,85
84,86
86,87
86,88
86,89
86,90
90,91
91,92
91,93
91,94
91,95
92,93
94,95
96,97
98,99
100,101
101,102
101,103
101,104
102,103
104,105
106,107
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,85,87,88,89,93,95,97,99,103,105,107
-----computeFrom-----
23,24
23,25
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
-----guardedBy-----
61,75
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;FunctionCallExpression;IdExpression;Name;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_08_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_08_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_execv_08_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(staticReturnsTrue())    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
staticReturnsTrue()
staticReturnsTrue
staticReturnsTrue
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wexecv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        EXECV(COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
EXECV(COMMAND_INT_PATH, args);
EXECV(COMMAND_INT_PATH, args)
EXECV
EXECV
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(9,21,0)
(30,11,0)
(13,45,0)
(3,37,0)
(13,6,0)
(18,12,0)
(2,30,0)
(20,35,0)
(0,21,0)
(26,18,0)
(9,16,0)
(12,43,0)
(10,42,0)
(18,13,0)
(42,30,0)
(7,45,0)
(31,6,0)
(42,36,0)
(6,45,0)
(34,18,0)
(8,4,0)
(4,20,0)
(12,14,0)
(33,36,0)
(29,13,0)
(35,13,0)
(38,20,0)
(4,14,0)
(14,12,0)
(39,45,0)
(36,42,0)
(37,42,0)
(15,6,0)
(32,35,0)
(25,9,0)
(18,20,0)
(12,18,0)
(27,16,0)
(20,30,0)
(14,4,0)
(21,16,0)
(22,14,0)
(44,45,0)
(19,12,0)
(35,20,0)
(12,42,0)
(16,45,0)
(24,30,0)
(1,13,0)
(28,9,0)
(17,4,0)
(23,30,0)
(5,37,0)
(34,37,1)
(17,8,1)
(9,25,1)
(18,20,1)
(21,0,1)
(4,20,1)
(8,22,1)
(1,6,1)
(33,10,1)
(28,21,1)
(35,32,1)
(18,26,1)
(13,29,1)
(31,15,1)
(12,18,1)
(37,5,1)
(19,18,1)
(41,13,1)
(40,9,1)
(0,41,1)
(0,12,1)
(6,31,1)
(29,1,1)
(20,35,1)
(14,4,1)
(4,17,1)
(5,3,1)
(42,36,1)
(36,33,1)
(9,21,1)
(0,37,1)
(12,14,1)
(12,42,1)
(38,41,1)
(3,42,1)
(18,13,1)
(35,13,1)
(37,42,1)
(26,34,1)
(25,28,1)
(13,6,1)
(10,20,1)
(22,19,1)
(32,38,1)
(35,41,2)
(36,41,2)
(3,41,2)
(4,37,2)
(42,36,2)
(18,37,2)
(17,37,2)
(33,41,2)
(9,21,2)
(37,41,2)
(26,37,2)
(5,41,2)
(18,20,2)
(10,41,2)
(12,37,2)
(35,13,2)
(38,41,2)
(37,42,2)
(13,6,2)
(32,41,2)
(14,4,2)
(34,37,2)
(19,37,2)
(20,41,2)
(42,41,2)
(22,37,2)
(14,37,2)
(12,14,2)
(8,37,2)
(12,18,2)
(4,20,2)
(20,35,2)
(12,42,2)
(18,13,2)
-----------------------------------
(0,args)
(1,data)
(2,environment)
(3,environment)
(4,dataLen-1)
(5,NULL)
(6,dataBuffer[100] = COMMAND_ARG2)
(7,data)
(8,dataLen)
(9,EXECV(COMMAND_INT_PATH, args)
(10,environment)
(11,)
(12,wcsncat(data+dataLen, environment, 100-dataLen-1)
(13,data = dataBuffer)
(14,100-dataLen-1)
(15,dataBuffer)
(16,)
(17,1)
(18,data+dataLen)
(19,environment)
(20,dataLen = wcslen(data)
(21,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(22,100)
(23,dataLen)
(24,if (environment != NULL)
(25,args)
(26,dataLen)
(27,args)
(28,COMMAND_INT_PATH)
(29,dataBuffer)
(30,)
(31,COMMAND_ARG2)
(32,data)
(33,ENV_VARIABLE)
(34,data)
(35,wcslen(data)
(36,GETENV(ENV_VARIABLE)
(37,environment != NULL)
(38,dataLen)
(39,dataBuffer)
(40,RET)
(41,staticReturnsTrue()
(42,* environment = GETENV(ENV_VARIABLE)
(43,)
(44,if(staticReturnsTrue()
(45,)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
