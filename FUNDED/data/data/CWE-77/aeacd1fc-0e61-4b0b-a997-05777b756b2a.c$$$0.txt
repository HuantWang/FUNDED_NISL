-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_34_bad()
{
    char * data;
    CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType myUnion;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    {
        /* Append input from an environment variable to data */
        size_t dataLen = strlen(data);
        char * environment = GETENV(ENV_VARIABLE);
        /* If there is data in the environment variable */
        if (environment != NULL)
        {
            /* POTENTIAL FLAW: Read data from an environment variable */
            strncat(data+dataLen, environment, 100-dataLen-1);
        }
    }
    myUnion.unionFirst = data;
    {
        char * data = myUnion.unionSecond;
        /* spawnl - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
84,85
84,86
85,86
85,87
86,87
89,90
91,92
91,93
92,93
93,94
93,95
95,96
95,97
95,98
98,99
99,100
99,101
100,101
103,104
104,105
104,106
104,107
104,108
104,109
104,110
104,111
105,106
107,108
109,110
111,112
113,114
115,116
117,118
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,87,88,90,94,96,97,101,102,106,108,110,112,114,116,118
-----computeFrom-----
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
84,85
84,86
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_w32spawnl_34_bad(){    char * data;    CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
void
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_bad()
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_bad
{    char * data;    CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType myUnion;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    {        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }    myUnion.unionFirst = data;    {        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }}
char * data;
char * data;
char
* data
*
data
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType myUnion;
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType
CWE78_OS_Command_Injection__char_environment_w32spawnl_34_unionType
myUnion
myUnion
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
{        /* Append input from an environment variable to data */        size_t dataLen = strlen(data);        char * environment = GETENV(ENV_VARIABLE);        /* If there is data in the environment variable */        if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }    }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)        {            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
environment != NULL
environment
environment
NULL
NULL
{            /* POTENTIAL FLAW: Read data from an environment variable */            strncat(data+dataLen, environment, 100-dataLen-1);        }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        char * data = myUnion.unionSecond;        /* spawnl - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);    }
char * data = myUnion.unionSecond;
char * data = myUnion.unionSecond;
char
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
_spawnl
_spawnl
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(7,54,0)
(39,49,0)
(17,2,0)
(8,24,0)
(27,54,0)
(24,52,0)
(54,9,0)
(51,23,0)
(22,42,0)
(10,37,0)
(11,6,0)
(43,54,0)
(36,42,0)
(4,15,0)
(2,0,0)
(16,30,0)
(30,37,0)
(3,37,0)
(2,26,0)
(23,37,0)
(44,23,0)
(14,31,0)
(46,54,0)
(35,9,0)
(31,9,0)
(49,39,0)
(0,23,0)
(40,30,0)
(24,2,0)
(29,0,0)
(21,37,0)
(33,19,0)
(15,2,0)
(31,5,0)
(30,6,0)
(0,38,0)
(13,38,0)
(47,48,0)
(39,30,0)
(19,30,0)
(5,31,0)
(28,5,0)
(15,49,0)
(55,39,0)
(48,19,0)
(34,23,0)
(32,49,0)
(2,15,0)
(41,54,0)
(25,48,0)
(50,52,0)
(45,5,0)
(53,15,0)
(18,6,0)
(20,54,0)
(49,23,0)
(15,30,0)
(19,37,0)
(52,49,0)
(9,37,0)
(42,0,0)
(38,0,0)
(2,24,0)
(52,24,0)
(12,52,0)
(6,37,0)
(19,30,1)
(40,16,1)
(17,15,1)
(33,48,1)
(45,14,1)
(42,36,1)
(12,50,1)
(47,25,1)
(38,13,1)
(48,47,1)
(4,53,1)
(46,7,1)
(39,55,1)
(32,30,1)
(55,32,1)
(8,17,1)
(20,46,1)
(15,49,1)
(30,40,1)
(2,0,1)
(6,18,1)
(29,49,1)
(1,54,1)
(7,41,1)
(19,33,1)
(24,52,1)
(27,43,1)
(42,0,1)
(30,6,1)
(25,42,1)
(18,11,1)
(36,22,1)
(52,49,1)
(52,12,1)
(14,19,1)
(53,42,1)
(15,30,1)
(22,0,1)
(0,38,1)
(49,39,1)
(2,24,1)
(39,30,1)
(54,20,1)
(28,45,1)
(16,6,1)
(15,4,1)
(5,28,1)
(31,5,1)
(13,29,1)
(25,2,1)
(2,15,1)
(41,27,1)
(50,8,1)
(43,31,1)
(53,42,2)
(2,0,2)
(2,42,2)
(30,6,2)
(15,30,2)
(12,42,2)
(19,30,2)
(24,52,2)
(15,42,2)
(42,0,2)
(0,38,2)
(17,42,2)
(52,42,2)
(49,39,2)
(2,24,2)
(39,30,2)
(8,42,2)
(2,15,2)
(15,49,2)
(52,49,2)
(50,42,2)
(24,42,2)
(4,42,2)
(31,5,2)
-----------------------------------
(0,* environment = GETENV(ENV_VARIABLE)
(1,RET)
(2,strncat(data+dataLen, environment, 100-dataLen-1)
(3,myUnion)
(4,dataLen)
(5,myUnion.unionSecond)
(6,dataBuffer[100] = COMMAND_ARG2)
(7,COMMAND_ARG1)
(8,100)
(9,)
(10,data)
(11,dataBuffer)
(12,1)
(13,ENV_VARIABLE)
(14,data)
(15,data+dataLen)
(16,data)
(17,environment)
(18,COMMAND_ARG2)
(19,myUnion.unionFirst = data)
(20,NULL)
(21,dataBuffer)
(22,environment)
(23,)
(24,100-dataLen-1)
(25,myUnion)
(26,)
(27,COMMAND_INT_PATH)
(28,unionSecond)
(29,environment)
(30,data = dataBuffer)
(31,* data = myUnion.unionSecond)
(32,dataLen)
(33,data)
(34,if (environment != NULL)
(35,data)
(36,NULL)
(37,)
(38,GETENV(ENV_VARIABLE)
(39,strlen(data)
(40,dataBuffer)
(41,COMMAND_INT_PATH)
(42,environment != NULL)
(43,_P_WAIT)
(44,dataLen)
(45,myUnion)
(46,COMMAND_ARG3)
(47,unionFirst)
(48,myUnion.unionFirst)
(49,dataLen = strlen(data)
(50,dataLen)
(51,environment)
(52,dataLen-1)
(53,data)
(54,_spawnl(_P_WAIT, COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(55,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
