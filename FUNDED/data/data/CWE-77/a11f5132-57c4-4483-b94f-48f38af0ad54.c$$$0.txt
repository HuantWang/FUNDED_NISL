-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_14_bad()
{
    wchar_t * data;
    wchar_t dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(globalFive==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* wspawnv - specify the path where the command is located */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
34,36
34,37
35,36
36,37
36,38
37,38
39,40
39,41
41,42
42,43
42,44
43,44
45,46
47,48
48,49
48,50
50,51
50,52
50,53
53,54
54,55
54,56
55,56
57,58
59,60
59,61
60,61
60,62
61,62
63,64
65,66
66,67
67,68
67,69
67,70
67,71
68,69
70,71
70,72
71,72
73,74
75,76
77,78
77,79
78,79
78,80
80,81
83,84
83,85
84,85
85,86
85,87
87,88
87,89
87,90
87,91
91,92
92,93
92,94
92,95
92,96
93,94
95,96
97,98
99,100
101,102
102,103
102,104
102,105
102,106
103,104
105,106
107,108
109,110
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,38,40,44,46,49,51,52,56,58,62,64,69,72,74,76,79,81,82,86,88,89,90,94,96,98,100,104,106,108,110
-----computeFrom-----
23,24
23,25
29,30
29,31
60,61
60,62
70,71
70,72
77,78
77,79
78,79
78,80
-----guardedBy-----
62,76
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_14_bad(){    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_14_bad()
CWE78_OS_Command_Injection__wchar_t_environment_w32_spawnv_14_bad
{    wchar_t * data;    wchar_t dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t dataBuffer[100] = COMMAND_ARG2;
wchar_t
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(globalFive==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
globalFive==5
globalFive
globalFive
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* wspawnv - specify the path where the command is located */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _wspawnv(_P_WAIT, COMMAND_INT_PATH, args);    }
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
wchar_t
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args);
_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
_wspawnv
_wspawnv
_P_WAIT
_P_WAIT
COMMAND_INT_PATH
COMMAND_INT_PATH
args
args
-----joern-----
(15,25,0)
(27,41,0)
(42,18,0)
(24,36,0)
(6,11,0)
(19,48,0)
(32,41,0)
(17,18,0)
(17,14,0)
(39,15,0)
(29,17,0)
(35,46,0)
(15,39,0)
(34,44,0)
(20,15,0)
(46,36,0)
(8,44,0)
(15,11,0)
(40,46,0)
(13,11,0)
(9,36,0)
(26,40,0)
(28,15,0)
(4,48,0)
(0,11,0)
(21,39,0)
(47,40,0)
(11,6,0)
(30,47,0)
(31,47,0)
(28,41,0)
(41,24,0)
(2,36,0)
(5,47,0)
(39,44,0)
(7,28,0)
(14,41,0)
(44,17,0)
(23,36,0)
(18,38,0)
(10,0,0)
(41,36,0)
(14,17,0)
(12,24,0)
(28,17,0)
(45,18,0)
(22,28,0)
(47,46,0)
(37,14,0)
(43,18,0)
(44,39,0)
(11,18,0)
(33,0,0)
(16,6,0)
(15,28,0)
(3,24,0)
(13,17,1)
(28,17,1)
(26,15,1)
(39,44,1)
(26,0,1)
(14,41,1)
(40,26,1)
(34,21,1)
(48,19,1)
(32,27,1)
(41,24,1)
(41,32,1)
(1,47,1)
(17,14,1)
(0,11,1)
(4,41,1)
(22,7,1)
(7,0,1)
(29,48,1)
(5,31,1)
(11,6,1)
(15,11,1)
(31,30,1)
(14,37,1)
(0,33,1)
(47,40,1)
(37,29,1)
(47,5,1)
(28,41,1)
(44,17,1)
(33,10,1)
(19,4,1)
(28,22,1)
(30,40,1)
(21,20,1)
(44,8,1)
(20,28,1)
(3,12,1)
(6,16,1)
(8,34,1)
(26,48,1)
(16,13,1)
(15,28,1)
(10,11,1)
(27,24,1)
(15,39,1)
(24,3,1)
(16,48,2)
(33,48,2)
(10,48,2)
(28,41,2)
(15,28,2)
(20,0,2)
(37,48,2)
(8,0,2)
(6,48,2)
(28,0,2)
(15,11,2)
(14,48,2)
(11,6,2)
(7,0,2)
(44,17,2)
(17,48,2)
(47,40,2)
(13,48,2)
(11,48,2)
(44,0,2)
(14,41,2)
(39,0,2)
(34,0,2)
(21,0,2)
(29,48,2)
(22,0,2)
(15,39,2)
(15,0,2)
(17,14,2)
(0,11,2)
(0,48,2)
(39,44,2)
(28,17,2)
(41,24,2)
-----------------------------------
(0,environment != NULL)
(1,RET)
(2,if(globalFive==5)
(3,COMMAND_ARG2)
(4,globalFive)
(5,args)
(6,GETENV(ENV_VARIABLE)
(7,data)
(8,1)
(9,data)
(10,environment)
(11,* environment = GETENV(ENV_VARIABLE)
(12,dataBuffer)
(13,environment)
(14,wcslen(data)
(15,wcsncat(data+dataLen, environment, 100-dataLen-1)
(16,ENV_VARIABLE)
(17,dataLen = wcslen(data)
(18,)
(19,5)
(20,environment)
(21,100)
(22,dataLen)
(23,dataBuffer)
(24,dataBuffer[100] = COMMAND_ARG2)
(25,)
(26,args)
(27,data)
(28,data+dataLen)
(29,dataLen)
(30,_P_WAIT)
(31,COMMAND_INT_PATH)
(32,dataBuffer)
(33,NULL)
(34,dataLen)
(35,args)
(36,)
(37,data)
(38,)
(39,100-dataLen-1)
(40,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(41,data = dataBuffer)
(42,if (environment != NULL)
(43,environment)
(44,dataLen-1)
(45,dataLen)
(46,)
(47,_wspawnv(_P_WAIT, COMMAND_INT_PATH, args)
(48,globalFive==5)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
