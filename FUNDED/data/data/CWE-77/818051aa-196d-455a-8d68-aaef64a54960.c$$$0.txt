-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_03_bad()
{
    wchar_t * data;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(5==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = wcslen(data);
            wchar_t * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                wcsncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, L"w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
82,85
83,84
84,85
84,86
85,86
87,88
87,89
90,91
91,92
91,93
92,93
94,95
94,96
94,97
95,96
97,98
100,101
100,102
101,102
101,103
102,103
104,105
106,107
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,96,98,99,103,105,110,112
-----computeFrom-----
23,24
23,25
29,30
29,31
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
101,102
101,103
-----guardedBy-----
61,75
103,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__wchar_t_environment_popen_03_bad(){    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__wchar_t_environment_popen_03_bad()
CWE78_OS_Command_Injection__wchar_t_environment_popen_03_bad
{    wchar_t * data;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
5==5
5
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = wcslen(data);            wchar_t * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = wcslen(data);
size_t dataLen = wcslen(data);
size_t
size_t
dataLen = wcslen(data)
dataLen
= wcslen(data)
wcslen(data)
wcslen
wcslen
data
data
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t * environment = GETENV(ENV_VARIABLE);
wchar_t
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                wcsncat(data+dataLen, environment, 100-dataLen-1);            }
wcsncat(data+dataLen, environment, 100-dataLen-1);
wcsncat(data+dataLen, environment, 100-dataLen-1)
wcsncat
wcsncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, L"w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, L"w");
pipe = POPEN(data, L"w")
pipe
pipe
POPEN(data, L"w")
POPEN
POPEN
data
data
L"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(14,43,0)
(46,2,0)
(22,29,0)
(44,10,0)
(25,23,0)
(28,45,0)
(23,10,0)
(3,48,0)
(27,10,0)
(21,45,0)
(24,16,0)
(47,28,0)
(31,23,0)
(16,10,0)
(33,16,0)
(48,45,0)
(38,43,0)
(26,10,0)
(32,45,0)
(0,31,0)
(5,3,0)
(43,16,0)
(18,48,0)
(9,24,0)
(48,32,0)
(23,3,0)
(29,16,0)
(20,37,0)
(1,31,0)
(16,29,0)
(8,18,0)
(24,1,0)
(1,24,0)
(40,48,0)
(4,45,0)
(11,41,0)
(19,28,0)
(18,24,0)
(7,32,0)
(18,23,0)
(13,18,0)
(39,48,0)
(6,37,0)
(15,41,0)
(31,1,0)
(24,17,0)
(34,1,0)
(36,45,0)
(12,32,0)
(10,35,0)
(42,46,0)
(49,31,0)
(24,18,0)
(3,23,0)
(18,8,1)
(33,23,1)
(13,43,1)
(32,7,1)
(1,31,1)
(24,1,1)
(46,42,1)
(41,15,1)
(8,13,1)
(3,5,1)
(24,16,1)
(25,41,1)
(6,20,1)
(43,14,1)
(37,6,1)
(38,16,1)
(34,9,1)
(20,24,1)
(7,12,1)
(3,48,1)
(30,46,1)
(18,23,1)
(43,16,1)
(0,34,1)
(29,22,1)
(39,40,1)
(16,29,1)
(23,3,1)
(48,32,1)
(9,18,1)
(30,37,1)
(22,33,1)
(31,23,1)
(31,49,1)
(40,32,1)
(20,41,1)
(15,11,1)
(49,0,1)
(20,43,1)
(5,25,1)
(14,38,1)
(18,48,1)
(11,48,1)
(24,18,1)
(48,39,1)
(42,37,1)
(16,41,2)
(18,23,2)
(5,41,2)
(3,48,2)
(8,43,2)
(22,41,2)
(29,41,2)
(31,43,2)
(16,29,2)
(1,31,2)
(9,43,2)
(0,43,2)
(43,16,2)
(25,41,2)
(24,1,2)
(31,23,2)
(18,48,2)
(3,41,2)
(42,37,2)
(13,43,2)
(18,43,2)
(24,43,2)
(24,16,2)
(33,41,2)
(46,37,2)
(23,3,2)
(48,32,2)
(43,41,2)
(23,41,2)
(1,43,2)
(49,43,2)
(38,41,2)
(34,43,2)
(14,41,2)
(24,18,2)
-----------------------------------
(0,dataLen)
(1,100-dataLen-1)
(2,)
(3,wcslen(data)
(4,data_buf)
(5,data)
(6,NULL)
(7,FULL_COMMAND)
(8,dataLen)
(9,environment)
(10,)
(11,5)
(12,data_buf)
(13,data)
(14,NULL)
(15,5)
(16,* environment = GETENV(ENV_VARIABLE)
(17,)
(18,data+dataLen)
(19,if (pipe != NULL)
(20,pipe)
(21,if(5==5)
(22,ENV_VARIABLE)
(23,dataLen = wcslen(data)
(24,wcsncat(data+dataLen, environment, 100-dataLen-1)
(25,dataLen)
(26,dataLen)
(27,environment)
(28,)
(29,GETENV(ENV_VARIABLE)
(30,RET)
(31,dataLen-1)
(32,data_buf[100] = FULL_COMMAND)
(33,environment)
(34,100)
(35,)
(36,data)
(37,pipe != NULL)
(38,environment)
(39,data_buf)
(40,data)
(41,5==5)
(42,pipe)
(43,environment != NULL)
(44,if (environment != NULL)
(45,)
(46,PCLOSE(pipe)
(47,pipe)
(48,data = data_buf)
(49,1)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
