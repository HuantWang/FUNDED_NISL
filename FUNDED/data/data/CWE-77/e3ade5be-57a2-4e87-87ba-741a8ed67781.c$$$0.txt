-----label-----
0
-----code-----
static void goodG2B()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    strcat(data, "*.*");
    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
    if (SYSTEM(data) != 0)
    {
        printLine("command execution failed!");
        exit(1);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
29,32
30,31
32,33
35,36
35,37
36,37
36,38
37,38
37,39
38,39
40,41
43,44
43,45
44,45
45,46
45,47
46,47
49,50
50,51
50,52
51,52
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,33,34,39,41,42,47,48,52,53
-----computeFrom-----
23,24
23,25
36,37
36,38
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
static void
goodG2B()
goodG2B
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    strcat(data, "*.*");    /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */    if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
if (SYSTEM(data) != 0)    {        printLine("command execution failed!");        exit(1);    }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{        printLine("command execution failed!");        exit(1);    }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(9,10,0)
(0,9,0)
(4,15,0)
(22,17,0)
(13,18,0)
(3,21,0)
(17,1,0)
(19,1,0)
(8,21,0)
(15,5,0)
(15,17,0)
(18,21,0)
(12,5,0)
(7,21,0)
(1,21,0)
(5,15,0)
(17,21,0)
(2,18,0)
(18,17,0)
(16,1,0)
(20,17,0)
(6,14,0)
(14,10,0)
(22,20,1)
(13,17,1)
(1,16,1)
(17,1,1)
(2,13,1)
(20,1,1)
(15,4,1)
(16,19,1)
(17,22,1)
(5,12,1)
(18,17,1)
(12,15,1)
(14,6,1)
(11,5,1)
(15,17,1)
(5,15,1)
(0,14,1)
(6,5,1)
(18,2,1)
(4,18,1)
(9,0,1)
(11,9,1)
(18,17,2)
(0,5,2)
(6,5,2)
(15,17,2)
(5,15,2)
(17,1,2)
(14,5,2)
(9,5,2)
-----------------------------------
(0,1)
(1,data_buf[100] = FULL_COMMAND)
(2,"*.*")
(3,if (SYSTEM(data)
(4,data)
(5,SYSTEM(data)
(6,"command execution failed!")
(7,data_buf)
(8,data)
(9,exit(1)
(10,)
(11,RET)
(12,0)
(13,data)
(14,printLine("command execution failed!")
(15,SYSTEM(data)
(16,FULL_COMMAND)
(17,data = data_buf)
(18,strcat(data, "*.*")
(19,data_buf)
(20,data)
(21,)
(22,data_buf)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
