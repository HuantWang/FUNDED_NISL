-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_environment_popen_03_bad()
{
    char * data;
    char data_buf[100] = FULL_COMMAND;
    data = data_buf;
    if(5==5)
    {
        {
            /* Append input from an environment variable to data */
            size_t dataLen = strlen(data);
            char * environment = GETENV(ENV_VARIABLE);
            /* If there is data in the environment variable */
            if (environment != NULL)
            {
                /* POTENTIAL FLAW: Read data from an environment variable */
                strncat(data+dataLen, environment, 100-dataLen-1);
            }
        }
    }
    {
        FILE *pipe;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        pipe = POPEN(data, "w");
        if (pipe != NULL)
        {
            PCLOSE(pipe);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
32,33
33,34
33,35
33,36
34,35
35,36
35,37
36,37
38,39
38,40
40,41
41,42
41,43
42,43
44,45
46,47
47,48
47,49
49,50
49,51
49,52
52,53
53,54
53,55
54,55
56,57
58,59
58,60
59,60
59,61
60,61
62,63
64,65
65,66
66,67
66,68
66,69
66,70
67,68
69,70
69,71
70,71
72,73
74,75
76,77
76,78
77,78
77,79
79,80
82,83
82,84
82,85
83,84
84,85
84,86
85,86
87,88
87,89
90,91
91,92
91,93
92,93
94,95
94,96
94,97
95,96
97,98
100,101
100,102
101,102
101,103
102,103
104,105
106,107
107,108
108,109
108,110
109,110
111,112
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,30,31,37,39,43,45,48,50,51,55,57,61,63,68,71,73,75,78,80,81,86,88,89,93,96,98,99,103,105,110,112
-----computeFrom-----
23,24
23,25
29,30
29,31
59,60
59,61
69,70
69,71
76,77
76,78
77,78
77,79
91,92
91,93
101,102
101,103
-----guardedBy-----
61,75
103,112
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;LiteralExpression;LiteralExpression;CompoundStatement;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;BinaryExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;BinaryExpression;BinaryExpression;LiteralExpression;IdExpression;Name;LiteralExpression;CompoundStatement;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Pointer;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;IfStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_environment_popen_03_bad(){    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
void
CWE78_OS_Command_Injection__char_environment_popen_03_bad()
CWE78_OS_Command_Injection__char_environment_popen_03_bad
{    char * data;    char data_buf[100] = FULL_COMMAND;    data = data_buf;    if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }    {        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }}
char * data;
char * data;
char
* data
*
data
char data_buf[100] = FULL_COMMAND;
char data_buf[100] = FULL_COMMAND;
char
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
if(5==5)    {        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
5==5
5
5
{        {            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }    }
{            /* Append input from an environment variable to data */            size_t dataLen = strlen(data);            char * environment = GETENV(ENV_VARIABLE);            /* If there is data in the environment variable */            if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }        }
size_t dataLen = strlen(data);
size_t dataLen = strlen(data);
size_t
size_t
dataLen = strlen(data)
dataLen
= strlen(data)
strlen(data)
strlen
strlen
data
data
char * environment = GETENV(ENV_VARIABLE);
char * environment = GETENV(ENV_VARIABLE);
char
* environment = GETENV(ENV_VARIABLE)
*
environment
= GETENV(ENV_VARIABLE)
GETENV(ENV_VARIABLE)
GETENV
GETENV
ENV_VARIABLE
ENV_VARIABLE
if (environment != NULL)            {                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
environment != NULL
environment
environment
NULL
NULL
{                /* POTENTIAL FLAW: Read data from an environment variable */                strncat(data+dataLen, environment, 100-dataLen-1);            }
strncat(data+dataLen, environment, 100-dataLen-1);
strncat(data+dataLen, environment, 100-dataLen-1)
strncat
strncat
data+dataLen
data
data
dataLen
dataLen
environment
environment
100-dataLen-1
100-dataLen
100
dataLen
dataLen
1
{        FILE *pipe;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        pipe = POPEN(data, "w");        if (pipe != NULL)        {            PCLOSE(pipe);        }    }
FILE *pipe;
FILE *pipe;
FILE
FILE
*pipe
*
pipe
pipe = POPEN(data, "w");
pipe = POPEN(data, "w")
pipe
pipe
POPEN(data, "w")
POPEN
POPEN
data
data
"w"
if (pipe != NULL)        {            PCLOSE(pipe);        }
pipe != NULL
pipe
pipe
NULL
NULL
{            PCLOSE(pipe);        }
PCLOSE(pipe);
PCLOSE(pipe)
PCLOSE
PCLOSE
pipe
pipe
-----joern-----
(43,24,0)
(16,54,0)
(8,20,0)
(9,42,0)
(35,8,0)
(15,0,0)
(27,26,0)
(33,18,0)
(32,22,0)
(8,23,0)
(42,45,0)
(34,50,0)
(28,5,0)
(6,13,0)
(21,5,0)
(24,38,0)
(45,23,0)
(38,22,0)
(19,54,0)
(10,40,0)
(48,13,0)
(20,37,0)
(36,0,0)
(4,38,0)
(0,42,0)
(7,0,0)
(33,5,0)
(11,37,0)
(5,33,0)
(39,13,0)
(3,50,0)
(30,45,0)
(47,1,0)
(26,20,0)
(12,7,0)
(52,1,0)
(53,23,0)
(42,40,0)
(40,31,0)
(23,54,0)
(33,7,0)
(44,40,0)
(49,8,0)
(5,42,0)
(37,13,0)
(26,17,0)
(54,13,0)
(41,40,0)
(23,13,0)
(25,23,0)
(33,38,0)
(5,23,0)
(1,20,0)
(0,7,0)
(45,42,0)
(20,8,0)
(29,20,0)
(38,40,0)
(22,38,0)
(46,37,0)
(14,24,0)
(2,33,0)
(7,33,0)
(24,38,1)
(20,8,1)
(45,23,1)
(32,4,1)
(38,22,1)
(0,15,1)
(12,2,1)
(29,24,1)
(15,36,1)
(23,54,1)
(27,1,1)
(26,27,1)
(9,50,1)
(45,30,1)
(53,25,1)
(51,1,1)
(22,32,1)
(52,47,1)
(29,33,1)
(42,45,1)
(35,49,1)
(49,29,1)
(33,7,1)
(5,42,1)
(4,42,1)
(43,14,1)
(23,53,1)
(36,12,1)
(47,20,1)
(30,9,1)
(34,23,1)
(1,52,1)
(50,3,1)
(28,21,1)
(33,5,1)
(3,34,1)
(29,50,1)
(14,38,1)
(33,38,1)
(8,35,1)
(0,42,1)
(51,26,1)
(26,20,1)
(21,24,1)
(2,5,1)
(8,23,1)
(54,16,1)
(7,0,1)
(1,20,1)
(5,28,1)
(24,43,1)
(25,54,1)
(5,23,1)
(16,19,1)
(0,24,2)
(33,5,2)
(30,50,2)
(26,1,2)
(38,22,2)
(4,50,2)
(28,24,2)
(26,20,2)
(45,23,2)
(5,24,2)
(20,8,2)
(12,24,2)
(33,7,2)
(27,1,2)
(24,50,2)
(23,54,2)
(14,50,2)
(21,24,2)
(7,0,2)
(22,50,2)
(38,50,2)
(5,42,2)
(9,50,2)
(42,50,2)
(33,38,2)
(5,23,2)
(0,42,2)
(43,50,2)
(42,45,2)
(1,20,2)
(2,24,2)
(15,24,2)
(36,24,2)
(8,23,2)
(32,50,2)
(7,24,2)
(33,24,2)
(45,50,2)
(24,38,2)
-----------------------------------
(0,dataLen-1)
(1,pipe != NULL)
(2,environment)
(3,5)
(4,environment)
(5,data+dataLen)
(6,data)
(7,100-dataLen-1)
(8,POPEN(data, "w")
(9,dataLen)
(10,environment)
(11,if (pipe != NULL)
(12,100)
(13,)
(14,environment)
(15,1)
(16,FULL_COMMAND)
(17,)
(18,)
(19,data_buf)
(20,pipe = POPEN(data, "w")
(21,data)
(22,GETENV(ENV_VARIABLE)
(23,data = data_buf)
(24,environment != NULL)
(25,data)
(26,PCLOSE(pipe)
(27,pipe)
(28,dataLen)
(29,pipe)
(30,data)
(31,)
(32,ENV_VARIABLE)
(33,strncat(data+dataLen, environment, 100-dataLen-1)
(34,5)
(35,"w")
(36,dataLen)
(37,)
(38,* environment = GETENV(ENV_VARIABLE)
(39,if(5==5)
(40,)
(41,if (environment != NULL)
(42,dataLen = strlen(data)
(43,NULL)
(44,dataLen)
(45,strlen(data)
(46,pipe)
(47,pipe)
(48,data_buf)
(49,data)
(50,5==5)
(51,RET)
(52,NULL)
(53,data_buf)
(54,data_buf[100] = FULL_COMMAND)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
