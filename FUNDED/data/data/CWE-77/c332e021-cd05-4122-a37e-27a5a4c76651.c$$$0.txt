-----label-----
0
-----code-----
static void goodG2B()
{
    wchar_t * data;
    CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType myUnion;
    wchar_t data_buf[100] = FULL_COMMAND;
    data = data_buf;
    /* FIX: Append a fixed string to data (not user / external input) */
    wcscat(data, L"*.*");
    myUnion.unionFirst = data;
    {
        wchar_t * data = myUnion.unionSecond;
        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */
        if (SYSTEM(data) != 0)
        {
            printLine("command execution failed!");
            exit(1);
        }
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
5,12
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
14,15
16,17
18,19
19,20
19,21
21,22
21,23
21,24
23,24
25,26
26,27
28,29
29,30
29,31
30,31
32,33
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
43,44
43,45
44,45
47,48
49,50
49,51
50,51
51,52
51,53
53,54
53,55
53,56
56,57
57,58
57,59
58,59
61,62
61,63
62,63
62,64
63,64
63,65
64,65
66,67
69,70
69,71
70,71
71,72
71,73
72,73
75,76
76,77
76,78
77,78
-----nextToken-----
2,4,8,10,11,15,17,20,22,24,27,31,33,37,39,40,45,46,48,52,54,55,59,60,65,67,68,73,74,78,79
-----computeFrom-----
29,30
29,31
42,43
42,44
62,63
62,64
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;NamedTypeSpecifier;Name;Declarator;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;FieldReference;IdExpression;Name;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;EqualsInitializer;FieldReference;IdExpression;Name;Name;IfStatement;BinaryExpression;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;LiteralExpression;
-----ast_node-----
static void goodG2B(){    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }}
static void
goodG2B()
goodG2B
{    wchar_t * data;    CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType myUnion;    wchar_t data_buf[100] = FULL_COMMAND;    data = data_buf;    /* FIX: Append a fixed string to data (not user / external input) */    wcscat(data, L"*.*");    myUnion.unionFirst = data;    {        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }}
wchar_t * data;
wchar_t * data;
wchar_t
* data
*
data
CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType myUnion;
CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType
CWE78_OS_Command_Injection__wchar_t_console_system_34_unionType
myUnion
myUnion
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t data_buf[100] = FULL_COMMAND;
wchar_t
data_buf[100] = FULL_COMMAND
data_buf
[100]
100
= FULL_COMMAND
FULL_COMMAND
FULL_COMMAND
data = data_buf;
data = data_buf
data
data
data_buf
data_buf
wcscat(data, L"*.*");
wcscat(data, L"*.*")
wcscat
wcscat
data
data
L"*.*"
myUnion.unionFirst = data;
myUnion.unionFirst = data
myUnion.unionFirst
myUnion
myUnion
unionFirst
data
data
{        wchar_t * data = myUnion.unionSecond;        /* POTENTIAL FLAW: Execute command in data possibly leading to command injection */        if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }    }
wchar_t * data = myUnion.unionSecond;
wchar_t * data = myUnion.unionSecond;
wchar_t
* data = myUnion.unionSecond
*
data
= myUnion.unionSecond
myUnion.unionSecond
myUnion
myUnion
unionSecond
if (SYSTEM(data) != 0)        {            printLine("command execution failed!");            exit(1);        }
SYSTEM(data) != 0
SYSTEM(data)
SYSTEM
SYSTEM
data
data
0
{            printLine("command execution failed!");            exit(1);        }
printLine("command execution failed!");
printLine("command execution failed!")
printLine
printLine
"command execution failed!"
exit(1);
exit(1)
exit
exit
1
-----joern-----
(5,31,0)
(5,25,0)
(15,22,0)
(32,25,0)
(25,19,0)
(24,22,0)
(29,30,0)
(4,16,0)
(31,5,0)
(27,22,0)
(18,14,0)
(0,24,0)
(26,17,0)
(17,24,0)
(12,19,0)
(13,1,0)
(6,1,0)
(28,30,0)
(9,7,0)
(30,17,0)
(16,22,0)
(14,11,0)
(2,31,0)
(20,16,0)
(1,25,0)
(21,22,0)
(17,22,0)
(25,1,0)
(19,22,0)
(23,5,0)
(8,24,0)
(7,11,0)
(10,19,0)
(24,16,0)
(26,30,1)
(3,31,1)
(0,16,1)
(5,25,1)
(29,24,1)
(2,5,1)
(17,26,1)
(25,1,1)
(28,29,1)
(17,24,1)
(24,8,1)
(5,23,1)
(23,25,1)
(32,17,1)
(18,31,1)
(31,2,1)
(7,9,1)
(24,16,1)
(3,7,1)
(16,4,1)
(9,14,1)
(31,5,1)
(1,6,1)
(8,0,1)
(30,28,1)
(6,13,1)
(13,32,1)
(4,20,1)
(14,18,1)
(24,16,2)
(25,1,2)
(14,31,2)
(17,24,2)
(31,5,2)
(5,25,2)
(7,31,2)
(9,31,2)
(18,31,2)
-----------------------------------
(0,data)
(1,myUnion.unionSecond)
(2,0)
(3,RET)
(4,FULL_COMMAND)
(5,SYSTEM(data)
(6,unionSecond)
(7,exit(1)
(8,data_buf)
(9,1)
(10,if (SYSTEM(data)
(11,)
(12,data)
(13,myUnion)
(14,printLine("command execution failed!")
(15,data)
(16,data_buf[100] = FULL_COMMAND)
(17,myUnion.unionFirst = data)
(18,"command execution failed!")
(19,)
(20,data_buf)
(21,data_buf)
(22,)
(23,data)
(24,data = data_buf)
(25,* data = myUnion.unionSecond)
(26,data)
(27,myUnion)
(28,unionFirst)
(29,myUnion)
(30,myUnion.unionFirst)
(31,SYSTEM(data)
(32,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
