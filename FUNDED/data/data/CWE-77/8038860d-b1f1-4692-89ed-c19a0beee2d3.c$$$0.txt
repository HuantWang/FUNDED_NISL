-----label-----
1
-----code-----
void CWE78_OS_Command_Injection__char_connect_socket_w32_spawnvp_21_bad()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    badStatic = 1; /* true */
    data = badSource(data);
    {
        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
        /* spawnvp - searches for the location of the command among
         * the directories specified by the PATH environment variable */
        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
        _spawnvp(_P_WAIT, COMMAND_INT, args);
    }
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
5,11
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
29,30
29,31
30,31
33,34
34,35
34,36
35,36
37,38
37,39
38,39
40,41
42,43
42,44
43,44
44,45
44,46
46,47
46,48
46,49
46,50
50,51
51,52
51,53
51,54
51,55
52,53
54,55
56,57
58,59
60,61
61,62
61,63
61,64
61,65
62,63
64,65
66,67
68,69
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,36,39,41,45,47,48,49,53,55,57,59,63,65,67,69
-----computeFrom-----
23,24
23,25
29,30
29,31
34,35
34,36
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;LiteralExpression;ExpressionStatement;BinaryExpression;IdExpression;Name;FunctionCallExpression;IdExpression;Name;IdExpression;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Pointer;Name;ArrayModifier;EqualsInitializer;InitializerList;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
void CWE78_OS_Command_Injection__char_connect_socket_w32_spawnvp_21_bad(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    badStatic = 1; /* true */    data = badSource(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
void
CWE78_OS_Command_Injection__char_connect_socket_w32_spawnvp_21_bad()
CWE78_OS_Command_Injection__char_connect_socket_w32_spawnvp_21_bad
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    badStatic = 1; /* true */    data = badSource(data);    {        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
badStatic = 1;
badStatic = 1
badStatic
badStatic
1
data = badSource(data);
data = badSource(data)
data
data
badSource(data)
badSource
badSource
data
data
{        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};        /* spawnvp - searches for the location of the command among         * the directories specified by the PATH environment variable */        /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */        _spawnvp(_P_WAIT, COMMAND_INT, args);    }
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};
char
*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
*
args
[]
= {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
{COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL}
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
_spawnvp(_P_WAIT, COMMAND_INT, args);
_spawnvp(_P_WAIT, COMMAND_INT, args)
_spawnvp
_spawnvp
_P_WAIT
_P_WAIT
COMMAND_INT
COMMAND_INT
args
args
-----joern-----
(4,20,0)
(23,21,0)
(11,8,0)
(18,1,0)
(2,12,0)
(12,10,0)
(16,20,0)
(12,8,0)
(14,3,0)
(7,8,0)
(19,20,0)
(1,8,0)
(9,1,0)
(21,8,0)
(5,11,0)
(20,11,0)
(6,21,0)
(0,3,0)
(22,10,0)
(24,17,0)
(17,11,0)
(3,8,0)
(15,8,0)
(10,12,0)
(10,1,0)
(1,21,0)
(20,17,0)
(10,22,1)
(21,6,1)
(20,17,1)
(13,20,1)
(4,19,1)
(16,17,1)
(20,4,1)
(24,12,1)
(2,3,1)
(12,10,1)
(1,21,1)
(9,21,1)
(19,16,1)
(22,2,1)
(6,23,1)
(17,24,1)
(1,18,1)
(18,9,1)
(14,1,1)
(0,14,1)
(3,0,1)
(10,1,1)
(20,17,2)
(12,10,2)
(10,1,2)
(1,21,2)
-----------------------------------
(0,1)
(1,data = dataBuffer)
(2,data)
(3,badStatic = 1)
(4,args)
(5,args)
(6,COMMAND_ARG2)
(7,data)
(8,)
(9,data)
(10,badSource(data)
(11,)
(12,data = badSource(data)
(13,RET)
(14,badStatic)
(15,dataBuffer)
(16,_P_WAIT)
(17,*args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL})
(18,dataBuffer)
(19,COMMAND_INT)
(20,_spawnvp(_P_WAIT, COMMAND_INT, args)
(21,dataBuffer[100] = COMMAND_ARG2)
(22,data)
(23,dataBuffer)
(24,args)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
