-----label-----
0
-----code-----
static void goodG2B2()
{
    char * data;
    char dataBuffer[100] = COMMAND_ARG2;
    data = dataBuffer;
    if(STATIC_CONST_FIVE==5)
    {
        /* FIX: Append a fixed string to data (not user / external input) */
        strcat(data, "*.*");
    }
    /* execl - specify the path where the command is located */
    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */
    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
}
-----children-----
1,2
1,3
1,4
3,4
5,6
5,7
5,8
5,9
5,10
6,7
7,8
7,9
9,10
9,11
12,13
13,14
13,15
15,16
15,17
15,18
17,18
19,20
20,21
22,23
23,24
23,25
24,25
26,27
28,29
28,30
29,30
29,31
30,31
33,34
34,35
35,36
35,37
35,38
36,37
38,39
41,42
42,43
42,44
42,45
42,46
42,47
42,48
43,44
45,46
47,48
49,50
51,52
53,54
-----nextToken-----
2,4,8,10,11,14,16,18,21,25,27,31,32,37,39,40,44,46,48,50,52,54
-----computeFrom-----
23,24
23,25
29,30
29,31
-----guardedBy-----
-----guardedByNegation-----
-----lastLexicalUse-----
-----jump-----
-----attribute-----
FunctionDefinition;SimpleDeclSpecifier;FunctionDeclarator;Name;CompoundStatement;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;Declarator;Pointer;Name;DeclarationStatement;SimpleDeclaration;SimpleDeclSpecifier;ArrayDeclarator;Name;ArrayModifier;LiteralExpression;EqualsInitializer;IdExpression;Name;ExpressionStatement;BinaryExpression;IdExpression;Name;IdExpression;Name;IfStatement;BinaryExpression;IdExpression;Name;LiteralExpression;CompoundStatement;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;LiteralExpression;ExpressionStatement;FunctionCallExpression;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;IdExpression;Name;
-----ast_node-----
static void goodG2B2(){    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
static void
goodG2B2()
goodG2B2
{    char * data;    char dataBuffer[100] = COMMAND_ARG2;    data = dataBuffer;    if(STATIC_CONST_FIVE==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }    /* execl - specify the path where the command is located */    /* POTENTIAL FLAW: Execute command without validating input possibly leading to command injection */    EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);}
char * data;
char * data;
char
* data
*
data
char dataBuffer[100] = COMMAND_ARG2;
char dataBuffer[100] = COMMAND_ARG2;
char
dataBuffer[100] = COMMAND_ARG2
dataBuffer
[100]
100
= COMMAND_ARG2
COMMAND_ARG2
COMMAND_ARG2
data = dataBuffer;
data = dataBuffer
data
data
dataBuffer
dataBuffer
if(STATIC_CONST_FIVE==5)    {        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
STATIC_CONST_FIVE==5
STATIC_CONST_FIVE
STATIC_CONST_FIVE
5
{        /* FIX: Append a fixed string to data (not user / external input) */        strcat(data, "*.*");    }
strcat(data, "*.*");
strcat(data, "*.*")
strcat
strcat
data
data
"*.*"
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL);
EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
EXECL
EXECL
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_INT_PATH
COMMAND_ARG1
COMMAND_ARG1
COMMAND_ARG3
COMMAND_ARG3
NULL
NULL
-----joern-----
(9,3,0)
(14,21,0)
(20,14,0)
(2,15,0)
(13,2,0)
(23,21,0)
(1,21,0)
(12,14,0)
(0,3,0)
(0,21,0)
(4,21,0)
(22,3,0)
(7,14,0)
(6,8,0)
(18,2,0)
(19,0,0)
(11,0,0)
(5,14,0)
(16,14,0)
(3,21,0)
(2,0,0)
(10,8,0)
(2,0,1)
(3,9,1)
(11,19,1)
(0,11,1)
(5,20,1)
(16,7,1)
(0,3,1)
(17,14,1)
(19,3,1)
(12,5,1)
(10,0,1)
(14,12,1)
(8,6,1)
(20,16,1)
(2,13,1)
(18,8,1)
(6,10,1)
(7,2,1)
(13,18,1)
(7,8,1)
(9,22,1)
(18,8,2)
(2,8,2)
(13,8,2)
(0,3,2)
(2,0,2)
-----------------------------------
(0,data = dataBuffer)
(1,dataBuffer)
(2,strcat(data, "*.*")
(3,dataBuffer[100] = COMMAND_ARG2)
(4,if(STATIC_CONST_FIVE==5)
(5,COMMAND_ARG3)
(6,5)
(7,COMMAND_INT_PATH)
(8,STATIC_CONST_FIVE==5)
(9,COMMAND_ARG2)
(10,STATIC_CONST_FIVE)
(11,dataBuffer)
(12,NULL)
(13,"*.*")
(14,EXECL(COMMAND_INT_PATH, COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL)
(15,)
(16,COMMAND_INT_PATH)
(17,RET)
(18,data)
(19,data)
(20,COMMAND_ARG1)
(21,)
(22,dataBuffer)
(23,data)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
